/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 2490:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": () => (/* binding */ I),
/* harmony export */   "b": () => (/* binding */ N),
/* harmony export */   "c": () => (/* binding */ L)
/* harmony export */ });
/* harmony import */ var _chunk_ONAVPXOT_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7640);
var I=(0,_chunk_ONAVPXOT_js__WEBPACK_IMPORTED_MODULE_0__.a)((exports,module)=>{var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(o,t,r){o instanceof String&&(o=String(o));for(var i=o.length,s=0;s<i;s++){var g=o[s];if(t.call(r,g,s,o))return{i:s,v:g}}return{i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||typeof Object.defineProperties=="function"?Object.defineProperty:function(o,t,r){o!=Array.prototype&&o!=Object.prototype&&(o[t]=r.value)};$jscomp.getGlobal=function(o){return typeof window<"u"&&window===o?o:typeof window<"u"&&window!=null?window:o};$jscomp.global=$jscomp.getGlobal(exports);$jscomp.polyfill=function(o,t,r,i){if(t){for(r=$jscomp.global,o=o.split("."),i=0;i<o.length-1;i++){var s=o[i];s in r||(r[s]={}),r=r[s]}o=o[o.length-1],i=r[o],t=t(i),t!=i&&t!=null&&$jscomp.defineProperty(r,o,{configurable:!0,writable:!0,value:t})}};$jscomp.polyfill("Array.prototype.findIndex",function(o){return o||function(t,r){return $jscomp.findInternal(this,t,r).i}},"es6","es3");$jscomp.checkStringArgs=function(o,t,r){if(o==null)throw new TypeError("The 'this' value for String.prototype."+r+" must not be null or undefined");if(t instanceof RegExp)throw new TypeError("First argument to String.prototype."+r+" must not be a regular expression");return o+""};$jscomp.polyfill("String.prototype.endsWith",function(o){return o||function(t,r){var i=$jscomp.checkStringArgs(this,t,"endsWith");t+="",r===void 0&&(r=i.length),r=Math.max(0,Math.min(r|0,i.length));for(var s=t.length;0<s&&0<r;)if(i[--r]!=t[--s])return!1;return 0>=s}},"es6","es3");$jscomp.polyfill("Array.prototype.find",function(o){return o||function(t,r){return $jscomp.findInternal(this,t,r).v}},"es6","es3");$jscomp.polyfill("String.prototype.startsWith",function(o){return o||function(t,r){var i=$jscomp.checkStringArgs(this,t,"startsWith");t+="";var s=i.length,g=t.length;r=Math.max(0,Math.min(r|0,i.length));for(var l=0;l<g&&r<s;)if(i[r++]!=t[l++])return!1;return l>=g}},"es6","es3");$jscomp.polyfill("String.prototype.repeat",function(o){return o||function(t){var r=$jscomp.checkStringArgs(this,null,"repeat");if(0>t||1342177279<t)throw new RangeError("Invalid count value");t|=0;for(var i="";t;)t&1&&(i+=r),(t>>>=1)&&(r+=r);return i}},"es6","es3");var COMPILED=!0,goog=goog||{};goog.global=exports||self;goog.isDef=function(o){return o!==void 0};goog.isString=function(o){return typeof o=="string"};goog.isBoolean=function(o){return typeof o=="boolean"};goog.isNumber=function(o){return typeof o=="number"};goog.exportPath_=function(o,t,r){o=o.split("."),r=r||goog.global,o[0]in r||typeof r.execScript>"u"||r.execScript("var "+o[0]);for(var i;o.length&&(i=o.shift());)!o.length&&goog.isDef(t)?r[i]=t:r=r[i]&&r[i]!==Object.prototype[i]?r[i]:r[i]={}};goog.define=function(o,t){if(!COMPILED){var r=goog.global.CLOSURE_UNCOMPILED_DEFINES,i=goog.global.CLOSURE_DEFINES;r&&r.nodeType===void 0&&Object.prototype.hasOwnProperty.call(r,o)?t=r[o]:i&&i.nodeType===void 0&&Object.prototype.hasOwnProperty.call(i,o)&&(t=i[o])}return t};goog.FEATURESET_YEAR=2012;goog.DEBUG=!0;goog.LOCALE="en";goog.TRUSTED_SITE=!0;goog.STRICT_MODE_COMPATIBLE=!1;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;goog.provide=function(o){if(goog.isInModuleLoader_())throw Error("goog.provide cannot be used within a module.");if(!COMPILED&&goog.isProvided_(o))throw Error('Namespace "'+o+'" already declared.');goog.constructNamespace_(o)};goog.constructNamespace_=function(o,t){if(!COMPILED){delete goog.implicitNamespaces_[o];for(var r=o;(r=r.substring(0,r.lastIndexOf(".")))&&!goog.getObjectByName(r);)goog.implicitNamespaces_[r]=!0}goog.exportPath_(o,t)};goog.getScriptNonce=function(o){return o&&o!=goog.global?goog.getScriptNonce_(o.document):(goog.cspNonce_===null&&(goog.cspNonce_=goog.getScriptNonce_(goog.global.document)),goog.cspNonce_)};goog.NONCE_PATTERN_=/^[\w+/_-]+[=]{0,2}$/;goog.cspNonce_=null;goog.getScriptNonce_=function(o){return(o=o.querySelector&&o.querySelector("script[nonce]"))&&(o=o.nonce||o.getAttribute("nonce"))&&goog.NONCE_PATTERN_.test(o)?o:""};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;goog.module=function(o){if(!goog.isString(o)||!o||o.search(goog.VALID_MODULE_RE_)==-1)throw Error("Invalid module identifier");if(!goog.isInGoogModuleLoader_())throw Error("Module "+o+" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");if(goog.moduleLoaderState_.moduleName=o,!COMPILED){if(goog.isProvided_(o))throw Error('Namespace "'+o+'" already declared.');delete goog.implicitNamespaces_[o]}};goog.module.get=function(o){return goog.module.getInternal_(o)};goog.module.getInternal_=function(o){if(!COMPILED){if(o in goog.loadedModules_)return goog.loadedModules_[o].exports;if(!goog.implicitNamespaces_[o])return o=goog.getObjectByName(o),o??null}return null};goog.ModuleType={ES6:"es6",GOOG:"goog"};goog.moduleLoaderState_=null;goog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()};goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG};goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var o=goog.global.$jscomp;return o?typeof o.getCurrentModulePath!="function"?!1:!!o.getCurrentModulePath():!1};goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0};goog.declareModuleId=function(o){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error("goog.declareModuleId may only be called from within an ES6 module");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error("goog.declareModuleId may only be called once per module.");if(o in goog.loadedModules_)throw Error('Module with namespace "'+o+'" already exists.')}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=o;else{var t=goog.global.$jscomp;if(!t||typeof t.getCurrentModulePath!="function")throw Error('Module with namespace "'+o+'" has been loaded incorrectly.');t=t.require(t.getCurrentModulePath()),goog.loadedModules_[o]={exports:t,type:goog.ModuleType.ES6,moduleId:o}}};goog.setTestOnly=function(o){if(goog.DISALLOW_TEST_ONLY_CODE)throw o=o||"",Error("Importing test-only code into non-debug environment"+(o?": "+o:"."))};goog.forwardDeclare=function(o){};COMPILED||(goog.isProvided_=function(o){return o in goog.loadedModules_||!goog.implicitNamespaces_[o]&&goog.isDefAndNotNull(goog.getObjectByName(o))},goog.implicitNamespaces_={"goog.module":!0});goog.getObjectByName=function(o,t){o=o.split("."),t=t||goog.global;for(var r=0;r<o.length;r++)if(t=t[o[r]],!goog.isDefAndNotNull(t))return null;return t};goog.globalize=function(o,t){t=t||goog.global;for(var r in o)t[r]=o[r]};goog.addDependency=function(o,t,r,i){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(o,t,r,i)};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(o){goog.global.console&&goog.global.console.error(o)};goog.require=function(o){if(!COMPILED){if(goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(o),goog.isProvided_(o)){if(goog.isInModuleLoader_())return goog.module.getInternal_(o)}else if(goog.ENABLE_DEBUG_LOADER){var t=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(o)}finally{goog.moduleLoaderState_=t}}return null}};goog.requireType=function(o){return{}};goog.basePath="";goog.nullFunction=function(){};goog.abstractMethod=function(){throw Error("unimplemented abstract method")};goog.addSingletonGetter=function(o){o.instance_=void 0,o.getInstance=function(){return o.instance_?o.instance_:(goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=o),o.instance_=new o)}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;goog.TRANSPILE="detect";goog.ASSUME_ES_MODULES_TRANSPILED=!1;goog.TRANSPILE_TO_LANGUAGE="";goog.TRANSPILER="transpile.js";goog.hasBadLetScoping=null;goog.useSafari10Workaround=function(){if(goog.hasBadLetScoping==null){try{var a=!eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";')}catch(o){a=!1}goog.hasBadLetScoping=a}return goog.hasBadLetScoping};goog.workaroundSafari10EvalBug=function(o){return"(function(){"+o+`
;})();
`};goog.loadModule=function(o){var t=goog.moduleLoaderState_;try{if(goog.moduleLoaderState_={moduleName:"",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG},goog.isFunction(o))var r=o.call(void 0,{});else if(goog.isString(o))goog.useSafari10Workaround()&&(o=goog.workaroundSafari10EvalBug(o)),r=goog.loadModuleFromSource_.call(void 0,o);else throw Error("Invalid module definition");var i=goog.moduleLoaderState_.moduleName;if(goog.isString(i)&&i)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(i,r):goog.SEAL_MODULE_EXPORTS&&Object.seal&&typeof r=="object"&&r!=null&&Object.seal(r),goog.loadedModules_[i]={exports:r,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error('Invalid module name "'+i+'"')}finally{goog.moduleLoaderState_=t}};goog.loadModuleFromSource_=function(a){return eval(a),{}};goog.normalizePath_=function(o){o=o.split("/");for(var t=0;t<o.length;)o[t]=="."?o.splice(t,1):t&&o[t]==".."&&o[t-1]&&o[t-1]!=".."?o.splice(--t,2):t++;return o.join("/")};goog.loadFileSync_=function(o){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(o);try{var t=new goog.global.XMLHttpRequest;return t.open("get",o,!1),t.send(),t.status==0||t.status==200?t.responseText:null}catch{return null}};goog.transpile_=function(o,t,r){var i=goog.global.$jscomp;i||(goog.global.$jscomp=i={});var s=i.transpile;if(!s){var g=goog.basePath+goog.TRANSPILER,l=goog.loadFileSync_(g);if(l){if(function(){(0,eval)(l+`
//# sourceURL=`+g)}.call(goog.global),goog.global.$gwtExport&&goog.global.$gwtExport.$jscomp&&!goog.global.$gwtExport.$jscomp.transpile)throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: '+JSON.stringify(goog.global.$gwtExport));goog.global.$jscomp.transpile=goog.global.$gwtExport.$jscomp.transpile,i=goog.global.$jscomp,s=i.transpile}}return s||(s=i.transpile=function(h,m){return goog.logToConsole_(m+" requires transpilation but no transpiler was found."),h}),s(o,t,r)};goog.typeOf=function(o){var t=typeof o;if(t=="object")if(o){if(o instanceof Array)return"array";if(o instanceof Object)return t;var r=Object.prototype.toString.call(o);if(r=="[object Window]")return"object";if(r=="[object Array]"||typeof o.length=="number"&&typeof o.splice<"u"&&typeof o.propertyIsEnumerable<"u"&&!o.propertyIsEnumerable("splice"))return"array";if(r=="[object Function]"||typeof o.call<"u"&&typeof o.propertyIsEnumerable<"u"&&!o.propertyIsEnumerable("call"))return"function"}else return"null";else if(t=="function"&&typeof o.call>"u")return"object";return t};goog.isNull=function(o){return o===null};goog.isDefAndNotNull=function(o){return o!=null};goog.isArray=function(o){return goog.typeOf(o)=="array"};goog.isArrayLike=function(o){var t=goog.typeOf(o);return t=="array"||t=="object"&&typeof o.length=="number"};goog.isDateLike=function(o){return goog.isObject(o)&&typeof o.getFullYear=="function"};goog.isFunction=function(o){return goog.typeOf(o)=="function"};goog.isObject=function(o){var t=typeof o;return t=="object"&&o!=null||t=="function"};goog.getUid=function(o){return o[goog.UID_PROPERTY_]||(o[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(o){return!!o[goog.UID_PROPERTY_]};goog.removeUid=function(o){o!==null&&"removeAttribute"in o&&o.removeAttribute(goog.UID_PROPERTY_);try{delete o[goog.UID_PROPERTY_]}catch{}};goog.UID_PROPERTY_="closure_uid_"+(1e9*Math.random()>>>0);goog.uidCounter_=0;goog.getHashCode=goog.getUid;goog.removeHashCode=goog.removeUid;goog.cloneObject=function(o){var t=goog.typeOf(o);if(t=="object"||t=="array"){if(typeof o.clone=="function")return o.clone();t=t=="array"?[]:{};for(var r in o)t[r]=goog.cloneObject(o[r]);return t}return o};goog.bindNative_=function(o,t,r){return o.call.apply(o.bind,arguments)};goog.bindJs_=function(o,t,r){if(!o)throw Error();if(2<arguments.length){var i=Array.prototype.slice.call(arguments,2);return function(){var s=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(s,i),o.apply(t,s)}}return function(){return o.apply(t,arguments)}};goog.bind=function(o,t,r){return Function.prototype.bind&&Function.prototype.bind.toString().indexOf("native code")!=-1?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_,goog.bind.apply(null,arguments)};goog.partial=function(o,t){var r=Array.prototype.slice.call(arguments,1);return function(){var i=r.slice();return i.push.apply(i,arguments),o.apply(this,i)}};goog.mixin=function(o,t){for(var r in t)o[r]=t[r]};goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date};goog.globalEval=function(o){if(goog.global.execScript)goog.global.execScript(o,"JavaScript");else if(goog.global.eval){if(goog.evalWorksForGlobals_==null){try{goog.global.eval("var _evalTest_ = 1;")}catch{}if(typeof goog.global._evalTest_<"u"){try{delete goog.global._evalTest_}catch{}goog.evalWorksForGlobals_=!0}else goog.evalWorksForGlobals_=!1}if(goog.evalWorksForGlobals_)goog.global.eval(o);else{var t=goog.global.document,r=t.createElement("SCRIPT");r.type="text/javascript",r.defer=!1,r.appendChild(t.createTextNode(o)),t.head.appendChild(r),t.head.removeChild(r)}}else throw Error("goog.globalEval not available")};goog.evalWorksForGlobals_=null;goog.getCssName=function(o,t){if(String(o).charAt(0)==".")throw Error('className passed in goog.getCssName must not start with ".". You passed: '+o);var r=function(s){return goog.cssNameMapping_[s]||s},i=function(s){s=s.split("-");for(var g=[],l=0;l<s.length;l++)g.push(r(s[l]));return g.join("-")};return i=goog.cssNameMapping_?goog.cssNameMappingStyle_=="BY_WHOLE"?r:i:function(s){return s},o=t?o+"-"+i(t):i(o),goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(o):o};goog.setCssNameMapping=function(o,t){goog.cssNameMapping_=o,goog.cssNameMappingStyle_=t};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.getMsg=function(o,t,r){return r&&r.html&&(o=o.replace(/</g,"&lt;")),t&&(o=o.replace(/\{\$([^}]+)}/g,function(i,s){return t!=null&&s in t?t[s]:i})),o};goog.getMsgWithFallback=function(o,t){return o};goog.exportSymbol=function(o,t,r){goog.exportPath_(o,t,r)};goog.exportProperty=function(o,t,r){o[t]=r};goog.inherits=function(o,t){function r(){}r.prototype=t.prototype,o.superClass_=t.prototype,o.prototype=new r,o.prototype.constructor=o,o.base=function(i,s,g){for(var l=Array(arguments.length-2),h=2;h<arguments.length;h++)l[h-2]=arguments[h];return t.prototype[s].apply(i,l)}};goog.base=function(o,t,r){var i=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!i)throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");if(typeof i.superClass_<"u"){for(var s=Array(arguments.length-1),g=1;g<arguments.length;g++)s[g-1]=arguments[g];return i.superClass_.constructor.apply(o,s)}if(typeof t!="string"&&typeof t!="symbol")throw Error("method names provided to goog.base must be a string or a symbol");for(s=Array(arguments.length-2),g=2;g<arguments.length;g++)s[g-2]=arguments[g];g=!1;for(var l=o.constructor.prototype;l;l=Object.getPrototypeOf(l))if(l[t]===i)g=!0;else if(g)return l[t].apply(o,s);if(o[t]===i)return o.constructor.prototype[t].apply(o,s);throw Error("goog.base called from a method of one name to a method of a different name")};goog.scope=function(o){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a module.");o.call(goog.global)};COMPILED||(goog.global.COMPILED=COMPILED);goog.defineClass=function(o,t){var r=t.constructor,i=t.statics;return r&&r!=Object.prototype.constructor||(r=function(){throw Error("cannot instantiate an interface (no constructor defined).")}),r=goog.defineClass.createSealingConstructor_(r,o),o&&goog.inherits(r,o),delete t.constructor,delete t.statics,goog.defineClass.applyProperties_(r.prototype,t),i!=null&&(i instanceof Function?i(r):goog.defineClass.applyProperties_(r,i)),r};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;goog.defineClass.createSealingConstructor_=function(o,t){if(!goog.defineClass.SEAL_CLASS_INSTANCES)return o;var r=!goog.defineClass.isUnsealable_(t),i=function(){var s=o.apply(this,arguments)||this;return s[goog.UID_PROPERTY_]=s[goog.UID_PROPERTY_],this.constructor===i&&r&&Object.seal instanceof Function&&Object.seal(s),s};return i};goog.defineClass.isUnsealable_=function(o){return o&&o.prototype&&o.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");goog.defineClass.applyProperties_=function(o,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(o[r]=t[r]);for(var i=0;i<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++)r=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i],Object.prototype.hasOwnProperty.call(t,r)&&(o[r]=t[r])};goog.tagUnsealableClass=function(o){!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES&&(o.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=!0)};goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_="goog_defineClass_legacy_unsealable";!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.inHtmlDocument_=function(){var o=goog.global.document;return o!=null&&"write"in o},goog.isDocumentLoading_=function(){var o=goog.global.document;return o.attachEvent?o.readyState!="complete":o.readyState=="loading"},goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH)&&goog.isString(goog.global.CLOSURE_BASE_PATH))goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var o=goog.global.document,t=o.currentScript;for(o=t?[t]:o.getElementsByTagName("SCRIPT"),t=o.length-1;0<=t;--t){var r=o[t].src,i=r.lastIndexOf("?");if(i=i==-1?r.length:i,r.substr(i-7,7)=="base.js"){goog.basePath=r.substr(0,i-7);break}}}},goog.findBasePath_(),goog.Transpiler=function(){this.requiresTranspilation_=null,this.transpilationTarget_=goog.TRANSPILE_TO_LANGUAGE},goog.Transpiler.prototype.createRequiresTranspilation_=function(){function a(o,t){e?d[o]=!0:t()?(c=o,d[o]=!1):e=d[o]=!0}function b(a){try{return!!eval(a)}catch(o){return!1}}var c="es3",d={es3:!1},e=!1,f=goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:"";return a("es5",function(){return b("[1,].length==1")}),a("es6",function(){return f.match(/Edge\/(\d+)(\.\d)*/i)?!1:b('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()')}),a("es7",function(){return b("2 ** 2 == 4")}),a("es8",function(){return b("async () => 1, true")}),a("es9",function(){return b("({...rest} = {}), true")}),a("es_next",function(){return!1}),{target:c,map:d}},goog.Transpiler.prototype.needsTranspile=function(o,t){if(goog.TRANSPILE=="always")return!0;if(goog.TRANSPILE=="never")return!1;if(!this.requiresTranspilation_){var r=this.createRequiresTranspilation_();this.requiresTranspilation_=r.map,this.transpilationTarget_=this.transpilationTarget_||r.target}if(o in this.requiresTranspilation_)return this.requiresTranspilation_[o]?!0:!(!goog.inHtmlDocument_()||t!="es6"||"noModule"in goog.global.document.createElement("script"));throw Error("Unknown language mode: "+o)},goog.Transpiler.prototype.transpile=function(o,t){return goog.transpile_(o,t,this.transpilationTarget_)},goog.transpiler_=new goog.Transpiler,goog.protectScriptTag_=function(o){return o.replace(/<\/(SCRIPT)/ig,"\\x3c/$1")},goog.DebugLoader_=function(){this.dependencies_={},this.idToPath_={},this.written_={},this.loadingDeps_=[],this.depsToLoad_=[],this.paused_=!1,this.factory_=new goog.DependencyFactory(goog.transpiler_),this.deferredCallbacks_={},this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(o,t){function r(){i&&(goog.global.setTimeout(i,0),i=null)}var i=t;if(o.length){t=[];for(var s=0;s<o.length;s++){var g=this.getPathFromDeps_(o[s]);if(!g)throw Error("Unregonized namespace: "+o[s]);t.push(this.dependencies_[g])}g=goog.require;var l=0;for(s=0;s<o.length;s++)g(o[s]),t[s].onLoad(function(){++l==o.length&&r()})}else r()},goog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+"deps.js"),"deps.js",[],[],{},!1)),this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(o,t){(o=this.getPathFromDeps_(o))&&(t||this.areDepsLoaded_(this.dependencies_[o].requires))&&(t=this.deferredCallbacks_[o])&&(delete this.deferredCallbacks_[o],t())},goog.DebugLoader_.prototype.setDependencyFactory=function(o){this.factory_=o},goog.DebugLoader_.prototype.load_=function(o){if(this.getPathFromDeps_(o)){var t=this,r=[],i=function(s){var g=t.getPathFromDeps_(s);if(!g)throw Error("Bad dependency path or symbol: "+s);if(!t.written_[g]){for(t.written_[g]=!0,s=t.dependencies_[g],g=0;g<s.requires.length;g++)goog.isProvided_(s.requires[g])||i(s.requires[g]);r.push(s)}};i(o),o=!!this.depsToLoad_.length,this.depsToLoad_=this.depsToLoad_.concat(r),this.paused_||o||this.loadDeps_()}else throw o="goog.require could not find: "+o,goog.logToConsole_(o),Error(o)},goog.DebugLoader_.prototype.loadDeps_=function(){for(var o=this,t=this.paused_;this.depsToLoad_.length&&!t;)(function(){var r=!1,i=o.depsToLoad_.shift(),s=!1;o.loading_(i);var g={pause:function(){if(r)throw Error("Cannot call pause after the call to load.");t=!0},resume:function(){r?o.resume_():t=!1},loaded:function(){if(s)throw Error("Double call to loaded.");s=!0,o.loaded_(i)},pending:function(){for(var l=[],h=0;h<o.loadingDeps_.length;h++)l.push(o.loadingDeps_[h]);return l},setModuleState:function(l){goog.moduleLoaderState_={type:l,moduleName:"",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(l,h,m){m&&(goog.loadedModules_[m]={exports:h,type:goog.ModuleType.ES6,moduleId:m||""})},registerGoogModuleExports:function(l,h){goog.loadedModules_[l]={exports:h,type:goog.ModuleType.GOOG,moduleId:l}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(l){if(r)throw Error("Cannot register with defer after the call to load.");o.defer_(i,l)},areDepsLoaded:function(){return o.areDepsLoaded_(i.requires)}};try{i.load(g)}finally{r=!0}})();t&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(o){this.loadingDeps_.push(o)},goog.DebugLoader_.prototype.loaded_=function(o){for(var t=0;t<this.loadingDeps_.length;t++)if(this.loadingDeps_[t]==o){this.loadingDeps_.splice(t,1);break}for(t=0;t<this.deferredQueue_.length;t++)if(this.deferredQueue_[t]==o.path){this.deferredQueue_.splice(t,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);o.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(o){for(var t=0;t<o.length;t++){var r=this.getPathFromDeps_(o[t]);if(!r||!(r in this.deferredCallbacks_||goog.isProvided_(o[t])))return!1}return!0},goog.DebugLoader_.prototype.getPathFromDeps_=function(o){return o in this.idToPath_?this.idToPath_[o]:o in this.dependencies_?o:null},goog.DebugLoader_.prototype.defer_=function(o,t){this.deferredCallbacks_[o.path]=t,this.deferredQueue_.push(o.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(o,t,r){},goog.LoadController.prototype.setModuleState=function(o){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(o){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(o,t,r,i,s){this.path=o,this.relativePath=t,this.provides=r,this.requires=i,this.loadFlags=s,this.loaded_=!1,this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var o=this.path,t=o.indexOf("://");return 0<=t&&(o=o.substring(t+3),t=o.indexOf("/"),0<=t&&(o=o.substring(t+1))),o},goog.Dependency.prototype.onLoad=function(o){this.loaded_?o():this.loadCallbacks_.push(o)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var o=this.loadCallbacks_;this.loadCallbacks_=[];for(var t=0;t<o.length;t++)o[t]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(o){var t=Math.random().toString(32);return goog.Dependency.callbackMap_[t]=o,t},goog.Dependency.unregisterCallback_=function(o){delete goog.Dependency.callbackMap_[o]},goog.Dependency.callback_=function(o,t){if(o in goog.Dependency.callbackMap_){for(var r=goog.Dependency.callbackMap_[o],i=[],s=1;s<arguments.length;s++)i.push(arguments[s]);r.apply(void 0,i)}else throw Error("Callback key "+o+" does not exist (was base.js loaded more than once?).")},goog.Dependency.prototype.load=function(o){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?o.loaded():o.pause();else if(goog.inHtmlDocument_()){var t=goog.global.document;if(t.readyState=="complete"&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\bdeps.js$/.test(this.path)){o.loaded();return}throw Error('Cannot write "'+this.path+'" after document load')}if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var r=goog.Dependency.registerCallback_(function(g){goog.DebugLoader_.IS_OLD_IE_&&g.readyState!="complete"||(goog.Dependency.unregisterCallback_(r),o.loaded())}),i=!goog.DebugLoader_.IS_OLD_IE_&&goog.getScriptNonce()?' nonce="'+goog.getScriptNonce()+'"':"";i='<script src="'+this.path+'" '+(goog.DebugLoader_.IS_OLD_IE_?"onreadystatechange":"onload")+`="goog.Dependency.callback_('`+r+`', this)" type="text/javascript" `+(goog.Dependency.defer_?"defer":"")+i+"><\/script>",t.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(i):i)}else{var s=t.createElement("script");s.defer=goog.Dependency.defer_,s.async=!1,s.type="text/javascript",(i=goog.getScriptNonce())&&s.setAttribute("nonce",i),goog.DebugLoader_.IS_OLD_IE_?(o.pause(),s.onreadystatechange=function(){(s.readyState=="loaded"||s.readyState=="complete")&&(o.loaded(),o.resume())}):s.onload=function(){s.onload=null,o.loaded()},s.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path):this.path,t.head.appendChild(s)}}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),this.relativePath=="deps.js"?(goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."),o.loaded()):o.pause()},goog.Es6ModuleDependency=function(o,t,r,i,s){goog.Dependency.call(this,o,t,r,i,s)},goog.inherits(goog.Es6ModuleDependency,goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(o){function t(T,O){T=O?'<script type="module" crossorigin>'+O+"<\/script>":'<script type="module" crossorigin src="'+T+'"><\/script>',i.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(T):T)}function r(T,O){var R=i.createElement("script");R.defer=!0,R.async=!1,R.type="module",R.setAttribute("crossorigin",!0);var B=goog.getScriptNonce();B&&R.setAttribute("nonce",B),O?R.textContent=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScript(O):O:R.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(T):T,i.head.appendChild(R)}if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?o.loaded():o.pause();else if(goog.inHtmlDocument_()){var i=goog.global.document,s=this;if(goog.isDocumentLoading_()){var g=t;goog.Dependency.defer_=!0}else g=r;var l=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(l),o.setModuleState(goog.ModuleType.ES6)});g(void 0,'goog.Dependency.callback_("'+l+'")'),g(this.path,void 0);var h=goog.Dependency.registerCallback_(function(T){goog.Dependency.unregisterCallback_(h),o.registerEs6ModuleExports(s.path,T,goog.moduleLoaderState_.moduleName)});g(void 0,'import * as m from "'+this.path+'"; goog.Dependency.callback_("'+h+'", m)');var m=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(m),o.clearModuleState(),o.loaded()});g(void 0,'goog.Dependency.callback_("'+m+'")')}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),o.pause()},goog.TransformedDependency=function(o,t,r,i,s){goog.Dependency.call(this,o,t,r,i,s),this.contents_=null,this.lazyFetch_=!goog.inHtmlDocument_()||!("noModule"in goog.global.document.createElement("script"))},goog.inherits(goog.TransformedDependency,goog.Dependency),goog.TransformedDependency.prototype.load=function(o){function t(){s.contents_=goog.loadFileSync_(s.path),s.contents_&&(s.contents_=s.transform(s.contents_),s.contents_&&(s.contents_+=`
//# sourceURL=`+s.path))}function r(){if(s.lazyFetch_&&t(),s.contents_){g&&o.setModuleState(goog.ModuleType.ES6);try{var O=s.contents_;if(s.contents_=null,goog.globalEval(O),g)var R=goog.moduleLoaderState_.moduleName}finally{g&&o.clearModuleState()}g&&goog.global.$jscomp.require.ensure([s.getPathName()],function(){o.registerEs6ModuleExports(s.path,goog.global.$jscomp.require(s.getPathName()),R)}),o.loaded()}}function i(){var O=goog.global.document,R=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(R),r()}),B='<script type="text/javascript">'+goog.protectScriptTag_('goog.Dependency.callback_("'+R+'");')+"<\/script>";O.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(B):B)}var s=this;if(goog.global.CLOSURE_IMPORT_SCRIPT)t(),this.contents_&&goog.global.CLOSURE_IMPORT_SCRIPT("",this.contents_)?(this.contents_=null,o.loaded()):o.pause();else{var g=this.loadFlags.module==goog.ModuleType.ES6;this.lazyFetch_||t();var l=1<o.pending().length,h=l&&goog.DebugLoader_.IS_OLD_IE_;if(l=goog.Dependency.defer_&&(l||goog.isDocumentLoading_()),h||l)o.defer(function(){r()});else{var m=goog.global.document;if(h=goog.inHtmlDocument_()&&"ActiveXObject"in goog.global,g&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&!h){goog.Dependency.defer_=!0,o.pause();var T=m.onreadystatechange;m.onreadystatechange=function(){m.readyState=="interactive"&&(m.onreadystatechange=T,r(),o.resume()),goog.isFunction(T)&&T.apply(void 0,arguments)}}else!goog.DebugLoader_.IS_OLD_IE_&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()?i():r()}}},goog.TransformedDependency.prototype.transform=function(o){},goog.TranspiledDependency=function(o,t,r,i,s,g){goog.TransformedDependency.call(this,o,t,r,i,s),this.transpiler=g},goog.inherits(goog.TranspiledDependency,goog.TransformedDependency),goog.TranspiledDependency.prototype.transform=function(o){return this.transpiler.transpile(o,this.getPathName())},goog.PreTranspiledEs6ModuleDependency=function(o,t,r,i,s){goog.TransformedDependency.call(this,o,t,r,i,s)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(o){return o},goog.GoogModuleDependency=function(o,t,r,i,s,g,l){goog.TransformedDependency.call(this,o,t,r,i,s),this.needsTranspile_=g,this.transpiler_=l},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=function(o){return this.needsTranspile_&&(o=this.transpiler_.transpile(o,this.getPathName())),goog.LOAD_MODULE_USING_EVAL&&goog.isDef(goog.global.JSON)?"goog.loadModule("+goog.global.JSON.stringify(o+`
//# sourceURL=`+this.path+`
`)+");":'goog.loadModule(function(exports) {"use strict";'+o+`
;return exports});
//# sourceURL=`+this.path+`
`},goog.DebugLoader_.IS_OLD_IE_=!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.DebugLoader_.prototype.addDependency=function(o,t,r,i){t=t||[],o=o.replace(/\\/g,"/");var s=goog.normalizePath_(goog.basePath+o);for(i&&typeof i!="boolean"||(i=i?{module:goog.ModuleType.GOOG}:{}),r=this.factory_.createDependency(s,o,t,r,i,goog.transpiler_.needsTranspile(i.lang||"es3",i.module)),this.dependencies_[s]=r,r=0;r<t.length;r++)this.idToPath_[t[r]]=s;this.idToPath_[o]=s},goog.DependencyFactory=function(o){this.transpiler=o},goog.DependencyFactory.prototype.createDependency=function(o,t,r,i,s,g){return s.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(o,t,r,i,s,g,this.transpiler):g?new goog.TranspiledDependency(o,t,r,i,s,this.transpiler):s.module==goog.ModuleType.ES6?goog.TRANSPILE=="never"&&goog.ASSUME_ES_MODULES_TRANSPILED?new goog.PreTranspiledEs6ModuleDependency(o,t,r,i,s):new goog.Es6ModuleDependency(o,t,r,i,s):new goog.Dependency(o,t,r,i,s)},goog.debugLoader_=new goog.DebugLoader_,goog.loadClosureDeps=function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(o){goog.debugLoader_.setDependencyFactory(o)},goog.global.CLOSURE_NO_DEPS||goog.debugLoader_.loadClosureDeps(),goog.bootstrap=function(o,t){goog.debugLoader_.bootstrap(o,t)});goog.TRUSTED_TYPES_POLICY_NAME="";goog.identity_=function(o){return o};goog.createTrustedTypesPolicy=function(o){var t=null;if(typeof TrustedTypes>"u"||!TrustedTypes.createPolicy)return t;try{t=TrustedTypes.createPolicy(o,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_,createURL:goog.identity_})}catch(r){goog.logToConsole_(r.message)}return t};goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#base"):null;goog.object={};goog.object.is=function(o,t){return o===t?o!==0||1/o===1/t:o!==o&&t!==t};goog.object.forEach=function(o,t,r){for(var i in o)t.call(r,o[i],i,o)};goog.object.filter=function(o,t,r){var i={},s;for(s in o)t.call(r,o[s],s,o)&&(i[s]=o[s]);return i};goog.object.map=function(o,t,r){var i={},s;for(s in o)i[s]=t.call(r,o[s],s,o);return i};goog.object.some=function(o,t,r){for(var i in o)if(t.call(r,o[i],i,o))return!0;return!1};goog.object.every=function(o,t,r){for(var i in o)if(!t.call(r,o[i],i,o))return!1;return!0};goog.object.getCount=function(o){var t=0,r;for(r in o)t++;return t};goog.object.getAnyKey=function(o){for(var t in o)return t};goog.object.getAnyValue=function(o){for(var t in o)return o[t]};goog.object.contains=function(o,t){return goog.object.containsValue(o,t)};goog.object.getValues=function(o){var t=[],r=0,i;for(i in o)t[r++]=o[i];return t};goog.object.getKeys=function(o){var t=[],r=0,i;for(i in o)t[r++]=i;return t};goog.object.getValueByKeys=function(o,t){var r=goog.isArrayLike(t),i=r?t:arguments;for(r=r?0:1;r<i.length;r++){if(o==null)return;o=o[i[r]]}return o};goog.object.containsKey=function(o,t){return o!==null&&t in o};goog.object.containsValue=function(o,t){for(var r in o)if(o[r]==t)return!0;return!1};goog.object.findKey=function(o,t,r){for(var i in o)if(t.call(r,o[i],i,o))return i};goog.object.findValue=function(o,t,r){return(t=goog.object.findKey(o,t,r))&&o[t]};goog.object.isEmpty=function(o){for(var t in o)return!1;return!0};goog.object.clear=function(o){for(var t in o)delete o[t]};goog.object.remove=function(o,t){var r;return(r=t in o)&&delete o[t],r};goog.object.add=function(o,t,r){if(o!==null&&t in o)throw Error('The object already contains the key "'+t+'"');goog.object.set(o,t,r)};goog.object.get=function(o,t,r){return o!==null&&t in o?o[t]:r};goog.object.set=function(o,t,r){o[t]=r};goog.object.setIfUndefined=function(o,t,r){return t in o?o[t]:o[t]=r};goog.object.setWithReturnValueIfNotSet=function(o,t,r){return t in o?o[t]:(r=r(),o[t]=r)};goog.object.equals=function(o,t){for(var r in o)if(!(r in t)||o[r]!==t[r])return!1;for(var i in t)if(!(i in o))return!1;return!0};goog.object.clone=function(o){var t={},r;for(r in o)t[r]=o[r];return t};goog.object.unsafeClone=function(o){var t=goog.typeOf(o);if(t=="object"||t=="array"){if(goog.isFunction(o.clone))return o.clone();t=t=="array"?[]:{};for(var r in o)t[r]=goog.object.unsafeClone(o[r]);return t}return o};goog.object.transpose=function(o){var t={},r;for(r in o)t[o[r]]=r;return t};goog.object.PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");goog.object.extend=function(o,t){for(var r,i,s=1;s<arguments.length;s++){i=arguments[s];for(r in i)o[r]=i[r];for(var g=0;g<goog.object.PROTOTYPE_FIELDS_.length;g++)r=goog.object.PROTOTYPE_FIELDS_[g],Object.prototype.hasOwnProperty.call(i,r)&&(o[r]=i[r])}};goog.object.create=function(o){var t=arguments.length;if(t==1&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(t%2)throw Error("Uneven number of arguments");for(var r={},i=0;i<t;i+=2)r[arguments[i]]=arguments[i+1];return r};goog.object.createSet=function(o){var t=arguments.length;if(t==1&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);for(var r={},i=0;i<t;i++)r[arguments[i]]=!0;return r};goog.object.createImmutableView=function(o){var t=o;return Object.isFrozen&&!Object.isFrozen(o)&&(t=Object.create(o),Object.freeze(t)),t};goog.object.isImmutableView=function(o){return!!Object.isFrozen&&Object.isFrozen(o)};goog.object.getAllPropertyNames=function(o,t,r){if(!o)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return goog.object.getKeys(o);for(var i={};o&&(o!==Object.prototype||t)&&(o!==Function.prototype||r);){for(var s=Object.getOwnPropertyNames(o),g=0;g<s.length;g++)i[s[g]]=!0;o=Object.getPrototypeOf(o)}return goog.object.getKeys(i)};goog.object.getSuperClass=function(o){return(o=Object.getPrototypeOf(o.prototype))&&o.constructor};goog.debug={};goog.debug.Error=function(o){if(Error.captureStackTrace)Error.captureStackTrace(this,goog.debug.Error);else{var t=Error().stack;t&&(this.stack=t)}o&&(this.message=String(o)),this.reportErrorToServer=!0};goog.inherits(goog.debug.Error,Error);goog.debug.Error.prototype.name="CustomError";goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;goog.asserts.AssertionError=function(o,t){goog.debug.Error.call(this,goog.asserts.subs_(o,t)),this.messagePattern=o};goog.inherits(goog.asserts.AssertionError,goog.debug.Error);goog.asserts.AssertionError.prototype.name="AssertionError";goog.asserts.DEFAULT_ERROR_HANDLER=function(o){throw o};goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;goog.asserts.subs_=function(o,t){o=o.split("%s");for(var r="",i=o.length-1,s=0;s<i;s++)r+=o[s]+(s<t.length?t[s]:"%s");return r+o[i]};goog.asserts.doAssertFailure_=function(o,t,r,i){var s="Assertion failed";if(r){s+=": "+r;var g=i}else o&&(s+=": "+o,g=t);o=new goog.asserts.AssertionError(""+s,g||[]),goog.asserts.errorHandler_(o)};goog.asserts.setErrorHandler=function(o){goog.asserts.ENABLE_ASSERTS&&(goog.asserts.errorHandler_=o)};goog.asserts.assert=function(o,t,r){return goog.asserts.ENABLE_ASSERTS&&!o&&goog.asserts.doAssertFailure_("",null,t,Array.prototype.slice.call(arguments,2)),o};goog.asserts.assertExists=function(o,t,r){return goog.asserts.ENABLE_ASSERTS&&o==null&&goog.asserts.doAssertFailure_("Expected to exist: %s.",[o],t,Array.prototype.slice.call(arguments,2)),o};goog.asserts.fail=function(o,t){goog.asserts.ENABLE_ASSERTS&&goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure"+(o?": "+o:""),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(o,t,r){return goog.asserts.ENABLE_ASSERTS&&!goog.isNumber(o)&&goog.asserts.doAssertFailure_("Expected number but got %s: %s.",[goog.typeOf(o),o],t,Array.prototype.slice.call(arguments,2)),o};goog.asserts.assertString=function(o,t,r){return goog.asserts.ENABLE_ASSERTS&&!goog.isString(o)&&goog.asserts.doAssertFailure_("Expected string but got %s: %s.",[goog.typeOf(o),o],t,Array.prototype.slice.call(arguments,2)),o};goog.asserts.assertFunction=function(o,t,r){return goog.asserts.ENABLE_ASSERTS&&!goog.isFunction(o)&&goog.asserts.doAssertFailure_("Expected function but got %s: %s.",[goog.typeOf(o),o],t,Array.prototype.slice.call(arguments,2)),o};goog.asserts.assertObject=function(o,t,r){return goog.asserts.ENABLE_ASSERTS&&!goog.isObject(o)&&goog.asserts.doAssertFailure_("Expected object but got %s: %s.",[goog.typeOf(o),o],t,Array.prototype.slice.call(arguments,2)),o};goog.asserts.assertArray=function(o,t,r){return goog.asserts.ENABLE_ASSERTS&&!goog.isArray(o)&&goog.asserts.doAssertFailure_("Expected array but got %s: %s.",[goog.typeOf(o),o],t,Array.prototype.slice.call(arguments,2)),o};goog.asserts.assertBoolean=function(o,t,r){return goog.asserts.ENABLE_ASSERTS&&!goog.isBoolean(o)&&goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.",[goog.typeOf(o),o],t,Array.prototype.slice.call(arguments,2)),o};goog.asserts.assertElement=function(o,t,r){return!goog.asserts.ENABLE_ASSERTS||goog.isObject(o)&&o.nodeType==goog.dom.NodeType.ELEMENT||goog.asserts.doAssertFailure_("Expected Element but got %s: %s.",[goog.typeOf(o),o],t,Array.prototype.slice.call(arguments,2)),o};goog.asserts.assertInstanceof=function(o,t,r,i){return!goog.asserts.ENABLE_ASSERTS||o instanceof t||goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.",[goog.asserts.getType_(t),goog.asserts.getType_(o)],r,Array.prototype.slice.call(arguments,3)),o};goog.asserts.assertFinite=function(o,t,r){return!goog.asserts.ENABLE_ASSERTS||typeof o=="number"&&isFinite(o)||goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.",[o],t,Array.prototype.slice.call(arguments,2)),o};goog.asserts.assertObjectPrototypeIsIntact=function(){for(var o in Object.prototype)goog.asserts.fail(o+" should not be enumerable in Object.prototype.")};goog.asserts.getType_=function(o){return o instanceof Function?o.displayName||o.name||"unknown type name":o instanceof Object?o.constructor.displayName||o.constructor.name||Object.prototype.toString.call(o):o===null?"null":typeof o};var jspb={BinaryConstants:{},ConstBinaryMessage:function(){},BinaryMessage:function(){}};jspb.BinaryConstants.FieldType={INVALID:-1,DOUBLE:1,FLOAT:2,INT64:3,UINT64:4,INT32:5,FIXED64:6,FIXED32:7,BOOL:8,STRING:9,GROUP:10,MESSAGE:11,BYTES:12,UINT32:13,ENUM:14,SFIXED32:15,SFIXED64:16,SINT32:17,SINT64:18,FHASH64:30,VHASH64:31};jspb.BinaryConstants.WireType={INVALID:-1,VARINT:0,FIXED64:1,DELIMITED:2,START_GROUP:3,END_GROUP:4,FIXED32:5};jspb.BinaryConstants.FieldTypeToWireType=function(o){var t=jspb.BinaryConstants.FieldType,r=jspb.BinaryConstants.WireType;switch(o){case t.INT32:case t.INT64:case t.UINT32:case t.UINT64:case t.SINT32:case t.SINT64:case t.BOOL:case t.ENUM:case t.VHASH64:return r.VARINT;case t.DOUBLE:case t.FIXED64:case t.SFIXED64:case t.FHASH64:return r.FIXED64;case t.STRING:case t.MESSAGE:case t.BYTES:return r.DELIMITED;case t.FLOAT:case t.FIXED32:case t.SFIXED32:return r.FIXED32;default:return r.INVALID}};jspb.BinaryConstants.INVALID_FIELD_NUMBER=-1;jspb.BinaryConstants.FLOAT32_EPS=1401298464324817e-60;jspb.BinaryConstants.FLOAT32_MIN=11754943508222875e-54;jspb.BinaryConstants.FLOAT32_MAX=34028234663852886e22;jspb.BinaryConstants.FLOAT64_EPS=5e-324;jspb.BinaryConstants.FLOAT64_MIN=22250738585072014e-324;jspb.BinaryConstants.FLOAT64_MAX=17976931348623157e292;jspb.BinaryConstants.TWO_TO_20=1048576;jspb.BinaryConstants.TWO_TO_23=8388608;jspb.BinaryConstants.TWO_TO_31=2147483648;jspb.BinaryConstants.TWO_TO_32=4294967296;jspb.BinaryConstants.TWO_TO_52=4503599627370496;jspb.BinaryConstants.TWO_TO_63=9223372036854776e3;jspb.BinaryConstants.TWO_TO_64=18446744073709552e3;jspb.BinaryConstants.ZERO_HASH="\0\0\0\0\0\0\0\0";goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;goog.array.ASSUME_NATIVE_FUNCTIONS=2012<goog.FEATURESET_YEAR;goog.array.peek=function(o){return o[o.length-1]};goog.array.last=goog.array.peek;goog.array.indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(o,t,r){return goog.asserts.assert(o.length!=null),Array.prototype.indexOf.call(o,t,r)}:function(o,t,r){if(r=r==null?0:0>r?Math.max(0,o.length+r):r,goog.isString(o))return goog.isString(t)&&t.length==1?o.indexOf(t,r):-1;for(;r<o.length;r++)if(r in o&&o[r]===t)return r;return-1};goog.array.lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(o,t,r){return goog.asserts.assert(o.length!=null),Array.prototype.lastIndexOf.call(o,t,r??o.length-1)}:function(o,t,r){if(r=r??o.length-1,0>r&&(r=Math.max(0,o.length+r)),goog.isString(o))return goog.isString(t)&&t.length==1?o.lastIndexOf(t,r):-1;for(;0<=r;r--)if(r in o&&o[r]===t)return r;return-1};goog.array.forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(o,t,r){goog.asserts.assert(o.length!=null),Array.prototype.forEach.call(o,t,r)}:function(o,t,r){for(var i=o.length,s=goog.isString(o)?o.split(""):o,g=0;g<i;g++)g in s&&t.call(r,s[g],g,o)};goog.array.forEachRight=function(o,t,r){var i=o.length,s=goog.isString(o)?o.split(""):o;for(--i;0<=i;--i)i in s&&t.call(r,s[i],i,o)};goog.array.filter=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(o,t,r){return goog.asserts.assert(o.length!=null),Array.prototype.filter.call(o,t,r)}:function(o,t,r){for(var i=o.length,s=[],g=0,l=goog.isString(o)?o.split(""):o,h=0;h<i;h++)if(h in l){var m=l[h];t.call(r,m,h,o)&&(s[g++]=m)}return s};goog.array.map=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(o,t,r){return goog.asserts.assert(o.length!=null),Array.prototype.map.call(o,t,r)}:function(o,t,r){for(var i=o.length,s=Array(i),g=goog.isString(o)?o.split(""):o,l=0;l<i;l++)l in g&&(s[l]=t.call(r,g[l],l,o));return s};goog.array.reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(o,t,r,i){return goog.asserts.assert(o.length!=null),i&&(t=goog.bind(t,i)),Array.prototype.reduce.call(o,t,r)}:function(o,t,r,i){var s=r;return goog.array.forEach(o,function(g,l){s=t.call(i,s,g,l,o)}),s};goog.array.reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(o,t,r,i){return goog.asserts.assert(o.length!=null),goog.asserts.assert(t!=null),i&&(t=goog.bind(t,i)),Array.prototype.reduceRight.call(o,t,r)}:function(o,t,r,i){var s=r;return goog.array.forEachRight(o,function(g,l){s=t.call(i,s,g,l,o)}),s};goog.array.some=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(o,t,r){return goog.asserts.assert(o.length!=null),Array.prototype.some.call(o,t,r)}:function(o,t,r){for(var i=o.length,s=goog.isString(o)?o.split(""):o,g=0;g<i;g++)if(g in s&&t.call(r,s[g],g,o))return!0;return!1};goog.array.every=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(o,t,r){return goog.asserts.assert(o.length!=null),Array.prototype.every.call(o,t,r)}:function(o,t,r){for(var i=o.length,s=goog.isString(o)?o.split(""):o,g=0;g<i;g++)if(g in s&&!t.call(r,s[g],g,o))return!1;return!0};goog.array.count=function(o,t,r){var i=0;return goog.array.forEach(o,function(s,g,l){t.call(r,s,g,l)&&++i},r),i};goog.array.find=function(o,t,r){return t=goog.array.findIndex(o,t,r),0>t?null:goog.isString(o)?o.charAt(t):o[t]};goog.array.findIndex=function(o,t,r){for(var i=o.length,s=goog.isString(o)?o.split(""):o,g=0;g<i;g++)if(g in s&&t.call(r,s[g],g,o))return g;return-1};goog.array.findRight=function(o,t,r){return t=goog.array.findIndexRight(o,t,r),0>t?null:goog.isString(o)?o.charAt(t):o[t]};goog.array.findIndexRight=function(o,t,r){var i=o.length,s=goog.isString(o)?o.split(""):o;for(--i;0<=i;i--)if(i in s&&t.call(r,s[i],i,o))return i;return-1};goog.array.contains=function(o,t){return 0<=goog.array.indexOf(o,t)};goog.array.isEmpty=function(o){return o.length==0};goog.array.clear=function(o){if(!goog.isArray(o))for(var t=o.length-1;0<=t;t--)delete o[t];o.length=0};goog.array.insert=function(o,t){goog.array.contains(o,t)||o.push(t)};goog.array.insertAt=function(o,t,r){goog.array.splice(o,r,0,t)};goog.array.insertArrayAt=function(o,t,r){goog.partial(goog.array.splice,o,r,0).apply(null,t)};goog.array.insertBefore=function(o,t,r){var i;arguments.length==2||0>(i=goog.array.indexOf(o,r))?o.push(t):goog.array.insertAt(o,t,i)};goog.array.remove=function(o,t){t=goog.array.indexOf(o,t);var r;return(r=0<=t)&&goog.array.removeAt(o,t),r};goog.array.removeLast=function(o,t){return t=goog.array.lastIndexOf(o,t),0<=t?(goog.array.removeAt(o,t),!0):!1};goog.array.removeAt=function(o,t){return goog.asserts.assert(o.length!=null),Array.prototype.splice.call(o,t,1).length==1};goog.array.removeIf=function(o,t,r){return t=goog.array.findIndex(o,t,r),0<=t?(goog.array.removeAt(o,t),!0):!1};goog.array.removeAllIf=function(o,t,r){var i=0;return goog.array.forEachRight(o,function(s,g){t.call(r,s,g,o)&&goog.array.removeAt(o,g)&&i++}),i};goog.array.concat=function(o){return Array.prototype.concat.apply([],arguments)};goog.array.join=function(o){return Array.prototype.concat.apply([],arguments)};goog.array.toArray=function(o){var t=o.length;if(0<t){for(var r=Array(t),i=0;i<t;i++)r[i]=o[i];return r}return[]};goog.array.clone=goog.array.toArray;goog.array.extend=function(o,t){for(var r=1;r<arguments.length;r++){var i=arguments[r];if(goog.isArrayLike(i)){var s=o.length||0,g=i.length||0;o.length=s+g;for(var l=0;l<g;l++)o[s+l]=i[l]}else o.push(i)}};goog.array.splice=function(o,t,r,i){return goog.asserts.assert(o.length!=null),Array.prototype.splice.apply(o,goog.array.slice(arguments,1))};goog.array.slice=function(o,t,r){return goog.asserts.assert(o.length!=null),2>=arguments.length?Array.prototype.slice.call(o,t):Array.prototype.slice.call(o,t,r)};goog.array.removeDuplicates=function(o,t,r){t=t||o;var i=function(m){return goog.isObject(m)?"o"+goog.getUid(m):(typeof m).charAt(0)+m};r=r||i,i={};for(var s=0,g=0;g<o.length;){var l=o[g++],h=r(l);Object.prototype.hasOwnProperty.call(i,h)||(i[h]=!0,t[s++]=l)}t.length=s};goog.array.binarySearch=function(o,t,r){return goog.array.binarySearch_(o,r||goog.array.defaultCompare,!1,t)};goog.array.binarySelect=function(o,t,r){return goog.array.binarySearch_(o,t,!0,void 0,r)};goog.array.binarySearch_=function(o,t,r,i,s){for(var g=0,l=o.length,h;g<l;){var m=g+l>>1,T=r?t.call(s,o[m],m,o):t(i,o[m]);0<T?g=m+1:(l=m,h=!T)}return h?g:~g};goog.array.sort=function(o,t){o.sort(t||goog.array.defaultCompare)};goog.array.stableSort=function(o,t){for(var r=Array(o.length),i=0;i<o.length;i++)r[i]={index:i,value:o[i]};var s=t||goog.array.defaultCompare;for(goog.array.sort(r,function(g,l){return s(g.value,l.value)||g.index-l.index}),i=0;i<o.length;i++)o[i]=r[i].value};goog.array.sortByKey=function(o,t,r){var i=r||goog.array.defaultCompare;goog.array.sort(o,function(s,g){return i(t(s),t(g))})};goog.array.sortObjectsByKey=function(o,t,r){goog.array.sortByKey(o,function(i){return i[t]},r)};goog.array.isSorted=function(o,t,r){t=t||goog.array.defaultCompare;for(var i=1;i<o.length;i++){var s=t(o[i-1],o[i]);if(0<s||s==0&&r)return!1}return!0};goog.array.equals=function(o,t,r){if(!goog.isArrayLike(o)||!goog.isArrayLike(t)||o.length!=t.length)return!1;var i=o.length;r=r||goog.array.defaultCompareEquality;for(var s=0;s<i;s++)if(!r(o[s],t[s]))return!1;return!0};goog.array.compare3=function(o,t,r){r=r||goog.array.defaultCompare;for(var i=Math.min(o.length,t.length),s=0;s<i;s++){var g=r(o[s],t[s]);if(g!=0)return g}return goog.array.defaultCompare(o.length,t.length)};goog.array.defaultCompare=function(o,t){return o>t?1:o<t?-1:0};goog.array.inverseDefaultCompare=function(o,t){return-goog.array.defaultCompare(o,t)};goog.array.defaultCompareEquality=function(o,t){return o===t};goog.array.binaryInsert=function(o,t,r){return r=goog.array.binarySearch(o,t,r),0>r?(goog.array.insertAt(o,t,-(r+1)),!0):!1};goog.array.binaryRemove=function(o,t,r){return t=goog.array.binarySearch(o,t,r),0<=t?goog.array.removeAt(o,t):!1};goog.array.bucket=function(o,t,r){for(var i={},s=0;s<o.length;s++){var g=o[s],l=t.call(r,g,s,o);goog.isDef(l)&&(i[l]||(i[l]=[])).push(g)}return i};goog.array.toObject=function(o,t,r){var i={};return goog.array.forEach(o,function(s,g){i[t.call(r,s,g,o)]=s}),i};goog.array.range=function(o,t,r){var i=[],s=0,g=o;if(r=r||1,t!==void 0&&(s=o,g=t),0>r*(g-s))return[];if(0<r)for(o=s;o<g;o+=r)i.push(o);else for(o=s;o>g;o+=r)i.push(o);return i};goog.array.repeat=function(o,t){for(var r=[],i=0;i<t;i++)r[i]=o;return r};goog.array.flatten=function(o){for(var t=[],r=0;r<arguments.length;r++){var i=arguments[r];if(goog.isArray(i))for(var s=0;s<i.length;s+=8192){var g=goog.array.slice(i,s,s+8192);g=goog.array.flatten.apply(null,g);for(var l=0;l<g.length;l++)t.push(g[l])}else t.push(i)}return t};goog.array.rotate=function(o,t){return goog.asserts.assert(o.length!=null),o.length&&(t%=o.length,0<t?Array.prototype.unshift.apply(o,o.splice(-t,t)):0>t&&Array.prototype.push.apply(o,o.splice(0,-t))),o};goog.array.moveItem=function(o,t,r){goog.asserts.assert(0<=t&&t<o.length),goog.asserts.assert(0<=r&&r<o.length),t=Array.prototype.splice.call(o,t,1),Array.prototype.splice.call(o,r,0,t[0])};goog.array.zip=function(o){if(!arguments.length)return[];for(var t=[],r=arguments[0].length,i=1;i<arguments.length;i++)arguments[i].length<r&&(r=arguments[i].length);for(i=0;i<r;i++){for(var s=[],g=0;g<arguments.length;g++)s.push(arguments[g][i]);t.push(s)}return t};goog.array.shuffle=function(o,t){t=t||Math.random;for(var r=o.length-1;0<r;r--){var i=Math.floor(t()*(r+1)),s=o[r];o[r]=o[i],o[i]=s}};goog.array.copyByIndex=function(o,t){var r=[];return goog.array.forEach(t,function(i){r.push(o[i])}),r};goog.array.concatMap=function(o,t,r){return goog.array.concat.apply([],goog.array.map(o,t,r))};goog.crypt={};goog.crypt.stringToByteArray=function(o){for(var t=[],r=0,i=0;i<o.length;i++){var s=o.charCodeAt(i);255<s&&(t[r++]=s&255,s>>=8),t[r++]=s}return t};goog.crypt.byteArrayToString=function(o){if(8192>=o.length)return String.fromCharCode.apply(null,o);for(var t="",r=0;r<o.length;r+=8192){var i=goog.array.slice(o,r,r+8192);t+=String.fromCharCode.apply(null,i)}return t};goog.crypt.byteArrayToHex=function(o,t){return goog.array.map(o,function(r){return r=r.toString(16),1<r.length?r:"0"+r}).join(t||"")};goog.crypt.hexToByteArray=function(o){goog.asserts.assert(o.length%2==0,"Key string length must be multiple of 2");for(var t=[],r=0;r<o.length;r+=2)t.push(parseInt(o.substring(r,r+2),16));return t};goog.crypt.stringToUtf8ByteArray=function(o){for(var t=[],r=0,i=0;i<o.length;i++){var s=o.charCodeAt(i);128>s?t[r++]=s:(2048>s?t[r++]=s>>6|192:((s&64512)==55296&&i+1<o.length&&(o.charCodeAt(i+1)&64512)==56320?(s=65536+((s&1023)<<10)+(o.charCodeAt(++i)&1023),t[r++]=s>>18|240,t[r++]=s>>12&63|128):t[r++]=s>>12|224,t[r++]=s>>6&63|128),t[r++]=s&63|128)}return t};goog.crypt.utf8ByteArrayToString=function(o){for(var t=[],r=0,i=0;r<o.length;){var s=o[r++];if(128>s)t[i++]=String.fromCharCode(s);else if(191<s&&224>s){var g=o[r++];t[i++]=String.fromCharCode((s&31)<<6|g&63)}else if(239<s&&365>s){g=o[r++];var l=o[r++],h=o[r++];s=((s&7)<<18|(g&63)<<12|(l&63)<<6|h&63)-65536,t[i++]=String.fromCharCode(55296+(s>>10)),t[i++]=String.fromCharCode(56320+(s&1023))}else g=o[r++],l=o[r++],t[i++]=String.fromCharCode((s&15)<<12|(g&63)<<6|l&63)}return t.join("")};goog.crypt.xorByteArray=function(o,t){goog.asserts.assert(o.length==t.length,"XOR array lengths must match");for(var r=[],i=0;i<o.length;i++)r.push(o[i]^t[i]);return r};goog.dom.asserts={};goog.dom.asserts.assertIsLocation=function(o){if(goog.asserts.ENABLE_ASSERTS){var t=goog.dom.asserts.getWindow_(o);t&&(!o||!(o instanceof t.Location)&&o instanceof t.Element)&&goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s",goog.dom.asserts.debugStringForType_(o))}return o};goog.dom.asserts.assertIsElementType_=function(o,t){if(goog.asserts.ENABLE_ASSERTS){var r=goog.dom.asserts.getWindow_(o);r&&typeof r[t]<"u"&&(o&&(o instanceof r[t]||!(o instanceof r.Location||o instanceof r.Element))||goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s",t,goog.dom.asserts.debugStringForType_(o)))}return o};goog.dom.asserts.assertIsHTMLAnchorElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLAnchorElement")};goog.dom.asserts.assertIsHTMLButtonElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLButtonElement")};goog.dom.asserts.assertIsHTMLLinkElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLLinkElement")};goog.dom.asserts.assertIsHTMLImageElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLImageElement")};goog.dom.asserts.assertIsHTMLAudioElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLAudioElement")};goog.dom.asserts.assertIsHTMLVideoElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLVideoElement")};goog.dom.asserts.assertIsHTMLInputElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLInputElement")};goog.dom.asserts.assertIsHTMLTextAreaElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLTextAreaElement")};goog.dom.asserts.assertIsHTMLCanvasElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLCanvasElement")};goog.dom.asserts.assertIsHTMLEmbedElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLEmbedElement")};goog.dom.asserts.assertIsHTMLFormElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLFormElement")};goog.dom.asserts.assertIsHTMLFrameElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLFrameElement")};goog.dom.asserts.assertIsHTMLIFrameElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLIFrameElement")};goog.dom.asserts.assertIsHTMLObjectElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLObjectElement")};goog.dom.asserts.assertIsHTMLScriptElement=function(o){return goog.dom.asserts.assertIsElementType_(o,"HTMLScriptElement")};goog.dom.asserts.debugStringForType_=function(o){if(goog.isObject(o))try{return o.constructor.displayName||o.constructor.name||Object.prototype.toString.call(o)}catch{return"<object could not be stringified>"}else return o===void 0?"undefined":o===null?"null":typeof o};goog.dom.asserts.getWindow_=function(o){try{var t=o&&o.ownerDocument,r=t&&(t.defaultView||t.parentWindow);if(r=r||goog.global,r.Element&&r.Location)return r}catch{}return null};goog.functions={};goog.functions.constant=function(o){return function(){return o}};goog.functions.FALSE=function(){return!1};goog.functions.TRUE=function(){return!0};goog.functions.NULL=function(){return null};goog.functions.identity=function(o,t){return o};goog.functions.error=function(o){return function(){throw Error(o)}};goog.functions.fail=function(o){return function(){throw o}};goog.functions.lock=function(o,t){return t=t||0,function(){return o.apply(this,Array.prototype.slice.call(arguments,0,t))}};goog.functions.nth=function(o){return function(){return arguments[o]}};goog.functions.partialRight=function(o,t){var r=Array.prototype.slice.call(arguments,1);return function(){var i=Array.prototype.slice.call(arguments);return i.push.apply(i,r),o.apply(this,i)}};goog.functions.withReturnValue=function(o,t){return goog.functions.sequence(o,goog.functions.constant(t))};goog.functions.equalTo=function(o,t){return function(r){return t?o==r:o===r}};goog.functions.compose=function(o,t){var r=arguments,i=r.length;return function(){var s;i&&(s=r[i-1].apply(this,arguments));for(var g=i-2;0<=g;g--)s=r[g].call(this,s);return s}};goog.functions.sequence=function(o){var t=arguments,r=t.length;return function(){for(var i,s=0;s<r;s++)i=t[s].apply(this,arguments);return i}};goog.functions.and=function(o){var t=arguments,r=t.length;return function(){for(var i=0;i<r;i++)if(!t[i].apply(this,arguments))return!1;return!0}};goog.functions.or=function(o){var t=arguments,r=t.length;return function(){for(var i=0;i<r;i++)if(t[i].apply(this,arguments))return!0;return!1}};goog.functions.not=function(o){return function(){return!o.apply(this,arguments)}};goog.functions.create=function(o,t){var r=function(){};return r.prototype=o.prototype,r=new r,o.apply(r,Array.prototype.slice.call(arguments,1)),r};goog.functions.CACHE_RETURN_VALUE=!0;goog.functions.cacheReturnValue=function(o){var t=!1,r;return function(){return goog.functions.CACHE_RETURN_VALUE?(t||(r=o(),t=!0),r):o()}};goog.functions.once=function(o){var t=o;return function(){if(t){var r=t;t=null,r()}}};goog.functions.debounce=function(o,t,r){var i=0;return function(s){goog.global.clearTimeout(i);var g=arguments;i=goog.global.setTimeout(function(){o.apply(r,g)},t)}};goog.functions.throttle=function(o,t,r){var i=0,s=!1,g=[],l=function(){i=0,s&&(s=!1,h())},h=function(){i=goog.global.setTimeout(l,t),o.apply(r,g)};return function(m){g=arguments,i?s=!0:h()}};goog.functions.rateLimit=function(o,t,r){var i=0,s=function(){i=0};return function(g){i||(i=goog.global.setTimeout(s,t),o.apply(r,arguments))}};goog.dom.HtmlElement=function(){};goog.dom.TagName=function(o){this.tagName_=o};goog.dom.TagName.prototype.toString=function(){return this.tagName_};goog.dom.TagName.A=new goog.dom.TagName("A");goog.dom.TagName.ABBR=new goog.dom.TagName("ABBR");goog.dom.TagName.ACRONYM=new goog.dom.TagName("ACRONYM");goog.dom.TagName.ADDRESS=new goog.dom.TagName("ADDRESS");goog.dom.TagName.APPLET=new goog.dom.TagName("APPLET");goog.dom.TagName.AREA=new goog.dom.TagName("AREA");goog.dom.TagName.ARTICLE=new goog.dom.TagName("ARTICLE");goog.dom.TagName.ASIDE=new goog.dom.TagName("ASIDE");goog.dom.TagName.AUDIO=new goog.dom.TagName("AUDIO");goog.dom.TagName.B=new goog.dom.TagName("B");goog.dom.TagName.BASE=new goog.dom.TagName("BASE");goog.dom.TagName.BASEFONT=new goog.dom.TagName("BASEFONT");goog.dom.TagName.BDI=new goog.dom.TagName("BDI");goog.dom.TagName.BDO=new goog.dom.TagName("BDO");goog.dom.TagName.BIG=new goog.dom.TagName("BIG");goog.dom.TagName.BLOCKQUOTE=new goog.dom.TagName("BLOCKQUOTE");goog.dom.TagName.BODY=new goog.dom.TagName("BODY");goog.dom.TagName.BR=new goog.dom.TagName("BR");goog.dom.TagName.BUTTON=new goog.dom.TagName("BUTTON");goog.dom.TagName.CANVAS=new goog.dom.TagName("CANVAS");goog.dom.TagName.CAPTION=new goog.dom.TagName("CAPTION");goog.dom.TagName.CENTER=new goog.dom.TagName("CENTER");goog.dom.TagName.CITE=new goog.dom.TagName("CITE");goog.dom.TagName.CODE=new goog.dom.TagName("CODE");goog.dom.TagName.COL=new goog.dom.TagName("COL");goog.dom.TagName.COLGROUP=new goog.dom.TagName("COLGROUP");goog.dom.TagName.COMMAND=new goog.dom.TagName("COMMAND");goog.dom.TagName.DATA=new goog.dom.TagName("DATA");goog.dom.TagName.DATALIST=new goog.dom.TagName("DATALIST");goog.dom.TagName.DD=new goog.dom.TagName("DD");goog.dom.TagName.DEL=new goog.dom.TagName("DEL");goog.dom.TagName.DETAILS=new goog.dom.TagName("DETAILS");goog.dom.TagName.DFN=new goog.dom.TagName("DFN");goog.dom.TagName.DIALOG=new goog.dom.TagName("DIALOG");goog.dom.TagName.DIR=new goog.dom.TagName("DIR");goog.dom.TagName.DIV=new goog.dom.TagName("DIV");goog.dom.TagName.DL=new goog.dom.TagName("DL");goog.dom.TagName.DT=new goog.dom.TagName("DT");goog.dom.TagName.EM=new goog.dom.TagName("EM");goog.dom.TagName.EMBED=new goog.dom.TagName("EMBED");goog.dom.TagName.FIELDSET=new goog.dom.TagName("FIELDSET");goog.dom.TagName.FIGCAPTION=new goog.dom.TagName("FIGCAPTION");goog.dom.TagName.FIGURE=new goog.dom.TagName("FIGURE");goog.dom.TagName.FONT=new goog.dom.TagName("FONT");goog.dom.TagName.FOOTER=new goog.dom.TagName("FOOTER");goog.dom.TagName.FORM=new goog.dom.TagName("FORM");goog.dom.TagName.FRAME=new goog.dom.TagName("FRAME");goog.dom.TagName.FRAMESET=new goog.dom.TagName("FRAMESET");goog.dom.TagName.H1=new goog.dom.TagName("H1");goog.dom.TagName.H2=new goog.dom.TagName("H2");goog.dom.TagName.H3=new goog.dom.TagName("H3");goog.dom.TagName.H4=new goog.dom.TagName("H4");goog.dom.TagName.H5=new goog.dom.TagName("H5");goog.dom.TagName.H6=new goog.dom.TagName("H6");goog.dom.TagName.HEAD=new goog.dom.TagName("HEAD");goog.dom.TagName.HEADER=new goog.dom.TagName("HEADER");goog.dom.TagName.HGROUP=new goog.dom.TagName("HGROUP");goog.dom.TagName.HR=new goog.dom.TagName("HR");goog.dom.TagName.HTML=new goog.dom.TagName("HTML");goog.dom.TagName.I=new goog.dom.TagName("I");goog.dom.TagName.IFRAME=new goog.dom.TagName("IFRAME");goog.dom.TagName.IMG=new goog.dom.TagName("IMG");goog.dom.TagName.INPUT=new goog.dom.TagName("INPUT");goog.dom.TagName.INS=new goog.dom.TagName("INS");goog.dom.TagName.ISINDEX=new goog.dom.TagName("ISINDEX");goog.dom.TagName.KBD=new goog.dom.TagName("KBD");goog.dom.TagName.KEYGEN=new goog.dom.TagName("KEYGEN");goog.dom.TagName.LABEL=new goog.dom.TagName("LABEL");goog.dom.TagName.LEGEND=new goog.dom.TagName("LEGEND");goog.dom.TagName.LI=new goog.dom.TagName("LI");goog.dom.TagName.LINK=new goog.dom.TagName("LINK");goog.dom.TagName.MAIN=new goog.dom.TagName("MAIN");goog.dom.TagName.MAP=new goog.dom.TagName("MAP");goog.dom.TagName.MARK=new goog.dom.TagName("MARK");goog.dom.TagName.MATH=new goog.dom.TagName("MATH");goog.dom.TagName.MENU=new goog.dom.TagName("MENU");goog.dom.TagName.MENUITEM=new goog.dom.TagName("MENUITEM");goog.dom.TagName.META=new goog.dom.TagName("META");goog.dom.TagName.METER=new goog.dom.TagName("METER");goog.dom.TagName.NAV=new goog.dom.TagName("NAV");goog.dom.TagName.NOFRAMES=new goog.dom.TagName("NOFRAMES");goog.dom.TagName.NOSCRIPT=new goog.dom.TagName("NOSCRIPT");goog.dom.TagName.OBJECT=new goog.dom.TagName("OBJECT");goog.dom.TagName.OL=new goog.dom.TagName("OL");goog.dom.TagName.OPTGROUP=new goog.dom.TagName("OPTGROUP");goog.dom.TagName.OPTION=new goog.dom.TagName("OPTION");goog.dom.TagName.OUTPUT=new goog.dom.TagName("OUTPUT");goog.dom.TagName.P=new goog.dom.TagName("P");goog.dom.TagName.PARAM=new goog.dom.TagName("PARAM");goog.dom.TagName.PICTURE=new goog.dom.TagName("PICTURE");goog.dom.TagName.PRE=new goog.dom.TagName("PRE");goog.dom.TagName.PROGRESS=new goog.dom.TagName("PROGRESS");goog.dom.TagName.Q=new goog.dom.TagName("Q");goog.dom.TagName.RP=new goog.dom.TagName("RP");goog.dom.TagName.RT=new goog.dom.TagName("RT");goog.dom.TagName.RTC=new goog.dom.TagName("RTC");goog.dom.TagName.RUBY=new goog.dom.TagName("RUBY");goog.dom.TagName.S=new goog.dom.TagName("S");goog.dom.TagName.SAMP=new goog.dom.TagName("SAMP");goog.dom.TagName.SCRIPT=new goog.dom.TagName("SCRIPT");goog.dom.TagName.SECTION=new goog.dom.TagName("SECTION");goog.dom.TagName.SELECT=new goog.dom.TagName("SELECT");goog.dom.TagName.SMALL=new goog.dom.TagName("SMALL");goog.dom.TagName.SOURCE=new goog.dom.TagName("SOURCE");goog.dom.TagName.SPAN=new goog.dom.TagName("SPAN");goog.dom.TagName.STRIKE=new goog.dom.TagName("STRIKE");goog.dom.TagName.STRONG=new goog.dom.TagName("STRONG");goog.dom.TagName.STYLE=new goog.dom.TagName("STYLE");goog.dom.TagName.SUB=new goog.dom.TagName("SUB");goog.dom.TagName.SUMMARY=new goog.dom.TagName("SUMMARY");goog.dom.TagName.SUP=new goog.dom.TagName("SUP");goog.dom.TagName.SVG=new goog.dom.TagName("SVG");goog.dom.TagName.TABLE=new goog.dom.TagName("TABLE");goog.dom.TagName.TBODY=new goog.dom.TagName("TBODY");goog.dom.TagName.TD=new goog.dom.TagName("TD");goog.dom.TagName.TEMPLATE=new goog.dom.TagName("TEMPLATE");goog.dom.TagName.TEXTAREA=new goog.dom.TagName("TEXTAREA");goog.dom.TagName.TFOOT=new goog.dom.TagName("TFOOT");goog.dom.TagName.TH=new goog.dom.TagName("TH");goog.dom.TagName.THEAD=new goog.dom.TagName("THEAD");goog.dom.TagName.TIME=new goog.dom.TagName("TIME");goog.dom.TagName.TITLE=new goog.dom.TagName("TITLE");goog.dom.TagName.TR=new goog.dom.TagName("TR");goog.dom.TagName.TRACK=new goog.dom.TagName("TRACK");goog.dom.TagName.TT=new goog.dom.TagName("TT");goog.dom.TagName.U=new goog.dom.TagName("U");goog.dom.TagName.UL=new goog.dom.TagName("UL");goog.dom.TagName.VAR=new goog.dom.TagName("VAR");goog.dom.TagName.VIDEO=new goog.dom.TagName("VIDEO");goog.dom.TagName.WBR=new goog.dom.TagName("WBR");goog.dom.tags={};goog.dom.tags.VOID_TAGS_={area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};goog.dom.tags.isVoidTag=function(o){return goog.dom.tags.VOID_TAGS_[o]===!0};goog.html={};goog.html.trustedtypes={};goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#html"):null;goog.string={};goog.string.TypedString=function(){};goog.string.Const=function(o,t){this.stringConstValueWithSecurityContract__googStringSecurityPrivate_=o===goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_&&t||"",this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_=goog.string.Const.TYPE_MARKER_};goog.string.Const.prototype.implementsGoogStringTypedString=!0;goog.string.Const.prototype.getTypedStringValue=function(){return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_};goog.string.Const.prototype.toString=function(){return"Const{"+this.stringConstValueWithSecurityContract__googStringSecurityPrivate_+"}"};goog.string.Const.unwrap=function(o){return o instanceof goog.string.Const&&o.constructor===goog.string.Const&&o.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_===goog.string.Const.TYPE_MARKER_?o.stringConstValueWithSecurityContract__googStringSecurityPrivate_:(goog.asserts.fail("expected object of type Const, got '"+o+"'"),"type_error:Const")};goog.string.Const.from=function(o){return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_,o)};goog.string.Const.TYPE_MARKER_={};goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_={};goog.string.Const.EMPTY=goog.string.Const.from("");goog.html.SafeScript=function(){this.privateDoNotAccessOrElseSafeScriptWrappedValue_="",this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeScript.prototype.implementsGoogStringTypedString=!0;goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeScript.fromConstant=function(o){return o=goog.string.Const.unwrap(o),o.length===0?goog.html.SafeScript.EMPTY:goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(o)};goog.html.SafeScript.fromConstantAndArgs=function(o,t){for(var r=[],i=1;i<arguments.length;i++)r.push(goog.html.SafeScript.stringify_(arguments[i]));return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("("+goog.string.Const.unwrap(o)+")("+r.join(", ")+");")};goog.html.SafeScript.fromJson=function(o){return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(goog.html.SafeScript.stringify_(o))};goog.html.SafeScript.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()};goog.DEBUG&&(goog.html.SafeScript.prototype.toString=function(){return"SafeScript{"+this.privateDoNotAccessOrElseSafeScriptWrappedValue_+"}"});goog.html.SafeScript.unwrap=function(o){return goog.html.SafeScript.unwrapTrustedScript(o).toString()};goog.html.SafeScript.unwrapTrustedScript=function(o){return o instanceof goog.html.SafeScript&&o.constructor===goog.html.SafeScript&&o.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_?o.privateDoNotAccessOrElseSafeScriptWrappedValue_:(goog.asserts.fail("expected object of type SafeScript, got '"+o+"' of type "+goog.typeOf(o)),"type_error:SafeScript")};goog.html.SafeScript.stringify_=function(o){return JSON.stringify(o).replace(/</g,"\\x3c")};goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse=function(o){return new goog.html.SafeScript().initSecurityPrivateDoNotAccessOrElse_(o)};goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_=function(o){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScript(o):o,this};goog.html.SafeScript.EMPTY=goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");goog.fs={};goog.fs.url={};goog.fs.url.createObjectUrl=function(o){return goog.fs.url.getUrlObject_().createObjectURL(o)};goog.fs.url.revokeObjectUrl=function(o){goog.fs.url.getUrlObject_().revokeObjectURL(o)};goog.fs.url.getUrlObject_=function(){var o=goog.fs.url.findUrlObject_();if(o!=null)return o;throw Error("This browser doesn't seem to support blob URLs")};goog.fs.url.findUrlObject_=function(){return goog.isDef(goog.global.URL)&&goog.isDef(goog.global.URL.createObjectURL)?goog.global.URL:goog.isDef(goog.global.webkitURL)&&goog.isDef(goog.global.webkitURL.createObjectURL)?goog.global.webkitURL:goog.isDef(goog.global.createObjectURL)?goog.global:null};goog.fs.url.browserSupportsObjectUrls=function(){return goog.fs.url.findUrlObject_()!=null};goog.i18n={};goog.i18n.bidi={};goog.i18n.bidi.FORCE_RTL=!1;goog.i18n.bidi.IS_RTL=goog.i18n.bidi.FORCE_RTL||(goog.LOCALE.substring(0,2).toLowerCase()=="ar"||goog.LOCALE.substring(0,2).toLowerCase()=="fa"||goog.LOCALE.substring(0,2).toLowerCase()=="he"||goog.LOCALE.substring(0,2).toLowerCase()=="iw"||goog.LOCALE.substring(0,2).toLowerCase()=="ps"||goog.LOCALE.substring(0,2).toLowerCase()=="sd"||goog.LOCALE.substring(0,2).toLowerCase()=="ug"||goog.LOCALE.substring(0,2).toLowerCase()=="ur"||goog.LOCALE.substring(0,2).toLowerCase()=="yi")&&(goog.LOCALE.length==2||goog.LOCALE.substring(2,3)=="-"||goog.LOCALE.substring(2,3)=="_")||3<=goog.LOCALE.length&&goog.LOCALE.substring(0,3).toLowerCase()=="ckb"&&(goog.LOCALE.length==3||goog.LOCALE.substring(3,4)=="-"||goog.LOCALE.substring(3,4)=="_")||7<=goog.LOCALE.length&&(goog.LOCALE.substring(2,3)=="-"||goog.LOCALE.substring(2,3)=="_")&&(goog.LOCALE.substring(3,7).toLowerCase()=="adlm"||goog.LOCALE.substring(3,7).toLowerCase()=="arab"||goog.LOCALE.substring(3,7).toLowerCase()=="hebr"||goog.LOCALE.substring(3,7).toLowerCase()=="nkoo"||goog.LOCALE.substring(3,7).toLowerCase()=="rohg"||goog.LOCALE.substring(3,7).toLowerCase()=="thaa")||8<=goog.LOCALE.length&&(goog.LOCALE.substring(3,4)=="-"||goog.LOCALE.substring(3,4)=="_")&&(goog.LOCALE.substring(4,8).toLowerCase()=="adlm"||goog.LOCALE.substring(4,8).toLowerCase()=="arab"||goog.LOCALE.substring(4,8).toLowerCase()=="hebr"||goog.LOCALE.substring(4,8).toLowerCase()=="nkoo"||goog.LOCALE.substring(4,8).toLowerCase()=="rohg"||goog.LOCALE.substring(4,8).toLowerCase()=="thaa");goog.i18n.bidi.Format={LRE:"\u202A",RLE:"\u202B",PDF:"\u202C",LRM:"\u200E",RLM:"\u200F"};goog.i18n.bidi.Dir={LTR:1,RTL:-1,NEUTRAL:0};goog.i18n.bidi.RIGHT="right";goog.i18n.bidi.LEFT="left";goog.i18n.bidi.I18N_RIGHT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.LEFT:goog.i18n.bidi.RIGHT;goog.i18n.bidi.I18N_LEFT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT;goog.i18n.bidi.toDir=function(o,t){return typeof o=="number"?0<o?goog.i18n.bidi.Dir.LTR:0>o?goog.i18n.bidi.Dir.RTL:t?null:goog.i18n.bidi.Dir.NEUTRAL:o==null?null:o?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR};goog.i18n.bidi.ltrChars_="A-Za-z\xC0-\xD6\xD8-\xF6\xF8-\u02B8\u0300-\u0590\u0900-\u1FFF\u200E\u2C00-\uD801\uD804-\uD839\uD83C-\uDBFF\uF900-\uFB1C\uFE00-\uFE6F\uFEFD-\uFFFF";goog.i18n.bidi.rtlChars_="\u0591-\u06EF\u06FA-\u08FF\u200F\uD802-\uD803\uD83A-\uD83B\uFB1D-\uFDFF\uFE70-\uFEFC";goog.i18n.bidi.htmlSkipReg_=/<[^>]*>|&[^;]+;/g;goog.i18n.bidi.stripHtmlIfNeeded_=function(o,t){return t?o.replace(goog.i18n.bidi.htmlSkipReg_,""):o};goog.i18n.bidi.rtlCharReg_=new RegExp("["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.ltrCharReg_=new RegExp("["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.hasAnyRtl=function(o,t){return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(o,t))};goog.i18n.bidi.hasRtlChar=goog.i18n.bidi.hasAnyRtl;goog.i18n.bidi.hasAnyLtr=function(o,t){return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(o,t))};goog.i18n.bidi.ltrRe_=new RegExp("^["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.rtlRe_=new RegExp("^["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.isRtlChar=function(o){return goog.i18n.bidi.rtlRe_.test(o)};goog.i18n.bidi.isLtrChar=function(o){return goog.i18n.bidi.ltrRe_.test(o)};goog.i18n.bidi.isNeutralChar=function(o){return!goog.i18n.bidi.isLtrChar(o)&&!goog.i18n.bidi.isRtlChar(o)};goog.i18n.bidi.ltrDirCheckRe_=new RegExp("^[^"+goog.i18n.bidi.rtlChars_+"]*["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.rtlDirCheckRe_=new RegExp("^[^"+goog.i18n.bidi.ltrChars_+"]*["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.startsWithRtl=function(o,t){return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(o,t))};goog.i18n.bidi.isRtlText=goog.i18n.bidi.startsWithRtl;goog.i18n.bidi.startsWithLtr=function(o,t){return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(o,t))};goog.i18n.bidi.isLtrText=goog.i18n.bidi.startsWithLtr;goog.i18n.bidi.isRequiredLtrRe_=/^http:\/\/.*/;goog.i18n.bidi.isNeutralText=function(o,t){return o=goog.i18n.bidi.stripHtmlIfNeeded_(o,t),goog.i18n.bidi.isRequiredLtrRe_.test(o)||!goog.i18n.bidi.hasAnyLtr(o)&&!goog.i18n.bidi.hasAnyRtl(o)};goog.i18n.bidi.ltrExitDirCheckRe_=new RegExp("["+goog.i18n.bidi.ltrChars_+"][^"+goog.i18n.bidi.rtlChars_+"]*$");goog.i18n.bidi.rtlExitDirCheckRe_=new RegExp("["+goog.i18n.bidi.rtlChars_+"][^"+goog.i18n.bidi.ltrChars_+"]*$");goog.i18n.bidi.endsWithLtr=function(o,t){return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(o,t))};goog.i18n.bidi.isLtrExitText=goog.i18n.bidi.endsWithLtr;goog.i18n.bidi.endsWithRtl=function(o,t){return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(o,t))};goog.i18n.bidi.isRtlExitText=goog.i18n.bidi.endsWithRtl;goog.i18n.bidi.rtlLocalesRe_=/^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;goog.i18n.bidi.isRtlLanguage=function(o){return goog.i18n.bidi.rtlLocalesRe_.test(o)};goog.i18n.bidi.bracketGuardTextRe_=/(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;goog.i18n.bidi.guardBracketInText=function(o,t){return t=(t===void 0?goog.i18n.bidi.hasAnyRtl(o):t)?goog.i18n.bidi.Format.RLM:goog.i18n.bidi.Format.LRM,o.replace(goog.i18n.bidi.bracketGuardTextRe_,t+"$&"+t)};goog.i18n.bidi.enforceRtlInHtml=function(o){return o.charAt(0)=="<"?o.replace(/<\w+/,"$& dir=rtl"):`
<span dir=rtl>`+o+"</span>"};goog.i18n.bidi.enforceRtlInText=function(o){return goog.i18n.bidi.Format.RLE+o+goog.i18n.bidi.Format.PDF};goog.i18n.bidi.enforceLtrInHtml=function(o){return o.charAt(0)=="<"?o.replace(/<\w+/,"$& dir=ltr"):`
<span dir=ltr>`+o+"</span>"};goog.i18n.bidi.enforceLtrInText=function(o){return goog.i18n.bidi.Format.LRE+o+goog.i18n.bidi.Format.PDF};goog.i18n.bidi.dimensionsRe_=/:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;goog.i18n.bidi.leftRe_=/left/gi;goog.i18n.bidi.rightRe_=/right/gi;goog.i18n.bidi.tempRe_=/%%%%/g;goog.i18n.bidi.mirrorCSS=function(o){return o.replace(goog.i18n.bidi.dimensionsRe_,":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_,"%%%%").replace(goog.i18n.bidi.rightRe_,goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_,goog.i18n.bidi.RIGHT)};goog.i18n.bidi.doubleQuoteSubstituteRe_=/([\u0591-\u05f2])"/g;goog.i18n.bidi.singleQuoteSubstituteRe_=/([\u0591-\u05f2])'/g;goog.i18n.bidi.normalizeHebrewQuote=function(o){return o.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_,"$1\u05F4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_,"$1\u05F3")};goog.i18n.bidi.wordSeparatorRe_=/\s+/;goog.i18n.bidi.hasNumeralsRe_=/[\d\u06f0-\u06f9]/;goog.i18n.bidi.rtlDetectionThreshold_=.4;goog.i18n.bidi.estimateDirection=function(o,t){var r=0,i=0,s=!1;for(o=goog.i18n.bidi.stripHtmlIfNeeded_(o,t).split(goog.i18n.bidi.wordSeparatorRe_),t=0;t<o.length;t++){var g=o[t];goog.i18n.bidi.startsWithRtl(g)?(r++,i++):goog.i18n.bidi.isRequiredLtrRe_.test(g)?s=!0:goog.i18n.bidi.hasAnyLtr(g)?i++:goog.i18n.bidi.hasNumeralsRe_.test(g)&&(s=!0)}return i==0?s?goog.i18n.bidi.Dir.LTR:goog.i18n.bidi.Dir.NEUTRAL:r/i>goog.i18n.bidi.rtlDetectionThreshold_?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR};goog.i18n.bidi.detectRtlDirectionality=function(o,t){return goog.i18n.bidi.estimateDirection(o,t)==goog.i18n.bidi.Dir.RTL};goog.i18n.bidi.setElementDirAndAlign=function(o,t){o&&(t=goog.i18n.bidi.toDir(t))&&(o.style.textAlign=t==goog.i18n.bidi.Dir.RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT,o.dir=t==goog.i18n.bidi.Dir.RTL?"rtl":"ltr")};goog.i18n.bidi.setElementDirByTextDirectionality=function(o,t){switch(goog.i18n.bidi.estimateDirection(t)){case goog.i18n.bidi.Dir.LTR:o.dir="ltr";break;case goog.i18n.bidi.Dir.RTL:o.dir="rtl";break;default:o.removeAttribute("dir")}};goog.i18n.bidi.DirectionalString=function(){};goog.html.TrustedResourceUrl=function(){this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_="",this.trustedURL_=null,this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString=!0;goog.html.TrustedResourceUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString()};goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.TrustedResourceUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR};goog.html.TrustedResourceUrl.prototype.cloneWithParams=function(o,t){var r=goog.html.TrustedResourceUrl.unwrap(this);r=goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(r);var i=r[3]||"";return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(r[1]+goog.html.TrustedResourceUrl.stringifyParams_("?",r[2]||"",o)+goog.html.TrustedResourceUrl.stringifyParams_("#",i,t))};goog.DEBUG&&(goog.html.TrustedResourceUrl.prototype.toString=function(){return"TrustedResourceUrl{"+this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_+"}"});goog.html.TrustedResourceUrl.unwrap=function(o){return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(o).toString()};goog.html.TrustedResourceUrl.unwrapTrustedScriptURL=function(o){return o instanceof goog.html.TrustedResourceUrl&&o.constructor===goog.html.TrustedResourceUrl&&o.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_?o.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_:(goog.asserts.fail("expected object of type TrustedResourceUrl, got '"+o+"' of type "+goog.typeOf(o)),"type_error:TrustedResourceUrl")};goog.html.TrustedResourceUrl.unwrapTrustedURL=function(o){return o.trustedURL_?o.trustedURL_:goog.html.TrustedResourceUrl.unwrap(o)};goog.html.TrustedResourceUrl.format=function(o,t){var r=goog.string.Const.unwrap(o);if(!goog.html.TrustedResourceUrl.BASE_URL_.test(r))throw Error("Invalid TrustedResourceUrl format: "+r);return o=r.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_,function(i,s){if(!Object.prototype.hasOwnProperty.call(t,s))throw Error('Found marker, "'+s+'", in format string, "'+r+'", but no valid label mapping found in args: '+JSON.stringify(t));return i=t[s],i instanceof goog.string.Const?goog.string.Const.unwrap(i):encodeURIComponent(String(i))}),goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(o)};goog.html.TrustedResourceUrl.FORMAT_MARKER_=/%{(\w+)}/g;goog.html.TrustedResourceUrl.BASE_URL_=/^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i;goog.html.TrustedResourceUrl.URL_PARAM_PARSER_=/^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;goog.html.TrustedResourceUrl.formatWithParams=function(o,t,r,i){return goog.html.TrustedResourceUrl.format(o,t).cloneWithParams(r,i)};goog.html.TrustedResourceUrl.fromConstant=function(o){return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(o))};goog.html.TrustedResourceUrl.fromConstants=function(o){for(var t="",r=0;r<o.length;r++)t+=goog.string.Const.unwrap(o[r]);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(t)};goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse=function(o){var t=new goog.html.TrustedResourceUrl;return t.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScriptURL(o):o,goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY&&(t.trustedURL_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createURL(o)),t};goog.html.TrustedResourceUrl.stringifyParams_=function(o,t,r){if(r==null)return t;if(goog.isString(r))return r?o+encodeURIComponent(r):"";for(var i in r){var s=r[i];s=goog.isArray(s)?s:[s];for(var g=0;g<s.length;g++){var l=s[g];l!=null&&(t||(t=o),t+=(t.length>o.length?"&":"")+encodeURIComponent(i)+"="+encodeURIComponent(String(l)))}}return t};goog.string.internal={};goog.string.internal.startsWith=function(o,t){return o.lastIndexOf(t,0)==0};goog.string.internal.endsWith=function(o,t){var r=o.length-t.length;return 0<=r&&o.indexOf(t,r)==r};goog.string.internal.caseInsensitiveStartsWith=function(o,t){return goog.string.internal.caseInsensitiveCompare(t,o.substr(0,t.length))==0};goog.string.internal.caseInsensitiveEndsWith=function(o,t){return goog.string.internal.caseInsensitiveCompare(t,o.substr(o.length-t.length,t.length))==0};goog.string.internal.caseInsensitiveEquals=function(o,t){return o.toLowerCase()==t.toLowerCase()};goog.string.internal.isEmptyOrWhitespace=function(o){return/^[\s\xa0]*$/.test(o)};goog.string.internal.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(o){return o.trim()}:function(o){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(o)[1]};goog.string.internal.caseInsensitiveCompare=function(o,t){return o=String(o).toLowerCase(),t=String(t).toLowerCase(),o<t?-1:o==t?0:1};goog.string.internal.newLineToBr=function(o,t){return o.replace(/(\r\n|\r|\n)/g,t?"<br />":"<br>")};goog.string.internal.htmlEscape=function(o,t){if(t)o=o.replace(goog.string.internal.AMP_RE_,"&amp;").replace(goog.string.internal.LT_RE_,"&lt;").replace(goog.string.internal.GT_RE_,"&gt;").replace(goog.string.internal.QUOT_RE_,"&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;").replace(goog.string.internal.NULL_RE_,"&#0;");else{if(!goog.string.internal.ALL_RE_.test(o))return o;o.indexOf("&")!=-1&&(o=o.replace(goog.string.internal.AMP_RE_,"&amp;")),o.indexOf("<")!=-1&&(o=o.replace(goog.string.internal.LT_RE_,"&lt;")),o.indexOf(">")!=-1&&(o=o.replace(goog.string.internal.GT_RE_,"&gt;")),o.indexOf('"')!=-1&&(o=o.replace(goog.string.internal.QUOT_RE_,"&quot;")),o.indexOf("'")!=-1&&(o=o.replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;")),o.indexOf("\0")!=-1&&(o=o.replace(goog.string.internal.NULL_RE_,"&#0;"))}return o};goog.string.internal.AMP_RE_=/&/g;goog.string.internal.LT_RE_=/</g;goog.string.internal.GT_RE_=/>/g;goog.string.internal.QUOT_RE_=/"/g;goog.string.internal.SINGLE_QUOTE_RE_=/'/g;goog.string.internal.NULL_RE_=/\x00/g;goog.string.internal.ALL_RE_=/[\x00&<>"']/;goog.string.internal.whitespaceEscape=function(o,t){return goog.string.internal.newLineToBr(o.replace(/  /g," &#160;"),t)};goog.string.internal.contains=function(o,t){return o.indexOf(t)!=-1};goog.string.internal.caseInsensitiveContains=function(o,t){return goog.string.internal.contains(o.toLowerCase(),t.toLowerCase())};goog.string.internal.compareVersions=function(o,t){var r=0;o=goog.string.internal.trim(String(o)).split("."),t=goog.string.internal.trim(String(t)).split(".");for(var i=Math.max(o.length,t.length),s=0;r==0&&s<i;s++){var g=o[s]||"",l=t[s]||"";do{if(g=/(\d*)(\D*)(.*)/.exec(g)||["","","",""],l=/(\d*)(\D*)(.*)/.exec(l)||["","","",""],g[0].length==0&&l[0].length==0)break;r=g[1].length==0?0:parseInt(g[1],10);var h=l[1].length==0?0:parseInt(l[1],10);r=goog.string.internal.compareElements_(r,h)||goog.string.internal.compareElements_(g[2].length==0,l[2].length==0)||goog.string.internal.compareElements_(g[2],l[2]),g=g[3],l=l[3]}while(r==0)}return r};goog.string.internal.compareElements_=function(o,t){return o<t?-1:o>t?1:0};goog.html.SafeUrl=function(){this.privateDoNotAccessOrElseSafeUrlWrappedValue_="",this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeUrl.INNOCUOUS_STRING="about:invalid#zClosurez";goog.html.SafeUrl.prototype.implementsGoogStringTypedString=!0;goog.html.SafeUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()};goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.SafeUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR};goog.DEBUG&&(goog.html.SafeUrl.prototype.toString=function(){return"SafeUrl{"+this.privateDoNotAccessOrElseSafeUrlWrappedValue_+"}"});goog.html.SafeUrl.unwrap=function(o){return goog.html.SafeUrl.unwrapTrustedURL(o).toString()};goog.html.SafeUrl.unwrapTrustedURL=function(o){return o instanceof goog.html.SafeUrl&&o.constructor===goog.html.SafeUrl&&o.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_?o.privateDoNotAccessOrElseSafeUrlWrappedValue_:(goog.asserts.fail("expected object of type SafeUrl, got '"+o+"' of type "+goog.typeOf(o)),"type_error:SafeUrl")};goog.html.SafeUrl.fromConstant=function(o){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(o))};goog.html.SAFE_MIME_TYPE_PATTERN_=/^(?:audio\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-wav|wav|webm)|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\/csv|video\/(?:mpeg|mp4|ogg|webm|quicktime))(?:;\w+=(?:\w+|"[\w;=]+"))*$/i;goog.html.SafeUrl.isSafeMimeType=function(o){return goog.html.SAFE_MIME_TYPE_PATTERN_.test(o)};goog.html.SafeUrl.fromBlob=function(o){return o=goog.html.SAFE_MIME_TYPE_PATTERN_.test(o.type)?goog.fs.url.createObjectUrl(o):goog.html.SafeUrl.INNOCUOUS_STRING,goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(o)};goog.html.DATA_URL_PATTERN_=/^data:([^,]*);base64,[a-z0-9+\/]+=*$/i;goog.html.SafeUrl.fromDataUrl=function(o){o=o.replace(/(%0A|%0D)/g,"");var t=o.match(goog.html.DATA_URL_PATTERN_);return t=t&&goog.html.SAFE_MIME_TYPE_PATTERN_.test(t[1]),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(t?o:goog.html.SafeUrl.INNOCUOUS_STRING)};goog.html.SafeUrl.fromTelUrl=function(o){return goog.string.internal.caseInsensitiveStartsWith(o,"tel:")||(o=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(o)};goog.html.SIP_URL_PATTERN_=/^sip[s]?:[+a-z0-9_.!$%&'*\/=^`{|}~-]+@([a-z0-9-]+\.)+[a-z0-9]{2,63}$/i;goog.html.SafeUrl.fromSipUrl=function(o){return goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(o))||(o=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(o)};goog.html.SafeUrl.fromFacebookMessengerUrl=function(o){return goog.string.internal.caseInsensitiveStartsWith(o,"fb-messenger://share")||(o=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(o)};goog.html.SafeUrl.fromWhatsAppUrl=function(o){return goog.string.internal.caseInsensitiveStartsWith(o,"whatsapp://send")||(o=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(o)};goog.html.SafeUrl.fromSmsUrl=function(o){return goog.string.internal.caseInsensitiveStartsWith(o,"sms:")&&goog.html.SafeUrl.isSmsUrlBodyValid_(o)||(o=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(o)};goog.html.SafeUrl.isSmsUrlBodyValid_=function(o){var t=o.indexOf("#");if(0<t&&(o=o.substring(0,t)),t=o.match(/[?&]body=/gi),!t)return!0;if(1<t.length)return!1;if(o=o.match(/[?&]body=([^&]*)/)[1],!o)return!0;try{decodeURIComponent(o)}catch{return!1}return/^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(o)};goog.html.SafeUrl.fromSshUrl=function(o){return goog.string.internal.caseInsensitiveStartsWith(o,"ssh://")||(o=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(o)};goog.html.SafeUrl.sanitizeChromeExtensionUrl=function(o,t){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//,o,t)};goog.html.SafeUrl.sanitizeFirefoxExtensionUrl=function(o,t){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//,o,t)};goog.html.SafeUrl.sanitizeEdgeExtensionUrl=function(o,t){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//,o,t)};goog.html.SafeUrl.sanitizeExtensionUrl_=function(o,t,r){return(o=o.exec(t))?(o=o[1],(r instanceof goog.string.Const?[goog.string.Const.unwrap(r)]:r.map(function(i){return goog.string.Const.unwrap(i)})).indexOf(o)==-1&&(t=goog.html.SafeUrl.INNOCUOUS_STRING)):t=goog.html.SafeUrl.INNOCUOUS_STRING,goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(t)};goog.html.SafeUrl.fromTrustedResourceUrl=function(o){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(o))};goog.html.SAFE_URL_PATTERN_=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;goog.html.SafeUrl.SAFE_URL_PATTERN=goog.html.SAFE_URL_PATTERN_;goog.html.SafeUrl.sanitize=function(o){return o instanceof goog.html.SafeUrl?o:(o=typeof o=="object"&&o.implementsGoogStringTypedString?o.getTypedStringValue():String(o),goog.html.SAFE_URL_PATTERN_.test(o)||(o=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(o))};goog.html.SafeUrl.sanitizeAssertUnchanged=function(o,t){return o instanceof goog.html.SafeUrl?o:(o=typeof o=="object"&&o.implementsGoogStringTypedString?o.getTypedStringValue():String(o),t&&/^data:/i.test(o)&&(t=goog.html.SafeUrl.fromDataUrl(o),t.getTypedStringValue()==o)?t:(goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(o),"%s does not match the safe URL pattern",o)||(o=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(o)))};goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse=function(o){var t=new goog.html.SafeUrl;return t.privateDoNotAccessOrElseSafeUrlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createURL(o):o,t};goog.html.SafeUrl.ABOUT_BLANK=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");goog.html.SafeStyle=function(){this.privateDoNotAccessOrElseSafeStyleWrappedValue_="",this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeStyle.prototype.implementsGoogStringTypedString=!0;goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeStyle.fromConstant=function(o){return o=goog.string.Const.unwrap(o),o.length===0?goog.html.SafeStyle.EMPTY:(goog.asserts.assert(goog.string.internal.endsWith(o,";"),"Last character of style string is not ';': "+o),goog.asserts.assert(goog.string.internal.contains(o,":"),`Style string must contain at least one ':', to specify a "name: value" pair: `+o),goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(o))};goog.html.SafeStyle.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_};goog.DEBUG&&(goog.html.SafeStyle.prototype.toString=function(){return"SafeStyle{"+this.privateDoNotAccessOrElseSafeStyleWrappedValue_+"}"});goog.html.SafeStyle.unwrap=function(o){return o instanceof goog.html.SafeStyle&&o.constructor===goog.html.SafeStyle&&o.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_?o.privateDoNotAccessOrElseSafeStyleWrappedValue_:(goog.asserts.fail("expected object of type SafeStyle, got '"+o+"' of type "+goog.typeOf(o)),"type_error:SafeStyle")};goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse=function(o){return new goog.html.SafeStyle().initSecurityPrivateDoNotAccessOrElse_(o)};goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_=function(o){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_=o,this};goog.html.SafeStyle.EMPTY=goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");goog.html.SafeStyle.INNOCUOUS_STRING="zClosurez";goog.html.SafeStyle.create=function(o){var t="",r;for(r in o){if(!/^[-_a-zA-Z0-9]+$/.test(r))throw Error("Name allows only [-_a-zA-Z0-9], got: "+r);var i=o[r];i!=null&&(i=goog.isArray(i)?goog.array.map(i,goog.html.SafeStyle.sanitizePropertyValue_).join(" "):goog.html.SafeStyle.sanitizePropertyValue_(i),t+=r+":"+i+";")}return t?goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(t):goog.html.SafeStyle.EMPTY};goog.html.SafeStyle.sanitizePropertyValue_=function(o){if(o instanceof goog.html.SafeUrl)return'url("'+goog.html.SafeUrl.unwrap(o).replace(/</g,"%3c").replace(/[\\"]/g,"\\$&")+'")';if(o=o instanceof goog.string.Const?goog.string.Const.unwrap(o):goog.html.SafeStyle.sanitizePropertyValueString_(String(o)),/[{;}]/.test(o))throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.",[o]);return o};goog.html.SafeStyle.sanitizePropertyValueString_=function(o){var t=o.replace(goog.html.SafeStyle.FUNCTIONS_RE_,"$1").replace(goog.html.SafeStyle.FUNCTIONS_RE_,"$1").replace(goog.html.SafeStyle.URL_RE_,"url");if(goog.html.SafeStyle.VALUE_RE_.test(t)){if(goog.html.SafeStyle.COMMENT_RE_.test(o))return goog.asserts.fail("String value disallows comments, got: "+o),goog.html.SafeStyle.INNOCUOUS_STRING;if(!goog.html.SafeStyle.hasBalancedQuotes_(o))return goog.asserts.fail("String value requires balanced quotes, got: "+o),goog.html.SafeStyle.INNOCUOUS_STRING;if(!goog.html.SafeStyle.hasBalancedSquareBrackets_(o))return goog.asserts.fail("String value requires balanced square brackets and one identifier per pair of brackets, got: "+o),goog.html.SafeStyle.INNOCUOUS_STRING}else return goog.asserts.fail("String value allows only "+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+" and simple functions, got: "+o),goog.html.SafeStyle.INNOCUOUS_STRING;return goog.html.SafeStyle.sanitizeUrl_(o)};goog.html.SafeStyle.hasBalancedQuotes_=function(o){for(var t=!0,r=!0,i=0;i<o.length;i++){var s=o.charAt(i);s=="'"&&r?t=!t:s=='"'&&t&&(r=!r)}return t&&r};goog.html.SafeStyle.hasBalancedSquareBrackets_=function(o){for(var t=!0,r=/^[-_a-zA-Z0-9]$/,i=0;i<o.length;i++){var s=o.charAt(i);if(s=="]"){if(t)return!1;t=!0}else if(s=="["){if(!t)return!1;t=!1}else if(!t&&!r.test(s))return!1}return t};goog.html.SafeStyle.VALUE_ALLOWED_CHARS_=`[-,."'%_!# a-zA-Z0-9\\[\\]]`;goog.html.SafeStyle.VALUE_RE_=new RegExp("^"+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+"+$");goog.html.SafeStyle.URL_RE_=/\b(url\([ \t\n]*)('[ -&(-\[\]-~]*'|"[ !#-\[\]-~]*"|[!#-&*-\[\]-~]*)([ \t\n]*\))/g;goog.html.SafeStyle.FUNCTIONS_RE_=/\b(hsl|hsla|rgb|rgba|matrix|calc|minmax|fit-content|repeat|(rotate|scale|translate)(X|Y|Z|3d)?)\([-+*/0-9a-z.%\[\], ]+\)/g;goog.html.SafeStyle.COMMENT_RE_=/\/\*/;goog.html.SafeStyle.sanitizeUrl_=function(o){return o.replace(goog.html.SafeStyle.URL_RE_,function(t,r,i,s){var g="";return i=i.replace(/^(['"])(.*)\1$/,function(l,h,m){return g=h,m}),t=goog.html.SafeUrl.sanitize(i).getTypedStringValue(),r+g+t+g+s})};goog.html.SafeStyle.concat=function(o){var t="",r=function(i){goog.isArray(i)?goog.array.forEach(i,r):t+=goog.html.SafeStyle.unwrap(i)};return goog.array.forEach(arguments,r),t?goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(t):goog.html.SafeStyle.EMPTY};goog.html.SafeStyleSheet=function(){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_="",this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString=!0;goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeStyleSheet.createRule=function(o,t){if(goog.string.internal.contains(o,"<"))throw Error("Selector does not allow '<', got: "+o);var r=o.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g,"");if(!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(r))throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: "+o);if(!goog.html.SafeStyleSheet.hasBalancedBrackets_(r))throw Error("() and [] in selector must be balanced, got: "+o);return t instanceof goog.html.SafeStyle||(t=goog.html.SafeStyle.create(t)),o=o+"{"+goog.html.SafeStyle.unwrap(t).replace(/</g,"\\3C ")+"}",goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(o)};goog.html.SafeStyleSheet.hasBalancedBrackets_=function(o){for(var t={"(":")","[":"]"},r=[],i=0;i<o.length;i++){var s=o[i];if(t[s])r.push(t[s]);else if(goog.object.contains(t,s)&&r.pop()!=s)return!1}return r.length==0};goog.html.SafeStyleSheet.concat=function(o){var t="",r=function(i){goog.isArray(i)?goog.array.forEach(i,r):t+=goog.html.SafeStyleSheet.unwrap(i)};return goog.array.forEach(arguments,r),goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(t)};goog.html.SafeStyleSheet.fromConstant=function(o){return o=goog.string.Const.unwrap(o),o.length===0?goog.html.SafeStyleSheet.EMPTY:(goog.asserts.assert(!goog.string.internal.contains(o,"<"),"Forbidden '<' character in style sheet string: "+o),goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(o))};goog.html.SafeStyleSheet.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_};goog.DEBUG&&(goog.html.SafeStyleSheet.prototype.toString=function(){return"SafeStyleSheet{"+this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_+"}"});goog.html.SafeStyleSheet.unwrap=function(o){return o instanceof goog.html.SafeStyleSheet&&o.constructor===goog.html.SafeStyleSheet&&o.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_?o.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_:(goog.asserts.fail("expected object of type SafeStyleSheet, got '"+o+"' of type "+goog.typeOf(o)),"type_error:SafeStyleSheet")};goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse=function(o){return new goog.html.SafeStyleSheet().initSecurityPrivateDoNotAccessOrElse_(o)};goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_=function(o){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=o,this};goog.html.SafeStyleSheet.EMPTY=goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");goog.labs={};goog.labs.userAgent={};goog.labs.userAgent.util={};goog.labs.userAgent.util.getNativeUserAgentString_=function(){var o=goog.labs.userAgent.util.getNavigator_();return o&&(o=o.userAgent)?o:""};goog.labs.userAgent.util.getNavigator_=function(){return goog.global.navigator};goog.labs.userAgent.util.userAgent_=goog.labs.userAgent.util.getNativeUserAgentString_();goog.labs.userAgent.util.setUserAgent=function(o){goog.labs.userAgent.util.userAgent_=o||goog.labs.userAgent.util.getNativeUserAgentString_()};goog.labs.userAgent.util.getUserAgent=function(){return goog.labs.userAgent.util.userAgent_};goog.labs.userAgent.util.matchUserAgent=function(o){var t=goog.labs.userAgent.util.getUserAgent();return goog.string.internal.contains(t,o)};goog.labs.userAgent.util.matchUserAgentIgnoreCase=function(o){var t=goog.labs.userAgent.util.getUserAgent();return goog.string.internal.caseInsensitiveContains(t,o)};goog.labs.userAgent.util.extractVersionTuples=function(o){for(var t=/(\w[\w ]+)\/([^\s]+)\s*(?:\((.*?)\))?/g,r=[],i;i=t.exec(o);)r.push([i[1],i[2],i[3]||void 0]);return r};goog.labs.userAgent.browser={};goog.labs.userAgent.browser.matchOpera_=function(){return goog.labs.userAgent.util.matchUserAgent("Opera")};goog.labs.userAgent.browser.matchIE_=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.browser.matchEdgeHtml_=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};goog.labs.userAgent.browser.matchEdgeChromium_=function(){return goog.labs.userAgent.util.matchUserAgent("Edg/")};goog.labs.userAgent.browser.matchOperaChromium_=function(){return goog.labs.userAgent.util.matchUserAgent("OPR")};goog.labs.userAgent.browser.matchFirefox_=function(){return goog.labs.userAgent.util.matchUserAgent("Firefox")||goog.labs.userAgent.util.matchUserAgent("FxiOS")};goog.labs.userAgent.browser.matchSafari_=function(){return goog.labs.userAgent.util.matchUserAgent("Safari")&&!(goog.labs.userAgent.browser.matchChrome_()||goog.labs.userAgent.browser.matchCoast_()||goog.labs.userAgent.browser.matchOpera_()||goog.labs.userAgent.browser.matchEdgeHtml_()||goog.labs.userAgent.browser.matchEdgeChromium_()||goog.labs.userAgent.browser.matchOperaChromium_()||goog.labs.userAgent.browser.matchFirefox_()||goog.labs.userAgent.browser.isSilk()||goog.labs.userAgent.util.matchUserAgent("Android"))};goog.labs.userAgent.browser.matchCoast_=function(){return goog.labs.userAgent.util.matchUserAgent("Coast")};goog.labs.userAgent.browser.matchIosWebview_=function(){return(goog.labs.userAgent.util.matchUserAgent("iPad")||goog.labs.userAgent.util.matchUserAgent("iPhone"))&&!goog.labs.userAgent.browser.matchSafari_()&&!goog.labs.userAgent.browser.matchChrome_()&&!goog.labs.userAgent.browser.matchCoast_()&&!goog.labs.userAgent.browser.matchFirefox_()&&goog.labs.userAgent.util.matchUserAgent("AppleWebKit")};goog.labs.userAgent.browser.matchChrome_=function(){return(goog.labs.userAgent.util.matchUserAgent("Chrome")||goog.labs.userAgent.util.matchUserAgent("CriOS"))&&!goog.labs.userAgent.browser.matchEdgeHtml_()};goog.labs.userAgent.browser.matchAndroidBrowser_=function(){return goog.labs.userAgent.util.matchUserAgent("Android")&&!(goog.labs.userAgent.browser.isChrome()||goog.labs.userAgent.browser.isFirefox()||goog.labs.userAgent.browser.isOpera()||goog.labs.userAgent.browser.isSilk())};goog.labs.userAgent.browser.isOpera=goog.labs.userAgent.browser.matchOpera_;goog.labs.userAgent.browser.isIE=goog.labs.userAgent.browser.matchIE_;goog.labs.userAgent.browser.isEdge=goog.labs.userAgent.browser.matchEdgeHtml_;goog.labs.userAgent.browser.isEdgeChromium=goog.labs.userAgent.browser.matchEdgeChromium_;goog.labs.userAgent.browser.isOperaChromium=goog.labs.userAgent.browser.matchOperaChromium_;goog.labs.userAgent.browser.isFirefox=goog.labs.userAgent.browser.matchFirefox_;goog.labs.userAgent.browser.isSafari=goog.labs.userAgent.browser.matchSafari_;goog.labs.userAgent.browser.isCoast=goog.labs.userAgent.browser.matchCoast_;goog.labs.userAgent.browser.isIosWebview=goog.labs.userAgent.browser.matchIosWebview_;goog.labs.userAgent.browser.isChrome=goog.labs.userAgent.browser.matchChrome_;goog.labs.userAgent.browser.isAndroidBrowser=goog.labs.userAgent.browser.matchAndroidBrowser_;goog.labs.userAgent.browser.isSilk=function(){return goog.labs.userAgent.util.matchUserAgent("Silk")};goog.labs.userAgent.browser.getVersion=function(){function o(s){return s=goog.array.find(s,i),r[s]||""}var t=goog.labs.userAgent.util.getUserAgent();if(goog.labs.userAgent.browser.isIE())return goog.labs.userAgent.browser.getIEVersion_(t);t=goog.labs.userAgent.util.extractVersionTuples(t);var r={};goog.array.forEach(t,function(s){r[s[0]]=s[1]});var i=goog.partial(goog.object.containsKey,r);return goog.labs.userAgent.browser.isOpera()?o(["Version","Opera"]):goog.labs.userAgent.browser.isEdge()?o(["Edge"]):goog.labs.userAgent.browser.isEdgeChromium()?o(["Edg"]):goog.labs.userAgent.browser.isChrome()?o(["Chrome","CriOS"]):(t=t[2])&&t[1]||""};goog.labs.userAgent.browser.isVersionOrHigher=function(o){return 0<=goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(),o)};goog.labs.userAgent.browser.getIEVersion_=function(o){var t=/rv: *([\d\.]*)/.exec(o);if(t&&t[1])return t[1];t="";var r=/MSIE +([\d\.]+)/.exec(o);if(r&&r[1])if(o=/Trident\/(\d.\d)/.exec(o),r[1]=="7.0")if(o&&o[1])switch(o[1]){case"4.0":t="8.0";break;case"5.0":t="9.0";break;case"6.0":t="10.0";break;case"7.0":t="11.0"}else t="7.0";else t=r[1];return t};goog.html.SafeHtml=function(){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_="",this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_,this.dir_=null};goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.SafeHtml.prototype.getDirection=function(){return this.dir_};goog.html.SafeHtml.prototype.implementsGoogStringTypedString=!0;goog.html.SafeHtml.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()};goog.DEBUG&&(goog.html.SafeHtml.prototype.toString=function(){return"SafeHtml{"+this.privateDoNotAccessOrElseSafeHtmlWrappedValue_+"}"});goog.html.SafeHtml.unwrap=function(o){return goog.html.SafeHtml.unwrapTrustedHTML(o).toString()};goog.html.SafeHtml.unwrapTrustedHTML=function(o){return o instanceof goog.html.SafeHtml&&o.constructor===goog.html.SafeHtml&&o.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_?o.privateDoNotAccessOrElseSafeHtmlWrappedValue_:(goog.asserts.fail("expected object of type SafeHtml, got '"+o+"' of type "+goog.typeOf(o)),"type_error:SafeHtml")};goog.html.SafeHtml.htmlEscape=function(o){if(o instanceof goog.html.SafeHtml)return o;var t=typeof o=="object",r=null;return t&&o.implementsGoogI18nBidiDirectionalString&&(r=o.getDirection()),o=t&&o.implementsGoogStringTypedString?o.getTypedStringValue():String(o),goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(o),r)};goog.html.SafeHtml.htmlEscapePreservingNewlines=function(o){return o instanceof goog.html.SafeHtml?o:(o=goog.html.SafeHtml.htmlEscape(o),goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(o)),o.getDirection()))};goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces=function(o){return o instanceof goog.html.SafeHtml?o:(o=goog.html.SafeHtml.htmlEscape(o),goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(o)),o.getDirection()))};goog.html.SafeHtml.from=goog.html.SafeHtml.htmlEscape;goog.html.SafeHtml.VALID_NAMES_IN_TAG_=/^[a-zA-Z0-9-]+$/;goog.html.SafeHtml.URL_ATTRIBUTES_={action:!0,cite:!0,data:!0,formaction:!0,href:!0,manifest:!0,poster:!0,src:!0};goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_={APPLET:!0,BASE:!0,EMBED:!0,IFRAME:!0,LINK:!0,MATH:!0,META:!0,OBJECT:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};goog.html.SafeHtml.create=function(o,t,r){return goog.html.SafeHtml.verifyTagName(String(o)),goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(o),t,r)};goog.html.SafeHtml.verifyTagName=function(o){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(o))throw Error("Invalid tag name <"+o+">.");if(o.toUpperCase()in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_)throw Error("Tag name <"+o+"> is not allowed for SafeHtml.")};goog.html.SafeHtml.createIframe=function(o,t,r,i){o&&goog.html.TrustedResourceUrl.unwrap(o);var s={};return s.src=o||null,s.srcdoc=t&&goog.html.SafeHtml.unwrap(t),o=goog.html.SafeHtml.combineAttributes(s,{sandbox:""},r),goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",o,i)};goog.html.SafeHtml.createSandboxIframe=function(o,t,r,i){if(!goog.html.SafeHtml.canUseSandboxIframe())throw Error("The browser does not support sandboxed iframes.");var s={};return s.src=o?goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(o)):null,s.srcdoc=t||null,s.sandbox="",o=goog.html.SafeHtml.combineAttributes(s,{},r),goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",o,i)};goog.html.SafeHtml.canUseSandboxIframe=function(){return goog.global.HTMLIFrameElement&&"sandbox"in goog.global.HTMLIFrameElement.prototype};goog.html.SafeHtml.createScriptSrc=function(o,t){return goog.html.TrustedResourceUrl.unwrap(o),o=goog.html.SafeHtml.combineAttributes({src:o},{},t),goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",o)};goog.html.SafeHtml.createScript=function(o,t){for(var r in t){var i=r.toLowerCase();if(i=="language"||i=="src"||i=="text"||i=="type")throw Error('Cannot set "'+i+'" attribute')}for(r="",o=goog.array.concat(o),i=0;i<o.length;i++)r+=goog.html.SafeScript.unwrap(o[i]);return o=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(r,goog.i18n.bidi.Dir.NEUTRAL),goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",t,o)};goog.html.SafeHtml.createStyle=function(o,t){t=goog.html.SafeHtml.combineAttributes({type:"text/css"},{},t);var r="";o=goog.array.concat(o);for(var i=0;i<o.length;i++)r+=goog.html.SafeStyleSheet.unwrap(o[i]);return o=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(r,goog.i18n.bidi.Dir.NEUTRAL),goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style",t,o)};goog.html.SafeHtml.createMetaRefresh=function(o,t){return o=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(o)),(goog.labs.userAgent.browser.isIE()||goog.labs.userAgent.browser.isEdge())&&goog.string.internal.contains(o,";")&&(o="'"+o.replace(/'/g,"%27")+"'"),goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta",{"http-equiv":"refresh",content:(t||0)+"; url="+o})};goog.html.SafeHtml.getAttrNameAndValue_=function(o,t,r){if(r instanceof goog.string.Const)r=goog.string.Const.unwrap(r);else if(t.toLowerCase()=="style")r=goog.html.SafeHtml.getStyleValue_(r);else{if(/^on/i.test(t))throw Error('Attribute "'+t+'" requires goog.string.Const value, "'+r+'" given.');if(t.toLowerCase()in goog.html.SafeHtml.URL_ATTRIBUTES_)if(r instanceof goog.html.TrustedResourceUrl)r=goog.html.TrustedResourceUrl.unwrap(r);else if(r instanceof goog.html.SafeUrl)r=goog.html.SafeUrl.unwrap(r);else if(goog.isString(r))r=goog.html.SafeUrl.sanitize(r).getTypedStringValue();else throw Error('Attribute "'+t+'" on tag "'+o+'" requires goog.html.SafeUrl, goog.string.Const, or string, value "'+r+'" given.')}return r.implementsGoogStringTypedString&&(r=r.getTypedStringValue()),goog.asserts.assert(goog.isString(r)||goog.isNumber(r),"String or number value expected, got "+typeof r+" with value: "+r),t+'="'+goog.string.internal.htmlEscape(String(r))+'"'};goog.html.SafeHtml.getStyleValue_=function(o){if(!goog.isObject(o))throw Error('The "style" attribute requires goog.html.SafeStyle or map of style properties, '+typeof o+" given: "+o);return o instanceof goog.html.SafeStyle||(o=goog.html.SafeStyle.create(o)),goog.html.SafeStyle.unwrap(o)};goog.html.SafeHtml.createWithDir=function(o,t,r,i){return t=goog.html.SafeHtml.create(t,r,i),t.dir_=o,t};goog.html.SafeHtml.join=function(o,t){o=goog.html.SafeHtml.htmlEscape(o);var r=o.getDirection(),i=[],s=function(g){goog.isArray(g)?goog.array.forEach(g,s):(g=goog.html.SafeHtml.htmlEscape(g),i.push(goog.html.SafeHtml.unwrap(g)),g=g.getDirection(),r==goog.i18n.bidi.Dir.NEUTRAL?r=g:g!=goog.i18n.bidi.Dir.NEUTRAL&&r!=g&&(r=null))};return goog.array.forEach(t,s),goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(i.join(goog.html.SafeHtml.unwrap(o)),r)};goog.html.SafeHtml.concat=function(o){return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY,Array.prototype.slice.call(arguments))};goog.html.SafeHtml.concatWithDir=function(o,t){var r=goog.html.SafeHtml.concat(goog.array.slice(arguments,1));return r.dir_=o,r};goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse=function(o,t){return new goog.html.SafeHtml().initSecurityPrivateDoNotAccessOrElse_(o,t)};goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_=function(o,t){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createHTML(o):o,this.dir_=t,this};goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse=function(o,t,r){var i=null,s="<"+o+goog.html.SafeHtml.stringifyAttributes(o,t);return goog.isDefAndNotNull(r)?goog.isArray(r)||(r=[r]):r=[],goog.dom.tags.isVoidTag(o.toLowerCase())?(goog.asserts.assert(!r.length,"Void tag <"+o+"> does not allow content."),s+=">"):(i=goog.html.SafeHtml.concat(r),s+=">"+goog.html.SafeHtml.unwrap(i)+"</"+o+">",i=i.getDirection()),(o=t&&t.dir)&&(i=/^(ltr|rtl|auto)$/i.test(o)?goog.i18n.bidi.Dir.NEUTRAL:null),goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(s,i)};goog.html.SafeHtml.stringifyAttributes=function(o,t){var r="";if(t)for(var i in t){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(i))throw Error('Invalid attribute name "'+i+'".');var s=t[i];goog.isDefAndNotNull(s)&&(r+=" "+goog.html.SafeHtml.getAttrNameAndValue_(o,i,s))}return r};goog.html.SafeHtml.combineAttributes=function(o,t,r){var i={},s;for(s in o)goog.asserts.assert(s.toLowerCase()==s,"Must be lower case"),i[s]=o[s];for(s in t)goog.asserts.assert(s.toLowerCase()==s,"Must be lower case"),i[s]=t[s];for(s in r){var g=s.toLowerCase();if(g in o)throw Error('Cannot override "'+g+'" attribute, got "'+s+'" with value "'+r[s]+'"');g in t&&delete i[g],i[s]=r[s]}return i};goog.html.SafeHtml.DOCTYPE_HTML=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>",goog.i18n.bidi.Dir.NEUTRAL);goog.html.SafeHtml.EMPTY=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("",goog.i18n.bidi.Dir.NEUTRAL);goog.html.SafeHtml.BR=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>",goog.i18n.bidi.Dir.NEUTRAL);goog.html.uncheckedconversions={};goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract=function(o,t,r){return goog.asserts.assertString(goog.string.Const.unwrap(o),"must provide justification"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(o)),"must provide non-empty justification"),goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(t,r||null)};goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract=function(o,t){return goog.asserts.assertString(goog.string.Const.unwrap(o),"must provide justification"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(o)),"must provide non-empty justification"),goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(t)};goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract=function(o,t){return goog.asserts.assertString(goog.string.Const.unwrap(o),"must provide justification"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(o)),"must provide non-empty justification"),goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(t)};goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract=function(o,t){return goog.asserts.assertString(goog.string.Const.unwrap(o),"must provide justification"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(o)),"must provide non-empty justification"),goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(t)};goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract=function(o,t){return goog.asserts.assertString(goog.string.Const.unwrap(o),"must provide justification"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(o)),"must provide non-empty justification"),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(t)};goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract=function(o,t){return goog.asserts.assertString(goog.string.Const.unwrap(o),"must provide justification"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(o)),"must provide non-empty justification"),goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(t)};goog.dom.safe={};goog.dom.safe.InsertAdjacentHtmlPosition={AFTERBEGIN:"afterbegin",AFTEREND:"afterend",BEFOREBEGIN:"beforebegin",BEFOREEND:"beforeend"};goog.dom.safe.insertAdjacentHtml=function(o,t,r){o.insertAdjacentHTML(t,goog.html.SafeHtml.unwrapTrustedHTML(r))};goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_={MATH:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};goog.dom.safe.isInnerHtmlCleanupRecursive_=goog.functions.cacheReturnValue(function(){if(goog.DEBUG&&typeof document>"u")return!1;var o=document.createElement("div"),t=document.createElement("div");return t.appendChild(document.createElement("div")),o.appendChild(t),goog.DEBUG&&!o.firstChild?!1:(t=o.firstChild.firstChild,o.innerHTML=goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY),!t.parentElement)});goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse=function(o,t){if(goog.dom.safe.isInnerHtmlCleanupRecursive_())for(;o.lastChild;)o.removeChild(o.lastChild);o.innerHTML=goog.html.SafeHtml.unwrapTrustedHTML(t)};goog.dom.safe.setInnerHtml=function(o,t){if(goog.asserts.ENABLE_ASSERTS){var r=o.tagName.toUpperCase();if(goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[r])throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of "+o.tagName+".")}goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(o,t)};goog.dom.safe.setOuterHtml=function(o,t){o.outerHTML=goog.html.SafeHtml.unwrapTrustedHTML(t)};goog.dom.safe.setFormElementAction=function(o,t){t=t instanceof goog.html.SafeUrl?t:goog.html.SafeUrl.sanitizeAssertUnchanged(t),goog.dom.asserts.assertIsHTMLFormElement(o).action=goog.html.SafeUrl.unwrapTrustedURL(t)};goog.dom.safe.setButtonFormAction=function(o,t){t=t instanceof goog.html.SafeUrl?t:goog.html.SafeUrl.sanitizeAssertUnchanged(t),goog.dom.asserts.assertIsHTMLButtonElement(o).formAction=goog.html.SafeUrl.unwrapTrustedURL(t)};goog.dom.safe.setInputFormAction=function(o,t){t=t instanceof goog.html.SafeUrl?t:goog.html.SafeUrl.sanitizeAssertUnchanged(t),goog.dom.asserts.assertIsHTMLInputElement(o).formAction=goog.html.SafeUrl.unwrapTrustedURL(t)};goog.dom.safe.setStyle=function(o,t){o.style.cssText=goog.html.SafeStyle.unwrap(t)};goog.dom.safe.documentWrite=function(o,t){o.write(goog.html.SafeHtml.unwrapTrustedHTML(t))};goog.dom.safe.setAnchorHref=function(o,t){goog.dom.asserts.assertIsHTMLAnchorElement(o),t=t instanceof goog.html.SafeUrl?t:goog.html.SafeUrl.sanitizeAssertUnchanged(t),o.href=goog.html.SafeUrl.unwrapTrustedURL(t)};goog.dom.safe.setImageSrc=function(o,t){if(goog.dom.asserts.assertIsHTMLImageElement(o),!(t instanceof goog.html.SafeUrl)){var r=/^data:image\//i.test(t);t=goog.html.SafeUrl.sanitizeAssertUnchanged(t,r)}o.src=goog.html.SafeUrl.unwrapTrustedURL(t)};goog.dom.safe.setAudioSrc=function(o,t){if(goog.dom.asserts.assertIsHTMLAudioElement(o),!(t instanceof goog.html.SafeUrl)){var r=/^data:audio\//i.test(t);t=goog.html.SafeUrl.sanitizeAssertUnchanged(t,r)}o.src=goog.html.SafeUrl.unwrapTrustedURL(t)};goog.dom.safe.setVideoSrc=function(o,t){if(goog.dom.asserts.assertIsHTMLVideoElement(o),!(t instanceof goog.html.SafeUrl)){var r=/^data:video\//i.test(t);t=goog.html.SafeUrl.sanitizeAssertUnchanged(t,r)}o.src=goog.html.SafeUrl.unwrapTrustedURL(t)};goog.dom.safe.setEmbedSrc=function(o,t){goog.dom.asserts.assertIsHTMLEmbedElement(o),o.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(t)};goog.dom.safe.setFrameSrc=function(o,t){goog.dom.asserts.assertIsHTMLFrameElement(o),o.src=goog.html.TrustedResourceUrl.unwrapTrustedURL(t)};goog.dom.safe.setIframeSrc=function(o,t){goog.dom.asserts.assertIsHTMLIFrameElement(o),o.src=goog.html.TrustedResourceUrl.unwrapTrustedURL(t)};goog.dom.safe.setIframeSrcdoc=function(o,t){goog.dom.asserts.assertIsHTMLIFrameElement(o),o.srcdoc=goog.html.SafeHtml.unwrapTrustedHTML(t)};goog.dom.safe.setLinkHrefAndRel=function(o,t,r){goog.dom.asserts.assertIsHTMLLinkElement(o),o.rel=r,goog.string.internal.caseInsensitiveContains(r,"stylesheet")?(goog.asserts.assert(t instanceof goog.html.TrustedResourceUrl,'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'),o.href=goog.html.TrustedResourceUrl.unwrapTrustedURL(t)):o.href=t instanceof goog.html.TrustedResourceUrl?goog.html.TrustedResourceUrl.unwrapTrustedURL(t):t instanceof goog.html.SafeUrl?goog.html.SafeUrl.unwrapTrustedURL(t):goog.html.SafeUrl.unwrapTrustedURL(goog.html.SafeUrl.sanitizeAssertUnchanged(t))};goog.dom.safe.setObjectData=function(o,t){goog.dom.asserts.assertIsHTMLObjectElement(o),o.data=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(t)};goog.dom.safe.setScriptSrc=function(o,t){goog.dom.asserts.assertIsHTMLScriptElement(o),o.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(t),(t=goog.getScriptNonce())&&o.setAttribute("nonce",t)};goog.dom.safe.setScriptContent=function(o,t){goog.dom.asserts.assertIsHTMLScriptElement(o),o.text=goog.html.SafeScript.unwrapTrustedScript(t),(t=goog.getScriptNonce())&&o.setAttribute("nonce",t)};goog.dom.safe.setLocationHref=function(o,t){goog.dom.asserts.assertIsLocation(o),t=t instanceof goog.html.SafeUrl?t:goog.html.SafeUrl.sanitizeAssertUnchanged(t),o.href=goog.html.SafeUrl.unwrapTrustedURL(t)};goog.dom.safe.assignLocation=function(o,t){goog.dom.asserts.assertIsLocation(o),t=t instanceof goog.html.SafeUrl?t:goog.html.SafeUrl.sanitizeAssertUnchanged(t),o.assign(goog.html.SafeUrl.unwrapTrustedURL(t))};goog.dom.safe.replaceLocation=function(o,t){goog.dom.asserts.assertIsLocation(o),t=t instanceof goog.html.SafeUrl?t:goog.html.SafeUrl.sanitizeAssertUnchanged(t),o.replace(goog.html.SafeUrl.unwrapTrustedURL(t))};goog.dom.safe.openInWindow=function(o,t,r,i,s){return o=o instanceof goog.html.SafeUrl?o:goog.html.SafeUrl.sanitizeAssertUnchanged(o),(t||goog.global).open(goog.html.SafeUrl.unwrapTrustedURL(o),r?goog.string.Const.unwrap(r):"",i,s)};goog.dom.safe.parseFromStringHtml=function(o,t){return goog.dom.safe.parseFromString(o,t,"text/html")};goog.dom.safe.parseFromString=function(o,t,r){return o.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(t),r)};goog.dom.safe.createImageFromBlob=function(o){if(!/^image\/.*/g.test(o.type))throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");var t=goog.global.URL.createObjectURL(o);return o=new goog.global.Image,o.onload=function(){goog.global.URL.revokeObjectURL(t)},goog.dom.safe.setImageSrc(o,goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."),t)),o};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:"\xA0"};goog.string.startsWith=goog.string.internal.startsWith;goog.string.endsWith=goog.string.internal.endsWith;goog.string.caseInsensitiveStartsWith=goog.string.internal.caseInsensitiveStartsWith;goog.string.caseInsensitiveEndsWith=goog.string.internal.caseInsensitiveEndsWith;goog.string.caseInsensitiveEquals=goog.string.internal.caseInsensitiveEquals;goog.string.subs=function(o,t){for(var r=o.split("%s"),i="",s=Array.prototype.slice.call(arguments,1);s.length&&1<r.length;)i+=r.shift()+s.shift();return i+r.join("%s")};goog.string.collapseWhitespace=function(o){return o.replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")};goog.string.isEmptyOrWhitespace=goog.string.internal.isEmptyOrWhitespace;goog.string.isEmptyString=function(o){return o.length==0};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;goog.string.isEmptyOrWhitespaceSafe=function(o){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(o))};goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(o){return!/[^\t\n\r ]/.test(o)};goog.string.isAlpha=function(o){return!/[^a-zA-Z]/.test(o)};goog.string.isNumeric=function(o){return!/[^0-9]/.test(o)};goog.string.isAlphaNumeric=function(o){return!/[^a-zA-Z0-9]/.test(o)};goog.string.isSpace=function(o){return o==" "};goog.string.isUnicodeChar=function(o){return o.length==1&&" "<=o&&"~">=o||"\x80"<=o&&"\uFFFD">=o};goog.string.stripNewlines=function(o){return o.replace(/(\r\n|\r|\n)+/g," ")};goog.string.canonicalizeNewlines=function(o){return o.replace(/(\r\n|\r|\n)/g,`
`)};goog.string.normalizeWhitespace=function(o){return o.replace(/\xa0|\s/g," ")};goog.string.normalizeSpaces=function(o){return o.replace(/\xa0|[ \t]+/g," ")};goog.string.collapseBreakingSpaces=function(o){return o.replace(/[\t\r\n ]+/g," ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g,"")};goog.string.trim=goog.string.internal.trim;goog.string.trimLeft=function(o){return o.replace(/^[\s\xa0]+/,"")};goog.string.trimRight=function(o){return o.replace(/[\s\xa0]+$/,"")};goog.string.caseInsensitiveCompare=goog.string.internal.caseInsensitiveCompare;goog.string.numberAwareCompare_=function(o,t,r){if(o==t)return 0;if(!o)return-1;if(!t)return 1;for(var i=o.toLowerCase().match(r),s=t.toLowerCase().match(r),g=Math.min(i.length,s.length),l=0;l<g;l++){r=i[l];var h=s[l];if(r!=h)return o=parseInt(r,10),!isNaN(o)&&(t=parseInt(h,10),!isNaN(t)&&o-t)?o-t:r<h?-1:1}return i.length!=s.length?i.length-s.length:o<t?-1:1};goog.string.intAwareCompare=function(o,t){return goog.string.numberAwareCompare_(o,t,/\d+|\D+/g)};goog.string.floatAwareCompare=function(o,t){return goog.string.numberAwareCompare_(o,t,/\d+|\.\d+|\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(o){return encodeURIComponent(String(o))};goog.string.urlDecode=function(o){return decodeURIComponent(o.replace(/\+/g," "))};goog.string.newLineToBr=goog.string.internal.newLineToBr;goog.string.htmlEscape=function(o,t){return o=goog.string.internal.htmlEscape(o,t),goog.string.DETECT_DOUBLE_ESCAPING&&(o=o.replace(goog.string.E_RE_,"&#101;")),o};goog.string.E_RE_=/e/g;goog.string.unescapeEntities=function(o){return goog.string.contains(o,"&")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global?goog.string.unescapeEntitiesUsingDom_(o):goog.string.unescapePureXmlEntities_(o):o};goog.string.unescapeEntitiesWithDocument=function(o,t){return goog.string.contains(o,"&")?goog.string.unescapeEntitiesUsingDom_(o,t):o};goog.string.unescapeEntitiesUsingDom_=function(o,t){var r={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"'},i=t?t.createElement("div"):goog.global.document.createElement("div");return o.replace(goog.string.HTML_ENTITY_PATTERN_,function(s,g){var l=r[s];return l||(g.charAt(0)=="#"&&(g=Number("0"+g.substr(1)),isNaN(g)||(l=String.fromCharCode(g))),l||(goog.dom.safe.setInnerHtml(i,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."),s+" ")),l=i.firstChild.nodeValue.slice(0,-1)),r[s]=l)})};goog.string.unescapePureXmlEntities_=function(o){return o.replace(/&([^;]+);/g,function(t,r){switch(r){case"amp":return"&";case"lt":return"<";case"gt":return">";case"quot":return'"';default:return r.charAt(0)!="#"||(r=Number("0"+r.substr(1)),isNaN(r))?t:String.fromCharCode(r)}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\s<&]+);?/g;goog.string.whitespaceEscape=function(o,t){return goog.string.newLineToBr(o.replace(/  /g," &#160;"),t)};goog.string.preserveSpaces=function(o){return o.replace(/(^|[\n ]) /g,"$1"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(o,t){for(var r=t.length,i=0;i<r;i++){var s=r==1?t:t.charAt(i);if(o.charAt(0)==s&&o.charAt(o.length-1)==s)return o.substring(1,o.length-1)}return o};goog.string.truncate=function(o,t,r){return r&&(o=goog.string.unescapeEntities(o)),o.length>t&&(o=o.substring(0,t-3)+"..."),r&&(o=goog.string.htmlEscape(o)),o};goog.string.truncateMiddle=function(o,t,r,i){if(r&&(o=goog.string.unescapeEntities(o)),i&&o.length>t){i>t&&(i=t);var s=o.length-i;o=o.substring(0,t-i)+"..."+o.substring(s)}else o.length>t&&(i=Math.floor(t/2),s=o.length-i,o=o.substring(0,i+t%2)+"..."+o.substring(s));return r&&(o=goog.string.htmlEscape(o)),o};goog.string.specialEscapeChars_={"\0":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","	":"\\t","\v":"\\x0B",'"':'\\"',"\\":"\\\\","<":"\\u003C"};goog.string.jsEscapeCache_={"'":"\\'"};goog.string.quote=function(o){o=String(o);for(var t=['"'],r=0;r<o.length;r++){var i=o.charAt(r),s=i.charCodeAt(0);t[r+1]=goog.string.specialEscapeChars_[i]||(31<s&&127>s?i:goog.string.escapeChar(i))}return t.push('"'),t.join("")};goog.string.escapeString=function(o){for(var t=[],r=0;r<o.length;r++)t[r]=goog.string.escapeChar(o.charAt(r));return t.join("")};goog.string.escapeChar=function(o){if(o in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[o];if(o in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[o]=goog.string.specialEscapeChars_[o];var t=o.charCodeAt(0);if(31<t&&127>t)var r=o;else 256>t?(r="\\x",(16>t||256<t)&&(r+="0")):(r="\\u",4096>t&&(r+="0")),r+=t.toString(16).toUpperCase();return goog.string.jsEscapeCache_[o]=r};goog.string.contains=goog.string.internal.contains;goog.string.caseInsensitiveContains=goog.string.internal.caseInsensitiveContains;goog.string.countOf=function(o,t){return o&&t?o.split(t).length-1:0};goog.string.removeAt=function(o,t,r){var i=o;return 0<=t&&t<o.length&&0<r&&(i=o.substr(0,t)+o.substr(t+r,o.length-t-r)),i};goog.string.remove=function(o,t){return o.replace(t,"")};goog.string.removeAll=function(o,t){return t=new RegExp(goog.string.regExpEscape(t),"g"),o.replace(t,"")};goog.string.replaceAll=function(o,t,r){return t=new RegExp(goog.string.regExpEscape(t),"g"),o.replace(t,r.replace(/\$/g,"$$$$"))};goog.string.regExpEscape=function(o){return String(o).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")};goog.string.repeat=String.prototype.repeat?function(o,t){return o.repeat(t)}:function(o,t){return Array(t+1).join(o)};goog.string.padNumber=function(o,t,r){return o=goog.isDef(r)?o.toFixed(r):String(o),r=o.indexOf("."),r==-1&&(r=o.length),goog.string.repeat("0",Math.max(0,t-r))+o};goog.string.makeSafe=function(o){return o==null?"":String(o)};goog.string.buildString=function(o){return Array.prototype.join.call(arguments,"")};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};goog.string.compareVersions=goog.string.internal.compareVersions;goog.string.hashCode=function(o){for(var t=0,r=0;r<o.length;++r)t=31*t+o.charCodeAt(r)>>>0;return t};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++};goog.string.toNumber=function(o){var t=Number(o);return t==0&&goog.string.isEmptyOrWhitespace(o)?NaN:t};goog.string.isLowerCamelCase=function(o){return/^[a-z]+([A-Z][a-z]*)*$/.test(o)};goog.string.isUpperCamelCase=function(o){return/^([A-Z][a-z]*)+$/.test(o)};goog.string.toCamelCase=function(o){return String(o).replace(/\-([a-z])/g,function(t,r){return r.toUpperCase()})};goog.string.toSelectorCase=function(o){return String(o).replace(/([A-Z])/g,"-$1").toLowerCase()};goog.string.toTitleCase=function(o,t){return t=goog.isString(t)?goog.string.regExpEscape(t):"\\s",o.replace(new RegExp("(^"+(t?"|["+t+"]+":"")+")([a-z])","g"),function(r,i,s){return i+s.toUpperCase()})};goog.string.capitalize=function(o){return String(o.charAt(0)).toUpperCase()+String(o.substr(1)).toLowerCase()};goog.string.parseInt=function(o){return isFinite(o)&&(o=String(o)),goog.isString(o)?/^\s*-?0x/i.test(o)?parseInt(o,16):parseInt(o,10):NaN};goog.string.splitLimit=function(o,t,r){o=o.split(t);for(var i=[];0<r&&o.length;)i.push(o.shift()),r--;return o.length&&i.push(o.join(t)),i};goog.string.lastComponent=function(o,t){if(t)typeof t=="string"&&(t=[t]);else return o;for(var r=-1,i=0;i<t.length;i++)if(t[i]!=""){var s=o.lastIndexOf(t[i]);s>r&&(r=s)}return r==-1?o:o.slice(r+1)};goog.string.editDistance=function(o,t){var r=[],i=[];if(o==t)return 0;if(!o.length||!t.length)return Math.max(o.length,t.length);for(var s=0;s<t.length+1;s++)r[s]=s;for(s=0;s<o.length;s++){i[0]=s+1;for(var g=0;g<t.length;g++)i[g+1]=Math.min(i[g]+1,r[g+1]+1,r[g]+Number(o[s]!=t[g]));for(g=0;g<r.length;g++)r[g]=i[g]}return i[t.length]};goog.labs.userAgent.engine={};goog.labs.userAgent.engine.isPresto=function(){return goog.labs.userAgent.util.matchUserAgent("Presto")};goog.labs.userAgent.engine.isTrident=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.engine.isEdge=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};goog.labs.userAgent.engine.isWebKit=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit")&&!goog.labs.userAgent.engine.isEdge()};goog.labs.userAgent.engine.isGecko=function(){return goog.labs.userAgent.util.matchUserAgent("Gecko")&&!goog.labs.userAgent.engine.isWebKit()&&!goog.labs.userAgent.engine.isTrident()&&!goog.labs.userAgent.engine.isEdge()};goog.labs.userAgent.engine.getVersion=function(){var o=goog.labs.userAgent.util.getUserAgent();if(o){o=goog.labs.userAgent.util.extractVersionTuples(o);var t=goog.labs.userAgent.engine.getEngineTuple_(o);if(t)return t[0]=="Gecko"?goog.labs.userAgent.engine.getVersionForKey_(o,"Firefox"):t[1];o=o[0];var r;if(o&&(r=o[2])&&(r=/Trident\/([^\s;]+)/.exec(r)))return r[1]}return""};goog.labs.userAgent.engine.getEngineTuple_=function(o){if(!goog.labs.userAgent.engine.isEdge())return o[1];for(var t=0;t<o.length;t++){var r=o[t];if(r[0]=="Edge")return r}};goog.labs.userAgent.engine.isVersionOrHigher=function(o){return 0<=goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(),o)};goog.labs.userAgent.engine.getVersionForKey_=function(o,t){return(o=goog.array.find(o,function(r){return t==r[0]}))&&o[1]||""};goog.labs.userAgent.platform={};goog.labs.userAgent.platform.isAndroid=function(){return goog.labs.userAgent.util.matchUserAgent("Android")};goog.labs.userAgent.platform.isIpod=function(){return goog.labs.userAgent.util.matchUserAgent("iPod")};goog.labs.userAgent.platform.isIphone=function(){return goog.labs.userAgent.util.matchUserAgent("iPhone")&&!goog.labs.userAgent.util.matchUserAgent("iPod")&&!goog.labs.userAgent.util.matchUserAgent("iPad")};goog.labs.userAgent.platform.isIpad=function(){return goog.labs.userAgent.util.matchUserAgent("iPad")};goog.labs.userAgent.platform.isIos=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpad()||goog.labs.userAgent.platform.isIpod()};goog.labs.userAgent.platform.isMacintosh=function(){return goog.labs.userAgent.util.matchUserAgent("Macintosh")};goog.labs.userAgent.platform.isLinux=function(){return goog.labs.userAgent.util.matchUserAgent("Linux")};goog.labs.userAgent.platform.isWindows=function(){return goog.labs.userAgent.util.matchUserAgent("Windows")};goog.labs.userAgent.platform.isChromeOS=function(){return goog.labs.userAgent.util.matchUserAgent("CrOS")};goog.labs.userAgent.platform.isChromecast=function(){return goog.labs.userAgent.util.matchUserAgent("CrKey")};goog.labs.userAgent.platform.isKaiOS=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("KaiOS")};goog.labs.userAgent.platform.isGo2Phone=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("GAFP")};goog.labs.userAgent.platform.getVersion=function(){var o=goog.labs.userAgent.util.getUserAgent(),t="";return goog.labs.userAgent.platform.isWindows()?(t=/Windows (?:NT|Phone) ([0-9.]+)/,t=(o=t.exec(o))?o[1]:"0.0"):goog.labs.userAgent.platform.isIos()?(t=/(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/,t=(o=t.exec(o))&&o[1].replace(/_/g,".")):goog.labs.userAgent.platform.isMacintosh()?(t=/Mac OS X ([0-9_.]+)/,t=(o=t.exec(o))?o[1].replace(/_/g,"."):"10"):goog.labs.userAgent.platform.isKaiOS()?(t=/(?:KaiOS)\/(\S+)/i,t=(o=t.exec(o))&&o[1]):goog.labs.userAgent.platform.isAndroid()?(t=/Android\s+([^\);]+)(\)|;)/,t=(o=t.exec(o))&&o[1]):goog.labs.userAgent.platform.isChromeOS()&&(t=/(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/,t=(o=t.exec(o))&&o[1]),t||""};goog.labs.userAgent.platform.isVersionOrHigher=function(o){return 0<=goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(),o)};goog.reflect={};goog.reflect.object=function(o,t){return t};goog.reflect.objectProperty=function(o,t){return o};goog.reflect.sinkValue=function(o){return goog.reflect.sinkValue[" "](o),o};goog.reflect.sinkValue[" "]=goog.nullFunction;goog.reflect.canAccessProperty=function(o,t){try{return goog.reflect.sinkValue(o[t]),!0}catch{}return!1};goog.reflect.cache=function(o,t,r,i){return i=i?i(t):t,Object.prototype.hasOwnProperty.call(o,i)?o[i]:o[i]=r(t)};goog.userAgent={};goog.userAgent.ASSUME_IE=!1;goog.userAgent.ASSUME_EDGE=!1;goog.userAgent.ASSUME_GECKO=!1;goog.userAgent.ASSUME_WEBKIT=!1;goog.userAgent.ASSUME_MOBILE_WEBKIT=!1;goog.userAgent.ASSUME_OPERA=!1;goog.userAgent.ASSUME_ANY_VERSION=!1;goog.userAgent.BROWSER_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_GECKO||goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_OPERA;goog.userAgent.getUserAgentString=function(){return goog.labs.userAgent.util.getUserAgent()};goog.userAgent.getNavigatorTyped=function(){return goog.global.navigator||null};goog.userAgent.getNavigator=function(){return goog.userAgent.getNavigatorTyped()};goog.userAgent.OPERA=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_OPERA:goog.labs.userAgent.browser.isOpera();goog.userAgent.IE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_IE:goog.labs.userAgent.browser.isIE();goog.userAgent.EDGE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_EDGE:goog.labs.userAgent.engine.isEdge();goog.userAgent.EDGE_OR_IE=goog.userAgent.EDGE||goog.userAgent.IE;goog.userAgent.GECKO=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_GECKO:goog.labs.userAgent.engine.isGecko();goog.userAgent.WEBKIT=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_MOBILE_WEBKIT:goog.labs.userAgent.engine.isWebKit();goog.userAgent.isMobile_=function(){return goog.userAgent.WEBKIT&&goog.labs.userAgent.util.matchUserAgent("Mobile")};goog.userAgent.MOBILE=goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.isMobile_();goog.userAgent.SAFARI=goog.userAgent.WEBKIT;goog.userAgent.determinePlatform_=function(){var o=goog.userAgent.getNavigatorTyped();return o&&o.platform||""};goog.userAgent.PLATFORM=goog.userAgent.determinePlatform_();goog.userAgent.ASSUME_MAC=!1;goog.userAgent.ASSUME_WINDOWS=!1;goog.userAgent.ASSUME_LINUX=!1;goog.userAgent.ASSUME_X11=!1;goog.userAgent.ASSUME_ANDROID=!1;goog.userAgent.ASSUME_IPHONE=!1;goog.userAgent.ASSUME_IPAD=!1;goog.userAgent.ASSUME_IPOD=!1;goog.userAgent.ASSUME_KAIOS=!1;goog.userAgent.ASSUME_GO2PHONE=!1;goog.userAgent.PLATFORM_KNOWN_=goog.userAgent.ASSUME_MAC||goog.userAgent.ASSUME_WINDOWS||goog.userAgent.ASSUME_LINUX||goog.userAgent.ASSUME_X11||goog.userAgent.ASSUME_ANDROID||goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD;goog.userAgent.MAC=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_MAC:goog.labs.userAgent.platform.isMacintosh();goog.userAgent.WINDOWS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_WINDOWS:goog.labs.userAgent.platform.isWindows();goog.userAgent.isLegacyLinux_=function(){return goog.labs.userAgent.platform.isLinux()||goog.labs.userAgent.platform.isChromeOS()};goog.userAgent.LINUX=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_LINUX:goog.userAgent.isLegacyLinux_();goog.userAgent.isX11_=function(){var o=goog.userAgent.getNavigatorTyped();return!!o&&goog.string.contains(o.appVersion||"","X11")};goog.userAgent.X11=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_X11:goog.userAgent.isX11_();goog.userAgent.ANDROID=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_ANDROID:goog.labs.userAgent.platform.isAndroid();goog.userAgent.IPHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE:goog.labs.userAgent.platform.isIphone();goog.userAgent.IPAD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.IPOD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIpod();goog.userAgent.IOS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIos();goog.userAgent.KAIOS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_KAIOS:goog.labs.userAgent.platform.isKaiOS();goog.userAgent.GO2PHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_GO2PHONE:goog.labs.userAgent.platform.isGo2Phone();goog.userAgent.determineVersion_=function(){var o="",t=goog.userAgent.getVersionRegexResult_();return t&&(o=t?t[1]:""),goog.userAgent.IE&&(t=goog.userAgent.getDocumentMode_(),t!=null&&t>parseFloat(o))?String(t):o};goog.userAgent.getVersionRegexResult_=function(){var o=goog.userAgent.getUserAgentString();if(goog.userAgent.GECKO)return/rv:([^\);]+)(\)|;)/.exec(o);if(goog.userAgent.EDGE)return/Edge\/([\d\.]+)/.exec(o);if(goog.userAgent.IE)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(o);if(goog.userAgent.WEBKIT)return/WebKit\/(\S+)/.exec(o);if(goog.userAgent.OPERA)return/(?:Version)[ \/]?(\S+)/.exec(o)};goog.userAgent.getDocumentMode_=function(){var o=goog.global.document;return o?o.documentMode:void 0};goog.userAgent.VERSION=goog.userAgent.determineVersion_();goog.userAgent.compare=function(o,t){return goog.string.compareVersions(o,t)};goog.userAgent.isVersionOrHigherCache_={};goog.userAgent.isVersionOrHigher=function(o){return goog.userAgent.ASSUME_ANY_VERSION||goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_,o,function(){return 0<=goog.string.compareVersions(goog.userAgent.VERSION,o)})};goog.userAgent.isVersion=goog.userAgent.isVersionOrHigher;goog.userAgent.isDocumentModeOrHigher=function(o){return Number(goog.userAgent.DOCUMENT_MODE)>=o};goog.userAgent.isDocumentMode=goog.userAgent.isDocumentModeOrHigher;goog.userAgent.DOCUMENT_MODE=function(){if(goog.global.document&&goog.userAgent.IE)return goog.userAgent.getDocumentMode_()}();goog.userAgent.product={};goog.userAgent.product.ASSUME_FIREFOX=!1;goog.userAgent.product.ASSUME_IPHONE=!1;goog.userAgent.product.ASSUME_IPAD=!1;goog.userAgent.product.ASSUME_ANDROID=!1;goog.userAgent.product.ASSUME_CHROME=!1;goog.userAgent.product.ASSUME_SAFARI=!1;goog.userAgent.product.PRODUCT_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_OPERA||goog.userAgent.product.ASSUME_FIREFOX||goog.userAgent.product.ASSUME_IPHONE||goog.userAgent.product.ASSUME_IPAD||goog.userAgent.product.ASSUME_ANDROID||goog.userAgent.product.ASSUME_CHROME||goog.userAgent.product.ASSUME_SAFARI;goog.userAgent.product.OPERA=goog.userAgent.OPERA;goog.userAgent.product.IE=goog.userAgent.IE;goog.userAgent.product.EDGE=goog.userAgent.EDGE;goog.userAgent.product.FIREFOX=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_FIREFOX:goog.labs.userAgent.browser.isFirefox();goog.userAgent.product.isIphoneOrIpod_=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpod()};goog.userAgent.product.IPHONE=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPHONE:goog.userAgent.product.isIphoneOrIpod_();goog.userAgent.product.IPAD=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.product.ANDROID=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_ANDROID:goog.labs.userAgent.browser.isAndroidBrowser();goog.userAgent.product.CHROME=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_CHROME:goog.labs.userAgent.browser.isChrome();goog.userAgent.product.isSafariDesktop_=function(){return goog.labs.userAgent.browser.isSafari()&&!goog.labs.userAgent.platform.isIos()};goog.userAgent.product.SAFARI=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_SAFARI:goog.userAgent.product.isSafariDesktop_();goog.crypt.base64={};goog.crypt.base64.DEFAULT_ALPHABET_COMMON_="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";goog.crypt.base64.ENCODED_VALS=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_+"+/=";goog.crypt.base64.ENCODED_VALS_WEBSAFE=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_+"-_.";goog.crypt.base64.Alphabet={DEFAULT:0,NO_PADDING:1,WEBSAFE:2,WEBSAFE_DOT_PADDING:3,WEBSAFE_NO_PADDING:4};goog.crypt.base64.paddingChars_="=.";goog.crypt.base64.isPadding_=function(o){return goog.string.contains(goog.crypt.base64.paddingChars_,o)};goog.crypt.base64.byteToCharMaps_={};goog.crypt.base64.charToByteMap_=null;goog.crypt.base64.ASSUME_NATIVE_SUPPORT_=goog.userAgent.GECKO||goog.userAgent.WEBKIT&&!goog.userAgent.product.SAFARI||goog.userAgent.OPERA;goog.crypt.base64.HAS_NATIVE_ENCODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||typeof goog.global.btoa=="function";goog.crypt.base64.HAS_NATIVE_DECODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||!goog.userAgent.product.SAFARI&&!goog.userAgent.IE&&typeof goog.global.atob=="function";goog.crypt.base64.encodeByteArray=function(o,t){goog.asserts.assert(goog.isArrayLike(o),"encodeByteArray takes an array as a parameter"),t===void 0&&(t=goog.crypt.base64.Alphabet.DEFAULT),goog.crypt.base64.init_(),t=goog.crypt.base64.byteToCharMaps_[t];for(var r=[],i=0;i<o.length;i+=3){var s=o[i],g=i+1<o.length,l=g?o[i+1]:0,h=i+2<o.length,m=h?o[i+2]:0,T=s>>2;s=(s&3)<<4|l>>4,l=(l&15)<<2|m>>6,m&=63,h||(m=64,g||(l=64)),r.push(t[T],t[s],t[l]||"",t[m]||"")}return r.join("")};goog.crypt.base64.encodeString=function(o,t){return goog.crypt.base64.HAS_NATIVE_ENCODE_&&!t?goog.global.btoa(o):goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(o),t)};goog.crypt.base64.decodeString=function(o,t){if(goog.crypt.base64.HAS_NATIVE_DECODE_&&!t)return goog.global.atob(o);var r="";return goog.crypt.base64.decodeStringInternal_(o,function(i){r+=String.fromCharCode(i)}),r};goog.crypt.base64.decodeStringToByteArray=function(o,t){var r=[];return goog.crypt.base64.decodeStringInternal_(o,function(i){r.push(i)}),r};goog.crypt.base64.decodeStringToUint8Array=function(o){goog.asserts.assert(!goog.userAgent.IE||goog.userAgent.isVersionOrHigher("10"),"Browser does not support typed arrays");var t=o.length,r=3*t/4;r%3?r=Math.floor(r):goog.crypt.base64.isPadding_(o[t-1])&&(r=goog.crypt.base64.isPadding_(o[t-2])?r-2:r-1);var i=new Uint8Array(r),s=0;return goog.crypt.base64.decodeStringInternal_(o,function(g){i[s++]=g}),i.subarray(0,s)};goog.crypt.base64.decodeStringInternal_=function(o,t){function r(m){for(;i<o.length;){var T=o.charAt(i++),O=goog.crypt.base64.charToByteMap_[T];if(O!=null)return O;if(!goog.string.isEmptyOrWhitespace(T))throw Error("Unknown base64 encoding at char: "+T)}return m}goog.crypt.base64.init_();for(var i=0;;){var s=r(-1),g=r(0),l=r(64),h=r(64);if(h===64&&s===-1)break;t(s<<2|g>>4),l!=64&&(t(g<<4&240|l>>2),h!=64&&t(l<<6&192|h))}};goog.crypt.base64.init_=function(){if(!goog.crypt.base64.charToByteMap_){goog.crypt.base64.charToByteMap_={};for(var o=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_.split(""),t=["+/=","+/","-_=","-_.","-_"],r=0;5>r;r++){var i=o.concat(t[r].split(""));goog.crypt.base64.byteToCharMaps_[r]=i;for(var s=0;s<i.length;s++){var g=i[s],l=goog.crypt.base64.charToByteMap_[g];l===void 0?goog.crypt.base64.charToByteMap_[g]=s:goog.asserts.assert(l===s)}}}};jspb.utils={};jspb.utils.split64Low=0;jspb.utils.split64High=0;jspb.utils.splitUint64=function(o){var t=o>>>0;o=Math.floor((o-t)/jspb.BinaryConstants.TWO_TO_32)>>>0,jspb.utils.split64Low=t,jspb.utils.split64High=o};jspb.utils.splitInt64=function(o){var t=0>o;o=Math.abs(o);var r=o>>>0;o=Math.floor((o-r)/jspb.BinaryConstants.TWO_TO_32),o>>>=0,t&&(o=~o>>>0,r=(~r>>>0)+1,4294967295<r&&(r=0,o++,4294967295<o&&(o=0))),jspb.utils.split64Low=r,jspb.utils.split64High=o};jspb.utils.splitZigzag64=function(o){var t=0>o;o=2*Math.abs(o),jspb.utils.splitUint64(o),o=jspb.utils.split64Low;var r=jspb.utils.split64High;t&&(o==0?r==0?r=o=4294967295:(r--,o=4294967295):o--),jspb.utils.split64Low=o,jspb.utils.split64High=r};jspb.utils.splitFloat32=function(o){var t=0>o?1:0;if(o=t?-o:o,o===0)0<1/o?(jspb.utils.split64High=0,jspb.utils.split64Low=0):(jspb.utils.split64High=0,jspb.utils.split64Low=2147483648);else if(isNaN(o))jspb.utils.split64High=0,jspb.utils.split64Low=2147483647;else if(o>jspb.BinaryConstants.FLOAT32_MAX)jspb.utils.split64High=0,jspb.utils.split64Low=(t<<31|2139095040)>>>0;else if(o<jspb.BinaryConstants.FLOAT32_MIN)o=Math.round(o/Math.pow(2,-149)),jspb.utils.split64High=0,jspb.utils.split64Low=(t<<31|o)>>>0;else{var r=Math.floor(Math.log(o)/Math.LN2);o*=Math.pow(2,-r),o=Math.round(o*jspb.BinaryConstants.TWO_TO_23),16777216<=o&&++r,jspb.utils.split64High=0,jspb.utils.split64Low=(t<<31|r+127<<23|o&8388607)>>>0}};jspb.utils.splitFloat64=function(o){var t=0>o?1:0;if(o=t?-o:o,o===0)jspb.utils.split64High=0<1/o?0:2147483648,jspb.utils.split64Low=0;else if(isNaN(o))jspb.utils.split64High=2147483647,jspb.utils.split64Low=4294967295;else if(o>jspb.BinaryConstants.FLOAT64_MAX)jspb.utils.split64High=(t<<31|2146435072)>>>0,jspb.utils.split64Low=0;else if(o<jspb.BinaryConstants.FLOAT64_MIN){var r=o/Math.pow(2,-1074);o=r/jspb.BinaryConstants.TWO_TO_32,jspb.utils.split64High=(t<<31|o)>>>0,jspb.utils.split64Low=r>>>0}else{r=o;var i=0;if(2<=r)for(;2<=r&&1023>i;)i++,r/=2;else for(;1>r&&-1022<i;)r*=2,i--;r=o*Math.pow(2,-i),o=r*jspb.BinaryConstants.TWO_TO_20&1048575,r=r*jspb.BinaryConstants.TWO_TO_52>>>0,jspb.utils.split64High=(t<<31|i+1023<<20|o)>>>0,jspb.utils.split64Low=r}};jspb.utils.splitHash64=function(o){var t=o.charCodeAt(0),r=o.charCodeAt(1),i=o.charCodeAt(2),s=o.charCodeAt(3),g=o.charCodeAt(4),l=o.charCodeAt(5),h=o.charCodeAt(6);o=o.charCodeAt(7),jspb.utils.split64Low=t+(r<<8)+(i<<16)+(s<<24)>>>0,jspb.utils.split64High=g+(l<<8)+(h<<16)+(o<<24)>>>0};jspb.utils.joinUint64=function(o,t){return t*jspb.BinaryConstants.TWO_TO_32+(o>>>0)};jspb.utils.joinInt64=function(o,t){var r=t&2147483648;return r&&(o=~o+1>>>0,t=~t>>>0,o==0&&(t=t+1>>>0)),o=jspb.utils.joinUint64(o,t),r?-o:o};jspb.utils.toZigzag64=function(o,t,r){var i=t>>31;return r(o<<1^i,(t<<1|o>>>31)^i)};jspb.utils.joinZigzag64=function(o,t){return jspb.utils.fromZigzag64(o,t,jspb.utils.joinInt64)};jspb.utils.fromZigzag64=function(o,t,r){var i=-(o&1);return r((o>>>1|t<<31)^i,t>>>1^i)};jspb.utils.joinFloat32=function(o,t){t=2*(o>>31)+1;var r=o>>>23&255;return o&=8388607,r==255?o?NaN:1/0*t:r==0?t*Math.pow(2,-149)*o:t*Math.pow(2,r-150)*(o+Math.pow(2,23))};jspb.utils.joinFloat64=function(o,t){var r=2*(t>>31)+1,i=t>>>20&2047;return o=jspb.BinaryConstants.TWO_TO_32*(t&1048575)+o,i==2047?o?NaN:1/0*r:i==0?r*Math.pow(2,-1074)*o:r*Math.pow(2,i-1075)*(o+jspb.BinaryConstants.TWO_TO_52)};jspb.utils.joinHash64=function(o,t){return String.fromCharCode(o>>>0&255,o>>>8&255,o>>>16&255,o>>>24&255,t>>>0&255,t>>>8&255,t>>>16&255,t>>>24&255)};jspb.utils.DIGITS="0123456789abcdef".split("");jspb.utils.ZERO_CHAR_CODE_=48;jspb.utils.A_CHAR_CODE_=97;jspb.utils.joinUnsignedDecimalString=function(o,t){function r(s,g){return s=s?String(s):"",g?"0000000".slice(s.length)+s:s}if(2097151>=t)return""+jspb.utils.joinUint64(o,t);var i=(o>>>24|t<<8)>>>0&16777215;return t=t>>16&65535,o=(o&16777215)+6777216*i+6710656*t,i+=8147497*t,t*=2,1e7<=o&&(i+=Math.floor(o/1e7),o%=1e7),1e7<=i&&(t+=Math.floor(i/1e7),i%=1e7),r(t,0)+r(i,t)+r(o,1)};jspb.utils.joinSignedDecimalString=function(o,t){var r=t&2147483648;return r&&(o=~o+1>>>0,t=~t+(o==0?1:0)>>>0),o=jspb.utils.joinUnsignedDecimalString(o,t),r?"-"+o:o};jspb.utils.hash64ToDecimalString=function(o,t){jspb.utils.splitHash64(o),o=jspb.utils.split64Low;var r=jspb.utils.split64High;return t?jspb.utils.joinSignedDecimalString(o,r):jspb.utils.joinUnsignedDecimalString(o,r)};jspb.utils.hash64ArrayToDecimalStrings=function(o,t){for(var r=Array(o.length),i=0;i<o.length;i++)r[i]=jspb.utils.hash64ToDecimalString(o[i],t);return r};jspb.utils.decimalStringToHash64=function(o){function t(l,h){for(var m=0;8>m&&(l!==1||0<h);m++)h=l*s[m]+h,s[m]=h&255,h>>>=8}function r(){for(var l=0;8>l;l++)s[l]=~s[l]&255}goog.asserts.assert(0<o.length);var i=!1;o[0]==="-"&&(i=!0,o=o.slice(1));for(var s=[0,0,0,0,0,0,0,0],g=0;g<o.length;g++)t(10,o.charCodeAt(g)-jspb.utils.ZERO_CHAR_CODE_);return i&&(r(),t(1,1)),goog.crypt.byteArrayToString(s)};jspb.utils.splitDecimalString=function(o){jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(o))};jspb.utils.toHexDigit_=function(o){return String.fromCharCode(10>o?jspb.utils.ZERO_CHAR_CODE_+o:jspb.utils.A_CHAR_CODE_-10+o)};jspb.utils.fromHexCharCode_=function(o){return o>=jspb.utils.A_CHAR_CODE_?o-jspb.utils.A_CHAR_CODE_+10:o-jspb.utils.ZERO_CHAR_CODE_};jspb.utils.hash64ToHexString=function(o){var t=Array(18);t[0]="0",t[1]="x";for(var r=0;8>r;r++){var i=o.charCodeAt(7-r);t[2*r+2]=jspb.utils.toHexDigit_(i>>4),t[2*r+3]=jspb.utils.toHexDigit_(i&15)}return t.join("")};jspb.utils.hexStringToHash64=function(o){o=o.toLowerCase(),goog.asserts.assert(o.length==18),goog.asserts.assert(o[0]=="0"),goog.asserts.assert(o[1]=="x");for(var t="",r=0;8>r;r++){var i=jspb.utils.fromHexCharCode_(o.charCodeAt(2*r+2)),s=jspb.utils.fromHexCharCode_(o.charCodeAt(2*r+3));t=String.fromCharCode(16*i+s)+t}return t};jspb.utils.hash64ToNumber=function(o,t){jspb.utils.splitHash64(o),o=jspb.utils.split64Low;var r=jspb.utils.split64High;return t?jspb.utils.joinInt64(o,r):jspb.utils.joinUint64(o,r)};jspb.utils.numberToHash64=function(o){return jspb.utils.splitInt64(o),jspb.utils.joinHash64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.utils.countVarints=function(o,t,r){for(var i=0,s=t;s<r;s++)i+=o[s]>>7;return r-t-i};jspb.utils.countVarintFields=function(o,t,r,i){var s=0;if(i=8*i+jspb.BinaryConstants.WireType.VARINT,128>i)for(;t<r&&o[t++]==i;)for(s++;;){var g=o[t++];if((g&128)==0)break}else for(;t<r;){for(g=i;128<g;){if(o[t]!=(g&127|128))return s;t++,g>>=7}if(o[t++]!=g)break;for(s++;g=o[t++],(g&128)!=0;);}return s};jspb.utils.countFixedFields_=function(o,t,r,i,s){var g=0;if(128>i)for(;t<r&&o[t++]==i;)g++,t+=s;else for(;t<r;){for(var l=i;128<l;){if(o[t++]!=(l&127|128))return g;l>>=7}if(o[t++]!=l)break;g++,t+=s}return g};jspb.utils.countFixed32Fields=function(o,t,r,i){return jspb.utils.countFixedFields_(o,t,r,8*i+jspb.BinaryConstants.WireType.FIXED32,4)};jspb.utils.countFixed64Fields=function(o,t,r,i){return jspb.utils.countFixedFields_(o,t,r,8*i+jspb.BinaryConstants.WireType.FIXED64,8)};jspb.utils.countDelimitedFields=function(o,t,r,i){var s=0;for(i=8*i+jspb.BinaryConstants.WireType.DELIMITED;t<r;){for(var g=i;128<g;){if(o[t++]!=(g&127|128))return s;g>>=7}if(o[t++]!=g)break;s++;for(var l=0,h=1;g=o[t++],l+=(g&127)*h,h*=128,(g&128)!=0;);t+=l}return s};jspb.utils.debugBytesToTextFormat=function(o){var t='"';if(o){o=jspb.utils.byteSourceToUint8Array(o);for(var r=0;r<o.length;r++)t+="\\x",16>o[r]&&(t+="0"),t+=o[r].toString(16)}return t+'"'};jspb.utils.debugScalarToTextFormat=function(o){return typeof o=="string"?goog.string.quote(o):o.toString()};jspb.utils.stringToByteArray=function(o){for(var t=new Uint8Array(o.length),r=0;r<o.length;r++){var i=o.charCodeAt(r);if(255<i)throw Error("Conversion error: string contains codepoint outside of byte range");t[r]=i}return t};jspb.utils.byteSourceToUint8Array=function(o){return o.constructor===Uint8Array?o:o.constructor===ArrayBuffer||typeof Buffer<"u"&&o.constructor===Buffer||o.constructor===Array?new Uint8Array(o):o.constructor===String?goog.crypt.base64.decodeStringToUint8Array(o):(goog.asserts.fail("Type not convertible to Uint8Array."),new Uint8Array(0))};jspb.BinaryDecoder=function(o,t,r){this.bytes_=null,this.cursor_=this.end_=this.start_=0,this.error_=!1,o&&this.setBlock(o,t,r)};jspb.BinaryDecoder.instanceCache_=[];jspb.BinaryDecoder.alloc=function(o,t,r){if(jspb.BinaryDecoder.instanceCache_.length){var i=jspb.BinaryDecoder.instanceCache_.pop();return o&&i.setBlock(o,t,r),i}return new jspb.BinaryDecoder(o,t,r)};jspb.BinaryDecoder.prototype.free=function(){this.clear(),100>jspb.BinaryDecoder.instanceCache_.length&&jspb.BinaryDecoder.instanceCache_.push(this)};jspb.BinaryDecoder.prototype.clone=function(){return jspb.BinaryDecoder.alloc(this.bytes_,this.start_,this.end_-this.start_)};jspb.BinaryDecoder.prototype.clear=function(){this.bytes_=null,this.cursor_=this.end_=this.start_=0,this.error_=!1};jspb.BinaryDecoder.prototype.getBuffer=function(){return this.bytes_};jspb.BinaryDecoder.prototype.setBlock=function(o,t,r){this.bytes_=jspb.utils.byteSourceToUint8Array(o),this.start_=t!==void 0?t:0,this.end_=r!==void 0?this.start_+r:this.bytes_.length,this.cursor_=this.start_};jspb.BinaryDecoder.prototype.getEnd=function(){return this.end_};jspb.BinaryDecoder.prototype.setEnd=function(o){this.end_=o};jspb.BinaryDecoder.prototype.reset=function(){this.cursor_=this.start_};jspb.BinaryDecoder.prototype.getCursor=function(){return this.cursor_};jspb.BinaryDecoder.prototype.setCursor=function(o){this.cursor_=o};jspb.BinaryDecoder.prototype.advance=function(o){this.cursor_+=o,goog.asserts.assert(this.cursor_<=this.end_)};jspb.BinaryDecoder.prototype.atEnd=function(){return this.cursor_==this.end_};jspb.BinaryDecoder.prototype.pastEnd=function(){return this.cursor_>this.end_};jspb.BinaryDecoder.prototype.getError=function(){return this.error_||0>this.cursor_||this.cursor_>this.end_};jspb.BinaryDecoder.prototype.readSplitVarint64=function(o){for(var t=128,r=0,i=0,s=0;4>s&&128<=t;s++)t=this.bytes_[this.cursor_++],r|=(t&127)<<7*s;if(128<=t&&(t=this.bytes_[this.cursor_++],r|=(t&127)<<28,i|=(t&127)>>4),128<=t)for(s=0;5>s&&128<=t;s++)t=this.bytes_[this.cursor_++],i|=(t&127)<<7*s+3;if(128>t)return o(r>>>0,i>>>0);goog.asserts.fail("Failed to read varint, encoding is invalid."),this.error_=!0};jspb.BinaryDecoder.prototype.readSplitZigzagVarint64=function(o){return this.readSplitVarint64(function(t,r){return jspb.utils.fromZigzag64(t,r,o)})};jspb.BinaryDecoder.prototype.readSplitFixed64=function(o){var t=this.bytes_,r=this.cursor_;this.cursor_+=8;for(var i=0,s=0,g=r+7;g>=r;g--)i=i<<8|t[g],s=s<<8|t[g+4];return o(i,s)};jspb.BinaryDecoder.prototype.skipVarint=function(){for(;this.bytes_[this.cursor_]&128;)this.cursor_++;this.cursor_++};jspb.BinaryDecoder.prototype.unskipVarint=function(o){for(;128<o;)this.cursor_--,o>>>=7;this.cursor_--};jspb.BinaryDecoder.prototype.readUnsignedVarint32=function(){var o=this.bytes_,t=o[this.cursor_+0],r=t&127;return 128>t?(this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),r):(t=o[this.cursor_+1],r|=(t&127)<<7,128>t?(this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),r):(t=o[this.cursor_+2],r|=(t&127)<<14,128>t?(this.cursor_+=3,goog.asserts.assert(this.cursor_<=this.end_),r):(t=o[this.cursor_+3],r|=(t&127)<<21,128>t?(this.cursor_+=4,goog.asserts.assert(this.cursor_<=this.end_),r):(t=o[this.cursor_+4],r|=(t&15)<<28,128>t?(this.cursor_+=5,goog.asserts.assert(this.cursor_<=this.end_),r>>>0):(this.cursor_+=5,128<=o[this.cursor_++]&&128<=o[this.cursor_++]&&128<=o[this.cursor_++]&&128<=o[this.cursor_++]&&128<=o[this.cursor_++]&&goog.asserts.assert(!1),goog.asserts.assert(this.cursor_<=this.end_),r)))))};jspb.BinaryDecoder.prototype.readSignedVarint32=jspb.BinaryDecoder.prototype.readUnsignedVarint32;jspb.BinaryDecoder.prototype.readUnsignedVarint32String=function(){return this.readUnsignedVarint32().toString()};jspb.BinaryDecoder.prototype.readSignedVarint32String=function(){return this.readSignedVarint32().toString()};jspb.BinaryDecoder.prototype.readZigzagVarint32=function(){var o=this.readUnsignedVarint32();return o>>>1^-(o&1)};jspb.BinaryDecoder.prototype.readUnsignedVarint64=function(){return this.readSplitVarint64(jspb.utils.joinUint64)};jspb.BinaryDecoder.prototype.readUnsignedVarint64String=function(){return this.readSplitVarint64(jspb.utils.joinUnsignedDecimalString)};jspb.BinaryDecoder.prototype.readSignedVarint64=function(){return this.readSplitVarint64(jspb.utils.joinInt64)};jspb.BinaryDecoder.prototype.readSignedVarint64String=function(){return this.readSplitVarint64(jspb.utils.joinSignedDecimalString)};jspb.BinaryDecoder.prototype.readZigzagVarint64=function(){return this.readSplitVarint64(jspb.utils.joinZigzag64)};jspb.BinaryDecoder.prototype.readZigzagVarintHash64=function(){return this.readSplitZigzagVarint64(jspb.utils.joinHash64)};jspb.BinaryDecoder.prototype.readZigzagVarint64String=function(){return this.readSplitZigzagVarint64(jspb.utils.joinSignedDecimalString)};jspb.BinaryDecoder.prototype.readUint8=function(){var o=this.bytes_[this.cursor_+0];return this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),o};jspb.BinaryDecoder.prototype.readUint16=function(){var o=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1];return this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),o<<0|t<<8};jspb.BinaryDecoder.prototype.readUint32=function(){var o=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1],r=this.bytes_[this.cursor_+2],i=this.bytes_[this.cursor_+3];return this.cursor_+=4,goog.asserts.assert(this.cursor_<=this.end_),(o<<0|t<<8|r<<16|i<<24)>>>0};jspb.BinaryDecoder.prototype.readUint64=function(){var o=this.readUint32(),t=this.readUint32();return jspb.utils.joinUint64(o,t)};jspb.BinaryDecoder.prototype.readUint64String=function(){var o=this.readUint32(),t=this.readUint32();return jspb.utils.joinUnsignedDecimalString(o,t)};jspb.BinaryDecoder.prototype.readInt8=function(){var o=this.bytes_[this.cursor_+0];return this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),o<<24>>24};jspb.BinaryDecoder.prototype.readInt16=function(){var o=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1];return this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),(o<<0|t<<8)<<16>>16};jspb.BinaryDecoder.prototype.readInt32=function(){var o=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1],r=this.bytes_[this.cursor_+2],i=this.bytes_[this.cursor_+3];return this.cursor_+=4,goog.asserts.assert(this.cursor_<=this.end_),o<<0|t<<8|r<<16|i<<24};jspb.BinaryDecoder.prototype.readInt64=function(){var o=this.readUint32(),t=this.readUint32();return jspb.utils.joinInt64(o,t)};jspb.BinaryDecoder.prototype.readInt64String=function(){var o=this.readUint32(),t=this.readUint32();return jspb.utils.joinSignedDecimalString(o,t)};jspb.BinaryDecoder.prototype.readFloat=function(){var o=this.readUint32();return jspb.utils.joinFloat32(o,0)};jspb.BinaryDecoder.prototype.readDouble=function(){var o=this.readUint32(),t=this.readUint32();return jspb.utils.joinFloat64(o,t)};jspb.BinaryDecoder.prototype.readBool=function(){return!!this.bytes_[this.cursor_++]};jspb.BinaryDecoder.prototype.readEnum=function(){return this.readSignedVarint32()};jspb.BinaryDecoder.prototype.readString=function(o){var t=this.bytes_,r=this.cursor_;o=r+o;for(var i=[],s="";r<o;){var g=t[r++];if(128>g)i.push(g);else{if(192>g)continue;if(224>g){var l=t[r++];i.push((g&31)<<6|l&63)}else if(240>g){l=t[r++];var h=t[r++];i.push((g&15)<<12|(l&63)<<6|h&63)}else if(248>g){l=t[r++],h=t[r++];var m=t[r++];g=(g&7)<<18|(l&63)<<12|(h&63)<<6|m&63,g-=65536,i.push((g>>10&1023)+55296,(g&1023)+56320)}}8192<=i.length&&(s+=String.fromCharCode.apply(null,i),i.length=0)}return s+=goog.crypt.byteArrayToString(i),this.cursor_=r,s};jspb.BinaryDecoder.prototype.readStringWithLength=function(){var o=this.readUnsignedVarint32();return this.readString(o)};jspb.BinaryDecoder.prototype.readBytes=function(o){if(0>o||this.cursor_+o>this.bytes_.length)return this.error_=!0,goog.asserts.fail("Invalid byte length!"),new Uint8Array(0);var t=this.bytes_.subarray(this.cursor_,this.cursor_+o);return this.cursor_+=o,goog.asserts.assert(this.cursor_<=this.end_),t};jspb.BinaryDecoder.prototype.readVarintHash64=function(){return this.readSplitVarint64(jspb.utils.joinHash64)};jspb.BinaryDecoder.prototype.readFixedHash64=function(){var o=this.bytes_,t=this.cursor_,r=o[t+0],i=o[t+1],s=o[t+2],g=o[t+3],l=o[t+4],h=o[t+5],m=o[t+6];return o=o[t+7],this.cursor_+=8,String.fromCharCode(r,i,s,g,l,h,m,o)};jspb.BinaryReader=function(o,t,r){this.decoder_=jspb.BinaryDecoder.alloc(o,t,r),this.fieldCursor_=this.decoder_.getCursor(),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID,this.error_=!1,this.readCallbacks_=null};jspb.BinaryReader.instanceCache_=[];jspb.BinaryReader.alloc=function(o,t,r){if(jspb.BinaryReader.instanceCache_.length){var i=jspb.BinaryReader.instanceCache_.pop();return o&&i.decoder_.setBlock(o,t,r),i}return new jspb.BinaryReader(o,t,r)};jspb.BinaryReader.prototype.alloc=jspb.BinaryReader.alloc;jspb.BinaryReader.prototype.free=function(){this.decoder_.clear(),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID,this.error_=!1,this.readCallbacks_=null,100>jspb.BinaryReader.instanceCache_.length&&jspb.BinaryReader.instanceCache_.push(this)};jspb.BinaryReader.prototype.getFieldCursor=function(){return this.fieldCursor_};jspb.BinaryReader.prototype.getCursor=function(){return this.decoder_.getCursor()};jspb.BinaryReader.prototype.getBuffer=function(){return this.decoder_.getBuffer()};jspb.BinaryReader.prototype.getFieldNumber=function(){return this.nextField_};jspb.BinaryReader.prototype.getWireType=function(){return this.nextWireType_};jspb.BinaryReader.prototype.isDelimited=function(){return this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED};jspb.BinaryReader.prototype.isEndGroup=function(){return this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP};jspb.BinaryReader.prototype.getError=function(){return this.error_||this.decoder_.getError()};jspb.BinaryReader.prototype.setBlock=function(o,t,r){this.decoder_.setBlock(o,t,r),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID};jspb.BinaryReader.prototype.reset=function(){this.decoder_.reset(),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID};jspb.BinaryReader.prototype.advance=function(o){this.decoder_.advance(o)};jspb.BinaryReader.prototype.nextField=function(){if(this.decoder_.atEnd())return!1;if(this.getError())return goog.asserts.fail("Decoder hit an error"),!1;this.fieldCursor_=this.decoder_.getCursor();var o=this.decoder_.readUnsignedVarint32(),t=o>>>3;return o&=7,o!=jspb.BinaryConstants.WireType.VARINT&&o!=jspb.BinaryConstants.WireType.FIXED32&&o!=jspb.BinaryConstants.WireType.FIXED64&&o!=jspb.BinaryConstants.WireType.DELIMITED&&o!=jspb.BinaryConstants.WireType.START_GROUP&&o!=jspb.BinaryConstants.WireType.END_GROUP?(goog.asserts.fail("Invalid wire type: %s (at position %s)",o,this.fieldCursor_),this.error_=!0,!1):(this.nextField_=t,this.nextWireType_=o,!0)};jspb.BinaryReader.prototype.unskipHeader=function(){this.decoder_.unskipVarint(this.nextField_<<3|this.nextWireType_)};jspb.BinaryReader.prototype.skipMatchingFields=function(){var o=this.nextField_;for(this.unskipHeader();this.nextField()&&this.getFieldNumber()==o;)this.skipField();this.decoder_.atEnd()||this.unskipHeader()};jspb.BinaryReader.prototype.skipVarintField=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.VARINT?(goog.asserts.fail("Invalid wire type for skipVarintField"),this.skipField()):this.decoder_.skipVarint()};jspb.BinaryReader.prototype.skipDelimitedField=function(){if(this.nextWireType_!=jspb.BinaryConstants.WireType.DELIMITED)goog.asserts.fail("Invalid wire type for skipDelimitedField"),this.skipField();else{var o=this.decoder_.readUnsignedVarint32();this.decoder_.advance(o)}};jspb.BinaryReader.prototype.skipFixed32Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED32?(goog.asserts.fail("Invalid wire type for skipFixed32Field"),this.skipField()):this.decoder_.advance(4)};jspb.BinaryReader.prototype.skipFixed64Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED64?(goog.asserts.fail("Invalid wire type for skipFixed64Field"),this.skipField()):this.decoder_.advance(8)};jspb.BinaryReader.prototype.skipGroup=function(){var o=this.nextField_;do{if(!this.nextField()){goog.asserts.fail("Unmatched start-group tag: stream EOF"),this.error_=!0;break}if(this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP){this.nextField_!=o&&(goog.asserts.fail("Unmatched end-group tag"),this.error_=!0);break}this.skipField()}while(1)};jspb.BinaryReader.prototype.skipField=function(){switch(this.nextWireType_){case jspb.BinaryConstants.WireType.VARINT:this.skipVarintField();break;case jspb.BinaryConstants.WireType.FIXED64:this.skipFixed64Field();break;case jspb.BinaryConstants.WireType.DELIMITED:this.skipDelimitedField();break;case jspb.BinaryConstants.WireType.FIXED32:this.skipFixed32Field();break;case jspb.BinaryConstants.WireType.START_GROUP:this.skipGroup();break;default:goog.asserts.fail("Invalid wire encoding for field.")}};jspb.BinaryReader.prototype.registerReadCallback=function(o,t){this.readCallbacks_===null&&(this.readCallbacks_={}),goog.asserts.assert(!this.readCallbacks_[o]),this.readCallbacks_[o]=t};jspb.BinaryReader.prototype.runReadCallback=function(o){return goog.asserts.assert(this.readCallbacks_!==null),o=this.readCallbacks_[o],goog.asserts.assert(o),o(this)};jspb.BinaryReader.prototype.readAny=function(o){this.nextWireType_=jspb.BinaryConstants.FieldTypeToWireType(o);var t=jspb.BinaryConstants.FieldType;switch(o){case t.DOUBLE:return this.readDouble();case t.FLOAT:return this.readFloat();case t.INT64:return this.readInt64();case t.UINT64:return this.readUint64();case t.INT32:return this.readInt32();case t.FIXED64:return this.readFixed64();case t.FIXED32:return this.readFixed32();case t.BOOL:return this.readBool();case t.STRING:return this.readString();case t.GROUP:goog.asserts.fail("Group field type not supported in readAny()");case t.MESSAGE:goog.asserts.fail("Message field type not supported in readAny()");case t.BYTES:return this.readBytes();case t.UINT32:return this.readUint32();case t.ENUM:return this.readEnum();case t.SFIXED32:return this.readSfixed32();case t.SFIXED64:return this.readSfixed64();case t.SINT32:return this.readSint32();case t.SINT64:return this.readSint64();case t.FHASH64:return this.readFixedHash64();case t.VHASH64:return this.readVarintHash64();default:goog.asserts.fail("Invalid field type in readAny()")}return 0};jspb.BinaryReader.prototype.readMessage=function(o,t){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var r=this.decoder_.getEnd(),i=this.decoder_.readUnsignedVarint32();i=this.decoder_.getCursor()+i,this.decoder_.setEnd(i),t(o,this),this.decoder_.setCursor(i),this.decoder_.setEnd(r)};jspb.BinaryReader.prototype.readGroup=function(o,t,r){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP),goog.asserts.assert(this.nextField_==o),r(t,this),this.error_||this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP||(goog.asserts.fail("Group submessage did not end with an END_GROUP tag"),this.error_=!0)};jspb.BinaryReader.prototype.getFieldDecoder=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var o=this.decoder_.readUnsignedVarint32(),t=this.decoder_.getCursor(),r=t+o;return o=jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(),t,o),this.decoder_.setCursor(r),o};jspb.BinaryReader.prototype.readInt32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint32()};jspb.BinaryReader.prototype.readInt32String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint32String()};jspb.BinaryReader.prototype.readInt64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint64()};jspb.BinaryReader.prototype.readInt64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint64String()};jspb.BinaryReader.prototype.readUint32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint32()};jspb.BinaryReader.prototype.readUint32String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint32String()};jspb.BinaryReader.prototype.readUint64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint64()};jspb.BinaryReader.prototype.readUint64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint64String()};jspb.BinaryReader.prototype.readSint32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readZigzagVarint32()};jspb.BinaryReader.prototype.readSint64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readZigzagVarint64()};jspb.BinaryReader.prototype.readSint64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readZigzagVarint64String()};jspb.BinaryReader.prototype.readFixed32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readUint32()};jspb.BinaryReader.prototype.readFixed64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readUint64()};jspb.BinaryReader.prototype.readFixed64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readUint64String()};jspb.BinaryReader.prototype.readSfixed32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readInt32()};jspb.BinaryReader.prototype.readSfixed32String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readInt32().toString()};jspb.BinaryReader.prototype.readSfixed64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readInt64()};jspb.BinaryReader.prototype.readSfixed64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readInt64String()};jspb.BinaryReader.prototype.readFloat=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readFloat()};jspb.BinaryReader.prototype.readDouble=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readDouble()};jspb.BinaryReader.prototype.readBool=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),!!this.decoder_.readUnsignedVarint32()};jspb.BinaryReader.prototype.readEnum=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint64()};jspb.BinaryReader.prototype.readString=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var o=this.decoder_.readUnsignedVarint32();return this.decoder_.readString(o)};jspb.BinaryReader.prototype.readBytes=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var o=this.decoder_.readUnsignedVarint32();return this.decoder_.readBytes(o)};jspb.BinaryReader.prototype.readVarintHash64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readVarintHash64()};jspb.BinaryReader.prototype.readSintHash64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readZigzagVarintHash64()};jspb.BinaryReader.prototype.readSplitVarint64=function(o){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSplitVarint64(o)};jspb.BinaryReader.prototype.readSplitZigzagVarint64=function(o){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSplitVarint64(function(t,r){return jspb.utils.fromZigzag64(t,r,o)})};jspb.BinaryReader.prototype.readFixedHash64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readFixedHash64()};jspb.BinaryReader.prototype.readSplitFixed64=function(o){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readSplitFixed64(o)};jspb.BinaryReader.prototype.readPackedField_=function(o){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var t=this.decoder_.readUnsignedVarint32();t=this.decoder_.getCursor()+t;for(var r=[];this.decoder_.getCursor()<t;)r.push(o.call(this.decoder_));return r};jspb.BinaryReader.prototype.readPackedInt32=function(){return this.readPackedField_(this.decoder_.readSignedVarint32)};jspb.BinaryReader.prototype.readPackedInt32String=function(){return this.readPackedField_(this.decoder_.readSignedVarint32String)};jspb.BinaryReader.prototype.readPackedInt64=function(){return this.readPackedField_(this.decoder_.readSignedVarint64)};jspb.BinaryReader.prototype.readPackedInt64String=function(){return this.readPackedField_(this.decoder_.readSignedVarint64String)};jspb.BinaryReader.prototype.readPackedUint32=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32)};jspb.BinaryReader.prototype.readPackedUint32String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32String)};jspb.BinaryReader.prototype.readPackedUint64=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64)};jspb.BinaryReader.prototype.readPackedUint64String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64String)};jspb.BinaryReader.prototype.readPackedSint32=function(){return this.readPackedField_(this.decoder_.readZigzagVarint32)};jspb.BinaryReader.prototype.readPackedSint64=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64)};jspb.BinaryReader.prototype.readPackedSint64String=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64String)};jspb.BinaryReader.prototype.readPackedFixed32=function(){return this.readPackedField_(this.decoder_.readUint32)};jspb.BinaryReader.prototype.readPackedFixed64=function(){return this.readPackedField_(this.decoder_.readUint64)};jspb.BinaryReader.prototype.readPackedFixed64String=function(){return this.readPackedField_(this.decoder_.readUint64String)};jspb.BinaryReader.prototype.readPackedSfixed32=function(){return this.readPackedField_(this.decoder_.readInt32)};jspb.BinaryReader.prototype.readPackedSfixed64=function(){return this.readPackedField_(this.decoder_.readInt64)};jspb.BinaryReader.prototype.readPackedSfixed64String=function(){return this.readPackedField_(this.decoder_.readInt64String)};jspb.BinaryReader.prototype.readPackedFloat=function(){return this.readPackedField_(this.decoder_.readFloat)};jspb.BinaryReader.prototype.readPackedDouble=function(){return this.readPackedField_(this.decoder_.readDouble)};jspb.BinaryReader.prototype.readPackedBool=function(){return this.readPackedField_(this.decoder_.readBool)};jspb.BinaryReader.prototype.readPackedEnum=function(){return this.readPackedField_(this.decoder_.readEnum)};jspb.BinaryReader.prototype.readPackedVarintHash64=function(){return this.readPackedField_(this.decoder_.readVarintHash64)};jspb.BinaryReader.prototype.readPackedFixedHash64=function(){return this.readPackedField_(this.decoder_.readFixedHash64)};jspb.BinaryEncoder=function(){this.buffer_=[]};jspb.BinaryEncoder.prototype.length=function(){return this.buffer_.length};jspb.BinaryEncoder.prototype.end=function(){var o=this.buffer_;return this.buffer_=[],o};jspb.BinaryEncoder.prototype.writeSplitVarint64=function(o,t){for(goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(t==Math.floor(t)),goog.asserts.assert(0<=o&&o<jspb.BinaryConstants.TWO_TO_32),goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32);0<t||127<o;)this.buffer_.push(o&127|128),o=(o>>>7|t<<25)>>>0,t>>>=7;this.buffer_.push(o)};jspb.BinaryEncoder.prototype.writeSplitFixed64=function(o,t){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(t==Math.floor(t)),goog.asserts.assert(0<=o&&o<jspb.BinaryConstants.TWO_TO_32),goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32),this.writeUint32(o),this.writeUint32(t)};jspb.BinaryEncoder.prototype.writeUnsignedVarint32=function(o){for(goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(0<=o&&o<jspb.BinaryConstants.TWO_TO_32);127<o;)this.buffer_.push(o&127|128),o>>>=7;this.buffer_.push(o)};jspb.BinaryEncoder.prototype.writeSignedVarint32=function(o){if(goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(o>=-jspb.BinaryConstants.TWO_TO_31&&o<jspb.BinaryConstants.TWO_TO_31),0<=o)this.writeUnsignedVarint32(o);else{for(var t=0;9>t;t++)this.buffer_.push(o&127|128),o>>=7;this.buffer_.push(1)}};jspb.BinaryEncoder.prototype.writeUnsignedVarint64=function(o){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(0<=o&&o<jspb.BinaryConstants.TWO_TO_64),jspb.utils.splitInt64(o),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeSignedVarint64=function(o){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(o>=-jspb.BinaryConstants.TWO_TO_63&&o<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitInt64(o),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeZigzagVarint32=function(o){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(o>=-jspb.BinaryConstants.TWO_TO_31&&o<jspb.BinaryConstants.TWO_TO_31),this.writeUnsignedVarint32((o<<1^o>>31)>>>0)};jspb.BinaryEncoder.prototype.writeZigzagVarint64=function(o){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(o>=-jspb.BinaryConstants.TWO_TO_63&&o<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitZigzag64(o),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeZigzagVarint64String=function(o){this.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(o))};jspb.BinaryEncoder.prototype.writeZigzagVarintHash64=function(o){var t=this;jspb.utils.splitHash64(o),jspb.utils.toZigzag64(jspb.utils.split64Low,jspb.utils.split64High,function(r,i){t.writeSplitVarint64(r>>>0,i>>>0)})};jspb.BinaryEncoder.prototype.writeUint8=function(o){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(0<=o&&256>o),this.buffer_.push(o>>>0&255)};jspb.BinaryEncoder.prototype.writeUint16=function(o){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(0<=o&&65536>o),this.buffer_.push(o>>>0&255),this.buffer_.push(o>>>8&255)};jspb.BinaryEncoder.prototype.writeUint32=function(o){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(0<=o&&o<jspb.BinaryConstants.TWO_TO_32),this.buffer_.push(o>>>0&255),this.buffer_.push(o>>>8&255),this.buffer_.push(o>>>16&255),this.buffer_.push(o>>>24&255)};jspb.BinaryEncoder.prototype.writeUint64=function(o){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(0<=o&&o<jspb.BinaryConstants.TWO_TO_64),jspb.utils.splitUint64(o),this.writeUint32(jspb.utils.split64Low),this.writeUint32(jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeInt8=function(o){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(-128<=o&&128>o),this.buffer_.push(o>>>0&255)};jspb.BinaryEncoder.prototype.writeInt16=function(o){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(-32768<=o&&32768>o),this.buffer_.push(o>>>0&255),this.buffer_.push(o>>>8&255)};jspb.BinaryEncoder.prototype.writeInt32=function(o){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(o>=-jspb.BinaryConstants.TWO_TO_31&&o<jspb.BinaryConstants.TWO_TO_31),this.buffer_.push(o>>>0&255),this.buffer_.push(o>>>8&255),this.buffer_.push(o>>>16&255),this.buffer_.push(o>>>24&255)};jspb.BinaryEncoder.prototype.writeInt64=function(o){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(o>=-jspb.BinaryConstants.TWO_TO_63&&o<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitInt64(o),this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeInt64String=function(o){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(+o>=-jspb.BinaryConstants.TWO_TO_63&&+o<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(o)),this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeFloat=function(o){goog.asserts.assert(o===1/0||o===-1/0||isNaN(o)||o>=-jspb.BinaryConstants.FLOAT32_MAX&&o<=jspb.BinaryConstants.FLOAT32_MAX),jspb.utils.splitFloat32(o),this.writeUint32(jspb.utils.split64Low)};jspb.BinaryEncoder.prototype.writeDouble=function(o){goog.asserts.assert(o===1/0||o===-1/0||isNaN(o)||o>=-jspb.BinaryConstants.FLOAT64_MAX&&o<=jspb.BinaryConstants.FLOAT64_MAX),jspb.utils.splitFloat64(o),this.writeUint32(jspb.utils.split64Low),this.writeUint32(jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeBool=function(o){goog.asserts.assert(typeof o=="boolean"||typeof o=="number"),this.buffer_.push(o?1:0)};jspb.BinaryEncoder.prototype.writeEnum=function(o){goog.asserts.assert(o==Math.floor(o)),goog.asserts.assert(o>=-jspb.BinaryConstants.TWO_TO_31&&o<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32(o)};jspb.BinaryEncoder.prototype.writeBytes=function(o){this.buffer_.push.apply(this.buffer_,o)};jspb.BinaryEncoder.prototype.writeVarintHash64=function(o){jspb.utils.splitHash64(o),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeFixedHash64=function(o){jspb.utils.splitHash64(o),this.writeUint32(jspb.utils.split64Low),this.writeUint32(jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeString=function(o){for(var t=this.buffer_.length,r=0;r<o.length;r++){var i=o.charCodeAt(r);if(128>i)this.buffer_.push(i);else if(2048>i)this.buffer_.push(i>>6|192),this.buffer_.push(i&63|128);else if(65536>i)if(55296<=i&&56319>=i&&r+1<o.length){var s=o.charCodeAt(r+1);56320<=s&&57343>=s&&(i=1024*(i-55296)+s-56320+65536,this.buffer_.push(i>>18|240),this.buffer_.push(i>>12&63|128),this.buffer_.push(i>>6&63|128),this.buffer_.push(i&63|128),r++)}else this.buffer_.push(i>>12|224),this.buffer_.push(i>>6&63|128),this.buffer_.push(i&63|128)}return this.buffer_.length-t};jspb.arith={};jspb.arith.UInt64=function(o,t){this.lo=o,this.hi=t};jspb.arith.UInt64.prototype.cmp=function(o){return this.hi<o.hi||this.hi==o.hi&&this.lo<o.lo?-1:this.hi==o.hi&&this.lo==o.lo?0:1};jspb.arith.UInt64.prototype.rightShift=function(){return new jspb.arith.UInt64((this.lo>>>1|(this.hi&1)<<31)>>>0,this.hi>>>1>>>0)};jspb.arith.UInt64.prototype.leftShift=function(){return new jspb.arith.UInt64(this.lo<<1>>>0,(this.hi<<1|this.lo>>>31)>>>0)};jspb.arith.UInt64.prototype.msb=function(){return!!(this.hi&2147483648)};jspb.arith.UInt64.prototype.lsb=function(){return!!(this.lo&1)};jspb.arith.UInt64.prototype.zero=function(){return this.lo==0&&this.hi==0};jspb.arith.UInt64.prototype.add=function(o){return new jspb.arith.UInt64((this.lo+o.lo&4294967295)>>>0>>>0,((this.hi+o.hi&4294967295)>>>0)+(4294967296<=this.lo+o.lo?1:0)>>>0)};jspb.arith.UInt64.prototype.sub=function(o){return new jspb.arith.UInt64((this.lo-o.lo&4294967295)>>>0>>>0,((this.hi-o.hi&4294967295)>>>0)-(0>this.lo-o.lo?1:0)>>>0)};jspb.arith.UInt64.mul32x32=function(o,t){var r=o&65535;o>>>=16;var i=t&65535,s=t>>>16;for(t=r*i+65536*(r*s&65535)+65536*(o*i&65535),r=o*s+(r*s>>>16)+(o*i>>>16);4294967296<=t;)t-=4294967296,r+=1;return new jspb.arith.UInt64(t>>>0,r>>>0)};jspb.arith.UInt64.prototype.mul=function(o){var t=jspb.arith.UInt64.mul32x32(this.lo,o);return o=jspb.arith.UInt64.mul32x32(this.hi,o),o.hi=o.lo,o.lo=0,t.add(o)};jspb.arith.UInt64.prototype.div=function(o){if(o==0)return[];var t=new jspb.arith.UInt64(0,0),r=new jspb.arith.UInt64(this.lo,this.hi);o=new jspb.arith.UInt64(o,0);for(var i=new jspb.arith.UInt64(1,0);!o.msb();)o=o.leftShift(),i=i.leftShift();for(;!i.zero();)0>=o.cmp(r)&&(t=t.add(i),r=r.sub(o)),o=o.rightShift(),i=i.rightShift();return[t,r]};jspb.arith.UInt64.prototype.toString=function(){for(var o="",t=this;!t.zero();){t=t.div(10);var r=t[0];o=t[1].lo+o,t=r}return o==""&&(o="0"),o};jspb.arith.UInt64.fromString=function(o){for(var t=new jspb.arith.UInt64(0,0),r=new jspb.arith.UInt64(0,0),i=0;i<o.length;i++){if("0">o[i]||"9"<o[i])return null;var s=parseInt(o[i],10);r.lo=s,t=t.mul(10).add(r)}return t};jspb.arith.UInt64.prototype.clone=function(){return new jspb.arith.UInt64(this.lo,this.hi)};jspb.arith.Int64=function(o,t){this.lo=o,this.hi=t};jspb.arith.Int64.prototype.add=function(o){return new jspb.arith.Int64((this.lo+o.lo&4294967295)>>>0>>>0,((this.hi+o.hi&4294967295)>>>0)+(4294967296<=this.lo+o.lo?1:0)>>>0)};jspb.arith.Int64.prototype.sub=function(o){return new jspb.arith.Int64((this.lo-o.lo&4294967295)>>>0>>>0,((this.hi-o.hi&4294967295)>>>0)-(0>this.lo-o.lo?1:0)>>>0)};jspb.arith.Int64.prototype.clone=function(){return new jspb.arith.Int64(this.lo,this.hi)};jspb.arith.Int64.prototype.toString=function(){var o=(this.hi&2147483648)!=0,t=new jspb.arith.UInt64(this.lo,this.hi);return o&&(t=new jspb.arith.UInt64(0,0).sub(t)),(o?"-":"")+t.toString()};jspb.arith.Int64.fromString=function(o){var t=0<o.length&&o[0]=="-";return t&&(o=o.substring(1)),o=jspb.arith.UInt64.fromString(o),o===null?null:(t&&(o=new jspb.arith.UInt64(0,0).sub(o)),new jspb.arith.Int64(o.lo,o.hi))};jspb.BinaryWriter=function(){this.blocks_=[],this.totalLength_=0,this.encoder_=new jspb.BinaryEncoder,this.bookmarks_=[]};jspb.BinaryWriter.prototype.appendUint8Array_=function(o){var t=this.encoder_.end();this.blocks_.push(t),this.blocks_.push(o),this.totalLength_+=t.length+o.length};jspb.BinaryWriter.prototype.beginDelimited_=function(o){return this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.DELIMITED),o=this.encoder_.end(),this.blocks_.push(o),this.totalLength_+=o.length,o.push(this.totalLength_),o};jspb.BinaryWriter.prototype.endDelimited_=function(o){var t=o.pop();for(t=this.totalLength_+this.encoder_.length()-t,goog.asserts.assert(0<=t);127<t;)o.push(t&127|128),t>>>=7,this.totalLength_++;o.push(t),this.totalLength_++};jspb.BinaryWriter.prototype.writeSerializedMessage=function(o,t,r){this.appendUint8Array_(o.subarray(t,r))};jspb.BinaryWriter.prototype.maybeWriteSerializedMessage=function(o,t,r){o!=null&&t!=null&&r!=null&&this.writeSerializedMessage(o,t,r)};jspb.BinaryWriter.prototype.reset=function(){this.blocks_=[],this.encoder_.end(),this.totalLength_=0,this.bookmarks_=[]};jspb.BinaryWriter.prototype.getResultBuffer=function(){goog.asserts.assert(this.bookmarks_.length==0);for(var o=new Uint8Array(this.totalLength_+this.encoder_.length()),t=this.blocks_,r=t.length,i=0,s=0;s<r;s++){var g=t[s];o.set(g,i),i+=g.length}return t=this.encoder_.end(),o.set(t,i),i+=t.length,goog.asserts.assert(i==o.length),this.blocks_=[o],o};jspb.BinaryWriter.prototype.getResultBase64String=function(o){return goog.crypt.base64.encodeByteArray(this.getResultBuffer(),o)};jspb.BinaryWriter.prototype.beginSubMessage=function(o){this.bookmarks_.push(this.beginDelimited_(o))};jspb.BinaryWriter.prototype.endSubMessage=function(){goog.asserts.assert(0<=this.bookmarks_.length),this.endDelimited_(this.bookmarks_.pop())};jspb.BinaryWriter.prototype.writeFieldHeader_=function(o,t){goog.asserts.assert(1<=o&&o==Math.floor(o)),this.encoder_.writeUnsignedVarint32(8*o+t)};jspb.BinaryWriter.prototype.writeAny=function(o,t,r){var i=jspb.BinaryConstants.FieldType;switch(o){case i.DOUBLE:this.writeDouble(t,r);break;case i.FLOAT:this.writeFloat(t,r);break;case i.INT64:this.writeInt64(t,r);break;case i.UINT64:this.writeUint64(t,r);break;case i.INT32:this.writeInt32(t,r);break;case i.FIXED64:this.writeFixed64(t,r);break;case i.FIXED32:this.writeFixed32(t,r);break;case i.BOOL:this.writeBool(t,r);break;case i.STRING:this.writeString(t,r);break;case i.GROUP:goog.asserts.fail("Group field type not supported in writeAny()");break;case i.MESSAGE:goog.asserts.fail("Message field type not supported in writeAny()");break;case i.BYTES:this.writeBytes(t,r);break;case i.UINT32:this.writeUint32(t,r);break;case i.ENUM:this.writeEnum(t,r);break;case i.SFIXED32:this.writeSfixed32(t,r);break;case i.SFIXED64:this.writeSfixed64(t,r);break;case i.SINT32:this.writeSint32(t,r);break;case i.SINT64:this.writeSint64(t,r);break;case i.FHASH64:this.writeFixedHash64(t,r);break;case i.VHASH64:this.writeVarintHash64(t,r);break;default:goog.asserts.fail("Invalid field type in writeAny()")}};jspb.BinaryWriter.prototype.writeUnsignedVarint32_=function(o,t){t!=null&&(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint32(t))};jspb.BinaryWriter.prototype.writeSignedVarint32_=function(o,t){t!=null&&(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(t))};jspb.BinaryWriter.prototype.writeUnsignedVarint64_=function(o,t){t!=null&&(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint64(t))};jspb.BinaryWriter.prototype.writeSignedVarint64_=function(o,t){t!=null&&(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint64(t))};jspb.BinaryWriter.prototype.writeZigzagVarint32_=function(o,t){t!=null&&(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint32(t))};jspb.BinaryWriter.prototype.writeZigzagVarint64_=function(o,t){t!=null&&(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64(t))};jspb.BinaryWriter.prototype.writeZigzagVarint64String_=function(o,t){t!=null&&(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64String(t))};jspb.BinaryWriter.prototype.writeZigzagVarintHash64_=function(o,t){t!=null&&(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarintHash64(t))};jspb.BinaryWriter.prototype.writeInt32=function(o,t){t!=null&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(o,t))};jspb.BinaryWriter.prototype.writeInt32String=function(o,t){t!=null&&(t=parseInt(t,10),goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(o,t))};jspb.BinaryWriter.prototype.writeInt64=function(o,t){t!=null&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_63&&t<jspb.BinaryConstants.TWO_TO_63),this.writeSignedVarint64_(o,t))};jspb.BinaryWriter.prototype.writeInt64String=function(o,t){t!=null&&(t=jspb.arith.Int64.fromString(t),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(t.lo,t.hi))};jspb.BinaryWriter.prototype.writeUint32=function(o,t){t!=null&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(o,t))};jspb.BinaryWriter.prototype.writeUint32String=function(o,t){t!=null&&(t=parseInt(t,10),goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(o,t))};jspb.BinaryWriter.prototype.writeUint64=function(o,t){t!=null&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_64),this.writeUnsignedVarint64_(o,t))};jspb.BinaryWriter.prototype.writeUint64String=function(o,t){t!=null&&(t=jspb.arith.UInt64.fromString(t),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(t.lo,t.hi))};jspb.BinaryWriter.prototype.writeSint32=function(o,t){t!=null&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeZigzagVarint32_(o,t))};jspb.BinaryWriter.prototype.writeSint64=function(o,t){t!=null&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_63&&t<jspb.BinaryConstants.TWO_TO_63),this.writeZigzagVarint64_(o,t))};jspb.BinaryWriter.prototype.writeSintHash64=function(o,t){t!=null&&this.writeZigzagVarintHash64_(o,t)};jspb.BinaryWriter.prototype.writeSint64String=function(o,t){t!=null&&this.writeZigzagVarint64String_(o,t)};jspb.BinaryWriter.prototype.writeFixed32=function(o,t){t!=null&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeUint32(t))};jspb.BinaryWriter.prototype.writeFixed64=function(o,t){t!=null&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_64),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeUint64(t))};jspb.BinaryWriter.prototype.writeFixed64String=function(o,t){t!=null&&(t=jspb.arith.UInt64.fromString(t),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(t.lo,t.hi))};jspb.BinaryWriter.prototype.writeSfixed32=function(o,t){t!=null&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeInt32(t))};jspb.BinaryWriter.prototype.writeSfixed64=function(o,t){t!=null&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_63&&t<jspb.BinaryConstants.TWO_TO_63),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeInt64(t))};jspb.BinaryWriter.prototype.writeSfixed64String=function(o,t){t!=null&&(t=jspb.arith.Int64.fromString(t),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(t.lo,t.hi))};jspb.BinaryWriter.prototype.writeFloat=function(o,t){t!=null&&(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeFloat(t))};jspb.BinaryWriter.prototype.writeDouble=function(o,t){t!=null&&(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeDouble(t))};jspb.BinaryWriter.prototype.writeBool=function(o,t){t!=null&&(goog.asserts.assert(typeof t=="boolean"||typeof t=="number"),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeBool(t))};jspb.BinaryWriter.prototype.writeEnum=function(o,t){t!=null&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(t))};jspb.BinaryWriter.prototype.writeString=function(o,t){t!=null&&(o=this.beginDelimited_(o),this.encoder_.writeString(t),this.endDelimited_(o))};jspb.BinaryWriter.prototype.writeBytes=function(o,t){t!=null&&(t=jspb.utils.byteSourceToUint8Array(t),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(t.length),this.appendUint8Array_(t))};jspb.BinaryWriter.prototype.writeMessage=function(o,t,r){t!=null&&(o=this.beginDelimited_(o),r(t,this),this.endDelimited_(o))};jspb.BinaryWriter.prototype.writeMessageSet=function(o,t,r){t!=null&&(this.writeFieldHeader_(1,jspb.BinaryConstants.WireType.START_GROUP),this.writeFieldHeader_(2,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(o),o=this.beginDelimited_(3),r(t,this),this.endDelimited_(o),this.writeFieldHeader_(1,jspb.BinaryConstants.WireType.END_GROUP))};jspb.BinaryWriter.prototype.writeGroup=function(o,t,r){t!=null&&(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.START_GROUP),r(t,this),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.END_GROUP))};jspb.BinaryWriter.prototype.writeFixedHash64=function(o,t){t!=null&&(goog.asserts.assert(t.length==8),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeFixedHash64(t))};jspb.BinaryWriter.prototype.writeVarintHash64=function(o,t){t!=null&&(goog.asserts.assert(t.length==8),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeVarintHash64(t))};jspb.BinaryWriter.prototype.writeSplitFixed64=function(o,t,r){this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(t,r)};jspb.BinaryWriter.prototype.writeSplitVarint64=function(o,t,r){this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(t,r)};jspb.BinaryWriter.prototype.writeSplitZigzagVarint64=function(o,t,r){this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.VARINT);var i=this.encoder_;jspb.utils.toZigzag64(t,r,function(s,g){i.writeSplitVarint64(s>>>0,g>>>0)})};jspb.BinaryWriter.prototype.writeRepeatedInt32=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeSignedVarint32_(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedInt32String=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeInt32String(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedInt64=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeSignedVarint64_(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedSplitFixed64=function(o,t,r,i){if(t!=null)for(var s=0;s<t.length;s++)this.writeSplitFixed64(o,r(t[s]),i(t[s]))};jspb.BinaryWriter.prototype.writeRepeatedSplitVarint64=function(o,t,r,i){if(t!=null)for(var s=0;s<t.length;s++)this.writeSplitVarint64(o,r(t[s]),i(t[s]))};jspb.BinaryWriter.prototype.writeRepeatedSplitZigzagVarint64=function(o,t,r,i){if(t!=null)for(var s=0;s<t.length;s++)this.writeSplitZigzagVarint64(o,r(t[s]),i(t[s]))};jspb.BinaryWriter.prototype.writeRepeatedInt64String=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeInt64String(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedUint32=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeUnsignedVarint32_(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedUint32String=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeUint32String(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedUint64=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeUnsignedVarint64_(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedUint64String=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeUint64String(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedSint32=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeZigzagVarint32_(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedSint64=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeZigzagVarint64_(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedSint64String=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeZigzagVarint64String_(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedSintHash64=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeZigzagVarintHash64_(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedFixed32=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeFixed32(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedFixed64=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeFixed64(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedFixed64String=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeFixed64String(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedSfixed32=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeSfixed32(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedSfixed64=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeSfixed64(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedSfixed64String=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeSfixed64String(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedFloat=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeFloat(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedDouble=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeDouble(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedBool=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeBool(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedEnum=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeEnum(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedString=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeString(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedBytes=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeBytes(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedMessage=function(o,t,r){if(t!=null)for(var i=0;i<t.length;i++){var s=this.beginDelimited_(o);r(t[i],this),this.endDelimited_(s)}};jspb.BinaryWriter.prototype.writeRepeatedGroup=function(o,t,r){if(t!=null)for(var i=0;i<t.length;i++)this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.START_GROUP),r(t[i],this),this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.END_GROUP)};jspb.BinaryWriter.prototype.writeRepeatedFixedHash64=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeFixedHash64(o,t[r])};jspb.BinaryWriter.prototype.writeRepeatedVarintHash64=function(o,t){if(t!=null)for(var r=0;r<t.length;r++)this.writeVarintHash64(o,t[r])};jspb.BinaryWriter.prototype.writePackedInt32=function(o,t){if(t!=null&&t.length){o=this.beginDelimited_(o);for(var r=0;r<t.length;r++)this.encoder_.writeSignedVarint32(t[r]);this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedInt32String=function(o,t){if(t!=null&&t.length){o=this.beginDelimited_(o);for(var r=0;r<t.length;r++)this.encoder_.writeSignedVarint32(parseInt(t[r],10));this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedInt64=function(o,t){if(t!=null&&t.length){o=this.beginDelimited_(o);for(var r=0;r<t.length;r++)this.encoder_.writeSignedVarint64(t[r]);this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedSplitFixed64=function(o,t,r,i){if(t!=null){o=this.beginDelimited_(o);for(var s=0;s<t.length;s++)this.encoder_.writeSplitFixed64(r(t[s]),i(t[s]));this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedSplitVarint64=function(o,t,r,i){if(t!=null){o=this.beginDelimited_(o);for(var s=0;s<t.length;s++)this.encoder_.writeSplitVarint64(r(t[s]),i(t[s]));this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedSplitZigzagVarint64=function(o,t,r,i){if(t!=null){o=this.beginDelimited_(o);for(var s=this.encoder_,g=0;g<t.length;g++)jspb.utils.toZigzag64(r(t[g]),i(t[g]),function(l,h){s.writeSplitVarint64(l>>>0,h>>>0)});this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedInt64String=function(o,t){if(t!=null&&t.length){o=this.beginDelimited_(o);for(var r=0;r<t.length;r++){var i=jspb.arith.Int64.fromString(t[r]);this.encoder_.writeSplitVarint64(i.lo,i.hi)}this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedUint32=function(o,t){if(t!=null&&t.length){o=this.beginDelimited_(o);for(var r=0;r<t.length;r++)this.encoder_.writeUnsignedVarint32(t[r]);this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedUint32String=function(o,t){if(t!=null&&t.length){o=this.beginDelimited_(o);for(var r=0;r<t.length;r++)this.encoder_.writeUnsignedVarint32(parseInt(t[r],10));this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedUint64=function(o,t){if(t!=null&&t.length){o=this.beginDelimited_(o);for(var r=0;r<t.length;r++)this.encoder_.writeUnsignedVarint64(t[r]);this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedUint64String=function(o,t){if(t!=null&&t.length){o=this.beginDelimited_(o);for(var r=0;r<t.length;r++){var i=jspb.arith.UInt64.fromString(t[r]);this.encoder_.writeSplitVarint64(i.lo,i.hi)}this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedSint32=function(o,t){if(t!=null&&t.length){o=this.beginDelimited_(o);for(var r=0;r<t.length;r++)this.encoder_.writeZigzagVarint32(t[r]);this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedSint64=function(o,t){if(t!=null&&t.length){o=this.beginDelimited_(o);for(var r=0;r<t.length;r++)this.encoder_.writeZigzagVarint64(t[r]);this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedSint64String=function(o,t){if(t!=null&&t.length){o=this.beginDelimited_(o);for(var r=0;r<t.length;r++)this.encoder_.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(t[r]));this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedSintHash64=function(o,t){if(t!=null&&t.length){o=this.beginDelimited_(o);for(var r=0;r<t.length;r++)this.encoder_.writeZigzagVarintHash64(t[r]);this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedFixed32=function(o,t){if(t!=null&&t.length)for(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*t.length),o=0;o<t.length;o++)this.encoder_.writeUint32(t[o])};jspb.BinaryWriter.prototype.writePackedFixed64=function(o,t){if(t!=null&&t.length)for(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length),o=0;o<t.length;o++)this.encoder_.writeUint64(t[o])};jspb.BinaryWriter.prototype.writePackedFixed64String=function(o,t){if(t!=null&&t.length)for(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length),o=0;o<t.length;o++){var r=jspb.arith.UInt64.fromString(t[o]);this.encoder_.writeSplitFixed64(r.lo,r.hi)}};jspb.BinaryWriter.prototype.writePackedSfixed32=function(o,t){if(t!=null&&t.length)for(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*t.length),o=0;o<t.length;o++)this.encoder_.writeInt32(t[o])};jspb.BinaryWriter.prototype.writePackedSfixed64=function(o,t){if(t!=null&&t.length)for(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length),o=0;o<t.length;o++)this.encoder_.writeInt64(t[o])};jspb.BinaryWriter.prototype.writePackedSfixed64String=function(o,t){if(t!=null&&t.length)for(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length),o=0;o<t.length;o++)this.encoder_.writeInt64String(t[o])};jspb.BinaryWriter.prototype.writePackedFloat=function(o,t){if(t!=null&&t.length)for(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*t.length),o=0;o<t.length;o++)this.encoder_.writeFloat(t[o])};jspb.BinaryWriter.prototype.writePackedDouble=function(o,t){if(t!=null&&t.length)for(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length),o=0;o<t.length;o++)this.encoder_.writeDouble(t[o])};jspb.BinaryWriter.prototype.writePackedBool=function(o,t){if(t!=null&&t.length)for(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(t.length),o=0;o<t.length;o++)this.encoder_.writeBool(t[o])};jspb.BinaryWriter.prototype.writePackedEnum=function(o,t){if(t!=null&&t.length){o=this.beginDelimited_(o);for(var r=0;r<t.length;r++)this.encoder_.writeEnum(t[r]);this.endDelimited_(o)}};jspb.BinaryWriter.prototype.writePackedFixedHash64=function(o,t){if(t!=null&&t.length)for(this.writeFieldHeader_(o,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length),o=0;o<t.length;o++)this.encoder_.writeFixedHash64(t[o])};jspb.BinaryWriter.prototype.writePackedVarintHash64=function(o,t){if(t!=null&&t.length){o=this.beginDelimited_(o);for(var r=0;r<t.length;r++)this.encoder_.writeVarintHash64(t[r]);this.endDelimited_(o)}};jspb.Map=function(o,t){this.arr_=o,this.valueCtor_=t,this.map_={},this.arrClean=!0,0<this.arr_.length&&this.loadFromArray_()};jspb.Map.prototype.loadFromArray_=function(){for(var o=0;o<this.arr_.length;o++){var t=this.arr_[o],r=t[0];this.map_[r.toString()]=new jspb.Map.Entry_(r,t[1])}this.arrClean=!0};jspb.Map.prototype.toArray=function(){if(this.arrClean){if(this.valueCtor_){var o=this.map_,t;for(t in o)if(Object.prototype.hasOwnProperty.call(o,t)){var r=o[t].valueWrapper;r&&r.toArray()}}}else{for(this.arr_.length=0,o=this.stringKeys_(),o.sort(),t=0;t<o.length;t++){var i=this.map_[o[t]];(r=i.valueWrapper)&&r.toArray(),this.arr_.push([i.key,i.value])}this.arrClean=!0}return this.arr_};jspb.Map.prototype.toObject=function(o,t){for(var r=this.toArray(),i=[],s=0;s<r.length;s++){var g=this.map_[r[s][0].toString()];this.wrapEntry_(g);var l=g.valueWrapper;l?(goog.asserts.assert(t),i.push([g.key,t(o,l)])):i.push([g.key,g.value])}return i};jspb.Map.fromObject=function(o,t,r){t=new jspb.Map([],t);for(var i=0;i<o.length;i++){var s=o[i][0],g=r(o[i][1]);t.set(s,g)}return t};jspb.Map.ArrayIteratorIterable_=function(o){this.idx_=0,this.arr_=o};jspb.Map.ArrayIteratorIterable_.prototype.next=function(){return this.idx_<this.arr_.length?{done:!1,value:this.arr_[this.idx_++]}:{done:!0,value:void 0}};typeof Symbol<"u"&&(jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator]=function(){return this});jspb.Map.prototype.getLength=function(){return this.stringKeys_().length};jspb.Map.prototype.clear=function(){this.map_={},this.arrClean=!1};jspb.Map.prototype.del=function(o){o=o.toString();var t=this.map_.hasOwnProperty(o);return delete this.map_[o],this.arrClean=!1,t};jspb.Map.prototype.getEntryList=function(){var o=[],t=this.stringKeys_();t.sort();for(var r=0;r<t.length;r++){var i=this.map_[t[r]];o.push([i.key,i.value])}return o};jspb.Map.prototype.entries=function(){var o=[],t=this.stringKeys_();t.sort();for(var r=0;r<t.length;r++){var i=this.map_[t[r]];o.push([i.key,this.wrapEntry_(i)])}return new jspb.Map.ArrayIteratorIterable_(o)};jspb.Map.prototype.keys=function(){var o=[],t=this.stringKeys_();t.sort();for(var r=0;r<t.length;r++)o.push(this.map_[t[r]].key);return new jspb.Map.ArrayIteratorIterable_(o)};jspb.Map.prototype.values=function(){var o=[],t=this.stringKeys_();t.sort();for(var r=0;r<t.length;r++)o.push(this.wrapEntry_(this.map_[t[r]]));return new jspb.Map.ArrayIteratorIterable_(o)};jspb.Map.prototype.forEach=function(o,t){var r=this.stringKeys_();r.sort();for(var i=0;i<r.length;i++){var s=this.map_[r[i]];o.call(t,this.wrapEntry_(s),s.key,this)}};jspb.Map.prototype.set=function(o,t){var r=new jspb.Map.Entry_(o);return this.valueCtor_?(r.valueWrapper=t,r.value=t.toArray()):r.value=t,this.map_[o.toString()]=r,this.arrClean=!1,this};jspb.Map.prototype.wrapEntry_=function(o){return this.valueCtor_?(o.valueWrapper||(o.valueWrapper=new this.valueCtor_(o.value)),o.valueWrapper):o.value};jspb.Map.prototype.get=function(o){if(o=this.map_[o.toString()])return this.wrapEntry_(o)};jspb.Map.prototype.has=function(o){return o.toString()in this.map_};jspb.Map.prototype.serializeBinary=function(o,t,r,i,s){var g=this.stringKeys_();g.sort();for(var l=0;l<g.length;l++){var h=this.map_[g[l]];t.beginSubMessage(o),r.call(t,1,h.key),this.valueCtor_?i.call(t,2,this.wrapEntry_(h),s):i.call(t,2,h.value),t.endSubMessage()}};jspb.Map.deserializeBinary=function(o,t,r,i,s,g,l){for(;t.nextField()&&!t.isEndGroup();){var h=t.getFieldNumber();h==1?g=r.call(t):h==2&&(o.valueCtor_?(goog.asserts.assert(s),l||(l=new o.valueCtor_),i.call(t,l,s)):l=i.call(t))}goog.asserts.assert(g!=null),goog.asserts.assert(l!=null),o.set(g,l)};jspb.Map.prototype.stringKeys_=function(){var o=this.map_,t=[],r;for(r in o)Object.prototype.hasOwnProperty.call(o,r)&&t.push(r);return t};jspb.Map.Entry_=function(o,t){this.key=o,this.value=t,this.valueWrapper=void 0};jspb.ExtensionFieldInfo=function(o,t,r,i,s){this.fieldIndex=o,this.fieldName=t,this.ctor=r,this.toObjectFn=i,this.isRepeated=s};jspb.ExtensionFieldBinaryInfo=function(o,t,r,i,s,g){this.fieldInfo=o,this.binaryReaderFn=t,this.binaryWriterFn=r,this.binaryMessageSerializeFn=i,this.binaryMessageDeserializeFn=s,this.isPacked=g};jspb.ExtensionFieldInfo.prototype.isMessageType=function(){return!!this.ctor};jspb.Message=function(){};jspb.Message.GENERATE_TO_OBJECT=!0;jspb.Message.GENERATE_FROM_OBJECT=!goog.DISALLOW_TEST_ONLY_CODE;jspb.Message.GENERATE_TO_STRING=!0;jspb.Message.ASSUME_LOCAL_ARRAYS=!1;jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS=!0;jspb.Message.SUPPORTS_UINT8ARRAY_=typeof Uint8Array=="function";jspb.Message.prototype.getJsPbMessageId=function(){return this.messageId_};jspb.Message.getIndex_=function(o,t){return t+o.arrayIndexOffset_};jspb.Message.hiddenES6Property_=function(){};jspb.Message.getFieldNumber_=function(o,t){return t-o.arrayIndexOffset_};jspb.Message.initialize=function(o,t,r,i,s,g){if(o.wrappers_=null,t||(t=r?[r]:[]),o.messageId_=r?String(r):void 0,o.arrayIndexOffset_=r===0?-1:0,o.array=t,jspb.Message.initPivotAndExtensionObject_(o,i),o.convertedPrimitiveFields_={},jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS||(o.repeatedFields=s),s)for(t=0;t<s.length;t++)r=s[t],r<o.pivot_?(r=jspb.Message.getIndex_(o,r),o.array[r]=o.array[r]||jspb.Message.EMPTY_LIST_SENTINEL_):(jspb.Message.maybeInitEmptyExtensionObject_(o),o.extensionObject_[r]=o.extensionObject_[r]||jspb.Message.EMPTY_LIST_SENTINEL_);if(g&&g.length)for(t=0;t<g.length;t++)jspb.Message.computeOneofCase(o,g[t])};jspb.Message.EMPTY_LIST_SENTINEL_=goog.DEBUG&&Object.freeze?Object.freeze([]):[];jspb.Message.isArray_=function(o){return jspb.Message.ASSUME_LOCAL_ARRAYS?o instanceof Array:Array.isArray(o)};jspb.Message.isExtensionObject_=function(o){return o!==null&&typeof o=="object"&&!jspb.Message.isArray_(o)&&!(jspb.Message.SUPPORTS_UINT8ARRAY_&&o instanceof Uint8Array)};jspb.Message.initPivotAndExtensionObject_=function(o,t){var r=o.array.length,i=-1;if(r&&(i=r-1,r=o.array[i],jspb.Message.isExtensionObject_(r))){o.pivot_=jspb.Message.getFieldNumber_(o,i),o.extensionObject_=r;return}-1<t?(o.pivot_=Math.max(t,jspb.Message.getFieldNumber_(o,i+1)),o.extensionObject_=null):o.pivot_=Number.MAX_VALUE};jspb.Message.maybeInitEmptyExtensionObject_=function(o){var t=jspb.Message.getIndex_(o,o.pivot_);o.array[t]||(o.extensionObject_=o.array[t]={})};jspb.Message.toObjectList=function(o,t,r){for(var i=[],s=0;s<o.length;s++)i[s]=t.call(o[s],r,o[s]);return i};jspb.Message.toObjectExtension=function(o,t,r,i,s){for(var g in r){var l=r[g],h=i.call(o,l);if(h!=null){for(var m in l.fieldName)if(l.fieldName.hasOwnProperty(m))break;t[m]=l.toObjectFn?l.isRepeated?jspb.Message.toObjectList(h,l.toObjectFn,s):l.toObjectFn(s,h):h}}};jspb.Message.serializeBinaryExtensions=function(o,t,r,i){for(var s in r){var g=r[s],l=g.fieldInfo;if(!g.binaryWriterFn)throw Error("Message extension present that was generated without binary serialization support");var h=i.call(o,l);if(h!=null)if(l.isMessageType())if(g.binaryMessageSerializeFn)g.binaryWriterFn.call(t,l.fieldIndex,h,g.binaryMessageSerializeFn);else throw Error("Message extension present holding submessage without binary support enabled, and message is being serialized to binary format");else g.binaryWriterFn.call(t,l.fieldIndex,h)}};jspb.Message.readBinaryExtension=function(o,t,r,i,s){var g=r[t.getFieldNumber()];if(g){if(r=g.fieldInfo,!g.binaryReaderFn)throw Error("Deserializing extension whose generated code does not support binary format");if(r.isMessageType()){var l=new r.ctor;g.binaryReaderFn.call(t,l,g.binaryMessageDeserializeFn)}else l=g.binaryReaderFn.call(t);r.isRepeated&&!g.isPacked?(t=i.call(o,r))?t.push(l):s.call(o,r,[l]):s.call(o,r,l)}else t.skipField()};jspb.Message.getField=function(o,t){if(t<o.pivot_){t=jspb.Message.getIndex_(o,t);var r=o.array[t];return r===jspb.Message.EMPTY_LIST_SENTINEL_?o.array[t]=[]:r}if(o.extensionObject_)return r=o.extensionObject_[t],r===jspb.Message.EMPTY_LIST_SENTINEL_?o.extensionObject_[t]=[]:r};jspb.Message.getRepeatedField=function(o,t){return jspb.Message.getField(o,t)};jspb.Message.getOptionalFloatingPointField=function(o,t){return o=jspb.Message.getField(o,t),o==null?o:+o};jspb.Message.getBooleanField=function(o,t){return o=jspb.Message.getField(o,t),o==null?o:!!o};jspb.Message.getRepeatedFloatingPointField=function(o,t){var r=jspb.Message.getRepeatedField(o,t);if(o.convertedPrimitiveFields_||(o.convertedPrimitiveFields_={}),!o.convertedPrimitiveFields_[t]){for(var i=0;i<r.length;i++)r[i]=+r[i];o.convertedPrimitiveFields_[t]=!0}return r};jspb.Message.getRepeatedBooleanField=function(o,t){var r=jspb.Message.getRepeatedField(o,t);if(o.convertedPrimitiveFields_||(o.convertedPrimitiveFields_={}),!o.convertedPrimitiveFields_[t]){for(var i=0;i<r.length;i++)r[i]=!!r[i];o.convertedPrimitiveFields_[t]=!0}return r};jspb.Message.bytesAsB64=function(o){return o==null||typeof o=="string"?o:jspb.Message.SUPPORTS_UINT8ARRAY_&&o instanceof Uint8Array?goog.crypt.base64.encodeByteArray(o):(goog.asserts.fail("Cannot coerce to b64 string: "+goog.typeOf(o)),null)};jspb.Message.bytesAsU8=function(o){return o==null||o instanceof Uint8Array?o:typeof o=="string"?goog.crypt.base64.decodeStringToUint8Array(o):(goog.asserts.fail("Cannot coerce to Uint8Array: "+goog.typeOf(o)),null)};jspb.Message.bytesListAsB64=function(o){return jspb.Message.assertConsistentTypes_(o),o.length&&typeof o[0]!="string"?goog.array.map(o,jspb.Message.bytesAsB64):o};jspb.Message.bytesListAsU8=function(o){return jspb.Message.assertConsistentTypes_(o),!o.length||o[0]instanceof Uint8Array?o:goog.array.map(o,jspb.Message.bytesAsU8)};jspb.Message.assertConsistentTypes_=function(o){if(goog.DEBUG&&o&&1<o.length){var t=goog.typeOf(o[0]);goog.array.forEach(o,function(r){goog.typeOf(r)!=t&&goog.asserts.fail("Inconsistent type in JSPB repeated field array. Got "+goog.typeOf(r)+" expected "+t)})}};jspb.Message.getFieldWithDefault=function(o,t,r){return o=jspb.Message.getField(o,t),o??r};jspb.Message.getBooleanFieldWithDefault=function(o,t,r){return o=jspb.Message.getBooleanField(o,t),o??r};jspb.Message.getFloatingPointFieldWithDefault=function(o,t,r){return o=jspb.Message.getOptionalFloatingPointField(o,t),o??r};jspb.Message.getFieldProto3=jspb.Message.getFieldWithDefault;jspb.Message.getMapField=function(o,t,r,i){if(o.wrappers_||(o.wrappers_={}),t in o.wrappers_)return o.wrappers_[t];var s=jspb.Message.getField(o,t);if(!s){if(r)return;s=[],jspb.Message.setField(o,t,s)}return o.wrappers_[t]=new jspb.Map(s,i)};jspb.Message.setField=function(o,t,r){return goog.asserts.assertInstanceof(o,jspb.Message),t<o.pivot_?o.array[jspb.Message.getIndex_(o,t)]=r:(jspb.Message.maybeInitEmptyExtensionObject_(o),o.extensionObject_[t]=r),o};jspb.Message.setProto3IntField=function(o,t,r){return jspb.Message.setFieldIgnoringDefault_(o,t,r,0)};jspb.Message.setProto3FloatField=function(o,t,r){return jspb.Message.setFieldIgnoringDefault_(o,t,r,0)};jspb.Message.setProto3BooleanField=function(o,t,r){return jspb.Message.setFieldIgnoringDefault_(o,t,r,!1)};jspb.Message.setProto3StringField=function(o,t,r){return jspb.Message.setFieldIgnoringDefault_(o,t,r,"")};jspb.Message.setProto3BytesField=function(o,t,r){return jspb.Message.setFieldIgnoringDefault_(o,t,r,"")};jspb.Message.setProto3EnumField=function(o,t,r){return jspb.Message.setFieldIgnoringDefault_(o,t,r,0)};jspb.Message.setProto3StringIntField=function(o,t,r){return jspb.Message.setFieldIgnoringDefault_(o,t,r,"0")};jspb.Message.setFieldIgnoringDefault_=function(o,t,r,i){return goog.asserts.assertInstanceof(o,jspb.Message),r!==i?jspb.Message.setField(o,t,r):t<o.pivot_?o.array[jspb.Message.getIndex_(o,t)]=null:(jspb.Message.maybeInitEmptyExtensionObject_(o),delete o.extensionObject_[t]),o};jspb.Message.addToRepeatedField=function(o,t,r,i){return goog.asserts.assertInstanceof(o,jspb.Message),t=jspb.Message.getRepeatedField(o,t),i!=null?t.splice(i,0,r):t.push(r),o};jspb.Message.setOneofField=function(o,t,r,i){return goog.asserts.assertInstanceof(o,jspb.Message),(r=jspb.Message.computeOneofCase(o,r))&&r!==t&&i!==void 0&&(o.wrappers_&&r in o.wrappers_&&(o.wrappers_[r]=void 0),jspb.Message.setField(o,r,void 0)),jspb.Message.setField(o,t,i)};jspb.Message.computeOneofCase=function(o,t){for(var r,i,s=0;s<t.length;s++){var g=t[s],l=jspb.Message.getField(o,g);l!=null&&(r=g,i=l,jspb.Message.setField(o,g,void 0))}return r?(jspb.Message.setField(o,r,i),r):0};jspb.Message.getWrapperField=function(o,t,r,i){if(o.wrappers_||(o.wrappers_={}),!o.wrappers_[r]){var s=jspb.Message.getField(o,r);(i||s)&&(o.wrappers_[r]=new t(s))}return o.wrappers_[r]};jspb.Message.getRepeatedWrapperField=function(o,t,r){return jspb.Message.wrapRepeatedField_(o,t,r),t=o.wrappers_[r],t==jspb.Message.EMPTY_LIST_SENTINEL_&&(t=o.wrappers_[r]=[]),t};jspb.Message.wrapRepeatedField_=function(o,t,r){if(o.wrappers_||(o.wrappers_={}),!o.wrappers_[r]){for(var i=jspb.Message.getRepeatedField(o,r),s=[],g=0;g<i.length;g++)s[g]=new t(i[g]);o.wrappers_[r]=s}};jspb.Message.setWrapperField=function(o,t,r){goog.asserts.assertInstanceof(o,jspb.Message),o.wrappers_||(o.wrappers_={});var i=r&&r.toArray();return o.wrappers_[t]=r,jspb.Message.setField(o,t,i)};jspb.Message.setOneofWrapperField=function(o,t,r,i){goog.asserts.assertInstanceof(o,jspb.Message),o.wrappers_||(o.wrappers_={});var s=i&&i.toArray();return o.wrappers_[t]=i,jspb.Message.setOneofField(o,t,r,s)};jspb.Message.setRepeatedWrapperField=function(o,t,r){goog.asserts.assertInstanceof(o,jspb.Message),o.wrappers_||(o.wrappers_={}),r=r||[];for(var i=[],s=0;s<r.length;s++)i[s]=r[s].toArray();return o.wrappers_[t]=r,jspb.Message.setField(o,t,i)};jspb.Message.addToRepeatedWrapperField=function(o,t,r,i,s){jspb.Message.wrapRepeatedField_(o,i,t);var g=o.wrappers_[t];return g||(g=o.wrappers_[t]=[]),r=r||new i,o=jspb.Message.getRepeatedField(o,t),s!=null?(g.splice(s,0,r),o.splice(s,0,r.toArray())):(g.push(r),o.push(r.toArray())),r};jspb.Message.toMap=function(o,t,r,i){for(var s={},g=0;g<o.length;g++)s[t.call(o[g])]=r?r.call(o[g],i,o[g]):o[g];return s};jspb.Message.prototype.syncMapFields_=function(){if(this.wrappers_)for(var o in this.wrappers_){var t=this.wrappers_[o];if(Array.isArray(t))for(var r=0;r<t.length;r++)t[r]&&t[r].toArray();else t&&t.toArray()}};jspb.Message.prototype.toArray=function(){return this.syncMapFields_(),this.array};jspb.Message.GENERATE_TO_STRING&&(jspb.Message.prototype.toString=function(){return this.syncMapFields_(),this.array.toString()});jspb.Message.prototype.getExtension=function(o){if(this.extensionObject_){this.wrappers_||(this.wrappers_={});var t=o.fieldIndex;if(o.isRepeated){if(o.isMessageType())return this.wrappers_[t]||(this.wrappers_[t]=goog.array.map(this.extensionObject_[t]||[],function(r){return new o.ctor(r)})),this.wrappers_[t]}else if(o.isMessageType())return!this.wrappers_[t]&&this.extensionObject_[t]&&(this.wrappers_[t]=new o.ctor(this.extensionObject_[t])),this.wrappers_[t];return this.extensionObject_[t]}};jspb.Message.prototype.setExtension=function(o,t){this.wrappers_||(this.wrappers_={}),jspb.Message.maybeInitEmptyExtensionObject_(this);var r=o.fieldIndex;return o.isRepeated?(t=t||[],o.isMessageType()?(this.wrappers_[r]=t,this.extensionObject_[r]=goog.array.map(t,function(i){return i.toArray()})):this.extensionObject_[r]=t):o.isMessageType()?(this.wrappers_[r]=t,this.extensionObject_[r]=t&&t.toArray()):this.extensionObject_[r]=t,this};jspb.Message.difference=function(o,t){if(!(o instanceof t.constructor))throw Error("Messages have different types.");var r=o.toArray();t=t.toArray();var i=[],s=0,g=r.length>t.length?r.length:t.length;for(o.getJsPbMessageId()&&(i[0]=o.getJsPbMessageId(),s=1);s<g;s++)jspb.Message.compareFields(r[s],t[s])||(i[s]=t[s]);return new o.constructor(i)};jspb.Message.equals=function(o,t){return o==t||!(!o||!t)&&o instanceof t.constructor&&jspb.Message.compareFields(o.toArray(),t.toArray())};jspb.Message.compareExtensions=function(o,t){o=o||{},t=t||{};var r={},i;for(i in o)r[i]=0;for(i in t)r[i]=0;for(i in r)if(!jspb.Message.compareFields(o[i],t[i]))return!1;return!0};jspb.Message.compareFields=function(o,t){if(o==t)return!0;if(!goog.isObject(o)||!goog.isObject(t))return typeof o=="number"&&isNaN(o)||typeof t=="number"&&isNaN(t)?String(o)==String(t):!1;if(o.constructor!=t.constructor)return!1;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&o.constructor===Uint8Array){if(o.length!=t.length)return!1;for(var r=0;r<o.length;r++)if(o[r]!=t[r])return!1;return!0}if(o.constructor===Array){var i=void 0,s=void 0,g=Math.max(o.length,t.length);for(r=0;r<g;r++){var l=o[r],h=t[r];if(l&&l.constructor==Object&&(goog.asserts.assert(i===void 0),goog.asserts.assert(r===o.length-1),i=l,l=void 0),h&&h.constructor==Object&&(goog.asserts.assert(s===void 0),goog.asserts.assert(r===t.length-1),s=h,h=void 0),!jspb.Message.compareFields(l,h))return!1}return i||s?(i=i||{},s=s||{},jspb.Message.compareExtensions(i,s)):!0}if(o.constructor===Object)return jspb.Message.compareExtensions(o,t);throw Error("Invalid type in JSPB array")};jspb.Message.prototype.cloneMessage=function(){return jspb.Message.cloneMessage(this)};jspb.Message.prototype.clone=function(){return jspb.Message.cloneMessage(this)};jspb.Message.clone=function(o){return jspb.Message.cloneMessage(o)};jspb.Message.cloneMessage=function(o){return new o.constructor(jspb.Message.clone_(o.toArray()))};jspb.Message.copyInto=function(o,t){goog.asserts.assertInstanceof(o,jspb.Message),goog.asserts.assertInstanceof(t,jspb.Message),goog.asserts.assert(o.constructor==t.constructor,"Copy source and target message should have the same type."),o=jspb.Message.clone(o);for(var r=t.toArray(),i=o.toArray(),s=r.length=0;s<i.length;s++)r[s]=i[s];t.wrappers_=o.wrappers_,t.extensionObject_=o.extensionObject_};jspb.Message.clone_=function(o){if(Array.isArray(o)){for(var t=Array(o.length),r=0;r<o.length;r++){var i=o[r];i!=null&&(t[r]=typeof i=="object"?jspb.Message.clone_(goog.asserts.assert(i)):i)}return t}if(jspb.Message.SUPPORTS_UINT8ARRAY_&&o instanceof Uint8Array)return new Uint8Array(o);t={};for(r in o)i=o[r],i!=null&&(t[r]=typeof i=="object"?jspb.Message.clone_(goog.asserts.assert(i)):i);return t};jspb.Message.registerMessageType=function(o,t){t.messageId=o};jspb.Message.messageSetExtensions={};jspb.Message.messageSetExtensionsBinary={};jspb.Export={};typeof exports=="object"&&(exports.Map=jspb.Map,exports.Message=jspb.Message,exports.BinaryReader=jspb.BinaryReader,exports.BinaryWriter=jspb.BinaryWriter,exports.ExtensionFieldInfo=jspb.ExtensionFieldInfo,exports.ExtensionFieldBinaryInfo=jspb.ExtensionFieldBinaryInfo,exports.exportSymbol=goog.exportSymbol,exports.inherits=goog.inherits,exports.object={extend:goog.object.extend},exports.typeOf=goog.typeOf)});var P=(0,_chunk_ONAVPXOT_js__WEBPACK_IMPORTED_MODULE_0__.a)(C=>{var n=I(),y=n,E=function(){return this?this:typeof window<"u"?window:typeof E<"u"?E:typeof self<"u"?self:Function("return this")()}.call(null);y.exportSymbol("proto.google.protobuf.DescriptorProto",null,E);y.exportSymbol("proto.google.protobuf.DescriptorProto.ExtensionRange",null,E);y.exportSymbol("proto.google.protobuf.DescriptorProto.ReservedRange",null,E);y.exportSymbol("proto.google.protobuf.EnumDescriptorProto",null,E);y.exportSymbol("proto.google.protobuf.EnumDescriptorProto.EnumReservedRange",null,E);y.exportSymbol("proto.google.protobuf.EnumOptions",null,E);y.exportSymbol("proto.google.protobuf.EnumValueDescriptorProto",null,E);y.exportSymbol("proto.google.protobuf.EnumValueOptions",null,E);y.exportSymbol("proto.google.protobuf.ExtensionRangeOptions",null,E);y.exportSymbol("proto.google.protobuf.FieldDescriptorProto",null,E);y.exportSymbol("proto.google.protobuf.FieldDescriptorProto.Label",null,E);y.exportSymbol("proto.google.protobuf.FieldDescriptorProto.Type",null,E);y.exportSymbol("proto.google.protobuf.FieldOptions",null,E);y.exportSymbol("proto.google.protobuf.FieldOptions.CType",null,E);y.exportSymbol("proto.google.protobuf.FieldOptions.JSType",null,E);y.exportSymbol("proto.google.protobuf.FileDescriptorProto",null,E);y.exportSymbol("proto.google.protobuf.FileDescriptorSet",null,E);y.exportSymbol("proto.google.protobuf.FileOptions",null,E);y.exportSymbol("proto.google.protobuf.FileOptions.OptimizeMode",null,E);y.exportSymbol("proto.google.protobuf.GeneratedCodeInfo",null,E);y.exportSymbol("proto.google.protobuf.GeneratedCodeInfo.Annotation",null,E);y.exportSymbol("proto.google.protobuf.MessageOptions",null,E);y.exportSymbol("proto.google.protobuf.MethodDescriptorProto",null,E);y.exportSymbol("proto.google.protobuf.MethodOptions",null,E);y.exportSymbol("proto.google.protobuf.MethodOptions.IdempotencyLevel",null,E);y.exportSymbol("proto.google.protobuf.OneofDescriptorProto",null,E);y.exportSymbol("proto.google.protobuf.OneofOptions",null,E);y.exportSymbol("proto.google.protobuf.ServiceDescriptorProto",null,E);y.exportSymbol("proto.google.protobuf.ServiceOptions",null,E);y.exportSymbol("proto.google.protobuf.SourceCodeInfo",null,E);y.exportSymbol("proto.google.protobuf.SourceCodeInfo.Location",null,E);y.exportSymbol("proto.google.protobuf.UninterpretedOption",null,E);y.exportSymbol("proto.google.protobuf.UninterpretedOption.NamePart",null,E);proto.google.protobuf.FileDescriptorSet=function(o){n.Message.initialize(this,o,0,-1,proto.google.protobuf.FileDescriptorSet.repeatedFields_,null)};y.inherits(proto.google.protobuf.FileDescriptorSet,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.FileDescriptorSet.displayName="proto.google.protobuf.FileDescriptorSet");proto.google.protobuf.FileDescriptorProto=function(o){n.Message.initialize(this,o,0,-1,proto.google.protobuf.FileDescriptorProto.repeatedFields_,null)};y.inherits(proto.google.protobuf.FileDescriptorProto,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.FileDescriptorProto.displayName="proto.google.protobuf.FileDescriptorProto");proto.google.protobuf.DescriptorProto=function(o){n.Message.initialize(this,o,0,-1,proto.google.protobuf.DescriptorProto.repeatedFields_,null)};y.inherits(proto.google.protobuf.DescriptorProto,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.DescriptorProto.displayName="proto.google.protobuf.DescriptorProto");proto.google.protobuf.DescriptorProto.ExtensionRange=function(o){n.Message.initialize(this,o,0,-1,null,null)};y.inherits(proto.google.protobuf.DescriptorProto.ExtensionRange,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.DescriptorProto.ExtensionRange.displayName="proto.google.protobuf.DescriptorProto.ExtensionRange");proto.google.protobuf.DescriptorProto.ReservedRange=function(o){n.Message.initialize(this,o,0,-1,null,null)};y.inherits(proto.google.protobuf.DescriptorProto.ReservedRange,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.DescriptorProto.ReservedRange.displayName="proto.google.protobuf.DescriptorProto.ReservedRange");proto.google.protobuf.ExtensionRangeOptions=function(o){n.Message.initialize(this,o,0,500,proto.google.protobuf.ExtensionRangeOptions.repeatedFields_,null)};y.inherits(proto.google.protobuf.ExtensionRangeOptions,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.ExtensionRangeOptions.displayName="proto.google.protobuf.ExtensionRangeOptions");proto.google.protobuf.ExtensionRangeOptions.extensions={};proto.google.protobuf.ExtensionRangeOptions.extensionsBinary={};proto.google.protobuf.FieldDescriptorProto=function(o){n.Message.initialize(this,o,0,-1,null,null)};y.inherits(proto.google.protobuf.FieldDescriptorProto,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.FieldDescriptorProto.displayName="proto.google.protobuf.FieldDescriptorProto");proto.google.protobuf.OneofDescriptorProto=function(o){n.Message.initialize(this,o,0,-1,null,null)};y.inherits(proto.google.protobuf.OneofDescriptorProto,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.OneofDescriptorProto.displayName="proto.google.protobuf.OneofDescriptorProto");proto.google.protobuf.EnumDescriptorProto=function(o){n.Message.initialize(this,o,0,-1,proto.google.protobuf.EnumDescriptorProto.repeatedFields_,null)};y.inherits(proto.google.protobuf.EnumDescriptorProto,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.EnumDescriptorProto.displayName="proto.google.protobuf.EnumDescriptorProto");proto.google.protobuf.EnumDescriptorProto.EnumReservedRange=function(o){n.Message.initialize(this,o,0,-1,null,null)};y.inherits(proto.google.protobuf.EnumDescriptorProto.EnumReservedRange,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.displayName="proto.google.protobuf.EnumDescriptorProto.EnumReservedRange");proto.google.protobuf.EnumValueDescriptorProto=function(o){n.Message.initialize(this,o,0,-1,null,null)};y.inherits(proto.google.protobuf.EnumValueDescriptorProto,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.EnumValueDescriptorProto.displayName="proto.google.protobuf.EnumValueDescriptorProto");proto.google.protobuf.ServiceDescriptorProto=function(o){n.Message.initialize(this,o,0,-1,proto.google.protobuf.ServiceDescriptorProto.repeatedFields_,null)};y.inherits(proto.google.protobuf.ServiceDescriptorProto,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.ServiceDescriptorProto.displayName="proto.google.protobuf.ServiceDescriptorProto");proto.google.protobuf.MethodDescriptorProto=function(o){n.Message.initialize(this,o,0,-1,null,null)};y.inherits(proto.google.protobuf.MethodDescriptorProto,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.MethodDescriptorProto.displayName="proto.google.protobuf.MethodDescriptorProto");proto.google.protobuf.FileOptions=function(o){n.Message.initialize(this,o,0,500,proto.google.protobuf.FileOptions.repeatedFields_,null)};y.inherits(proto.google.protobuf.FileOptions,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.FileOptions.displayName="proto.google.protobuf.FileOptions");proto.google.protobuf.FileOptions.extensions={};proto.google.protobuf.FileOptions.extensionsBinary={};proto.google.protobuf.MessageOptions=function(o){n.Message.initialize(this,o,0,500,proto.google.protobuf.MessageOptions.repeatedFields_,null)};y.inherits(proto.google.protobuf.MessageOptions,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.MessageOptions.displayName="proto.google.protobuf.MessageOptions");proto.google.protobuf.MessageOptions.extensions={};proto.google.protobuf.MessageOptions.extensionsBinary={};proto.google.protobuf.FieldOptions=function(o){n.Message.initialize(this,o,0,500,proto.google.protobuf.FieldOptions.repeatedFields_,null)};y.inherits(proto.google.protobuf.FieldOptions,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.FieldOptions.displayName="proto.google.protobuf.FieldOptions");proto.google.protobuf.FieldOptions.extensions={};proto.google.protobuf.FieldOptions.extensionsBinary={};proto.google.protobuf.OneofOptions=function(o){n.Message.initialize(this,o,0,500,proto.google.protobuf.OneofOptions.repeatedFields_,null)};y.inherits(proto.google.protobuf.OneofOptions,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.OneofOptions.displayName="proto.google.protobuf.OneofOptions");proto.google.protobuf.OneofOptions.extensions={};proto.google.protobuf.OneofOptions.extensionsBinary={};proto.google.protobuf.EnumOptions=function(o){n.Message.initialize(this,o,0,500,proto.google.protobuf.EnumOptions.repeatedFields_,null)};y.inherits(proto.google.protobuf.EnumOptions,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.EnumOptions.displayName="proto.google.protobuf.EnumOptions");proto.google.protobuf.EnumOptions.extensions={};proto.google.protobuf.EnumOptions.extensionsBinary={};proto.google.protobuf.EnumValueOptions=function(o){n.Message.initialize(this,o,0,500,proto.google.protobuf.EnumValueOptions.repeatedFields_,null)};y.inherits(proto.google.protobuf.EnumValueOptions,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.EnumValueOptions.displayName="proto.google.protobuf.EnumValueOptions");proto.google.protobuf.EnumValueOptions.extensions={};proto.google.protobuf.EnumValueOptions.extensionsBinary={};proto.google.protobuf.ServiceOptions=function(o){n.Message.initialize(this,o,0,500,proto.google.protobuf.ServiceOptions.repeatedFields_,null)};y.inherits(proto.google.protobuf.ServiceOptions,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.ServiceOptions.displayName="proto.google.protobuf.ServiceOptions");proto.google.protobuf.ServiceOptions.extensions={};proto.google.protobuf.ServiceOptions.extensionsBinary={};proto.google.protobuf.MethodOptions=function(o){n.Message.initialize(this,o,0,500,proto.google.protobuf.MethodOptions.repeatedFields_,null)};y.inherits(proto.google.protobuf.MethodOptions,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.MethodOptions.displayName="proto.google.protobuf.MethodOptions");proto.google.protobuf.MethodOptions.extensions={};proto.google.protobuf.MethodOptions.extensionsBinary={};proto.google.protobuf.UninterpretedOption=function(o){n.Message.initialize(this,o,0,-1,proto.google.protobuf.UninterpretedOption.repeatedFields_,null)};y.inherits(proto.google.protobuf.UninterpretedOption,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.UninterpretedOption.displayName="proto.google.protobuf.UninterpretedOption");proto.google.protobuf.UninterpretedOption.NamePart=function(o){n.Message.initialize(this,o,0,-1,null,null)};y.inherits(proto.google.protobuf.UninterpretedOption.NamePart,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.UninterpretedOption.NamePart.displayName="proto.google.protobuf.UninterpretedOption.NamePart");proto.google.protobuf.SourceCodeInfo=function(o){n.Message.initialize(this,o,0,-1,proto.google.protobuf.SourceCodeInfo.repeatedFields_,null)};y.inherits(proto.google.protobuf.SourceCodeInfo,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.SourceCodeInfo.displayName="proto.google.protobuf.SourceCodeInfo");proto.google.protobuf.SourceCodeInfo.Location=function(o){n.Message.initialize(this,o,0,-1,proto.google.protobuf.SourceCodeInfo.Location.repeatedFields_,null)};y.inherits(proto.google.protobuf.SourceCodeInfo.Location,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.SourceCodeInfo.Location.displayName="proto.google.protobuf.SourceCodeInfo.Location");proto.google.protobuf.GeneratedCodeInfo=function(o){n.Message.initialize(this,o,0,-1,proto.google.protobuf.GeneratedCodeInfo.repeatedFields_,null)};y.inherits(proto.google.protobuf.GeneratedCodeInfo,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.GeneratedCodeInfo.displayName="proto.google.protobuf.GeneratedCodeInfo");proto.google.protobuf.GeneratedCodeInfo.Annotation=function(o){n.Message.initialize(this,o,0,-1,proto.google.protobuf.GeneratedCodeInfo.Annotation.repeatedFields_,null)};y.inherits(proto.google.protobuf.GeneratedCodeInfo.Annotation,n.Message);y.DEBUG&&!COMPILED&&(proto.google.protobuf.GeneratedCodeInfo.Annotation.displayName="proto.google.protobuf.GeneratedCodeInfo.Annotation");proto.google.protobuf.FileDescriptorSet.repeatedFields_=[1];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.FileDescriptorSet.prototype.toObject=function(o){return proto.google.protobuf.FileDescriptorSet.toObject(o,this)},proto.google.protobuf.FileDescriptorSet.toObject=function(o,t){var r,i={fileList:n.Message.toObjectList(t.getFileList(),proto.google.protobuf.FileDescriptorProto.toObject,o)};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.FileDescriptorSet.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.FileDescriptorSet;return proto.google.protobuf.FileDescriptorSet.deserializeBinaryFromReader(r,t)};proto.google.protobuf.FileDescriptorSet.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.google.protobuf.FileDescriptorProto;t.readMessage(i,proto.google.protobuf.FileDescriptorProto.deserializeBinaryFromReader),o.addFile(i);break;default:t.skipField();break}}return o};proto.google.protobuf.FileDescriptorSet.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.FileDescriptorSet.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.FileDescriptorSet.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getFileList(),r.length>0&&t.writeRepeatedMessage(1,r,proto.google.protobuf.FileDescriptorProto.serializeBinaryToWriter)};proto.google.protobuf.FileDescriptorSet.prototype.getFileList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.FileDescriptorProto,1)};proto.google.protobuf.FileDescriptorSet.prototype.setFileList=function(o){return n.Message.setRepeatedWrapperField(this,1,o)};proto.google.protobuf.FileDescriptorSet.prototype.addFile=function(o,t){return n.Message.addToRepeatedWrapperField(this,1,o,proto.google.protobuf.FileDescriptorProto,t)};proto.google.protobuf.FileDescriptorSet.prototype.clearFileList=function(){return this.setFileList([])};proto.google.protobuf.FileDescriptorProto.repeatedFields_=[3,10,11,4,5,6,7];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.FileDescriptorProto.prototype.toObject=function(o){return proto.google.protobuf.FileDescriptorProto.toObject(o,this)},proto.google.protobuf.FileDescriptorProto.toObject=function(o,t){var r,i={name:(r=n.Message.getField(t,1))==null?void 0:r,pb_package:(r=n.Message.getField(t,2))==null?void 0:r,dependencyList:(r=n.Message.getRepeatedField(t,3))==null?void 0:r,publicDependencyList:(r=n.Message.getRepeatedField(t,10))==null?void 0:r,weakDependencyList:(r=n.Message.getRepeatedField(t,11))==null?void 0:r,messageTypeList:n.Message.toObjectList(t.getMessageTypeList(),proto.google.protobuf.DescriptorProto.toObject,o),enumTypeList:n.Message.toObjectList(t.getEnumTypeList(),proto.google.protobuf.EnumDescriptorProto.toObject,o),serviceList:n.Message.toObjectList(t.getServiceList(),proto.google.protobuf.ServiceDescriptorProto.toObject,o),extensionList:n.Message.toObjectList(t.getExtensionList(),proto.google.protobuf.FieldDescriptorProto.toObject,o),options:(r=t.getOptions())&&proto.google.protobuf.FileOptions.toObject(o,r),sourceCodeInfo:(r=t.getSourceCodeInfo())&&proto.google.protobuf.SourceCodeInfo.toObject(o,r),syntax:(r=n.Message.getField(t,12))==null?void 0:r};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.FileDescriptorProto.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.FileDescriptorProto;return proto.google.protobuf.FileDescriptorProto.deserializeBinaryFromReader(r,t)};proto.google.protobuf.FileDescriptorProto.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var g=t.readString();o.setName(g);break;case 2:var g=t.readString();o.setPackage(g);break;case 3:var g=t.readString();o.addDependency(g);break;case 10:for(var s=t.isDelimited()?t.readPackedInt32():[t.readInt32()],i=0;i<s.length;i++)o.addPublicDependency(s[i]);break;case 11:for(var s=t.isDelimited()?t.readPackedInt32():[t.readInt32()],i=0;i<s.length;i++)o.addWeakDependency(s[i]);break;case 4:var g=new proto.google.protobuf.DescriptorProto;t.readMessage(g,proto.google.protobuf.DescriptorProto.deserializeBinaryFromReader),o.addMessageType(g);break;case 5:var g=new proto.google.protobuf.EnumDescriptorProto;t.readMessage(g,proto.google.protobuf.EnumDescriptorProto.deserializeBinaryFromReader),o.addEnumType(g);break;case 6:var g=new proto.google.protobuf.ServiceDescriptorProto;t.readMessage(g,proto.google.protobuf.ServiceDescriptorProto.deserializeBinaryFromReader),o.addService(g);break;case 7:var g=new proto.google.protobuf.FieldDescriptorProto;t.readMessage(g,proto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader),o.addExtension$(g);break;case 8:var g=new proto.google.protobuf.FileOptions;t.readMessage(g,proto.google.protobuf.FileOptions.deserializeBinaryFromReader),o.setOptions(g);break;case 9:var g=new proto.google.protobuf.SourceCodeInfo;t.readMessage(g,proto.google.protobuf.SourceCodeInfo.deserializeBinaryFromReader),o.setSourceCodeInfo(g);break;case 12:var g=t.readString();o.setSyntax(g);break;default:t.skipField();break}}return o};proto.google.protobuf.FileDescriptorProto.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.FileDescriptorProto.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.FileDescriptorProto.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeString(1,r),r=n.Message.getField(o,2),r!=null&&t.writeString(2,r),r=o.getDependencyList(),r.length>0&&t.writeRepeatedString(3,r),r=o.getPublicDependencyList(),r.length>0&&t.writeRepeatedInt32(10,r),r=o.getWeakDependencyList(),r.length>0&&t.writeRepeatedInt32(11,r),r=o.getMessageTypeList(),r.length>0&&t.writeRepeatedMessage(4,r,proto.google.protobuf.DescriptorProto.serializeBinaryToWriter),r=o.getEnumTypeList(),r.length>0&&t.writeRepeatedMessage(5,r,proto.google.protobuf.EnumDescriptorProto.serializeBinaryToWriter),r=o.getServiceList(),r.length>0&&t.writeRepeatedMessage(6,r,proto.google.protobuf.ServiceDescriptorProto.serializeBinaryToWriter),r=o.getExtensionList(),r.length>0&&t.writeRepeatedMessage(7,r,proto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter),r=o.getOptions(),r!=null&&t.writeMessage(8,r,proto.google.protobuf.FileOptions.serializeBinaryToWriter),r=o.getSourceCodeInfo(),r!=null&&t.writeMessage(9,r,proto.google.protobuf.SourceCodeInfo.serializeBinaryToWriter),r=n.Message.getField(o,12),r!=null&&t.writeString(12,r)};proto.google.protobuf.FileDescriptorProto.prototype.getName=function(){return n.Message.getFieldWithDefault(this,1,"")};proto.google.protobuf.FileDescriptorProto.prototype.setName=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.FileDescriptorProto.prototype.clearName=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.FileDescriptorProto.prototype.hasName=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.FileDescriptorProto.prototype.getPackage=function(){return n.Message.getFieldWithDefault(this,2,"")};proto.google.protobuf.FileDescriptorProto.prototype.setPackage=function(o){return n.Message.setField(this,2,o)};proto.google.protobuf.FileDescriptorProto.prototype.clearPackage=function(){return n.Message.setField(this,2,void 0)};proto.google.protobuf.FileDescriptorProto.prototype.hasPackage=function(){return n.Message.getField(this,2)!=null};proto.google.protobuf.FileDescriptorProto.prototype.getDependencyList=function(){return n.Message.getRepeatedField(this,3)};proto.google.protobuf.FileDescriptorProto.prototype.setDependencyList=function(o){return n.Message.setField(this,3,o||[])};proto.google.protobuf.FileDescriptorProto.prototype.addDependency=function(o,t){return n.Message.addToRepeatedField(this,3,o,t)};proto.google.protobuf.FileDescriptorProto.prototype.clearDependencyList=function(){return this.setDependencyList([])};proto.google.protobuf.FileDescriptorProto.prototype.getPublicDependencyList=function(){return n.Message.getRepeatedField(this,10)};proto.google.protobuf.FileDescriptorProto.prototype.setPublicDependencyList=function(o){return n.Message.setField(this,10,o||[])};proto.google.protobuf.FileDescriptorProto.prototype.addPublicDependency=function(o,t){return n.Message.addToRepeatedField(this,10,o,t)};proto.google.protobuf.FileDescriptorProto.prototype.clearPublicDependencyList=function(){return this.setPublicDependencyList([])};proto.google.protobuf.FileDescriptorProto.prototype.getWeakDependencyList=function(){return n.Message.getRepeatedField(this,11)};proto.google.protobuf.FileDescriptorProto.prototype.setWeakDependencyList=function(o){return n.Message.setField(this,11,o||[])};proto.google.protobuf.FileDescriptorProto.prototype.addWeakDependency=function(o,t){return n.Message.addToRepeatedField(this,11,o,t)};proto.google.protobuf.FileDescriptorProto.prototype.clearWeakDependencyList=function(){return this.setWeakDependencyList([])};proto.google.protobuf.FileDescriptorProto.prototype.getMessageTypeList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.DescriptorProto,4)};proto.google.protobuf.FileDescriptorProto.prototype.setMessageTypeList=function(o){return n.Message.setRepeatedWrapperField(this,4,o)};proto.google.protobuf.FileDescriptorProto.prototype.addMessageType=function(o,t){return n.Message.addToRepeatedWrapperField(this,4,o,proto.google.protobuf.DescriptorProto,t)};proto.google.protobuf.FileDescriptorProto.prototype.clearMessageTypeList=function(){return this.setMessageTypeList([])};proto.google.protobuf.FileDescriptorProto.prototype.getEnumTypeList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.EnumDescriptorProto,5)};proto.google.protobuf.FileDescriptorProto.prototype.setEnumTypeList=function(o){return n.Message.setRepeatedWrapperField(this,5,o)};proto.google.protobuf.FileDescriptorProto.prototype.addEnumType=function(o,t){return n.Message.addToRepeatedWrapperField(this,5,o,proto.google.protobuf.EnumDescriptorProto,t)};proto.google.protobuf.FileDescriptorProto.prototype.clearEnumTypeList=function(){return this.setEnumTypeList([])};proto.google.protobuf.FileDescriptorProto.prototype.getServiceList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.ServiceDescriptorProto,6)};proto.google.protobuf.FileDescriptorProto.prototype.setServiceList=function(o){return n.Message.setRepeatedWrapperField(this,6,o)};proto.google.protobuf.FileDescriptorProto.prototype.addService=function(o,t){return n.Message.addToRepeatedWrapperField(this,6,o,proto.google.protobuf.ServiceDescriptorProto,t)};proto.google.protobuf.FileDescriptorProto.prototype.clearServiceList=function(){return this.setServiceList([])};proto.google.protobuf.FileDescriptorProto.prototype.getExtensionList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.FieldDescriptorProto,7)};proto.google.protobuf.FileDescriptorProto.prototype.setExtensionList=function(o){return n.Message.setRepeatedWrapperField(this,7,o)};proto.google.protobuf.FileDescriptorProto.prototype.addExtension$=function(o,t){return n.Message.addToRepeatedWrapperField(this,7,o,proto.google.protobuf.FieldDescriptorProto,t)};proto.google.protobuf.FileDescriptorProto.prototype.clearExtensionList=function(){return this.setExtensionList([])};proto.google.protobuf.FileDescriptorProto.prototype.getOptions=function(){return n.Message.getWrapperField(this,proto.google.protobuf.FileOptions,8)};proto.google.protobuf.FileDescriptorProto.prototype.setOptions=function(o){return n.Message.setWrapperField(this,8,o)};proto.google.protobuf.FileDescriptorProto.prototype.clearOptions=function(){return this.setOptions(void 0)};proto.google.protobuf.FileDescriptorProto.prototype.hasOptions=function(){return n.Message.getField(this,8)!=null};proto.google.protobuf.FileDescriptorProto.prototype.getSourceCodeInfo=function(){return n.Message.getWrapperField(this,proto.google.protobuf.SourceCodeInfo,9)};proto.google.protobuf.FileDescriptorProto.prototype.setSourceCodeInfo=function(o){return n.Message.setWrapperField(this,9,o)};proto.google.protobuf.FileDescriptorProto.prototype.clearSourceCodeInfo=function(){return this.setSourceCodeInfo(void 0)};proto.google.protobuf.FileDescriptorProto.prototype.hasSourceCodeInfo=function(){return n.Message.getField(this,9)!=null};proto.google.protobuf.FileDescriptorProto.prototype.getSyntax=function(){return n.Message.getFieldWithDefault(this,12,"")};proto.google.protobuf.FileDescriptorProto.prototype.setSyntax=function(o){return n.Message.setField(this,12,o)};proto.google.protobuf.FileDescriptorProto.prototype.clearSyntax=function(){return n.Message.setField(this,12,void 0)};proto.google.protobuf.FileDescriptorProto.prototype.hasSyntax=function(){return n.Message.getField(this,12)!=null};proto.google.protobuf.DescriptorProto.repeatedFields_=[2,6,3,4,5,8,9,10];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.DescriptorProto.prototype.toObject=function(o){return proto.google.protobuf.DescriptorProto.toObject(o,this)},proto.google.protobuf.DescriptorProto.toObject=function(o,t){var r,i={name:(r=n.Message.getField(t,1))==null?void 0:r,fieldList:n.Message.toObjectList(t.getFieldList(),proto.google.protobuf.FieldDescriptorProto.toObject,o),extensionList:n.Message.toObjectList(t.getExtensionList(),proto.google.protobuf.FieldDescriptorProto.toObject,o),nestedTypeList:n.Message.toObjectList(t.getNestedTypeList(),proto.google.protobuf.DescriptorProto.toObject,o),enumTypeList:n.Message.toObjectList(t.getEnumTypeList(),proto.google.protobuf.EnumDescriptorProto.toObject,o),extensionRangeList:n.Message.toObjectList(t.getExtensionRangeList(),proto.google.protobuf.DescriptorProto.ExtensionRange.toObject,o),oneofDeclList:n.Message.toObjectList(t.getOneofDeclList(),proto.google.protobuf.OneofDescriptorProto.toObject,o),options:(r=t.getOptions())&&proto.google.protobuf.MessageOptions.toObject(o,r),reservedRangeList:n.Message.toObjectList(t.getReservedRangeList(),proto.google.protobuf.DescriptorProto.ReservedRange.toObject,o),reservedNameList:(r=n.Message.getRepeatedField(t,10))==null?void 0:r};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.DescriptorProto.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.DescriptorProto;return proto.google.protobuf.DescriptorProto.deserializeBinaryFromReader(r,t)};proto.google.protobuf.DescriptorProto.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readString();o.setName(i);break;case 2:var i=new proto.google.protobuf.FieldDescriptorProto;t.readMessage(i,proto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader),o.addField(i);break;case 6:var i=new proto.google.protobuf.FieldDescriptorProto;t.readMessage(i,proto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader),o.addExtension$(i);break;case 3:var i=new proto.google.protobuf.DescriptorProto;t.readMessage(i,proto.google.protobuf.DescriptorProto.deserializeBinaryFromReader),o.addNestedType(i);break;case 4:var i=new proto.google.protobuf.EnumDescriptorProto;t.readMessage(i,proto.google.protobuf.EnumDescriptorProto.deserializeBinaryFromReader),o.addEnumType(i);break;case 5:var i=new proto.google.protobuf.DescriptorProto.ExtensionRange;t.readMessage(i,proto.google.protobuf.DescriptorProto.ExtensionRange.deserializeBinaryFromReader),o.addExtensionRange(i);break;case 8:var i=new proto.google.protobuf.OneofDescriptorProto;t.readMessage(i,proto.google.protobuf.OneofDescriptorProto.deserializeBinaryFromReader),o.addOneofDecl(i);break;case 7:var i=new proto.google.protobuf.MessageOptions;t.readMessage(i,proto.google.protobuf.MessageOptions.deserializeBinaryFromReader),o.setOptions(i);break;case 9:var i=new proto.google.protobuf.DescriptorProto.ReservedRange;t.readMessage(i,proto.google.protobuf.DescriptorProto.ReservedRange.deserializeBinaryFromReader),o.addReservedRange(i);break;case 10:var i=t.readString();o.addReservedName(i);break;default:t.skipField();break}}return o};proto.google.protobuf.DescriptorProto.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.DescriptorProto.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.DescriptorProto.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeString(1,r),r=o.getFieldList(),r.length>0&&t.writeRepeatedMessage(2,r,proto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter),r=o.getExtensionList(),r.length>0&&t.writeRepeatedMessage(6,r,proto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter),r=o.getNestedTypeList(),r.length>0&&t.writeRepeatedMessage(3,r,proto.google.protobuf.DescriptorProto.serializeBinaryToWriter),r=o.getEnumTypeList(),r.length>0&&t.writeRepeatedMessage(4,r,proto.google.protobuf.EnumDescriptorProto.serializeBinaryToWriter),r=o.getExtensionRangeList(),r.length>0&&t.writeRepeatedMessage(5,r,proto.google.protobuf.DescriptorProto.ExtensionRange.serializeBinaryToWriter),r=o.getOneofDeclList(),r.length>0&&t.writeRepeatedMessage(8,r,proto.google.protobuf.OneofDescriptorProto.serializeBinaryToWriter),r=o.getOptions(),r!=null&&t.writeMessage(7,r,proto.google.protobuf.MessageOptions.serializeBinaryToWriter),r=o.getReservedRangeList(),r.length>0&&t.writeRepeatedMessage(9,r,proto.google.protobuf.DescriptorProto.ReservedRange.serializeBinaryToWriter),r=o.getReservedNameList(),r.length>0&&t.writeRepeatedString(10,r)};n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.toObject=function(o){return proto.google.protobuf.DescriptorProto.ExtensionRange.toObject(o,this)},proto.google.protobuf.DescriptorProto.ExtensionRange.toObject=function(o,t){var r,i={start:(r=n.Message.getField(t,1))==null?void 0:r,end:(r=n.Message.getField(t,2))==null?void 0:r,options:(r=t.getOptions())&&proto.google.protobuf.ExtensionRangeOptions.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.DescriptorProto.ExtensionRange.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.DescriptorProto.ExtensionRange;return proto.google.protobuf.DescriptorProto.ExtensionRange.deserializeBinaryFromReader(r,t)};proto.google.protobuf.DescriptorProto.ExtensionRange.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readInt32();o.setStart(i);break;case 2:var i=t.readInt32();o.setEnd(i);break;case 3:var i=new proto.google.protobuf.ExtensionRangeOptions;t.readMessage(i,proto.google.protobuf.ExtensionRangeOptions.deserializeBinaryFromReader),o.setOptions(i);break;default:t.skipField();break}}return o};proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.DescriptorProto.ExtensionRange.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.DescriptorProto.ExtensionRange.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeInt32(1,r),r=n.Message.getField(o,2),r!=null&&t.writeInt32(2,r),r=o.getOptions(),r!=null&&t.writeMessage(3,r,proto.google.protobuf.ExtensionRangeOptions.serializeBinaryToWriter)};proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.getStart=function(){return n.Message.getFieldWithDefault(this,1,0)};proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.setStart=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.clearStart=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.hasStart=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.getEnd=function(){return n.Message.getFieldWithDefault(this,2,0)};proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.setEnd=function(o){return n.Message.setField(this,2,o)};proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.clearEnd=function(){return n.Message.setField(this,2,void 0)};proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.hasEnd=function(){return n.Message.getField(this,2)!=null};proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.getOptions=function(){return n.Message.getWrapperField(this,proto.google.protobuf.ExtensionRangeOptions,3)};proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.setOptions=function(o){return n.Message.setWrapperField(this,3,o)};proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.clearOptions=function(){return this.setOptions(void 0)};proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.hasOptions=function(){return n.Message.getField(this,3)!=null};n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.DescriptorProto.ReservedRange.prototype.toObject=function(o){return proto.google.protobuf.DescriptorProto.ReservedRange.toObject(o,this)},proto.google.protobuf.DescriptorProto.ReservedRange.toObject=function(o,t){var r,i={start:(r=n.Message.getField(t,1))==null?void 0:r,end:(r=n.Message.getField(t,2))==null?void 0:r};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.DescriptorProto.ReservedRange.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.DescriptorProto.ReservedRange;return proto.google.protobuf.DescriptorProto.ReservedRange.deserializeBinaryFromReader(r,t)};proto.google.protobuf.DescriptorProto.ReservedRange.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readInt32();o.setStart(i);break;case 2:var i=t.readInt32();o.setEnd(i);break;default:t.skipField();break}}return o};proto.google.protobuf.DescriptorProto.ReservedRange.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.DescriptorProto.ReservedRange.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.DescriptorProto.ReservedRange.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeInt32(1,r),r=n.Message.getField(o,2),r!=null&&t.writeInt32(2,r)};proto.google.protobuf.DescriptorProto.ReservedRange.prototype.getStart=function(){return n.Message.getFieldWithDefault(this,1,0)};proto.google.protobuf.DescriptorProto.ReservedRange.prototype.setStart=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.DescriptorProto.ReservedRange.prototype.clearStart=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.DescriptorProto.ReservedRange.prototype.hasStart=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.DescriptorProto.ReservedRange.prototype.getEnd=function(){return n.Message.getFieldWithDefault(this,2,0)};proto.google.protobuf.DescriptorProto.ReservedRange.prototype.setEnd=function(o){return n.Message.setField(this,2,o)};proto.google.protobuf.DescriptorProto.ReservedRange.prototype.clearEnd=function(){return n.Message.setField(this,2,void 0)};proto.google.protobuf.DescriptorProto.ReservedRange.prototype.hasEnd=function(){return n.Message.getField(this,2)!=null};proto.google.protobuf.DescriptorProto.prototype.getName=function(){return n.Message.getFieldWithDefault(this,1,"")};proto.google.protobuf.DescriptorProto.prototype.setName=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.DescriptorProto.prototype.clearName=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.DescriptorProto.prototype.hasName=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.DescriptorProto.prototype.getFieldList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.FieldDescriptorProto,2)};proto.google.protobuf.DescriptorProto.prototype.setFieldList=function(o){return n.Message.setRepeatedWrapperField(this,2,o)};proto.google.protobuf.DescriptorProto.prototype.addField=function(o,t){return n.Message.addToRepeatedWrapperField(this,2,o,proto.google.protobuf.FieldDescriptorProto,t)};proto.google.protobuf.DescriptorProto.prototype.clearFieldList=function(){return this.setFieldList([])};proto.google.protobuf.DescriptorProto.prototype.getExtensionList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.FieldDescriptorProto,6)};proto.google.protobuf.DescriptorProto.prototype.setExtensionList=function(o){return n.Message.setRepeatedWrapperField(this,6,o)};proto.google.protobuf.DescriptorProto.prototype.addExtension$=function(o,t){return n.Message.addToRepeatedWrapperField(this,6,o,proto.google.protobuf.FieldDescriptorProto,t)};proto.google.protobuf.DescriptorProto.prototype.clearExtensionList=function(){return this.setExtensionList([])};proto.google.protobuf.DescriptorProto.prototype.getNestedTypeList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.DescriptorProto,3)};proto.google.protobuf.DescriptorProto.prototype.setNestedTypeList=function(o){return n.Message.setRepeatedWrapperField(this,3,o)};proto.google.protobuf.DescriptorProto.prototype.addNestedType=function(o,t){return n.Message.addToRepeatedWrapperField(this,3,o,proto.google.protobuf.DescriptorProto,t)};proto.google.protobuf.DescriptorProto.prototype.clearNestedTypeList=function(){return this.setNestedTypeList([])};proto.google.protobuf.DescriptorProto.prototype.getEnumTypeList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.EnumDescriptorProto,4)};proto.google.protobuf.DescriptorProto.prototype.setEnumTypeList=function(o){return n.Message.setRepeatedWrapperField(this,4,o)};proto.google.protobuf.DescriptorProto.prototype.addEnumType=function(o,t){return n.Message.addToRepeatedWrapperField(this,4,o,proto.google.protobuf.EnumDescriptorProto,t)};proto.google.protobuf.DescriptorProto.prototype.clearEnumTypeList=function(){return this.setEnumTypeList([])};proto.google.protobuf.DescriptorProto.prototype.getExtensionRangeList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.DescriptorProto.ExtensionRange,5)};proto.google.protobuf.DescriptorProto.prototype.setExtensionRangeList=function(o){return n.Message.setRepeatedWrapperField(this,5,o)};proto.google.protobuf.DescriptorProto.prototype.addExtensionRange=function(o,t){return n.Message.addToRepeatedWrapperField(this,5,o,proto.google.protobuf.DescriptorProto.ExtensionRange,t)};proto.google.protobuf.DescriptorProto.prototype.clearExtensionRangeList=function(){return this.setExtensionRangeList([])};proto.google.protobuf.DescriptorProto.prototype.getOneofDeclList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.OneofDescriptorProto,8)};proto.google.protobuf.DescriptorProto.prototype.setOneofDeclList=function(o){return n.Message.setRepeatedWrapperField(this,8,o)};proto.google.protobuf.DescriptorProto.prototype.addOneofDecl=function(o,t){return n.Message.addToRepeatedWrapperField(this,8,o,proto.google.protobuf.OneofDescriptorProto,t)};proto.google.protobuf.DescriptorProto.prototype.clearOneofDeclList=function(){return this.setOneofDeclList([])};proto.google.protobuf.DescriptorProto.prototype.getOptions=function(){return n.Message.getWrapperField(this,proto.google.protobuf.MessageOptions,7)};proto.google.protobuf.DescriptorProto.prototype.setOptions=function(o){return n.Message.setWrapperField(this,7,o)};proto.google.protobuf.DescriptorProto.prototype.clearOptions=function(){return this.setOptions(void 0)};proto.google.protobuf.DescriptorProto.prototype.hasOptions=function(){return n.Message.getField(this,7)!=null};proto.google.protobuf.DescriptorProto.prototype.getReservedRangeList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.DescriptorProto.ReservedRange,9)};proto.google.protobuf.DescriptorProto.prototype.setReservedRangeList=function(o){return n.Message.setRepeatedWrapperField(this,9,o)};proto.google.protobuf.DescriptorProto.prototype.addReservedRange=function(o,t){return n.Message.addToRepeatedWrapperField(this,9,o,proto.google.protobuf.DescriptorProto.ReservedRange,t)};proto.google.protobuf.DescriptorProto.prototype.clearReservedRangeList=function(){return this.setReservedRangeList([])};proto.google.protobuf.DescriptorProto.prototype.getReservedNameList=function(){return n.Message.getRepeatedField(this,10)};proto.google.protobuf.DescriptorProto.prototype.setReservedNameList=function(o){return n.Message.setField(this,10,o||[])};proto.google.protobuf.DescriptorProto.prototype.addReservedName=function(o,t){return n.Message.addToRepeatedField(this,10,o,t)};proto.google.protobuf.DescriptorProto.prototype.clearReservedNameList=function(){return this.setReservedNameList([])};proto.google.protobuf.ExtensionRangeOptions.repeatedFields_=[999];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.ExtensionRangeOptions.prototype.toObject=function(o){return proto.google.protobuf.ExtensionRangeOptions.toObject(o,this)},proto.google.protobuf.ExtensionRangeOptions.toObject=function(o,t){var r,i={uninterpretedOptionList:n.Message.toObjectList(t.getUninterpretedOptionList(),proto.google.protobuf.UninterpretedOption.toObject,o)};return n.Message.toObjectExtension(t,i,proto.google.protobuf.ExtensionRangeOptions.extensions,proto.google.protobuf.ExtensionRangeOptions.prototype.getExtension,o),o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.ExtensionRangeOptions.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.ExtensionRangeOptions;return proto.google.protobuf.ExtensionRangeOptions.deserializeBinaryFromReader(r,t)};proto.google.protobuf.ExtensionRangeOptions.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 999:var i=new proto.google.protobuf.UninterpretedOption;t.readMessage(i,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader),o.addUninterpretedOption(i);break;default:n.Message.readBinaryExtension(o,t,proto.google.protobuf.ExtensionRangeOptions.extensionsBinary,proto.google.protobuf.ExtensionRangeOptions.prototype.getExtension,proto.google.protobuf.ExtensionRangeOptions.prototype.setExtension);break}}return o};proto.google.protobuf.ExtensionRangeOptions.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.ExtensionRangeOptions.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.ExtensionRangeOptions.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getUninterpretedOptionList(),r.length>0&&t.writeRepeatedMessage(999,r,proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter),n.Message.serializeBinaryExtensions(o,t,proto.google.protobuf.ExtensionRangeOptions.extensionsBinary,proto.google.protobuf.ExtensionRangeOptions.prototype.getExtension)};proto.google.protobuf.ExtensionRangeOptions.prototype.getUninterpretedOptionList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.UninterpretedOption,999)};proto.google.protobuf.ExtensionRangeOptions.prototype.setUninterpretedOptionList=function(o){return n.Message.setRepeatedWrapperField(this,999,o)};proto.google.protobuf.ExtensionRangeOptions.prototype.addUninterpretedOption=function(o,t){return n.Message.addToRepeatedWrapperField(this,999,o,proto.google.protobuf.UninterpretedOption,t)};proto.google.protobuf.ExtensionRangeOptions.prototype.clearUninterpretedOptionList=function(){return this.setUninterpretedOptionList([])};n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.FieldDescriptorProto.prototype.toObject=function(o){return proto.google.protobuf.FieldDescriptorProto.toObject(o,this)},proto.google.protobuf.FieldDescriptorProto.toObject=function(o,t){var r,i={name:(r=n.Message.getField(t,1))==null?void 0:r,number:(r=n.Message.getField(t,3))==null?void 0:r,label:(r=n.Message.getField(t,4))==null?void 0:r,type:(r=n.Message.getField(t,5))==null?void 0:r,typeName:(r=n.Message.getField(t,6))==null?void 0:r,extendee:(r=n.Message.getField(t,2))==null?void 0:r,defaultValue:(r=n.Message.getField(t,7))==null?void 0:r,oneofIndex:(r=n.Message.getField(t,9))==null?void 0:r,jsonName:(r=n.Message.getField(t,10))==null?void 0:r,options:(r=t.getOptions())&&proto.google.protobuf.FieldOptions.toObject(o,r),proto3Optional:(r=n.Message.getBooleanField(t,17))==null?void 0:r};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.FieldDescriptorProto.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.FieldDescriptorProto;return proto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader(r,t)};proto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readString();o.setName(i);break;case 3:var i=t.readInt32();o.setNumber(i);break;case 4:var i=t.readEnum();o.setLabel(i);break;case 5:var i=t.readEnum();o.setType(i);break;case 6:var i=t.readString();o.setTypeName(i);break;case 2:var i=t.readString();o.setExtendee(i);break;case 7:var i=t.readString();o.setDefaultValue(i);break;case 9:var i=t.readInt32();o.setOneofIndex(i);break;case 10:var i=t.readString();o.setJsonName(i);break;case 8:var i=new proto.google.protobuf.FieldOptions;t.readMessage(i,proto.google.protobuf.FieldOptions.deserializeBinaryFromReader),o.setOptions(i);break;case 17:var i=t.readBool();o.setProto3Optional(i);break;default:t.skipField();break}}return o};proto.google.protobuf.FieldDescriptorProto.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeString(1,r),r=n.Message.getField(o,3),r!=null&&t.writeInt32(3,r),r=n.Message.getField(o,4),r!=null&&t.writeEnum(4,r),r=n.Message.getField(o,5),r!=null&&t.writeEnum(5,r),r=n.Message.getField(o,6),r!=null&&t.writeString(6,r),r=n.Message.getField(o,2),r!=null&&t.writeString(2,r),r=n.Message.getField(o,7),r!=null&&t.writeString(7,r),r=n.Message.getField(o,9),r!=null&&t.writeInt32(9,r),r=n.Message.getField(o,10),r!=null&&t.writeString(10,r),r=o.getOptions(),r!=null&&t.writeMessage(8,r,proto.google.protobuf.FieldOptions.serializeBinaryToWriter),r=n.Message.getField(o,17),r!=null&&t.writeBool(17,r)};proto.google.protobuf.FieldDescriptorProto.Type={TYPE_DOUBLE:1,TYPE_FLOAT:2,TYPE_INT64:3,TYPE_UINT64:4,TYPE_INT32:5,TYPE_FIXED64:6,TYPE_FIXED32:7,TYPE_BOOL:8,TYPE_STRING:9,TYPE_GROUP:10,TYPE_MESSAGE:11,TYPE_BYTES:12,TYPE_UINT32:13,TYPE_ENUM:14,TYPE_SFIXED32:15,TYPE_SFIXED64:16,TYPE_SINT32:17,TYPE_SINT64:18};proto.google.protobuf.FieldDescriptorProto.Label={LABEL_OPTIONAL:1,LABEL_REQUIRED:2,LABEL_REPEATED:3};proto.google.protobuf.FieldDescriptorProto.prototype.getName=function(){return n.Message.getFieldWithDefault(this,1,"")};proto.google.protobuf.FieldDescriptorProto.prototype.setName=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.FieldDescriptorProto.prototype.clearName=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.FieldDescriptorProto.prototype.hasName=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.FieldDescriptorProto.prototype.getNumber=function(){return n.Message.getFieldWithDefault(this,3,0)};proto.google.protobuf.FieldDescriptorProto.prototype.setNumber=function(o){return n.Message.setField(this,3,o)};proto.google.protobuf.FieldDescriptorProto.prototype.clearNumber=function(){return n.Message.setField(this,3,void 0)};proto.google.protobuf.FieldDescriptorProto.prototype.hasNumber=function(){return n.Message.getField(this,3)!=null};proto.google.protobuf.FieldDescriptorProto.prototype.getLabel=function(){return n.Message.getFieldWithDefault(this,4,1)};proto.google.protobuf.FieldDescriptorProto.prototype.setLabel=function(o){return n.Message.setField(this,4,o)};proto.google.protobuf.FieldDescriptorProto.prototype.clearLabel=function(){return n.Message.setField(this,4,void 0)};proto.google.protobuf.FieldDescriptorProto.prototype.hasLabel=function(){return n.Message.getField(this,4)!=null};proto.google.protobuf.FieldDescriptorProto.prototype.getType=function(){return n.Message.getFieldWithDefault(this,5,1)};proto.google.protobuf.FieldDescriptorProto.prototype.setType=function(o){return n.Message.setField(this,5,o)};proto.google.protobuf.FieldDescriptorProto.prototype.clearType=function(){return n.Message.setField(this,5,void 0)};proto.google.protobuf.FieldDescriptorProto.prototype.hasType=function(){return n.Message.getField(this,5)!=null};proto.google.protobuf.FieldDescriptorProto.prototype.getTypeName=function(){return n.Message.getFieldWithDefault(this,6,"")};proto.google.protobuf.FieldDescriptorProto.prototype.setTypeName=function(o){return n.Message.setField(this,6,o)};proto.google.protobuf.FieldDescriptorProto.prototype.clearTypeName=function(){return n.Message.setField(this,6,void 0)};proto.google.protobuf.FieldDescriptorProto.prototype.hasTypeName=function(){return n.Message.getField(this,6)!=null};proto.google.protobuf.FieldDescriptorProto.prototype.getExtendee=function(){return n.Message.getFieldWithDefault(this,2,"")};proto.google.protobuf.FieldDescriptorProto.prototype.setExtendee=function(o){return n.Message.setField(this,2,o)};proto.google.protobuf.FieldDescriptorProto.prototype.clearExtendee=function(){return n.Message.setField(this,2,void 0)};proto.google.protobuf.FieldDescriptorProto.prototype.hasExtendee=function(){return n.Message.getField(this,2)!=null};proto.google.protobuf.FieldDescriptorProto.prototype.getDefaultValue=function(){return n.Message.getFieldWithDefault(this,7,"")};proto.google.protobuf.FieldDescriptorProto.prototype.setDefaultValue=function(o){return n.Message.setField(this,7,o)};proto.google.protobuf.FieldDescriptorProto.prototype.clearDefaultValue=function(){return n.Message.setField(this,7,void 0)};proto.google.protobuf.FieldDescriptorProto.prototype.hasDefaultValue=function(){return n.Message.getField(this,7)!=null};proto.google.protobuf.FieldDescriptorProto.prototype.getOneofIndex=function(){return n.Message.getFieldWithDefault(this,9,0)};proto.google.protobuf.FieldDescriptorProto.prototype.setOneofIndex=function(o){return n.Message.setField(this,9,o)};proto.google.protobuf.FieldDescriptorProto.prototype.clearOneofIndex=function(){return n.Message.setField(this,9,void 0)};proto.google.protobuf.FieldDescriptorProto.prototype.hasOneofIndex=function(){return n.Message.getField(this,9)!=null};proto.google.protobuf.FieldDescriptorProto.prototype.getJsonName=function(){return n.Message.getFieldWithDefault(this,10,"")};proto.google.protobuf.FieldDescriptorProto.prototype.setJsonName=function(o){return n.Message.setField(this,10,o)};proto.google.protobuf.FieldDescriptorProto.prototype.clearJsonName=function(){return n.Message.setField(this,10,void 0)};proto.google.protobuf.FieldDescriptorProto.prototype.hasJsonName=function(){return n.Message.getField(this,10)!=null};proto.google.protobuf.FieldDescriptorProto.prototype.getOptions=function(){return n.Message.getWrapperField(this,proto.google.protobuf.FieldOptions,8)};proto.google.protobuf.FieldDescriptorProto.prototype.setOptions=function(o){return n.Message.setWrapperField(this,8,o)};proto.google.protobuf.FieldDescriptorProto.prototype.clearOptions=function(){return this.setOptions(void 0)};proto.google.protobuf.FieldDescriptorProto.prototype.hasOptions=function(){return n.Message.getField(this,8)!=null};proto.google.protobuf.FieldDescriptorProto.prototype.getProto3Optional=function(){return n.Message.getBooleanFieldWithDefault(this,17,!1)};proto.google.protobuf.FieldDescriptorProto.prototype.setProto3Optional=function(o){return n.Message.setField(this,17,o)};proto.google.protobuf.FieldDescriptorProto.prototype.clearProto3Optional=function(){return n.Message.setField(this,17,void 0)};proto.google.protobuf.FieldDescriptorProto.prototype.hasProto3Optional=function(){return n.Message.getField(this,17)!=null};n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.OneofDescriptorProto.prototype.toObject=function(o){return proto.google.protobuf.OneofDescriptorProto.toObject(o,this)},proto.google.protobuf.OneofDescriptorProto.toObject=function(o,t){var r,i={name:(r=n.Message.getField(t,1))==null?void 0:r,options:(r=t.getOptions())&&proto.google.protobuf.OneofOptions.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.OneofDescriptorProto.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.OneofDescriptorProto;return proto.google.protobuf.OneofDescriptorProto.deserializeBinaryFromReader(r,t)};proto.google.protobuf.OneofDescriptorProto.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readString();o.setName(i);break;case 2:var i=new proto.google.protobuf.OneofOptions;t.readMessage(i,proto.google.protobuf.OneofOptions.deserializeBinaryFromReader),o.setOptions(i);break;default:t.skipField();break}}return o};proto.google.protobuf.OneofDescriptorProto.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.OneofDescriptorProto.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.OneofDescriptorProto.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeString(1,r),r=o.getOptions(),r!=null&&t.writeMessage(2,r,proto.google.protobuf.OneofOptions.serializeBinaryToWriter)};proto.google.protobuf.OneofDescriptorProto.prototype.getName=function(){return n.Message.getFieldWithDefault(this,1,"")};proto.google.protobuf.OneofDescriptorProto.prototype.setName=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.OneofDescriptorProto.prototype.clearName=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.OneofDescriptorProto.prototype.hasName=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.OneofDescriptorProto.prototype.getOptions=function(){return n.Message.getWrapperField(this,proto.google.protobuf.OneofOptions,2)};proto.google.protobuf.OneofDescriptorProto.prototype.setOptions=function(o){return n.Message.setWrapperField(this,2,o)};proto.google.protobuf.OneofDescriptorProto.prototype.clearOptions=function(){return this.setOptions(void 0)};proto.google.protobuf.OneofDescriptorProto.prototype.hasOptions=function(){return n.Message.getField(this,2)!=null};proto.google.protobuf.EnumDescriptorProto.repeatedFields_=[2,4,5];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.EnumDescriptorProto.prototype.toObject=function(o){return proto.google.protobuf.EnumDescriptorProto.toObject(o,this)},proto.google.protobuf.EnumDescriptorProto.toObject=function(o,t){var r,i={name:(r=n.Message.getField(t,1))==null?void 0:r,valueList:n.Message.toObjectList(t.getValueList(),proto.google.protobuf.EnumValueDescriptorProto.toObject,o),options:(r=t.getOptions())&&proto.google.protobuf.EnumOptions.toObject(o,r),reservedRangeList:n.Message.toObjectList(t.getReservedRangeList(),proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject,o),reservedNameList:(r=n.Message.getRepeatedField(t,5))==null?void 0:r};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.EnumDescriptorProto.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.EnumDescriptorProto;return proto.google.protobuf.EnumDescriptorProto.deserializeBinaryFromReader(r,t)};proto.google.protobuf.EnumDescriptorProto.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readString();o.setName(i);break;case 2:var i=new proto.google.protobuf.EnumValueDescriptorProto;t.readMessage(i,proto.google.protobuf.EnumValueDescriptorProto.deserializeBinaryFromReader),o.addValue(i);break;case 3:var i=new proto.google.protobuf.EnumOptions;t.readMessage(i,proto.google.protobuf.EnumOptions.deserializeBinaryFromReader),o.setOptions(i);break;case 4:var i=new proto.google.protobuf.EnumDescriptorProto.EnumReservedRange;t.readMessage(i,proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.deserializeBinaryFromReader),o.addReservedRange(i);break;case 5:var i=t.readString();o.addReservedName(i);break;default:t.skipField();break}}return o};proto.google.protobuf.EnumDescriptorProto.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.EnumDescriptorProto.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.EnumDescriptorProto.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeString(1,r),r=o.getValueList(),r.length>0&&t.writeRepeatedMessage(2,r,proto.google.protobuf.EnumValueDescriptorProto.serializeBinaryToWriter),r=o.getOptions(),r!=null&&t.writeMessage(3,r,proto.google.protobuf.EnumOptions.serializeBinaryToWriter),r=o.getReservedRangeList(),r.length>0&&t.writeRepeatedMessage(4,r,proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.serializeBinaryToWriter),r=o.getReservedNameList(),r.length>0&&t.writeRepeatedString(5,r)};n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.toObject=function(o){return proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(o,this)},proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject=function(o,t){var r,i={start:(r=n.Message.getField(t,1))==null?void 0:r,end:(r=n.Message.getField(t,2))==null?void 0:r};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.EnumDescriptorProto.EnumReservedRange;return proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.deserializeBinaryFromReader(r,t)};proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readInt32();o.setStart(i);break;case 2:var i=t.readInt32();o.setEnd(i);break;default:t.skipField();break}}return o};proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeInt32(1,r),r=n.Message.getField(o,2),r!=null&&t.writeInt32(2,r)};proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.getStart=function(){return n.Message.getFieldWithDefault(this,1,0)};proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.setStart=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.clearStart=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.hasStart=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.getEnd=function(){return n.Message.getFieldWithDefault(this,2,0)};proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.setEnd=function(o){return n.Message.setField(this,2,o)};proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.clearEnd=function(){return n.Message.setField(this,2,void 0)};proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.hasEnd=function(){return n.Message.getField(this,2)!=null};proto.google.protobuf.EnumDescriptorProto.prototype.getName=function(){return n.Message.getFieldWithDefault(this,1,"")};proto.google.protobuf.EnumDescriptorProto.prototype.setName=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.EnumDescriptorProto.prototype.clearName=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.EnumDescriptorProto.prototype.hasName=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.EnumDescriptorProto.prototype.getValueList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.EnumValueDescriptorProto,2)};proto.google.protobuf.EnumDescriptorProto.prototype.setValueList=function(o){return n.Message.setRepeatedWrapperField(this,2,o)};proto.google.protobuf.EnumDescriptorProto.prototype.addValue=function(o,t){return n.Message.addToRepeatedWrapperField(this,2,o,proto.google.protobuf.EnumValueDescriptorProto,t)};proto.google.protobuf.EnumDescriptorProto.prototype.clearValueList=function(){return this.setValueList([])};proto.google.protobuf.EnumDescriptorProto.prototype.getOptions=function(){return n.Message.getWrapperField(this,proto.google.protobuf.EnumOptions,3)};proto.google.protobuf.EnumDescriptorProto.prototype.setOptions=function(o){return n.Message.setWrapperField(this,3,o)};proto.google.protobuf.EnumDescriptorProto.prototype.clearOptions=function(){return this.setOptions(void 0)};proto.google.protobuf.EnumDescriptorProto.prototype.hasOptions=function(){return n.Message.getField(this,3)!=null};proto.google.protobuf.EnumDescriptorProto.prototype.getReservedRangeList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.EnumDescriptorProto.EnumReservedRange,4)};proto.google.protobuf.EnumDescriptorProto.prototype.setReservedRangeList=function(o){return n.Message.setRepeatedWrapperField(this,4,o)};proto.google.protobuf.EnumDescriptorProto.prototype.addReservedRange=function(o,t){return n.Message.addToRepeatedWrapperField(this,4,o,proto.google.protobuf.EnumDescriptorProto.EnumReservedRange,t)};proto.google.protobuf.EnumDescriptorProto.prototype.clearReservedRangeList=function(){return this.setReservedRangeList([])};proto.google.protobuf.EnumDescriptorProto.prototype.getReservedNameList=function(){return n.Message.getRepeatedField(this,5)};proto.google.protobuf.EnumDescriptorProto.prototype.setReservedNameList=function(o){return n.Message.setField(this,5,o||[])};proto.google.protobuf.EnumDescriptorProto.prototype.addReservedName=function(o,t){return n.Message.addToRepeatedField(this,5,o,t)};proto.google.protobuf.EnumDescriptorProto.prototype.clearReservedNameList=function(){return this.setReservedNameList([])};n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.EnumValueDescriptorProto.prototype.toObject=function(o){return proto.google.protobuf.EnumValueDescriptorProto.toObject(o,this)},proto.google.protobuf.EnumValueDescriptorProto.toObject=function(o,t){var r,i={name:(r=n.Message.getField(t,1))==null?void 0:r,number:(r=n.Message.getField(t,2))==null?void 0:r,options:(r=t.getOptions())&&proto.google.protobuf.EnumValueOptions.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.EnumValueDescriptorProto.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.EnumValueDescriptorProto;return proto.google.protobuf.EnumValueDescriptorProto.deserializeBinaryFromReader(r,t)};proto.google.protobuf.EnumValueDescriptorProto.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readString();o.setName(i);break;case 2:var i=t.readInt32();o.setNumber(i);break;case 3:var i=new proto.google.protobuf.EnumValueOptions;t.readMessage(i,proto.google.protobuf.EnumValueOptions.deserializeBinaryFromReader),o.setOptions(i);break;default:t.skipField();break}}return o};proto.google.protobuf.EnumValueDescriptorProto.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.EnumValueDescriptorProto.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.EnumValueDescriptorProto.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeString(1,r),r=n.Message.getField(o,2),r!=null&&t.writeInt32(2,r),r=o.getOptions(),r!=null&&t.writeMessage(3,r,proto.google.protobuf.EnumValueOptions.serializeBinaryToWriter)};proto.google.protobuf.EnumValueDescriptorProto.prototype.getName=function(){return n.Message.getFieldWithDefault(this,1,"")};proto.google.protobuf.EnumValueDescriptorProto.prototype.setName=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.EnumValueDescriptorProto.prototype.clearName=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.EnumValueDescriptorProto.prototype.hasName=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.EnumValueDescriptorProto.prototype.getNumber=function(){return n.Message.getFieldWithDefault(this,2,0)};proto.google.protobuf.EnumValueDescriptorProto.prototype.setNumber=function(o){return n.Message.setField(this,2,o)};proto.google.protobuf.EnumValueDescriptorProto.prototype.clearNumber=function(){return n.Message.setField(this,2,void 0)};proto.google.protobuf.EnumValueDescriptorProto.prototype.hasNumber=function(){return n.Message.getField(this,2)!=null};proto.google.protobuf.EnumValueDescriptorProto.prototype.getOptions=function(){return n.Message.getWrapperField(this,proto.google.protobuf.EnumValueOptions,3)};proto.google.protobuf.EnumValueDescriptorProto.prototype.setOptions=function(o){return n.Message.setWrapperField(this,3,o)};proto.google.protobuf.EnumValueDescriptorProto.prototype.clearOptions=function(){return this.setOptions(void 0)};proto.google.protobuf.EnumValueDescriptorProto.prototype.hasOptions=function(){return n.Message.getField(this,3)!=null};proto.google.protobuf.ServiceDescriptorProto.repeatedFields_=[2];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.ServiceDescriptorProto.prototype.toObject=function(o){return proto.google.protobuf.ServiceDescriptorProto.toObject(o,this)},proto.google.protobuf.ServiceDescriptorProto.toObject=function(o,t){var r,i={name:(r=n.Message.getField(t,1))==null?void 0:r,methodList:n.Message.toObjectList(t.getMethodList(),proto.google.protobuf.MethodDescriptorProto.toObject,o),options:(r=t.getOptions())&&proto.google.protobuf.ServiceOptions.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.ServiceDescriptorProto.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.ServiceDescriptorProto;return proto.google.protobuf.ServiceDescriptorProto.deserializeBinaryFromReader(r,t)};proto.google.protobuf.ServiceDescriptorProto.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readString();o.setName(i);break;case 2:var i=new proto.google.protobuf.MethodDescriptorProto;t.readMessage(i,proto.google.protobuf.MethodDescriptorProto.deserializeBinaryFromReader),o.addMethod(i);break;case 3:var i=new proto.google.protobuf.ServiceOptions;t.readMessage(i,proto.google.protobuf.ServiceOptions.deserializeBinaryFromReader),o.setOptions(i);break;default:t.skipField();break}}return o};proto.google.protobuf.ServiceDescriptorProto.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.ServiceDescriptorProto.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.ServiceDescriptorProto.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeString(1,r),r=o.getMethodList(),r.length>0&&t.writeRepeatedMessage(2,r,proto.google.protobuf.MethodDescriptorProto.serializeBinaryToWriter),r=o.getOptions(),r!=null&&t.writeMessage(3,r,proto.google.protobuf.ServiceOptions.serializeBinaryToWriter)};proto.google.protobuf.ServiceDescriptorProto.prototype.getName=function(){return n.Message.getFieldWithDefault(this,1,"")};proto.google.protobuf.ServiceDescriptorProto.prototype.setName=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.ServiceDescriptorProto.prototype.clearName=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.ServiceDescriptorProto.prototype.hasName=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.ServiceDescriptorProto.prototype.getMethodList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.MethodDescriptorProto,2)};proto.google.protobuf.ServiceDescriptorProto.prototype.setMethodList=function(o){return n.Message.setRepeatedWrapperField(this,2,o)};proto.google.protobuf.ServiceDescriptorProto.prototype.addMethod=function(o,t){return n.Message.addToRepeatedWrapperField(this,2,o,proto.google.protobuf.MethodDescriptorProto,t)};proto.google.protobuf.ServiceDescriptorProto.prototype.clearMethodList=function(){return this.setMethodList([])};proto.google.protobuf.ServiceDescriptorProto.prototype.getOptions=function(){return n.Message.getWrapperField(this,proto.google.protobuf.ServiceOptions,3)};proto.google.protobuf.ServiceDescriptorProto.prototype.setOptions=function(o){return n.Message.setWrapperField(this,3,o)};proto.google.protobuf.ServiceDescriptorProto.prototype.clearOptions=function(){return this.setOptions(void 0)};proto.google.protobuf.ServiceDescriptorProto.prototype.hasOptions=function(){return n.Message.getField(this,3)!=null};n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.MethodDescriptorProto.prototype.toObject=function(o){return proto.google.protobuf.MethodDescriptorProto.toObject(o,this)},proto.google.protobuf.MethodDescriptorProto.toObject=function(o,t){var r,i={name:(r=n.Message.getField(t,1))==null?void 0:r,inputType:(r=n.Message.getField(t,2))==null?void 0:r,outputType:(r=n.Message.getField(t,3))==null?void 0:r,options:(r=t.getOptions())&&proto.google.protobuf.MethodOptions.toObject(o,r),clientStreaming:n.Message.getBooleanFieldWithDefault(t,5,!1),serverStreaming:n.Message.getBooleanFieldWithDefault(t,6,!1)};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.MethodDescriptorProto.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.MethodDescriptorProto;return proto.google.protobuf.MethodDescriptorProto.deserializeBinaryFromReader(r,t)};proto.google.protobuf.MethodDescriptorProto.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readString();o.setName(i);break;case 2:var i=t.readString();o.setInputType(i);break;case 3:var i=t.readString();o.setOutputType(i);break;case 4:var i=new proto.google.protobuf.MethodOptions;t.readMessage(i,proto.google.protobuf.MethodOptions.deserializeBinaryFromReader),o.setOptions(i);break;case 5:var i=t.readBool();o.setClientStreaming(i);break;case 6:var i=t.readBool();o.setServerStreaming(i);break;default:t.skipField();break}}return o};proto.google.protobuf.MethodDescriptorProto.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.MethodDescriptorProto.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.MethodDescriptorProto.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeString(1,r),r=n.Message.getField(o,2),r!=null&&t.writeString(2,r),r=n.Message.getField(o,3),r!=null&&t.writeString(3,r),r=o.getOptions(),r!=null&&t.writeMessage(4,r,proto.google.protobuf.MethodOptions.serializeBinaryToWriter),r=n.Message.getField(o,5),r!=null&&t.writeBool(5,r),r=n.Message.getField(o,6),r!=null&&t.writeBool(6,r)};proto.google.protobuf.MethodDescriptorProto.prototype.getName=function(){return n.Message.getFieldWithDefault(this,1,"")};proto.google.protobuf.MethodDescriptorProto.prototype.setName=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.MethodDescriptorProto.prototype.clearName=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.MethodDescriptorProto.prototype.hasName=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.MethodDescriptorProto.prototype.getInputType=function(){return n.Message.getFieldWithDefault(this,2,"")};proto.google.protobuf.MethodDescriptorProto.prototype.setInputType=function(o){return n.Message.setField(this,2,o)};proto.google.protobuf.MethodDescriptorProto.prototype.clearInputType=function(){return n.Message.setField(this,2,void 0)};proto.google.protobuf.MethodDescriptorProto.prototype.hasInputType=function(){return n.Message.getField(this,2)!=null};proto.google.protobuf.MethodDescriptorProto.prototype.getOutputType=function(){return n.Message.getFieldWithDefault(this,3,"")};proto.google.protobuf.MethodDescriptorProto.prototype.setOutputType=function(o){return n.Message.setField(this,3,o)};proto.google.protobuf.MethodDescriptorProto.prototype.clearOutputType=function(){return n.Message.setField(this,3,void 0)};proto.google.protobuf.MethodDescriptorProto.prototype.hasOutputType=function(){return n.Message.getField(this,3)!=null};proto.google.protobuf.MethodDescriptorProto.prototype.getOptions=function(){return n.Message.getWrapperField(this,proto.google.protobuf.MethodOptions,4)};proto.google.protobuf.MethodDescriptorProto.prototype.setOptions=function(o){return n.Message.setWrapperField(this,4,o)};proto.google.protobuf.MethodDescriptorProto.prototype.clearOptions=function(){return this.setOptions(void 0)};proto.google.protobuf.MethodDescriptorProto.prototype.hasOptions=function(){return n.Message.getField(this,4)!=null};proto.google.protobuf.MethodDescriptorProto.prototype.getClientStreaming=function(){return n.Message.getBooleanFieldWithDefault(this,5,!1)};proto.google.protobuf.MethodDescriptorProto.prototype.setClientStreaming=function(o){return n.Message.setField(this,5,o)};proto.google.protobuf.MethodDescriptorProto.prototype.clearClientStreaming=function(){return n.Message.setField(this,5,void 0)};proto.google.protobuf.MethodDescriptorProto.prototype.hasClientStreaming=function(){return n.Message.getField(this,5)!=null};proto.google.protobuf.MethodDescriptorProto.prototype.getServerStreaming=function(){return n.Message.getBooleanFieldWithDefault(this,6,!1)};proto.google.protobuf.MethodDescriptorProto.prototype.setServerStreaming=function(o){return n.Message.setField(this,6,o)};proto.google.protobuf.MethodDescriptorProto.prototype.clearServerStreaming=function(){return n.Message.setField(this,6,void 0)};proto.google.protobuf.MethodDescriptorProto.prototype.hasServerStreaming=function(){return n.Message.getField(this,6)!=null};proto.google.protobuf.FileOptions.repeatedFields_=[999];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.FileOptions.prototype.toObject=function(o){return proto.google.protobuf.FileOptions.toObject(o,this)},proto.google.protobuf.FileOptions.toObject=function(o,t){var r,i={javaPackage:(r=n.Message.getField(t,1))==null?void 0:r,javaOuterClassname:(r=n.Message.getField(t,8))==null?void 0:r,javaMultipleFiles:n.Message.getBooleanFieldWithDefault(t,10,!1),javaGenerateEqualsAndHash:(r=n.Message.getBooleanField(t,20))==null?void 0:r,javaStringCheckUtf8:n.Message.getBooleanFieldWithDefault(t,27,!1),optimizeFor:n.Message.getFieldWithDefault(t,9,1),goPackage:(r=n.Message.getField(t,11))==null?void 0:r,ccGenericServices:n.Message.getBooleanFieldWithDefault(t,16,!1),javaGenericServices:n.Message.getBooleanFieldWithDefault(t,17,!1),pyGenericServices:n.Message.getBooleanFieldWithDefault(t,18,!1),phpGenericServices:n.Message.getBooleanFieldWithDefault(t,42,!1),deprecated:n.Message.getBooleanFieldWithDefault(t,23,!1),ccEnableArenas:n.Message.getBooleanFieldWithDefault(t,31,!0),objcClassPrefix:(r=n.Message.getField(t,36))==null?void 0:r,csharpNamespace:(r=n.Message.getField(t,37))==null?void 0:r,swiftPrefix:(r=n.Message.getField(t,39))==null?void 0:r,phpClassPrefix:(r=n.Message.getField(t,40))==null?void 0:r,phpNamespace:(r=n.Message.getField(t,41))==null?void 0:r,phpMetadataNamespace:(r=n.Message.getField(t,44))==null?void 0:r,rubyPackage:(r=n.Message.getField(t,45))==null?void 0:r,uninterpretedOptionList:n.Message.toObjectList(t.getUninterpretedOptionList(),proto.google.protobuf.UninterpretedOption.toObject,o)};return n.Message.toObjectExtension(t,i,proto.google.protobuf.FileOptions.extensions,proto.google.protobuf.FileOptions.prototype.getExtension,o),o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.FileOptions.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.FileOptions;return proto.google.protobuf.FileOptions.deserializeBinaryFromReader(r,t)};proto.google.protobuf.FileOptions.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readString();o.setJavaPackage(i);break;case 8:var i=t.readString();o.setJavaOuterClassname(i);break;case 10:var i=t.readBool();o.setJavaMultipleFiles(i);break;case 20:var i=t.readBool();o.setJavaGenerateEqualsAndHash(i);break;case 27:var i=t.readBool();o.setJavaStringCheckUtf8(i);break;case 9:var i=t.readEnum();o.setOptimizeFor(i);break;case 11:var i=t.readString();o.setGoPackage(i);break;case 16:var i=t.readBool();o.setCcGenericServices(i);break;case 17:var i=t.readBool();o.setJavaGenericServices(i);break;case 18:var i=t.readBool();o.setPyGenericServices(i);break;case 42:var i=t.readBool();o.setPhpGenericServices(i);break;case 23:var i=t.readBool();o.setDeprecated(i);break;case 31:var i=t.readBool();o.setCcEnableArenas(i);break;case 36:var i=t.readString();o.setObjcClassPrefix(i);break;case 37:var i=t.readString();o.setCsharpNamespace(i);break;case 39:var i=t.readString();o.setSwiftPrefix(i);break;case 40:var i=t.readString();o.setPhpClassPrefix(i);break;case 41:var i=t.readString();o.setPhpNamespace(i);break;case 44:var i=t.readString();o.setPhpMetadataNamespace(i);break;case 45:var i=t.readString();o.setRubyPackage(i);break;case 999:var i=new proto.google.protobuf.UninterpretedOption;t.readMessage(i,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader),o.addUninterpretedOption(i);break;default:n.Message.readBinaryExtension(o,t,proto.google.protobuf.FileOptions.extensionsBinary,proto.google.protobuf.FileOptions.prototype.getExtension,proto.google.protobuf.FileOptions.prototype.setExtension);break}}return o};proto.google.protobuf.FileOptions.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.FileOptions.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.FileOptions.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeString(1,r),r=n.Message.getField(o,8),r!=null&&t.writeString(8,r),r=n.Message.getField(o,10),r!=null&&t.writeBool(10,r),r=n.Message.getField(o,20),r!=null&&t.writeBool(20,r),r=n.Message.getField(o,27),r!=null&&t.writeBool(27,r),r=n.Message.getField(o,9),r!=null&&t.writeEnum(9,r),r=n.Message.getField(o,11),r!=null&&t.writeString(11,r),r=n.Message.getField(o,16),r!=null&&t.writeBool(16,r),r=n.Message.getField(o,17),r!=null&&t.writeBool(17,r),r=n.Message.getField(o,18),r!=null&&t.writeBool(18,r),r=n.Message.getField(o,42),r!=null&&t.writeBool(42,r),r=n.Message.getField(o,23),r!=null&&t.writeBool(23,r),r=n.Message.getField(o,31),r!=null&&t.writeBool(31,r),r=n.Message.getField(o,36),r!=null&&t.writeString(36,r),r=n.Message.getField(o,37),r!=null&&t.writeString(37,r),r=n.Message.getField(o,39),r!=null&&t.writeString(39,r),r=n.Message.getField(o,40),r!=null&&t.writeString(40,r),r=n.Message.getField(o,41),r!=null&&t.writeString(41,r),r=n.Message.getField(o,44),r!=null&&t.writeString(44,r),r=n.Message.getField(o,45),r!=null&&t.writeString(45,r),r=o.getUninterpretedOptionList(),r.length>0&&t.writeRepeatedMessage(999,r,proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter),n.Message.serializeBinaryExtensions(o,t,proto.google.protobuf.FileOptions.extensionsBinary,proto.google.protobuf.FileOptions.prototype.getExtension)};proto.google.protobuf.FileOptions.OptimizeMode={SPEED:1,CODE_SIZE:2,LITE_RUNTIME:3};proto.google.protobuf.FileOptions.prototype.getJavaPackage=function(){return n.Message.getFieldWithDefault(this,1,"")};proto.google.protobuf.FileOptions.prototype.setJavaPackage=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.FileOptions.prototype.clearJavaPackage=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.FileOptions.prototype.hasJavaPackage=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.FileOptions.prototype.getJavaOuterClassname=function(){return n.Message.getFieldWithDefault(this,8,"")};proto.google.protobuf.FileOptions.prototype.setJavaOuterClassname=function(o){return n.Message.setField(this,8,o)};proto.google.protobuf.FileOptions.prototype.clearJavaOuterClassname=function(){return n.Message.setField(this,8,void 0)};proto.google.protobuf.FileOptions.prototype.hasJavaOuterClassname=function(){return n.Message.getField(this,8)!=null};proto.google.protobuf.FileOptions.prototype.getJavaMultipleFiles=function(){return n.Message.getBooleanFieldWithDefault(this,10,!1)};proto.google.protobuf.FileOptions.prototype.setJavaMultipleFiles=function(o){return n.Message.setField(this,10,o)};proto.google.protobuf.FileOptions.prototype.clearJavaMultipleFiles=function(){return n.Message.setField(this,10,void 0)};proto.google.protobuf.FileOptions.prototype.hasJavaMultipleFiles=function(){return n.Message.getField(this,10)!=null};proto.google.protobuf.FileOptions.prototype.getJavaGenerateEqualsAndHash=function(){return n.Message.getBooleanFieldWithDefault(this,20,!1)};proto.google.protobuf.FileOptions.prototype.setJavaGenerateEqualsAndHash=function(o){return n.Message.setField(this,20,o)};proto.google.protobuf.FileOptions.prototype.clearJavaGenerateEqualsAndHash=function(){return n.Message.setField(this,20,void 0)};proto.google.protobuf.FileOptions.prototype.hasJavaGenerateEqualsAndHash=function(){return n.Message.getField(this,20)!=null};proto.google.protobuf.FileOptions.prototype.getJavaStringCheckUtf8=function(){return n.Message.getBooleanFieldWithDefault(this,27,!1)};proto.google.protobuf.FileOptions.prototype.setJavaStringCheckUtf8=function(o){return n.Message.setField(this,27,o)};proto.google.protobuf.FileOptions.prototype.clearJavaStringCheckUtf8=function(){return n.Message.setField(this,27,void 0)};proto.google.protobuf.FileOptions.prototype.hasJavaStringCheckUtf8=function(){return n.Message.getField(this,27)!=null};proto.google.protobuf.FileOptions.prototype.getOptimizeFor=function(){return n.Message.getFieldWithDefault(this,9,1)};proto.google.protobuf.FileOptions.prototype.setOptimizeFor=function(o){return n.Message.setField(this,9,o)};proto.google.protobuf.FileOptions.prototype.clearOptimizeFor=function(){return n.Message.setField(this,9,void 0)};proto.google.protobuf.FileOptions.prototype.hasOptimizeFor=function(){return n.Message.getField(this,9)!=null};proto.google.protobuf.FileOptions.prototype.getGoPackage=function(){return n.Message.getFieldWithDefault(this,11,"")};proto.google.protobuf.FileOptions.prototype.setGoPackage=function(o){return n.Message.setField(this,11,o)};proto.google.protobuf.FileOptions.prototype.clearGoPackage=function(){return n.Message.setField(this,11,void 0)};proto.google.protobuf.FileOptions.prototype.hasGoPackage=function(){return n.Message.getField(this,11)!=null};proto.google.protobuf.FileOptions.prototype.getCcGenericServices=function(){return n.Message.getBooleanFieldWithDefault(this,16,!1)};proto.google.protobuf.FileOptions.prototype.setCcGenericServices=function(o){return n.Message.setField(this,16,o)};proto.google.protobuf.FileOptions.prototype.clearCcGenericServices=function(){return n.Message.setField(this,16,void 0)};proto.google.protobuf.FileOptions.prototype.hasCcGenericServices=function(){return n.Message.getField(this,16)!=null};proto.google.protobuf.FileOptions.prototype.getJavaGenericServices=function(){return n.Message.getBooleanFieldWithDefault(this,17,!1)};proto.google.protobuf.FileOptions.prototype.setJavaGenericServices=function(o){return n.Message.setField(this,17,o)};proto.google.protobuf.FileOptions.prototype.clearJavaGenericServices=function(){return n.Message.setField(this,17,void 0)};proto.google.protobuf.FileOptions.prototype.hasJavaGenericServices=function(){return n.Message.getField(this,17)!=null};proto.google.protobuf.FileOptions.prototype.getPyGenericServices=function(){return n.Message.getBooleanFieldWithDefault(this,18,!1)};proto.google.protobuf.FileOptions.prototype.setPyGenericServices=function(o){return n.Message.setField(this,18,o)};proto.google.protobuf.FileOptions.prototype.clearPyGenericServices=function(){return n.Message.setField(this,18,void 0)};proto.google.protobuf.FileOptions.prototype.hasPyGenericServices=function(){return n.Message.getField(this,18)!=null};proto.google.protobuf.FileOptions.prototype.getPhpGenericServices=function(){return n.Message.getBooleanFieldWithDefault(this,42,!1)};proto.google.protobuf.FileOptions.prototype.setPhpGenericServices=function(o){return n.Message.setField(this,42,o)};proto.google.protobuf.FileOptions.prototype.clearPhpGenericServices=function(){return n.Message.setField(this,42,void 0)};proto.google.protobuf.FileOptions.prototype.hasPhpGenericServices=function(){return n.Message.getField(this,42)!=null};proto.google.protobuf.FileOptions.prototype.getDeprecated=function(){return n.Message.getBooleanFieldWithDefault(this,23,!1)};proto.google.protobuf.FileOptions.prototype.setDeprecated=function(o){return n.Message.setField(this,23,o)};proto.google.protobuf.FileOptions.prototype.clearDeprecated=function(){return n.Message.setField(this,23,void 0)};proto.google.protobuf.FileOptions.prototype.hasDeprecated=function(){return n.Message.getField(this,23)!=null};proto.google.protobuf.FileOptions.prototype.getCcEnableArenas=function(){return n.Message.getBooleanFieldWithDefault(this,31,!0)};proto.google.protobuf.FileOptions.prototype.setCcEnableArenas=function(o){return n.Message.setField(this,31,o)};proto.google.protobuf.FileOptions.prototype.clearCcEnableArenas=function(){return n.Message.setField(this,31,void 0)};proto.google.protobuf.FileOptions.prototype.hasCcEnableArenas=function(){return n.Message.getField(this,31)!=null};proto.google.protobuf.FileOptions.prototype.getObjcClassPrefix=function(){return n.Message.getFieldWithDefault(this,36,"")};proto.google.protobuf.FileOptions.prototype.setObjcClassPrefix=function(o){return n.Message.setField(this,36,o)};proto.google.protobuf.FileOptions.prototype.clearObjcClassPrefix=function(){return n.Message.setField(this,36,void 0)};proto.google.protobuf.FileOptions.prototype.hasObjcClassPrefix=function(){return n.Message.getField(this,36)!=null};proto.google.protobuf.FileOptions.prototype.getCsharpNamespace=function(){return n.Message.getFieldWithDefault(this,37,"")};proto.google.protobuf.FileOptions.prototype.setCsharpNamespace=function(o){return n.Message.setField(this,37,o)};proto.google.protobuf.FileOptions.prototype.clearCsharpNamespace=function(){return n.Message.setField(this,37,void 0)};proto.google.protobuf.FileOptions.prototype.hasCsharpNamespace=function(){return n.Message.getField(this,37)!=null};proto.google.protobuf.FileOptions.prototype.getSwiftPrefix=function(){return n.Message.getFieldWithDefault(this,39,"")};proto.google.protobuf.FileOptions.prototype.setSwiftPrefix=function(o){return n.Message.setField(this,39,o)};proto.google.protobuf.FileOptions.prototype.clearSwiftPrefix=function(){return n.Message.setField(this,39,void 0)};proto.google.protobuf.FileOptions.prototype.hasSwiftPrefix=function(){return n.Message.getField(this,39)!=null};proto.google.protobuf.FileOptions.prototype.getPhpClassPrefix=function(){return n.Message.getFieldWithDefault(this,40,"")};proto.google.protobuf.FileOptions.prototype.setPhpClassPrefix=function(o){return n.Message.setField(this,40,o)};proto.google.protobuf.FileOptions.prototype.clearPhpClassPrefix=function(){return n.Message.setField(this,40,void 0)};proto.google.protobuf.FileOptions.prototype.hasPhpClassPrefix=function(){return n.Message.getField(this,40)!=null};proto.google.protobuf.FileOptions.prototype.getPhpNamespace=function(){return n.Message.getFieldWithDefault(this,41,"")};proto.google.protobuf.FileOptions.prototype.setPhpNamespace=function(o){return n.Message.setField(this,41,o)};proto.google.protobuf.FileOptions.prototype.clearPhpNamespace=function(){return n.Message.setField(this,41,void 0)};proto.google.protobuf.FileOptions.prototype.hasPhpNamespace=function(){return n.Message.getField(this,41)!=null};proto.google.protobuf.FileOptions.prototype.getPhpMetadataNamespace=function(){return n.Message.getFieldWithDefault(this,44,"")};proto.google.protobuf.FileOptions.prototype.setPhpMetadataNamespace=function(o){return n.Message.setField(this,44,o)};proto.google.protobuf.FileOptions.prototype.clearPhpMetadataNamespace=function(){return n.Message.setField(this,44,void 0)};proto.google.protobuf.FileOptions.prototype.hasPhpMetadataNamespace=function(){return n.Message.getField(this,44)!=null};proto.google.protobuf.FileOptions.prototype.getRubyPackage=function(){return n.Message.getFieldWithDefault(this,45,"")};proto.google.protobuf.FileOptions.prototype.setRubyPackage=function(o){return n.Message.setField(this,45,o)};proto.google.protobuf.FileOptions.prototype.clearRubyPackage=function(){return n.Message.setField(this,45,void 0)};proto.google.protobuf.FileOptions.prototype.hasRubyPackage=function(){return n.Message.getField(this,45)!=null};proto.google.protobuf.FileOptions.prototype.getUninterpretedOptionList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.UninterpretedOption,999)};proto.google.protobuf.FileOptions.prototype.setUninterpretedOptionList=function(o){return n.Message.setRepeatedWrapperField(this,999,o)};proto.google.protobuf.FileOptions.prototype.addUninterpretedOption=function(o,t){return n.Message.addToRepeatedWrapperField(this,999,o,proto.google.protobuf.UninterpretedOption,t)};proto.google.protobuf.FileOptions.prototype.clearUninterpretedOptionList=function(){return this.setUninterpretedOptionList([])};proto.google.protobuf.MessageOptions.repeatedFields_=[999];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.MessageOptions.prototype.toObject=function(o){return proto.google.protobuf.MessageOptions.toObject(o,this)},proto.google.protobuf.MessageOptions.toObject=function(o,t){var r,i={messageSetWireFormat:n.Message.getBooleanFieldWithDefault(t,1,!1),noStandardDescriptorAccessor:n.Message.getBooleanFieldWithDefault(t,2,!1),deprecated:n.Message.getBooleanFieldWithDefault(t,3,!1),mapEntry:(r=n.Message.getBooleanField(t,7))==null?void 0:r,uninterpretedOptionList:n.Message.toObjectList(t.getUninterpretedOptionList(),proto.google.protobuf.UninterpretedOption.toObject,o)};return n.Message.toObjectExtension(t,i,proto.google.protobuf.MessageOptions.extensions,proto.google.protobuf.MessageOptions.prototype.getExtension,o),o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.MessageOptions.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.MessageOptions;return proto.google.protobuf.MessageOptions.deserializeBinaryFromReader(r,t)};proto.google.protobuf.MessageOptions.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readBool();o.setMessageSetWireFormat(i);break;case 2:var i=t.readBool();o.setNoStandardDescriptorAccessor(i);break;case 3:var i=t.readBool();o.setDeprecated(i);break;case 7:var i=t.readBool();o.setMapEntry(i);break;case 999:var i=new proto.google.protobuf.UninterpretedOption;t.readMessage(i,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader),o.addUninterpretedOption(i);break;default:n.Message.readBinaryExtension(o,t,proto.google.protobuf.MessageOptions.extensionsBinary,proto.google.protobuf.MessageOptions.prototype.getExtension,proto.google.protobuf.MessageOptions.prototype.setExtension);break}}return o};proto.google.protobuf.MessageOptions.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.MessageOptions.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.MessageOptions.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeBool(1,r),r=n.Message.getField(o,2),r!=null&&t.writeBool(2,r),r=n.Message.getField(o,3),r!=null&&t.writeBool(3,r),r=n.Message.getField(o,7),r!=null&&t.writeBool(7,r),r=o.getUninterpretedOptionList(),r.length>0&&t.writeRepeatedMessage(999,r,proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter),n.Message.serializeBinaryExtensions(o,t,proto.google.protobuf.MessageOptions.extensionsBinary,proto.google.protobuf.MessageOptions.prototype.getExtension)};proto.google.protobuf.MessageOptions.prototype.getMessageSetWireFormat=function(){return n.Message.getBooleanFieldWithDefault(this,1,!1)};proto.google.protobuf.MessageOptions.prototype.setMessageSetWireFormat=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.MessageOptions.prototype.clearMessageSetWireFormat=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.MessageOptions.prototype.hasMessageSetWireFormat=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.MessageOptions.prototype.getNoStandardDescriptorAccessor=function(){return n.Message.getBooleanFieldWithDefault(this,2,!1)};proto.google.protobuf.MessageOptions.prototype.setNoStandardDescriptorAccessor=function(o){return n.Message.setField(this,2,o)};proto.google.protobuf.MessageOptions.prototype.clearNoStandardDescriptorAccessor=function(){return n.Message.setField(this,2,void 0)};proto.google.protobuf.MessageOptions.prototype.hasNoStandardDescriptorAccessor=function(){return n.Message.getField(this,2)!=null};proto.google.protobuf.MessageOptions.prototype.getDeprecated=function(){return n.Message.getBooleanFieldWithDefault(this,3,!1)};proto.google.protobuf.MessageOptions.prototype.setDeprecated=function(o){return n.Message.setField(this,3,o)};proto.google.protobuf.MessageOptions.prototype.clearDeprecated=function(){return n.Message.setField(this,3,void 0)};proto.google.protobuf.MessageOptions.prototype.hasDeprecated=function(){return n.Message.getField(this,3)!=null};proto.google.protobuf.MessageOptions.prototype.getMapEntry=function(){return n.Message.getBooleanFieldWithDefault(this,7,!1)};proto.google.protobuf.MessageOptions.prototype.setMapEntry=function(o){return n.Message.setField(this,7,o)};proto.google.protobuf.MessageOptions.prototype.clearMapEntry=function(){return n.Message.setField(this,7,void 0)};proto.google.protobuf.MessageOptions.prototype.hasMapEntry=function(){return n.Message.getField(this,7)!=null};proto.google.protobuf.MessageOptions.prototype.getUninterpretedOptionList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.UninterpretedOption,999)};proto.google.protobuf.MessageOptions.prototype.setUninterpretedOptionList=function(o){return n.Message.setRepeatedWrapperField(this,999,o)};proto.google.protobuf.MessageOptions.prototype.addUninterpretedOption=function(o,t){return n.Message.addToRepeatedWrapperField(this,999,o,proto.google.protobuf.UninterpretedOption,t)};proto.google.protobuf.MessageOptions.prototype.clearUninterpretedOptionList=function(){return this.setUninterpretedOptionList([])};proto.google.protobuf.FieldOptions.repeatedFields_=[999];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.FieldOptions.prototype.toObject=function(o){return proto.google.protobuf.FieldOptions.toObject(o,this)},proto.google.protobuf.FieldOptions.toObject=function(o,t){var r,i={ctype:n.Message.getFieldWithDefault(t,1,0),packed:(r=n.Message.getBooleanField(t,2))==null?void 0:r,jstype:n.Message.getFieldWithDefault(t,6,0),lazy:n.Message.getBooleanFieldWithDefault(t,5,!1),deprecated:n.Message.getBooleanFieldWithDefault(t,3,!1),weak:n.Message.getBooleanFieldWithDefault(t,10,!1),uninterpretedOptionList:n.Message.toObjectList(t.getUninterpretedOptionList(),proto.google.protobuf.UninterpretedOption.toObject,o)};return n.Message.toObjectExtension(t,i,proto.google.protobuf.FieldOptions.extensions,proto.google.protobuf.FieldOptions.prototype.getExtension,o),o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.FieldOptions.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.FieldOptions;return proto.google.protobuf.FieldOptions.deserializeBinaryFromReader(r,t)};proto.google.protobuf.FieldOptions.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readEnum();o.setCtype(i);break;case 2:var i=t.readBool();o.setPacked(i);break;case 6:var i=t.readEnum();o.setJstype(i);break;case 5:var i=t.readBool();o.setLazy(i);break;case 3:var i=t.readBool();o.setDeprecated(i);break;case 10:var i=t.readBool();o.setWeak(i);break;case 999:var i=new proto.google.protobuf.UninterpretedOption;t.readMessage(i,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader),o.addUninterpretedOption(i);break;default:n.Message.readBinaryExtension(o,t,proto.google.protobuf.FieldOptions.extensionsBinary,proto.google.protobuf.FieldOptions.prototype.getExtension,proto.google.protobuf.FieldOptions.prototype.setExtension);break}}return o};proto.google.protobuf.FieldOptions.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.FieldOptions.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.FieldOptions.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeEnum(1,r),r=n.Message.getField(o,2),r!=null&&t.writeBool(2,r),r=n.Message.getField(o,6),r!=null&&t.writeEnum(6,r),r=n.Message.getField(o,5),r!=null&&t.writeBool(5,r),r=n.Message.getField(o,3),r!=null&&t.writeBool(3,r),r=n.Message.getField(o,10),r!=null&&t.writeBool(10,r),r=o.getUninterpretedOptionList(),r.length>0&&t.writeRepeatedMessage(999,r,proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter),n.Message.serializeBinaryExtensions(o,t,proto.google.protobuf.FieldOptions.extensionsBinary,proto.google.protobuf.FieldOptions.prototype.getExtension)};proto.google.protobuf.FieldOptions.CType={STRING:0,CORD:1,STRING_PIECE:2};proto.google.protobuf.FieldOptions.JSType={JS_NORMAL:0,JS_STRING:1,JS_NUMBER:2};proto.google.protobuf.FieldOptions.prototype.getCtype=function(){return n.Message.getFieldWithDefault(this,1,0)};proto.google.protobuf.FieldOptions.prototype.setCtype=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.FieldOptions.prototype.clearCtype=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.FieldOptions.prototype.hasCtype=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.FieldOptions.prototype.getPacked=function(){return n.Message.getBooleanFieldWithDefault(this,2,!1)};proto.google.protobuf.FieldOptions.prototype.setPacked=function(o){return n.Message.setField(this,2,o)};proto.google.protobuf.FieldOptions.prototype.clearPacked=function(){return n.Message.setField(this,2,void 0)};proto.google.protobuf.FieldOptions.prototype.hasPacked=function(){return n.Message.getField(this,2)!=null};proto.google.protobuf.FieldOptions.prototype.getJstype=function(){return n.Message.getFieldWithDefault(this,6,0)};proto.google.protobuf.FieldOptions.prototype.setJstype=function(o){return n.Message.setField(this,6,o)};proto.google.protobuf.FieldOptions.prototype.clearJstype=function(){return n.Message.setField(this,6,void 0)};proto.google.protobuf.FieldOptions.prototype.hasJstype=function(){return n.Message.getField(this,6)!=null};proto.google.protobuf.FieldOptions.prototype.getLazy=function(){return n.Message.getBooleanFieldWithDefault(this,5,!1)};proto.google.protobuf.FieldOptions.prototype.setLazy=function(o){return n.Message.setField(this,5,o)};proto.google.protobuf.FieldOptions.prototype.clearLazy=function(){return n.Message.setField(this,5,void 0)};proto.google.protobuf.FieldOptions.prototype.hasLazy=function(){return n.Message.getField(this,5)!=null};proto.google.protobuf.FieldOptions.prototype.getDeprecated=function(){return n.Message.getBooleanFieldWithDefault(this,3,!1)};proto.google.protobuf.FieldOptions.prototype.setDeprecated=function(o){return n.Message.setField(this,3,o)};proto.google.protobuf.FieldOptions.prototype.clearDeprecated=function(){return n.Message.setField(this,3,void 0)};proto.google.protobuf.FieldOptions.prototype.hasDeprecated=function(){return n.Message.getField(this,3)!=null};proto.google.protobuf.FieldOptions.prototype.getWeak=function(){return n.Message.getBooleanFieldWithDefault(this,10,!1)};proto.google.protobuf.FieldOptions.prototype.setWeak=function(o){return n.Message.setField(this,10,o)};proto.google.protobuf.FieldOptions.prototype.clearWeak=function(){return n.Message.setField(this,10,void 0)};proto.google.protobuf.FieldOptions.prototype.hasWeak=function(){return n.Message.getField(this,10)!=null};proto.google.protobuf.FieldOptions.prototype.getUninterpretedOptionList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.UninterpretedOption,999)};proto.google.protobuf.FieldOptions.prototype.setUninterpretedOptionList=function(o){return n.Message.setRepeatedWrapperField(this,999,o)};proto.google.protobuf.FieldOptions.prototype.addUninterpretedOption=function(o,t){return n.Message.addToRepeatedWrapperField(this,999,o,proto.google.protobuf.UninterpretedOption,t)};proto.google.protobuf.FieldOptions.prototype.clearUninterpretedOptionList=function(){return this.setUninterpretedOptionList([])};proto.google.protobuf.OneofOptions.repeatedFields_=[999];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.OneofOptions.prototype.toObject=function(o){return proto.google.protobuf.OneofOptions.toObject(o,this)},proto.google.protobuf.OneofOptions.toObject=function(o,t){var r,i={uninterpretedOptionList:n.Message.toObjectList(t.getUninterpretedOptionList(),proto.google.protobuf.UninterpretedOption.toObject,o)};return n.Message.toObjectExtension(t,i,proto.google.protobuf.OneofOptions.extensions,proto.google.protobuf.OneofOptions.prototype.getExtension,o),o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.OneofOptions.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.OneofOptions;return proto.google.protobuf.OneofOptions.deserializeBinaryFromReader(r,t)};proto.google.protobuf.OneofOptions.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 999:var i=new proto.google.protobuf.UninterpretedOption;t.readMessage(i,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader),o.addUninterpretedOption(i);break;default:n.Message.readBinaryExtension(o,t,proto.google.protobuf.OneofOptions.extensionsBinary,proto.google.protobuf.OneofOptions.prototype.getExtension,proto.google.protobuf.OneofOptions.prototype.setExtension);break}}return o};proto.google.protobuf.OneofOptions.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.OneofOptions.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.OneofOptions.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getUninterpretedOptionList(),r.length>0&&t.writeRepeatedMessage(999,r,proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter),n.Message.serializeBinaryExtensions(o,t,proto.google.protobuf.OneofOptions.extensionsBinary,proto.google.protobuf.OneofOptions.prototype.getExtension)};proto.google.protobuf.OneofOptions.prototype.getUninterpretedOptionList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.UninterpretedOption,999)};proto.google.protobuf.OneofOptions.prototype.setUninterpretedOptionList=function(o){return n.Message.setRepeatedWrapperField(this,999,o)};proto.google.protobuf.OneofOptions.prototype.addUninterpretedOption=function(o,t){return n.Message.addToRepeatedWrapperField(this,999,o,proto.google.protobuf.UninterpretedOption,t)};proto.google.protobuf.OneofOptions.prototype.clearUninterpretedOptionList=function(){return this.setUninterpretedOptionList([])};proto.google.protobuf.EnumOptions.repeatedFields_=[999];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.EnumOptions.prototype.toObject=function(o){return proto.google.protobuf.EnumOptions.toObject(o,this)},proto.google.protobuf.EnumOptions.toObject=function(o,t){var r,i={allowAlias:(r=n.Message.getBooleanField(t,2))==null?void 0:r,deprecated:n.Message.getBooleanFieldWithDefault(t,3,!1),uninterpretedOptionList:n.Message.toObjectList(t.getUninterpretedOptionList(),proto.google.protobuf.UninterpretedOption.toObject,o)};return n.Message.toObjectExtension(t,i,proto.google.protobuf.EnumOptions.extensions,proto.google.protobuf.EnumOptions.prototype.getExtension,o),o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.EnumOptions.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.EnumOptions;return proto.google.protobuf.EnumOptions.deserializeBinaryFromReader(r,t)};proto.google.protobuf.EnumOptions.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 2:var i=t.readBool();o.setAllowAlias(i);break;case 3:var i=t.readBool();o.setDeprecated(i);break;case 999:var i=new proto.google.protobuf.UninterpretedOption;t.readMessage(i,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader),o.addUninterpretedOption(i);break;default:n.Message.readBinaryExtension(o,t,proto.google.protobuf.EnumOptions.extensionsBinary,proto.google.protobuf.EnumOptions.prototype.getExtension,proto.google.protobuf.EnumOptions.prototype.setExtension);break}}return o};proto.google.protobuf.EnumOptions.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.EnumOptions.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.EnumOptions.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,2),r!=null&&t.writeBool(2,r),r=n.Message.getField(o,3),r!=null&&t.writeBool(3,r),r=o.getUninterpretedOptionList(),r.length>0&&t.writeRepeatedMessage(999,r,proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter),n.Message.serializeBinaryExtensions(o,t,proto.google.protobuf.EnumOptions.extensionsBinary,proto.google.protobuf.EnumOptions.prototype.getExtension)};proto.google.protobuf.EnumOptions.prototype.getAllowAlias=function(){return n.Message.getBooleanFieldWithDefault(this,2,!1)};proto.google.protobuf.EnumOptions.prototype.setAllowAlias=function(o){return n.Message.setField(this,2,o)};proto.google.protobuf.EnumOptions.prototype.clearAllowAlias=function(){return n.Message.setField(this,2,void 0)};proto.google.protobuf.EnumOptions.prototype.hasAllowAlias=function(){return n.Message.getField(this,2)!=null};proto.google.protobuf.EnumOptions.prototype.getDeprecated=function(){return n.Message.getBooleanFieldWithDefault(this,3,!1)};proto.google.protobuf.EnumOptions.prototype.setDeprecated=function(o){return n.Message.setField(this,3,o)};proto.google.protobuf.EnumOptions.prototype.clearDeprecated=function(){return n.Message.setField(this,3,void 0)};proto.google.protobuf.EnumOptions.prototype.hasDeprecated=function(){return n.Message.getField(this,3)!=null};proto.google.protobuf.EnumOptions.prototype.getUninterpretedOptionList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.UninterpretedOption,999)};proto.google.protobuf.EnumOptions.prototype.setUninterpretedOptionList=function(o){return n.Message.setRepeatedWrapperField(this,999,o)};proto.google.protobuf.EnumOptions.prototype.addUninterpretedOption=function(o,t){return n.Message.addToRepeatedWrapperField(this,999,o,proto.google.protobuf.UninterpretedOption,t)};proto.google.protobuf.EnumOptions.prototype.clearUninterpretedOptionList=function(){return this.setUninterpretedOptionList([])};proto.google.protobuf.EnumValueOptions.repeatedFields_=[999];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.EnumValueOptions.prototype.toObject=function(o){return proto.google.protobuf.EnumValueOptions.toObject(o,this)},proto.google.protobuf.EnumValueOptions.toObject=function(o,t){var r,i={deprecated:n.Message.getBooleanFieldWithDefault(t,1,!1),uninterpretedOptionList:n.Message.toObjectList(t.getUninterpretedOptionList(),proto.google.protobuf.UninterpretedOption.toObject,o)};return n.Message.toObjectExtension(t,i,proto.google.protobuf.EnumValueOptions.extensions,proto.google.protobuf.EnumValueOptions.prototype.getExtension,o),o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.EnumValueOptions.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.EnumValueOptions;return proto.google.protobuf.EnumValueOptions.deserializeBinaryFromReader(r,t)};proto.google.protobuf.EnumValueOptions.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readBool();o.setDeprecated(i);break;case 999:var i=new proto.google.protobuf.UninterpretedOption;t.readMessage(i,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader),o.addUninterpretedOption(i);break;default:n.Message.readBinaryExtension(o,t,proto.google.protobuf.EnumValueOptions.extensionsBinary,proto.google.protobuf.EnumValueOptions.prototype.getExtension,proto.google.protobuf.EnumValueOptions.prototype.setExtension);break}}return o};proto.google.protobuf.EnumValueOptions.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.EnumValueOptions.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.EnumValueOptions.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeBool(1,r),r=o.getUninterpretedOptionList(),r.length>0&&t.writeRepeatedMessage(999,r,proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter),n.Message.serializeBinaryExtensions(o,t,proto.google.protobuf.EnumValueOptions.extensionsBinary,proto.google.protobuf.EnumValueOptions.prototype.getExtension)};proto.google.protobuf.EnumValueOptions.prototype.getDeprecated=function(){return n.Message.getBooleanFieldWithDefault(this,1,!1)};proto.google.protobuf.EnumValueOptions.prototype.setDeprecated=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.EnumValueOptions.prototype.clearDeprecated=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.EnumValueOptions.prototype.hasDeprecated=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.EnumValueOptions.prototype.getUninterpretedOptionList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.UninterpretedOption,999)};proto.google.protobuf.EnumValueOptions.prototype.setUninterpretedOptionList=function(o){return n.Message.setRepeatedWrapperField(this,999,o)};proto.google.protobuf.EnumValueOptions.prototype.addUninterpretedOption=function(o,t){return n.Message.addToRepeatedWrapperField(this,999,o,proto.google.protobuf.UninterpretedOption,t)};proto.google.protobuf.EnumValueOptions.prototype.clearUninterpretedOptionList=function(){return this.setUninterpretedOptionList([])};proto.google.protobuf.ServiceOptions.repeatedFields_=[999];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.ServiceOptions.prototype.toObject=function(o){return proto.google.protobuf.ServiceOptions.toObject(o,this)},proto.google.protobuf.ServiceOptions.toObject=function(o,t){var r,i={deprecated:n.Message.getBooleanFieldWithDefault(t,33,!1),uninterpretedOptionList:n.Message.toObjectList(t.getUninterpretedOptionList(),proto.google.protobuf.UninterpretedOption.toObject,o)};return n.Message.toObjectExtension(t,i,proto.google.protobuf.ServiceOptions.extensions,proto.google.protobuf.ServiceOptions.prototype.getExtension,o),o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.ServiceOptions.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.ServiceOptions;return proto.google.protobuf.ServiceOptions.deserializeBinaryFromReader(r,t)};proto.google.protobuf.ServiceOptions.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 33:var i=t.readBool();o.setDeprecated(i);break;case 999:var i=new proto.google.protobuf.UninterpretedOption;t.readMessage(i,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader),o.addUninterpretedOption(i);break;default:n.Message.readBinaryExtension(o,t,proto.google.protobuf.ServiceOptions.extensionsBinary,proto.google.protobuf.ServiceOptions.prototype.getExtension,proto.google.protobuf.ServiceOptions.prototype.setExtension);break}}return o};proto.google.protobuf.ServiceOptions.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.ServiceOptions.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.ServiceOptions.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,33),r!=null&&t.writeBool(33,r),r=o.getUninterpretedOptionList(),r.length>0&&t.writeRepeatedMessage(999,r,proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter),n.Message.serializeBinaryExtensions(o,t,proto.google.protobuf.ServiceOptions.extensionsBinary,proto.google.protobuf.ServiceOptions.prototype.getExtension)};proto.google.protobuf.ServiceOptions.prototype.getDeprecated=function(){return n.Message.getBooleanFieldWithDefault(this,33,!1)};proto.google.protobuf.ServiceOptions.prototype.setDeprecated=function(o){return n.Message.setField(this,33,o)};proto.google.protobuf.ServiceOptions.prototype.clearDeprecated=function(){return n.Message.setField(this,33,void 0)};proto.google.protobuf.ServiceOptions.prototype.hasDeprecated=function(){return n.Message.getField(this,33)!=null};proto.google.protobuf.ServiceOptions.prototype.getUninterpretedOptionList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.UninterpretedOption,999)};proto.google.protobuf.ServiceOptions.prototype.setUninterpretedOptionList=function(o){return n.Message.setRepeatedWrapperField(this,999,o)};proto.google.protobuf.ServiceOptions.prototype.addUninterpretedOption=function(o,t){return n.Message.addToRepeatedWrapperField(this,999,o,proto.google.protobuf.UninterpretedOption,t)};proto.google.protobuf.ServiceOptions.prototype.clearUninterpretedOptionList=function(){return this.setUninterpretedOptionList([])};proto.google.protobuf.MethodOptions.repeatedFields_=[999];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.MethodOptions.prototype.toObject=function(o){return proto.google.protobuf.MethodOptions.toObject(o,this)},proto.google.protobuf.MethodOptions.toObject=function(o,t){var r,i={deprecated:n.Message.getBooleanFieldWithDefault(t,33,!1),idempotencyLevel:n.Message.getFieldWithDefault(t,34,0),uninterpretedOptionList:n.Message.toObjectList(t.getUninterpretedOptionList(),proto.google.protobuf.UninterpretedOption.toObject,o)};return n.Message.toObjectExtension(t,i,proto.google.protobuf.MethodOptions.extensions,proto.google.protobuf.MethodOptions.prototype.getExtension,o),o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.MethodOptions.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.MethodOptions;return proto.google.protobuf.MethodOptions.deserializeBinaryFromReader(r,t)};proto.google.protobuf.MethodOptions.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 33:var i=t.readBool();o.setDeprecated(i);break;case 34:var i=t.readEnum();o.setIdempotencyLevel(i);break;case 999:var i=new proto.google.protobuf.UninterpretedOption;t.readMessage(i,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader),o.addUninterpretedOption(i);break;default:n.Message.readBinaryExtension(o,t,proto.google.protobuf.MethodOptions.extensionsBinary,proto.google.protobuf.MethodOptions.prototype.getExtension,proto.google.protobuf.MethodOptions.prototype.setExtension);break}}return o};proto.google.protobuf.MethodOptions.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.MethodOptions.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.MethodOptions.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,33),r!=null&&t.writeBool(33,r),r=n.Message.getField(o,34),r!=null&&t.writeEnum(34,r),r=o.getUninterpretedOptionList(),r.length>0&&t.writeRepeatedMessage(999,r,proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter),n.Message.serializeBinaryExtensions(o,t,proto.google.protobuf.MethodOptions.extensionsBinary,proto.google.protobuf.MethodOptions.prototype.getExtension)};proto.google.protobuf.MethodOptions.IdempotencyLevel={IDEMPOTENCY_UNKNOWN:0,NO_SIDE_EFFECTS:1,IDEMPOTENT:2};proto.google.protobuf.MethodOptions.prototype.getDeprecated=function(){return n.Message.getBooleanFieldWithDefault(this,33,!1)};proto.google.protobuf.MethodOptions.prototype.setDeprecated=function(o){return n.Message.setField(this,33,o)};proto.google.protobuf.MethodOptions.prototype.clearDeprecated=function(){return n.Message.setField(this,33,void 0)};proto.google.protobuf.MethodOptions.prototype.hasDeprecated=function(){return n.Message.getField(this,33)!=null};proto.google.protobuf.MethodOptions.prototype.getIdempotencyLevel=function(){return n.Message.getFieldWithDefault(this,34,0)};proto.google.protobuf.MethodOptions.prototype.setIdempotencyLevel=function(o){return n.Message.setField(this,34,o)};proto.google.protobuf.MethodOptions.prototype.clearIdempotencyLevel=function(){return n.Message.setField(this,34,void 0)};proto.google.protobuf.MethodOptions.prototype.hasIdempotencyLevel=function(){return n.Message.getField(this,34)!=null};proto.google.protobuf.MethodOptions.prototype.getUninterpretedOptionList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.UninterpretedOption,999)};proto.google.protobuf.MethodOptions.prototype.setUninterpretedOptionList=function(o){return n.Message.setRepeatedWrapperField(this,999,o)};proto.google.protobuf.MethodOptions.prototype.addUninterpretedOption=function(o,t){return n.Message.addToRepeatedWrapperField(this,999,o,proto.google.protobuf.UninterpretedOption,t)};proto.google.protobuf.MethodOptions.prototype.clearUninterpretedOptionList=function(){return this.setUninterpretedOptionList([])};proto.google.protobuf.UninterpretedOption.repeatedFields_=[2];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.UninterpretedOption.prototype.toObject=function(o){return proto.google.protobuf.UninterpretedOption.toObject(o,this)},proto.google.protobuf.UninterpretedOption.toObject=function(o,t){var r,i={nameList:n.Message.toObjectList(t.getNameList(),proto.google.protobuf.UninterpretedOption.NamePart.toObject,o),identifierValue:(r=n.Message.getField(t,3))==null?void 0:r,positiveIntValue:(r=n.Message.getField(t,4))==null?void 0:r,negativeIntValue:(r=n.Message.getField(t,5))==null?void 0:r,doubleValue:(r=n.Message.getOptionalFloatingPointField(t,6))==null?void 0:r,stringValue:t.getStringValue_asB64(),aggregateValue:(r=n.Message.getField(t,8))==null?void 0:r};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.UninterpretedOption.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.UninterpretedOption;return proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader(r,t)};proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 2:var i=new proto.google.protobuf.UninterpretedOption.NamePart;t.readMessage(i,proto.google.protobuf.UninterpretedOption.NamePart.deserializeBinaryFromReader),o.addName(i);break;case 3:var i=t.readString();o.setIdentifierValue(i);break;case 4:var i=t.readUint64();o.setPositiveIntValue(i);break;case 5:var i=t.readInt64();o.setNegativeIntValue(i);break;case 6:var i=t.readDouble();o.setDoubleValue(i);break;case 7:var i=t.readBytes();o.setStringValue(i);break;case 8:var i=t.readString();o.setAggregateValue(i);break;default:t.skipField();break}}return o};proto.google.protobuf.UninterpretedOption.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getNameList(),r.length>0&&t.writeRepeatedMessage(2,r,proto.google.protobuf.UninterpretedOption.NamePart.serializeBinaryToWriter),r=n.Message.getField(o,3),r!=null&&t.writeString(3,r),r=n.Message.getField(o,4),r!=null&&t.writeUint64(4,r),r=n.Message.getField(o,5),r!=null&&t.writeInt64(5,r),r=n.Message.getField(o,6),r!=null&&t.writeDouble(6,r),r=n.Message.getField(o,7),r!=null&&t.writeBytes(7,r),r=n.Message.getField(o,8),r!=null&&t.writeString(8,r)};n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.UninterpretedOption.NamePart.prototype.toObject=function(o){return proto.google.protobuf.UninterpretedOption.NamePart.toObject(o,this)},proto.google.protobuf.UninterpretedOption.NamePart.toObject=function(o,t){var r,i={namePart:(r=n.Message.getField(t,1))==null?void 0:r,isExtension:(r=n.Message.getBooleanField(t,2))==null?void 0:r};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.UninterpretedOption.NamePart.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.UninterpretedOption.NamePart;return proto.google.protobuf.UninterpretedOption.NamePart.deserializeBinaryFromReader(r,t)};proto.google.protobuf.UninterpretedOption.NamePart.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readString();o.setNamePart(i);break;case 2:var i=t.readBool();o.setIsExtension(i);break;default:t.skipField();break}}return o};proto.google.protobuf.UninterpretedOption.NamePart.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.UninterpretedOption.NamePart.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.UninterpretedOption.NamePart.serializeBinaryToWriter=function(o,t){var r=void 0;r=n.Message.getField(o,1),r!=null&&t.writeString(1,r),r=n.Message.getField(o,2),r!=null&&t.writeBool(2,r)};proto.google.protobuf.UninterpretedOption.NamePart.prototype.getNamePart=function(){return n.Message.getFieldWithDefault(this,1,"")};proto.google.protobuf.UninterpretedOption.NamePart.prototype.setNamePart=function(o){return n.Message.setField(this,1,o)};proto.google.protobuf.UninterpretedOption.NamePart.prototype.clearNamePart=function(){return n.Message.setField(this,1,void 0)};proto.google.protobuf.UninterpretedOption.NamePart.prototype.hasNamePart=function(){return n.Message.getField(this,1)!=null};proto.google.protobuf.UninterpretedOption.NamePart.prototype.getIsExtension=function(){return n.Message.getBooleanFieldWithDefault(this,2,!1)};proto.google.protobuf.UninterpretedOption.NamePart.prototype.setIsExtension=function(o){return n.Message.setField(this,2,o)};proto.google.protobuf.UninterpretedOption.NamePart.prototype.clearIsExtension=function(){return n.Message.setField(this,2,void 0)};proto.google.protobuf.UninterpretedOption.NamePart.prototype.hasIsExtension=function(){return n.Message.getField(this,2)!=null};proto.google.protobuf.UninterpretedOption.prototype.getNameList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.UninterpretedOption.NamePart,2)};proto.google.protobuf.UninterpretedOption.prototype.setNameList=function(o){return n.Message.setRepeatedWrapperField(this,2,o)};proto.google.protobuf.UninterpretedOption.prototype.addName=function(o,t){return n.Message.addToRepeatedWrapperField(this,2,o,proto.google.protobuf.UninterpretedOption.NamePart,t)};proto.google.protobuf.UninterpretedOption.prototype.clearNameList=function(){return this.setNameList([])};proto.google.protobuf.UninterpretedOption.prototype.getIdentifierValue=function(){return n.Message.getFieldWithDefault(this,3,"")};proto.google.protobuf.UninterpretedOption.prototype.setIdentifierValue=function(o){return n.Message.setField(this,3,o)};proto.google.protobuf.UninterpretedOption.prototype.clearIdentifierValue=function(){return n.Message.setField(this,3,void 0)};proto.google.protobuf.UninterpretedOption.prototype.hasIdentifierValue=function(){return n.Message.getField(this,3)!=null};proto.google.protobuf.UninterpretedOption.prototype.getPositiveIntValue=function(){return n.Message.getFieldWithDefault(this,4,0)};proto.google.protobuf.UninterpretedOption.prototype.setPositiveIntValue=function(o){return n.Message.setField(this,4,o)};proto.google.protobuf.UninterpretedOption.prototype.clearPositiveIntValue=function(){return n.Message.setField(this,4,void 0)};proto.google.protobuf.UninterpretedOption.prototype.hasPositiveIntValue=function(){return n.Message.getField(this,4)!=null};proto.google.protobuf.UninterpretedOption.prototype.getNegativeIntValue=function(){return n.Message.getFieldWithDefault(this,5,0)};proto.google.protobuf.UninterpretedOption.prototype.setNegativeIntValue=function(o){return n.Message.setField(this,5,o)};proto.google.protobuf.UninterpretedOption.prototype.clearNegativeIntValue=function(){return n.Message.setField(this,5,void 0)};proto.google.protobuf.UninterpretedOption.prototype.hasNegativeIntValue=function(){return n.Message.getField(this,5)!=null};proto.google.protobuf.UninterpretedOption.prototype.getDoubleValue=function(){return n.Message.getFloatingPointFieldWithDefault(this,6,0)};proto.google.protobuf.UninterpretedOption.prototype.setDoubleValue=function(o){return n.Message.setField(this,6,o)};proto.google.protobuf.UninterpretedOption.prototype.clearDoubleValue=function(){return n.Message.setField(this,6,void 0)};proto.google.protobuf.UninterpretedOption.prototype.hasDoubleValue=function(){return n.Message.getField(this,6)!=null};proto.google.protobuf.UninterpretedOption.prototype.getStringValue=function(){return n.Message.getFieldWithDefault(this,7,"")};proto.google.protobuf.UninterpretedOption.prototype.getStringValue_asB64=function(){return n.Message.bytesAsB64(this.getStringValue())};proto.google.protobuf.UninterpretedOption.prototype.getStringValue_asU8=function(){return n.Message.bytesAsU8(this.getStringValue())};proto.google.protobuf.UninterpretedOption.prototype.setStringValue=function(o){return n.Message.setField(this,7,o)};proto.google.protobuf.UninterpretedOption.prototype.clearStringValue=function(){return n.Message.setField(this,7,void 0)};proto.google.protobuf.UninterpretedOption.prototype.hasStringValue=function(){return n.Message.getField(this,7)!=null};proto.google.protobuf.UninterpretedOption.prototype.getAggregateValue=function(){return n.Message.getFieldWithDefault(this,8,"")};proto.google.protobuf.UninterpretedOption.prototype.setAggregateValue=function(o){return n.Message.setField(this,8,o)};proto.google.protobuf.UninterpretedOption.prototype.clearAggregateValue=function(){return n.Message.setField(this,8,void 0)};proto.google.protobuf.UninterpretedOption.prototype.hasAggregateValue=function(){return n.Message.getField(this,8)!=null};proto.google.protobuf.SourceCodeInfo.repeatedFields_=[1];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.SourceCodeInfo.prototype.toObject=function(o){return proto.google.protobuf.SourceCodeInfo.toObject(o,this)},proto.google.protobuf.SourceCodeInfo.toObject=function(o,t){var r,i={locationList:n.Message.toObjectList(t.getLocationList(),proto.google.protobuf.SourceCodeInfo.Location.toObject,o)};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.SourceCodeInfo.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.SourceCodeInfo;return proto.google.protobuf.SourceCodeInfo.deserializeBinaryFromReader(r,t)};proto.google.protobuf.SourceCodeInfo.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.google.protobuf.SourceCodeInfo.Location;t.readMessage(i,proto.google.protobuf.SourceCodeInfo.Location.deserializeBinaryFromReader),o.addLocation(i);break;default:t.skipField();break}}return o};proto.google.protobuf.SourceCodeInfo.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.SourceCodeInfo.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.SourceCodeInfo.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getLocationList(),r.length>0&&t.writeRepeatedMessage(1,r,proto.google.protobuf.SourceCodeInfo.Location.serializeBinaryToWriter)};proto.google.protobuf.SourceCodeInfo.Location.repeatedFields_=[1,2,6];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.SourceCodeInfo.Location.prototype.toObject=function(o){return proto.google.protobuf.SourceCodeInfo.Location.toObject(o,this)},proto.google.protobuf.SourceCodeInfo.Location.toObject=function(o,t){var r,i={pathList:(r=n.Message.getRepeatedField(t,1))==null?void 0:r,spanList:(r=n.Message.getRepeatedField(t,2))==null?void 0:r,leadingComments:(r=n.Message.getField(t,3))==null?void 0:r,trailingComments:(r=n.Message.getField(t,4))==null?void 0:r,leadingDetachedCommentsList:(r=n.Message.getRepeatedField(t,6))==null?void 0:r};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.SourceCodeInfo.Location.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.SourceCodeInfo.Location;return proto.google.protobuf.SourceCodeInfo.Location.deserializeBinaryFromReader(r,t)};proto.google.protobuf.SourceCodeInfo.Location.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:for(var s=t.isDelimited()?t.readPackedInt32():[t.readInt32()],i=0;i<s.length;i++)o.addPath(s[i]);break;case 2:for(var s=t.isDelimited()?t.readPackedInt32():[t.readInt32()],i=0;i<s.length;i++)o.addSpan(s[i]);break;case 3:var g=t.readString();o.setLeadingComments(g);break;case 4:var g=t.readString();o.setTrailingComments(g);break;case 6:var g=t.readString();o.addLeadingDetachedComments(g);break;default:t.skipField();break}}return o};proto.google.protobuf.SourceCodeInfo.Location.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.SourceCodeInfo.Location.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.SourceCodeInfo.Location.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getPathList(),r.length>0&&t.writePackedInt32(1,r),r=o.getSpanList(),r.length>0&&t.writePackedInt32(2,r),r=n.Message.getField(o,3),r!=null&&t.writeString(3,r),r=n.Message.getField(o,4),r!=null&&t.writeString(4,r),r=o.getLeadingDetachedCommentsList(),r.length>0&&t.writeRepeatedString(6,r)};proto.google.protobuf.SourceCodeInfo.Location.prototype.getPathList=function(){return n.Message.getRepeatedField(this,1)};proto.google.protobuf.SourceCodeInfo.Location.prototype.setPathList=function(o){return n.Message.setField(this,1,o||[])};proto.google.protobuf.SourceCodeInfo.Location.prototype.addPath=function(o,t){return n.Message.addToRepeatedField(this,1,o,t)};proto.google.protobuf.SourceCodeInfo.Location.prototype.clearPathList=function(){return this.setPathList([])};proto.google.protobuf.SourceCodeInfo.Location.prototype.getSpanList=function(){return n.Message.getRepeatedField(this,2)};proto.google.protobuf.SourceCodeInfo.Location.prototype.setSpanList=function(o){return n.Message.setField(this,2,o||[])};proto.google.protobuf.SourceCodeInfo.Location.prototype.addSpan=function(o,t){return n.Message.addToRepeatedField(this,2,o,t)};proto.google.protobuf.SourceCodeInfo.Location.prototype.clearSpanList=function(){return this.setSpanList([])};proto.google.protobuf.SourceCodeInfo.Location.prototype.getLeadingComments=function(){return n.Message.getFieldWithDefault(this,3,"")};proto.google.protobuf.SourceCodeInfo.Location.prototype.setLeadingComments=function(o){return n.Message.setField(this,3,o)};proto.google.protobuf.SourceCodeInfo.Location.prototype.clearLeadingComments=function(){return n.Message.setField(this,3,void 0)};proto.google.protobuf.SourceCodeInfo.Location.prototype.hasLeadingComments=function(){return n.Message.getField(this,3)!=null};proto.google.protobuf.SourceCodeInfo.Location.prototype.getTrailingComments=function(){return n.Message.getFieldWithDefault(this,4,"")};proto.google.protobuf.SourceCodeInfo.Location.prototype.setTrailingComments=function(o){return n.Message.setField(this,4,o)};proto.google.protobuf.SourceCodeInfo.Location.prototype.clearTrailingComments=function(){return n.Message.setField(this,4,void 0)};proto.google.protobuf.SourceCodeInfo.Location.prototype.hasTrailingComments=function(){return n.Message.getField(this,4)!=null};proto.google.protobuf.SourceCodeInfo.Location.prototype.getLeadingDetachedCommentsList=function(){return n.Message.getRepeatedField(this,6)};proto.google.protobuf.SourceCodeInfo.Location.prototype.setLeadingDetachedCommentsList=function(o){return n.Message.setField(this,6,o||[])};proto.google.protobuf.SourceCodeInfo.Location.prototype.addLeadingDetachedComments=function(o,t){return n.Message.addToRepeatedField(this,6,o,t)};proto.google.protobuf.SourceCodeInfo.Location.prototype.clearLeadingDetachedCommentsList=function(){return this.setLeadingDetachedCommentsList([])};proto.google.protobuf.SourceCodeInfo.prototype.getLocationList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.SourceCodeInfo.Location,1)};proto.google.protobuf.SourceCodeInfo.prototype.setLocationList=function(o){return n.Message.setRepeatedWrapperField(this,1,o)};proto.google.protobuf.SourceCodeInfo.prototype.addLocation=function(o,t){return n.Message.addToRepeatedWrapperField(this,1,o,proto.google.protobuf.SourceCodeInfo.Location,t)};proto.google.protobuf.SourceCodeInfo.prototype.clearLocationList=function(){return this.setLocationList([])};proto.google.protobuf.GeneratedCodeInfo.repeatedFields_=[1];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.GeneratedCodeInfo.prototype.toObject=function(o){return proto.google.protobuf.GeneratedCodeInfo.toObject(o,this)},proto.google.protobuf.GeneratedCodeInfo.toObject=function(o,t){var r,i={annotationList:n.Message.toObjectList(t.getAnnotationList(),proto.google.protobuf.GeneratedCodeInfo.Annotation.toObject,o)};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.GeneratedCodeInfo.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.GeneratedCodeInfo;return proto.google.protobuf.GeneratedCodeInfo.deserializeBinaryFromReader(r,t)};proto.google.protobuf.GeneratedCodeInfo.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.google.protobuf.GeneratedCodeInfo.Annotation;t.readMessage(i,proto.google.protobuf.GeneratedCodeInfo.Annotation.deserializeBinaryFromReader),o.addAnnotation(i);break;default:t.skipField();break}}return o};proto.google.protobuf.GeneratedCodeInfo.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.GeneratedCodeInfo.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.GeneratedCodeInfo.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getAnnotationList(),r.length>0&&t.writeRepeatedMessage(1,r,proto.google.protobuf.GeneratedCodeInfo.Annotation.serializeBinaryToWriter)};proto.google.protobuf.GeneratedCodeInfo.Annotation.repeatedFields_=[1];n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.toObject=function(o){return proto.google.protobuf.GeneratedCodeInfo.Annotation.toObject(o,this)},proto.google.protobuf.GeneratedCodeInfo.Annotation.toObject=function(o,t){var r,i={pathList:(r=n.Message.getRepeatedField(t,1))==null?void 0:r,sourceFile:(r=n.Message.getField(t,2))==null?void 0:r,begin:(r=n.Message.getField(t,3))==null?void 0:r,end:(r=n.Message.getField(t,4))==null?void 0:r};return o&&(i.$jspbMessageInstance=t),i});proto.google.protobuf.GeneratedCodeInfo.Annotation.deserializeBinary=function(o){var t=new n.BinaryReader(o),r=new proto.google.protobuf.GeneratedCodeInfo.Annotation;return proto.google.protobuf.GeneratedCodeInfo.Annotation.deserializeBinaryFromReader(r,t)};proto.google.protobuf.GeneratedCodeInfo.Annotation.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:for(var i=t.isDelimited()?t.readPackedInt32():[t.readInt32()],s=0;s<i.length;s++)o.addPath(i[s]);break;case 2:var g=t.readString();o.setSourceFile(g);break;case 3:var g=t.readInt32();o.setBegin(g);break;case 4:var g=t.readInt32();o.setEnd(g);break;default:t.skipField();break}}return o};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.serializeBinary=function(){var o=new n.BinaryWriter;return proto.google.protobuf.GeneratedCodeInfo.Annotation.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.google.protobuf.GeneratedCodeInfo.Annotation.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getPathList(),r.length>0&&t.writePackedInt32(1,r),r=n.Message.getField(o,2),r!=null&&t.writeString(2,r),r=n.Message.getField(o,3),r!=null&&t.writeInt32(3,r),r=n.Message.getField(o,4),r!=null&&t.writeInt32(4,r)};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.getPathList=function(){return n.Message.getRepeatedField(this,1)};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.setPathList=function(o){return n.Message.setField(this,1,o||[])};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.addPath=function(o,t){return n.Message.addToRepeatedField(this,1,o,t)};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.clearPathList=function(){return this.setPathList([])};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.getSourceFile=function(){return n.Message.getFieldWithDefault(this,2,"")};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.setSourceFile=function(o){return n.Message.setField(this,2,o)};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.clearSourceFile=function(){return n.Message.setField(this,2,void 0)};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.hasSourceFile=function(){return n.Message.getField(this,2)!=null};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.getBegin=function(){return n.Message.getFieldWithDefault(this,3,0)};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.setBegin=function(o){return n.Message.setField(this,3,o)};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.clearBegin=function(){return n.Message.setField(this,3,void 0)};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.hasBegin=function(){return n.Message.getField(this,3)!=null};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.getEnd=function(){return n.Message.getFieldWithDefault(this,4,0)};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.setEnd=function(o){return n.Message.setField(this,4,o)};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.clearEnd=function(){return n.Message.setField(this,4,void 0)};proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.hasEnd=function(){return n.Message.getField(this,4)!=null};proto.google.protobuf.GeneratedCodeInfo.prototype.getAnnotationList=function(){return n.Message.getRepeatedWrapperField(this,proto.google.protobuf.GeneratedCodeInfo.Annotation,1)};proto.google.protobuf.GeneratedCodeInfo.prototype.setAnnotationList=function(o){return n.Message.setRepeatedWrapperField(this,1,o)};proto.google.protobuf.GeneratedCodeInfo.prototype.addAnnotation=function(o,t){return n.Message.addToRepeatedWrapperField(this,1,o,proto.google.protobuf.GeneratedCodeInfo.Annotation,t)};proto.google.protobuf.GeneratedCodeInfo.prototype.clearAnnotationList=function(){return this.setAnnotationList([])};y.object.extend(C,proto.google.protobuf)});var N=(0,_chunk_ONAVPXOT_js__WEBPACK_IMPORTED_MODULE_0__.a)(j=>{"use strict";var _=I(),v=_,F=function(){return this?this:typeof window<"u"?window:typeof F<"u"?F:typeof self<"u"?self:Function("return this")()}.call(null),A=P();v.object.extend(proto,A);v.exportSymbol("proto.ic_base_types.pb.v1.CanisterAuthzInfo",null,F);v.exportSymbol("proto.ic_base_types.pb.v1.CanisterId",null,F);v.exportSymbol("proto.ic_base_types.pb.v1.MethodAuthzInfo",null,F);v.exportSymbol("proto.ic_base_types.pb.v1.NeuronId",null,F);v.exportSymbol("proto.ic_base_types.pb.v1.PrincipalId",null,F);v.exportSymbol("proto.ic_base_types.pb.v1.ProposalId",null,F);v.exportSymbol("proto.ic_base_types.pb.v1.tuiSignedDisplayQ22021",null,F);v.exportSymbol("proto.ic_base_types.pb.v1.tuiSignedMessage",null,F);proto.ic_base_types.pb.v1.PrincipalId=function(o){_.Message.initialize(this,o,0,-1,null,null)};v.inherits(proto.ic_base_types.pb.v1.PrincipalId,_.Message);v.DEBUG&&!COMPILED&&(proto.ic_base_types.pb.v1.PrincipalId.displayName="proto.ic_base_types.pb.v1.PrincipalId");proto.ic_base_types.pb.v1.CanisterId=function(o){_.Message.initialize(this,o,0,-1,null,null)};v.inherits(proto.ic_base_types.pb.v1.CanisterId,_.Message);v.DEBUG&&!COMPILED&&(proto.ic_base_types.pb.v1.CanisterId.displayName="proto.ic_base_types.pb.v1.CanisterId");proto.ic_base_types.pb.v1.NeuronId=function(o){_.Message.initialize(this,o,0,-1,null,null)};v.inherits(proto.ic_base_types.pb.v1.NeuronId,_.Message);v.DEBUG&&!COMPILED&&(proto.ic_base_types.pb.v1.NeuronId.displayName="proto.ic_base_types.pb.v1.NeuronId");proto.ic_base_types.pb.v1.ProposalId=function(o){_.Message.initialize(this,o,0,-1,null,null)};v.inherits(proto.ic_base_types.pb.v1.ProposalId,_.Message);v.DEBUG&&!COMPILED&&(proto.ic_base_types.pb.v1.ProposalId.displayName="proto.ic_base_types.pb.v1.ProposalId");proto.ic_base_types.pb.v1.MethodAuthzInfo=function(o){_.Message.initialize(this,o,0,-1,proto.ic_base_types.pb.v1.MethodAuthzInfo.repeatedFields_,null)};v.inherits(proto.ic_base_types.pb.v1.MethodAuthzInfo,_.Message);v.DEBUG&&!COMPILED&&(proto.ic_base_types.pb.v1.MethodAuthzInfo.displayName="proto.ic_base_types.pb.v1.MethodAuthzInfo");proto.ic_base_types.pb.v1.CanisterAuthzInfo=function(o){_.Message.initialize(this,o,0,-1,proto.ic_base_types.pb.v1.CanisterAuthzInfo.repeatedFields_,null)};v.inherits(proto.ic_base_types.pb.v1.CanisterAuthzInfo,_.Message);v.DEBUG&&!COMPILED&&(proto.ic_base_types.pb.v1.CanisterAuthzInfo.displayName="proto.ic_base_types.pb.v1.CanisterAuthzInfo");_.Message.GENERATE_TO_OBJECT&&(proto.ic_base_types.pb.v1.PrincipalId.prototype.toObject=function(o){return proto.ic_base_types.pb.v1.PrincipalId.toObject(o,this)},proto.ic_base_types.pb.v1.PrincipalId.toObject=function(o,t){var r,i={serializedId:t.getSerializedId_asB64()};return o&&(i.$jspbMessageInstance=t),i});proto.ic_base_types.pb.v1.PrincipalId.deserializeBinary=function(o){var t=new _.BinaryReader(o),r=new proto.ic_base_types.pb.v1.PrincipalId;return proto.ic_base_types.pb.v1.PrincipalId.deserializeBinaryFromReader(r,t)};proto.ic_base_types.pb.v1.PrincipalId.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readBytes();o.setSerializedId(i);break;default:t.skipField();break}}return o};proto.ic_base_types.pb.v1.PrincipalId.prototype.serializeBinary=function(){var o=new _.BinaryWriter;return proto.ic_base_types.pb.v1.PrincipalId.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_base_types.pb.v1.PrincipalId.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getSerializedId_asU8(),r.length>0&&t.writeBytes(1,r)};proto.ic_base_types.pb.v1.PrincipalId.prototype.getSerializedId=function(){return _.Message.getFieldWithDefault(this,1,"")};proto.ic_base_types.pb.v1.PrincipalId.prototype.getSerializedId_asB64=function(){return _.Message.bytesAsB64(this.getSerializedId())};proto.ic_base_types.pb.v1.PrincipalId.prototype.getSerializedId_asU8=function(){return _.Message.bytesAsU8(this.getSerializedId())};proto.ic_base_types.pb.v1.PrincipalId.prototype.setSerializedId=function(o){return _.Message.setProto3BytesField(this,1,o)};_.Message.GENERATE_TO_OBJECT&&(proto.ic_base_types.pb.v1.CanisterId.prototype.toObject=function(o){return proto.ic_base_types.pb.v1.CanisterId.toObject(o,this)},proto.ic_base_types.pb.v1.CanisterId.toObject=function(o,t){var r,i={serializedId:t.getSerializedId_asB64()};return o&&(i.$jspbMessageInstance=t),i});proto.ic_base_types.pb.v1.CanisterId.deserializeBinary=function(o){var t=new _.BinaryReader(o),r=new proto.ic_base_types.pb.v1.CanisterId;return proto.ic_base_types.pb.v1.CanisterId.deserializeBinaryFromReader(r,t)};proto.ic_base_types.pb.v1.CanisterId.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readBytes();o.setSerializedId(i);break;default:t.skipField();break}}return o};proto.ic_base_types.pb.v1.CanisterId.prototype.serializeBinary=function(){var o=new _.BinaryWriter;return proto.ic_base_types.pb.v1.CanisterId.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_base_types.pb.v1.CanisterId.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getSerializedId_asU8(),r.length>0&&t.writeBytes(1,r)};proto.ic_base_types.pb.v1.CanisterId.prototype.getSerializedId=function(){return _.Message.getFieldWithDefault(this,1,"")};proto.ic_base_types.pb.v1.CanisterId.prototype.getSerializedId_asB64=function(){return _.Message.bytesAsB64(this.getSerializedId())};proto.ic_base_types.pb.v1.CanisterId.prototype.getSerializedId_asU8=function(){return _.Message.bytesAsU8(this.getSerializedId())};proto.ic_base_types.pb.v1.CanisterId.prototype.setSerializedId=function(o){return _.Message.setProto3BytesField(this,1,o)};_.Message.GENERATE_TO_OBJECT&&(proto.ic_base_types.pb.v1.NeuronId.prototype.toObject=function(o){return proto.ic_base_types.pb.v1.NeuronId.toObject(o,this)},proto.ic_base_types.pb.v1.NeuronId.toObject=function(o,t){var r,i={id:_.Message.getFieldWithDefault(t,2,"0")};return o&&(i.$jspbMessageInstance=t),i});proto.ic_base_types.pb.v1.NeuronId.deserializeBinary=function(o){var t=new _.BinaryReader(o),r=new proto.ic_base_types.pb.v1.NeuronId;return proto.ic_base_types.pb.v1.NeuronId.deserializeBinaryFromReader(r,t)};proto.ic_base_types.pb.v1.NeuronId.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 2:var i=t.readUint64String();o.setId(i);break;default:t.skipField();break}}return o};proto.ic_base_types.pb.v1.NeuronId.prototype.serializeBinary=function(){var o=new _.BinaryWriter;return proto.ic_base_types.pb.v1.NeuronId.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_base_types.pb.v1.NeuronId.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getId(),parseInt(r,10)!==0&&t.writeUint64String(2,r)};proto.ic_base_types.pb.v1.NeuronId.prototype.getId=function(){return _.Message.getFieldWithDefault(this,2,"0")};proto.ic_base_types.pb.v1.NeuronId.prototype.setId=function(o){return _.Message.setProto3StringIntField(this,2,o)};_.Message.GENERATE_TO_OBJECT&&(proto.ic_base_types.pb.v1.ProposalId.prototype.toObject=function(o){return proto.ic_base_types.pb.v1.ProposalId.toObject(o,this)},proto.ic_base_types.pb.v1.ProposalId.toObject=function(o,t){var r,i={id:_.Message.getFieldWithDefault(t,1,"0")};return o&&(i.$jspbMessageInstance=t),i});proto.ic_base_types.pb.v1.ProposalId.deserializeBinary=function(o){var t=new _.BinaryReader(o),r=new proto.ic_base_types.pb.v1.ProposalId;return proto.ic_base_types.pb.v1.ProposalId.deserializeBinaryFromReader(r,t)};proto.ic_base_types.pb.v1.ProposalId.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readUint64String();o.setId(i);break;default:t.skipField();break}}return o};proto.ic_base_types.pb.v1.ProposalId.prototype.serializeBinary=function(){var o=new _.BinaryWriter;return proto.ic_base_types.pb.v1.ProposalId.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_base_types.pb.v1.ProposalId.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getId(),parseInt(r,10)!==0&&t.writeUint64String(1,r)};proto.ic_base_types.pb.v1.ProposalId.prototype.getId=function(){return _.Message.getFieldWithDefault(this,1,"0")};proto.ic_base_types.pb.v1.ProposalId.prototype.setId=function(o){return _.Message.setProto3StringIntField(this,1,o)};proto.ic_base_types.pb.v1.MethodAuthzInfo.repeatedFields_=[2];_.Message.GENERATE_TO_OBJECT&&(proto.ic_base_types.pb.v1.MethodAuthzInfo.prototype.toObject=function(o){return proto.ic_base_types.pb.v1.MethodAuthzInfo.toObject(o,this)},proto.ic_base_types.pb.v1.MethodAuthzInfo.toObject=function(o,t){var r,i={methodName:_.Message.getFieldWithDefault(t,1,""),principalIdsList:t.getPrincipalIdsList_asB64()};return o&&(i.$jspbMessageInstance=t),i});proto.ic_base_types.pb.v1.MethodAuthzInfo.deserializeBinary=function(o){var t=new _.BinaryReader(o),r=new proto.ic_base_types.pb.v1.MethodAuthzInfo;return proto.ic_base_types.pb.v1.MethodAuthzInfo.deserializeBinaryFromReader(r,t)};proto.ic_base_types.pb.v1.MethodAuthzInfo.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readString();o.setMethodName(i);break;case 2:var i=t.readBytes();o.addPrincipalIds(i);break;default:t.skipField();break}}return o};proto.ic_base_types.pb.v1.MethodAuthzInfo.prototype.serializeBinary=function(){var o=new _.BinaryWriter;return proto.ic_base_types.pb.v1.MethodAuthzInfo.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_base_types.pb.v1.MethodAuthzInfo.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getMethodName(),r.length>0&&t.writeString(1,r),r=o.getPrincipalIdsList_asU8(),r.length>0&&t.writeRepeatedBytes(2,r)};proto.ic_base_types.pb.v1.MethodAuthzInfo.prototype.getMethodName=function(){return _.Message.getFieldWithDefault(this,1,"")};proto.ic_base_types.pb.v1.MethodAuthzInfo.prototype.setMethodName=function(o){return _.Message.setProto3StringField(this,1,o)};proto.ic_base_types.pb.v1.MethodAuthzInfo.prototype.getPrincipalIdsList=function(){return _.Message.getRepeatedField(this,2)};proto.ic_base_types.pb.v1.MethodAuthzInfo.prototype.getPrincipalIdsList_asB64=function(){return _.Message.bytesListAsB64(this.getPrincipalIdsList())};proto.ic_base_types.pb.v1.MethodAuthzInfo.prototype.getPrincipalIdsList_asU8=function(){return _.Message.bytesListAsU8(this.getPrincipalIdsList())};proto.ic_base_types.pb.v1.MethodAuthzInfo.prototype.setPrincipalIdsList=function(o){return _.Message.setField(this,2,o||[])};proto.ic_base_types.pb.v1.MethodAuthzInfo.prototype.addPrincipalIds=function(o,t){return _.Message.addToRepeatedField(this,2,o,t)};proto.ic_base_types.pb.v1.MethodAuthzInfo.prototype.clearPrincipalIdsList=function(){return this.setPrincipalIdsList([])};proto.ic_base_types.pb.v1.CanisterAuthzInfo.repeatedFields_=[1];_.Message.GENERATE_TO_OBJECT&&(proto.ic_base_types.pb.v1.CanisterAuthzInfo.prototype.toObject=function(o){return proto.ic_base_types.pb.v1.CanisterAuthzInfo.toObject(o,this)},proto.ic_base_types.pb.v1.CanisterAuthzInfo.toObject=function(o,t){var r,i={methodsAuthzList:_.Message.toObjectList(t.getMethodsAuthzList(),proto.ic_base_types.pb.v1.MethodAuthzInfo.toObject,o)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_base_types.pb.v1.CanisterAuthzInfo.deserializeBinary=function(o){var t=new _.BinaryReader(o),r=new proto.ic_base_types.pb.v1.CanisterAuthzInfo;return proto.ic_base_types.pb.v1.CanisterAuthzInfo.deserializeBinaryFromReader(r,t)};proto.ic_base_types.pb.v1.CanisterAuthzInfo.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_base_types.pb.v1.MethodAuthzInfo;t.readMessage(i,proto.ic_base_types.pb.v1.MethodAuthzInfo.deserializeBinaryFromReader),o.addMethodsAuthz(i);break;default:t.skipField();break}}return o};proto.ic_base_types.pb.v1.CanisterAuthzInfo.prototype.serializeBinary=function(){var o=new _.BinaryWriter;return proto.ic_base_types.pb.v1.CanisterAuthzInfo.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_base_types.pb.v1.CanisterAuthzInfo.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getMethodsAuthzList(),r.length>0&&t.writeRepeatedMessage(1,r,proto.ic_base_types.pb.v1.MethodAuthzInfo.serializeBinaryToWriter)};proto.ic_base_types.pb.v1.CanisterAuthzInfo.prototype.getMethodsAuthzList=function(){return _.Message.getRepeatedWrapperField(this,proto.ic_base_types.pb.v1.MethodAuthzInfo,1)};proto.ic_base_types.pb.v1.CanisterAuthzInfo.prototype.setMethodsAuthzList=function(o){return _.Message.setRepeatedWrapperField(this,1,o)};proto.ic_base_types.pb.v1.CanisterAuthzInfo.prototype.addMethodsAuthz=function(o,t){return _.Message.addToRepeatedWrapperField(this,1,o,proto.ic_base_types.pb.v1.MethodAuthzInfo,t)};proto.ic_base_types.pb.v1.CanisterAuthzInfo.prototype.clearMethodsAuthzList=function(){return this.setMethodsAuthzList([])};proto.ic_base_types.pb.v1.tuiSignedMessage=new _.ExtensionFieldInfo(2e4,{tuiSignedMessage:0},null,null,0);A.MessageOptions.extensionsBinary[2e4]=new _.ExtensionFieldBinaryInfo(proto.ic_base_types.pb.v1.tuiSignedMessage,_.BinaryReader.prototype.readBool,_.BinaryWriter.prototype.writeBool,void 0,void 0,!1);A.MessageOptions.extensions[2e4]=proto.ic_base_types.pb.v1.tuiSignedMessage;proto.ic_base_types.pb.v1.tuiSignedDisplayQ22021=new _.ExtensionFieldInfo(20001,{tuiSignedDisplayQ22021:0},null,null,0);A.FieldOptions.extensionsBinary[20001]=new _.ExtensionFieldBinaryInfo(proto.ic_base_types.pb.v1.tuiSignedDisplayQ22021,_.BinaryReader.prototype.readBool,_.BinaryWriter.prototype.writeBool,void 0,void 0,!1);A.FieldOptions.extensions[20001]=proto.ic_base_types.pb.v1.tuiSignedDisplayQ22021;v.object.extend(j,proto.ic_base_types.pb.v1)});var L=(0,_chunk_ONAVPXOT_js__WEBPACK_IMPORTED_MODULE_0__.a)(w=>{"use strict";var p=I(),u=p,S=function(){return this?this:typeof window<"u"?window:typeof S<"u"?S:typeof self<"u"?self:Function("return this")()}.call(null),M=N();u.object.extend(proto,M);u.exportSymbol("proto.ic_ledger.pb.v1.Account",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.AccountBalanceRequest",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.AccountBalanceResponse",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.AccountIdentifier",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.Block",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.BlockHeight",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.Burn",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.Certification",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.CyclesNotificationResponse",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.CyclesNotificationResponse.ResponseCase",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.EncodedBlock",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.EncodedBlocks",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.GetBlocksRequest",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.GetBlocksResponse",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.GetBlocksResponse.GetBlocksContentCase",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.Hash",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.ICPTs",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.Memo",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.Mint",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.NotifyRequest",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.NotifyResponse",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.Payment",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.Refund",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.Send",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.SendRequest",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.SendResponse",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.Subaccount",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.TimeStamp",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.TipOfChainRequest",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.TipOfChainResponse",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.ToppedUp",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.Transaction",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.Transaction.TransferCase",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.TransactionNotificationRequest",null,S);u.exportSymbol("proto.ic_ledger.pb.v1.TransactionNotificationResponse",null,S);proto.ic_ledger.pb.v1.SendRequest=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.SendRequest,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.SendRequest.displayName="proto.ic_ledger.pb.v1.SendRequest");proto.ic_ledger.pb.v1.SendResponse=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.SendResponse,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.SendResponse.displayName="proto.ic_ledger.pb.v1.SendResponse");proto.ic_ledger.pb.v1.NotifyRequest=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.NotifyRequest,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.NotifyRequest.displayName="proto.ic_ledger.pb.v1.NotifyRequest");proto.ic_ledger.pb.v1.NotifyResponse=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.NotifyResponse,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.NotifyResponse.displayName="proto.ic_ledger.pb.v1.NotifyResponse");proto.ic_ledger.pb.v1.TransactionNotificationRequest=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.TransactionNotificationRequest,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.TransactionNotificationRequest.displayName="proto.ic_ledger.pb.v1.TransactionNotificationRequest");proto.ic_ledger.pb.v1.TransactionNotificationResponse=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.TransactionNotificationResponse,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.TransactionNotificationResponse.displayName="proto.ic_ledger.pb.v1.TransactionNotificationResponse");proto.ic_ledger.pb.v1.CyclesNotificationResponse=function(o){p.Message.initialize(this,o,0,-1,null,proto.ic_ledger.pb.v1.CyclesNotificationResponse.oneofGroups_)};u.inherits(proto.ic_ledger.pb.v1.CyclesNotificationResponse,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.CyclesNotificationResponse.displayName="proto.ic_ledger.pb.v1.CyclesNotificationResponse");proto.ic_ledger.pb.v1.AccountBalanceRequest=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.AccountBalanceRequest,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.AccountBalanceRequest.displayName="proto.ic_ledger.pb.v1.AccountBalanceRequest");proto.ic_ledger.pb.v1.AccountBalanceResponse=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.AccountBalanceResponse,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.AccountBalanceResponse.displayName="proto.ic_ledger.pb.v1.AccountBalanceResponse");proto.ic_ledger.pb.v1.TipOfChainRequest=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.TipOfChainRequest,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.TipOfChainRequest.displayName="proto.ic_ledger.pb.v1.TipOfChainRequest");proto.ic_ledger.pb.v1.TipOfChainResponse=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.TipOfChainResponse,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.TipOfChainResponse.displayName="proto.ic_ledger.pb.v1.TipOfChainResponse");proto.ic_ledger.pb.v1.EncodedBlock=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.EncodedBlock,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.EncodedBlock.displayName="proto.ic_ledger.pb.v1.EncodedBlock");proto.ic_ledger.pb.v1.GetBlocksRequest=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.GetBlocksRequest,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.GetBlocksRequest.displayName="proto.ic_ledger.pb.v1.GetBlocksRequest");proto.ic_ledger.pb.v1.Refund=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.Refund,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.Refund.displayName="proto.ic_ledger.pb.v1.Refund");proto.ic_ledger.pb.v1.ToppedUp=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.ToppedUp,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.ToppedUp.displayName="proto.ic_ledger.pb.v1.ToppedUp");proto.ic_ledger.pb.v1.EncodedBlocks=function(o){p.Message.initialize(this,o,0,-1,proto.ic_ledger.pb.v1.EncodedBlocks.repeatedFields_,null)};u.inherits(proto.ic_ledger.pb.v1.EncodedBlocks,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.EncodedBlocks.displayName="proto.ic_ledger.pb.v1.EncodedBlocks");proto.ic_ledger.pb.v1.GetBlocksResponse=function(o){p.Message.initialize(this,o,0,-1,null,proto.ic_ledger.pb.v1.GetBlocksResponse.oneofGroups_)};u.inherits(proto.ic_ledger.pb.v1.GetBlocksResponse,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.GetBlocksResponse.displayName="proto.ic_ledger.pb.v1.GetBlocksResponse");proto.ic_ledger.pb.v1.ICPTs=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.ICPTs,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.ICPTs.displayName="proto.ic_ledger.pb.v1.ICPTs");proto.ic_ledger.pb.v1.Payment=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.Payment,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.Payment.displayName="proto.ic_ledger.pb.v1.Payment");proto.ic_ledger.pb.v1.BlockHeight=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.BlockHeight,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.BlockHeight.displayName="proto.ic_ledger.pb.v1.BlockHeight");proto.ic_ledger.pb.v1.Block=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.Block,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.Block.displayName="proto.ic_ledger.pb.v1.Block");proto.ic_ledger.pb.v1.Hash=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.Hash,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.Hash.displayName="proto.ic_ledger.pb.v1.Hash");proto.ic_ledger.pb.v1.Account=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.Account,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.Account.displayName="proto.ic_ledger.pb.v1.Account");proto.ic_ledger.pb.v1.Transaction=function(o){p.Message.initialize(this,o,0,-1,null,proto.ic_ledger.pb.v1.Transaction.oneofGroups_)};u.inherits(proto.ic_ledger.pb.v1.Transaction,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.Transaction.displayName="proto.ic_ledger.pb.v1.Transaction");proto.ic_ledger.pb.v1.Send=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.Send,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.Send.displayName="proto.ic_ledger.pb.v1.Send");proto.ic_ledger.pb.v1.Mint=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.Mint,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.Mint.displayName="proto.ic_ledger.pb.v1.Mint");proto.ic_ledger.pb.v1.Burn=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.Burn,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.Burn.displayName="proto.ic_ledger.pb.v1.Burn");proto.ic_ledger.pb.v1.AccountIdentifier=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.AccountIdentifier,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.AccountIdentifier.displayName="proto.ic_ledger.pb.v1.AccountIdentifier");proto.ic_ledger.pb.v1.Subaccount=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.Subaccount,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.Subaccount.displayName="proto.ic_ledger.pb.v1.Subaccount");proto.ic_ledger.pb.v1.Memo=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.Memo,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.Memo.displayName="proto.ic_ledger.pb.v1.Memo");proto.ic_ledger.pb.v1.TimeStamp=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.TimeStamp,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.TimeStamp.displayName="proto.ic_ledger.pb.v1.TimeStamp");proto.ic_ledger.pb.v1.Certification=function(o){p.Message.initialize(this,o,0,-1,null,null)};u.inherits(proto.ic_ledger.pb.v1.Certification,p.Message);u.DEBUG&&!COMPILED&&(proto.ic_ledger.pb.v1.Certification.displayName="proto.ic_ledger.pb.v1.Certification");p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.SendRequest.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.SendRequest.toObject(o,this)},proto.ic_ledger.pb.v1.SendRequest.toObject=function(o,t){var r,i={memo:(r=t.getMemo())&&proto.ic_ledger.pb.v1.Memo.toObject(o,r),payment:(r=t.getPayment())&&proto.ic_ledger.pb.v1.Payment.toObject(o,r),maxFee:(r=t.getMaxFee())&&proto.ic_ledger.pb.v1.ICPTs.toObject(o,r),fromSubaccount:(r=t.getFromSubaccount())&&proto.ic_ledger.pb.v1.Subaccount.toObject(o,r),to:(r=t.getTo())&&proto.ic_ledger.pb.v1.AccountIdentifier.toObject(o,r),createdAt:(r=t.getCreatedAt())&&proto.ic_ledger.pb.v1.BlockHeight.toObject(o,r),createdAtTime:(r=t.getCreatedAtTime())&&proto.ic_ledger.pb.v1.TimeStamp.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.SendRequest.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.SendRequest;return proto.ic_ledger.pb.v1.SendRequest.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.SendRequest.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_ledger.pb.v1.Memo;t.readMessage(i,proto.ic_ledger.pb.v1.Memo.deserializeBinaryFromReader),o.setMemo(i);break;case 2:var i=new proto.ic_ledger.pb.v1.Payment;t.readMessage(i,proto.ic_ledger.pb.v1.Payment.deserializeBinaryFromReader),o.setPayment(i);break;case 3:var i=new proto.ic_ledger.pb.v1.ICPTs;t.readMessage(i,proto.ic_ledger.pb.v1.ICPTs.deserializeBinaryFromReader),o.setMaxFee(i);break;case 4:var i=new proto.ic_ledger.pb.v1.Subaccount;t.readMessage(i,proto.ic_ledger.pb.v1.Subaccount.deserializeBinaryFromReader),o.setFromSubaccount(i);break;case 5:var i=new proto.ic_ledger.pb.v1.AccountIdentifier;t.readMessage(i,proto.ic_ledger.pb.v1.AccountIdentifier.deserializeBinaryFromReader),o.setTo(i);break;case 6:var i=new proto.ic_ledger.pb.v1.BlockHeight;t.readMessage(i,proto.ic_ledger.pb.v1.BlockHeight.deserializeBinaryFromReader),o.setCreatedAt(i);break;case 7:var i=new proto.ic_ledger.pb.v1.TimeStamp;t.readMessage(i,proto.ic_ledger.pb.v1.TimeStamp.deserializeBinaryFromReader),o.setCreatedAtTime(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.SendRequest.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.SendRequest.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.SendRequest.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getMemo(),r!=null&&t.writeMessage(1,r,proto.ic_ledger.pb.v1.Memo.serializeBinaryToWriter),r=o.getPayment(),r!=null&&t.writeMessage(2,r,proto.ic_ledger.pb.v1.Payment.serializeBinaryToWriter),r=o.getMaxFee(),r!=null&&t.writeMessage(3,r,proto.ic_ledger.pb.v1.ICPTs.serializeBinaryToWriter),r=o.getFromSubaccount(),r!=null&&t.writeMessage(4,r,proto.ic_ledger.pb.v1.Subaccount.serializeBinaryToWriter),r=o.getTo(),r!=null&&t.writeMessage(5,r,proto.ic_ledger.pb.v1.AccountIdentifier.serializeBinaryToWriter),r=o.getCreatedAt(),r!=null&&t.writeMessage(6,r,proto.ic_ledger.pb.v1.BlockHeight.serializeBinaryToWriter),r=o.getCreatedAtTime(),r!=null&&t.writeMessage(7,r,proto.ic_ledger.pb.v1.TimeStamp.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.SendRequest.prototype.getMemo=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Memo,1)};proto.ic_ledger.pb.v1.SendRequest.prototype.setMemo=function(o){return p.Message.setWrapperField(this,1,o)};proto.ic_ledger.pb.v1.SendRequest.prototype.clearMemo=function(){return this.setMemo(void 0)};proto.ic_ledger.pb.v1.SendRequest.prototype.hasMemo=function(){return p.Message.getField(this,1)!=null};proto.ic_ledger.pb.v1.SendRequest.prototype.getPayment=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Payment,2)};proto.ic_ledger.pb.v1.SendRequest.prototype.setPayment=function(o){return p.Message.setWrapperField(this,2,o)};proto.ic_ledger.pb.v1.SendRequest.prototype.clearPayment=function(){return this.setPayment(void 0)};proto.ic_ledger.pb.v1.SendRequest.prototype.hasPayment=function(){return p.Message.getField(this,2)!=null};proto.ic_ledger.pb.v1.SendRequest.prototype.getMaxFee=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.ICPTs,3)};proto.ic_ledger.pb.v1.SendRequest.prototype.setMaxFee=function(o){return p.Message.setWrapperField(this,3,o)};proto.ic_ledger.pb.v1.SendRequest.prototype.clearMaxFee=function(){return this.setMaxFee(void 0)};proto.ic_ledger.pb.v1.SendRequest.prototype.hasMaxFee=function(){return p.Message.getField(this,3)!=null};proto.ic_ledger.pb.v1.SendRequest.prototype.getFromSubaccount=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Subaccount,4)};proto.ic_ledger.pb.v1.SendRequest.prototype.setFromSubaccount=function(o){return p.Message.setWrapperField(this,4,o)};proto.ic_ledger.pb.v1.SendRequest.prototype.clearFromSubaccount=function(){return this.setFromSubaccount(void 0)};proto.ic_ledger.pb.v1.SendRequest.prototype.hasFromSubaccount=function(){return p.Message.getField(this,4)!=null};proto.ic_ledger.pb.v1.SendRequest.prototype.getTo=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.AccountIdentifier,5)};proto.ic_ledger.pb.v1.SendRequest.prototype.setTo=function(o){return p.Message.setWrapperField(this,5,o)};proto.ic_ledger.pb.v1.SendRequest.prototype.clearTo=function(){return this.setTo(void 0)};proto.ic_ledger.pb.v1.SendRequest.prototype.hasTo=function(){return p.Message.getField(this,5)!=null};proto.ic_ledger.pb.v1.SendRequest.prototype.getCreatedAt=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.BlockHeight,6)};proto.ic_ledger.pb.v1.SendRequest.prototype.setCreatedAt=function(o){return p.Message.setWrapperField(this,6,o)};proto.ic_ledger.pb.v1.SendRequest.prototype.clearCreatedAt=function(){return this.setCreatedAt(void 0)};proto.ic_ledger.pb.v1.SendRequest.prototype.hasCreatedAt=function(){return p.Message.getField(this,6)!=null};proto.ic_ledger.pb.v1.SendRequest.prototype.getCreatedAtTime=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.TimeStamp,7)};proto.ic_ledger.pb.v1.SendRequest.prototype.setCreatedAtTime=function(o){return p.Message.setWrapperField(this,7,o)};proto.ic_ledger.pb.v1.SendRequest.prototype.clearCreatedAtTime=function(){return this.setCreatedAtTime(void 0)};proto.ic_ledger.pb.v1.SendRequest.prototype.hasCreatedAtTime=function(){return p.Message.getField(this,7)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.SendResponse.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.SendResponse.toObject(o,this)},proto.ic_ledger.pb.v1.SendResponse.toObject=function(o,t){var r,i={resultingHeight:(r=t.getResultingHeight())&&proto.ic_ledger.pb.v1.BlockHeight.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.SendResponse.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.SendResponse;return proto.ic_ledger.pb.v1.SendResponse.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.SendResponse.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_ledger.pb.v1.BlockHeight;t.readMessage(i,proto.ic_ledger.pb.v1.BlockHeight.deserializeBinaryFromReader),o.setResultingHeight(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.SendResponse.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.SendResponse.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.SendResponse.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getResultingHeight(),r!=null&&t.writeMessage(1,r,proto.ic_ledger.pb.v1.BlockHeight.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.SendResponse.prototype.getResultingHeight=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.BlockHeight,1)};proto.ic_ledger.pb.v1.SendResponse.prototype.setResultingHeight=function(o){return p.Message.setWrapperField(this,1,o)};proto.ic_ledger.pb.v1.SendResponse.prototype.clearResultingHeight=function(){return this.setResultingHeight(void 0)};proto.ic_ledger.pb.v1.SendResponse.prototype.hasResultingHeight=function(){return p.Message.getField(this,1)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.NotifyRequest.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.NotifyRequest.toObject(o,this)},proto.ic_ledger.pb.v1.NotifyRequest.toObject=function(o,t){var r,i={blockHeight:(r=t.getBlockHeight())&&proto.ic_ledger.pb.v1.BlockHeight.toObject(o,r),maxFee:(r=t.getMaxFee())&&proto.ic_ledger.pb.v1.ICPTs.toObject(o,r),fromSubaccount:(r=t.getFromSubaccount())&&proto.ic_ledger.pb.v1.Subaccount.toObject(o,r),toCanister:(r=t.getToCanister())&&M.PrincipalId.toObject(o,r),toSubaccount:(r=t.getToSubaccount())&&proto.ic_ledger.pb.v1.Subaccount.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.NotifyRequest.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.NotifyRequest;return proto.ic_ledger.pb.v1.NotifyRequest.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.NotifyRequest.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_ledger.pb.v1.BlockHeight;t.readMessage(i,proto.ic_ledger.pb.v1.BlockHeight.deserializeBinaryFromReader),o.setBlockHeight(i);break;case 2:var i=new proto.ic_ledger.pb.v1.ICPTs;t.readMessage(i,proto.ic_ledger.pb.v1.ICPTs.deserializeBinaryFromReader),o.setMaxFee(i);break;case 3:var i=new proto.ic_ledger.pb.v1.Subaccount;t.readMessage(i,proto.ic_ledger.pb.v1.Subaccount.deserializeBinaryFromReader),o.setFromSubaccount(i);break;case 4:var i=new M.PrincipalId;t.readMessage(i,M.PrincipalId.deserializeBinaryFromReader),o.setToCanister(i);break;case 5:var i=new proto.ic_ledger.pb.v1.Subaccount;t.readMessage(i,proto.ic_ledger.pb.v1.Subaccount.deserializeBinaryFromReader),o.setToSubaccount(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.NotifyRequest.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.NotifyRequest.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.NotifyRequest.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getBlockHeight(),r!=null&&t.writeMessage(1,r,proto.ic_ledger.pb.v1.BlockHeight.serializeBinaryToWriter),r=o.getMaxFee(),r!=null&&t.writeMessage(2,r,proto.ic_ledger.pb.v1.ICPTs.serializeBinaryToWriter),r=o.getFromSubaccount(),r!=null&&t.writeMessage(3,r,proto.ic_ledger.pb.v1.Subaccount.serializeBinaryToWriter),r=o.getToCanister(),r!=null&&t.writeMessage(4,r,M.PrincipalId.serializeBinaryToWriter),r=o.getToSubaccount(),r!=null&&t.writeMessage(5,r,proto.ic_ledger.pb.v1.Subaccount.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.getBlockHeight=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.BlockHeight,1)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.setBlockHeight=function(o){return p.Message.setWrapperField(this,1,o)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.clearBlockHeight=function(){return this.setBlockHeight(void 0)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.hasBlockHeight=function(){return p.Message.getField(this,1)!=null};proto.ic_ledger.pb.v1.NotifyRequest.prototype.getMaxFee=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.ICPTs,2)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.setMaxFee=function(o){return p.Message.setWrapperField(this,2,o)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.clearMaxFee=function(){return this.setMaxFee(void 0)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.hasMaxFee=function(){return p.Message.getField(this,2)!=null};proto.ic_ledger.pb.v1.NotifyRequest.prototype.getFromSubaccount=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Subaccount,3)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.setFromSubaccount=function(o){return p.Message.setWrapperField(this,3,o)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.clearFromSubaccount=function(){return this.setFromSubaccount(void 0)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.hasFromSubaccount=function(){return p.Message.getField(this,3)!=null};proto.ic_ledger.pb.v1.NotifyRequest.prototype.getToCanister=function(){return p.Message.getWrapperField(this,M.PrincipalId,4)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.setToCanister=function(o){return p.Message.setWrapperField(this,4,o)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.clearToCanister=function(){return this.setToCanister(void 0)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.hasToCanister=function(){return p.Message.getField(this,4)!=null};proto.ic_ledger.pb.v1.NotifyRequest.prototype.getToSubaccount=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Subaccount,5)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.setToSubaccount=function(o){return p.Message.setWrapperField(this,5,o)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.clearToSubaccount=function(){return this.setToSubaccount(void 0)};proto.ic_ledger.pb.v1.NotifyRequest.prototype.hasToSubaccount=function(){return p.Message.getField(this,5)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.NotifyResponse.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.NotifyResponse.toObject(o,this)},proto.ic_ledger.pb.v1.NotifyResponse.toObject=function(o,t){var r,i={};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.NotifyResponse.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.NotifyResponse;return proto.ic_ledger.pb.v1.NotifyResponse.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.NotifyResponse.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.NotifyResponse.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.NotifyResponse.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.NotifyResponse.serializeBinaryToWriter=function(o,t){var r=void 0};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.TransactionNotificationRequest.toObject(o,this)},proto.ic_ledger.pb.v1.TransactionNotificationRequest.toObject=function(o,t){var r,i={from:(r=t.getFrom())&&M.PrincipalId.toObject(o,r),fromSubaccount:(r=t.getFromSubaccount())&&proto.ic_ledger.pb.v1.Subaccount.toObject(o,r),to:(r=t.getTo())&&M.PrincipalId.toObject(o,r),toSubaccount:(r=t.getToSubaccount())&&proto.ic_ledger.pb.v1.Subaccount.toObject(o,r),blockHeight:(r=t.getBlockHeight())&&proto.ic_ledger.pb.v1.BlockHeight.toObject(o,r),amount:(r=t.getAmount())&&proto.ic_ledger.pb.v1.ICPTs.toObject(o,r),memo:(r=t.getMemo())&&proto.ic_ledger.pb.v1.Memo.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.TransactionNotificationRequest.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.TransactionNotificationRequest;return proto.ic_ledger.pb.v1.TransactionNotificationRequest.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new M.PrincipalId;t.readMessage(i,M.PrincipalId.deserializeBinaryFromReader),o.setFrom(i);break;case 2:var i=new proto.ic_ledger.pb.v1.Subaccount;t.readMessage(i,proto.ic_ledger.pb.v1.Subaccount.deserializeBinaryFromReader),o.setFromSubaccount(i);break;case 3:var i=new M.PrincipalId;t.readMessage(i,M.PrincipalId.deserializeBinaryFromReader),o.setTo(i);break;case 4:var i=new proto.ic_ledger.pb.v1.Subaccount;t.readMessage(i,proto.ic_ledger.pb.v1.Subaccount.deserializeBinaryFromReader),o.setToSubaccount(i);break;case 5:var i=new proto.ic_ledger.pb.v1.BlockHeight;t.readMessage(i,proto.ic_ledger.pb.v1.BlockHeight.deserializeBinaryFromReader),o.setBlockHeight(i);break;case 6:var i=new proto.ic_ledger.pb.v1.ICPTs;t.readMessage(i,proto.ic_ledger.pb.v1.ICPTs.deserializeBinaryFromReader),o.setAmount(i);break;case 7:var i=new proto.ic_ledger.pb.v1.Memo;t.readMessage(i,proto.ic_ledger.pb.v1.Memo.deserializeBinaryFromReader),o.setMemo(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.TransactionNotificationRequest.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.TransactionNotificationRequest.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getFrom(),r!=null&&t.writeMessage(1,r,M.PrincipalId.serializeBinaryToWriter),r=o.getFromSubaccount(),r!=null&&t.writeMessage(2,r,proto.ic_ledger.pb.v1.Subaccount.serializeBinaryToWriter),r=o.getTo(),r!=null&&t.writeMessage(3,r,M.PrincipalId.serializeBinaryToWriter),r=o.getToSubaccount(),r!=null&&t.writeMessage(4,r,proto.ic_ledger.pb.v1.Subaccount.serializeBinaryToWriter),r=o.getBlockHeight(),r!=null&&t.writeMessage(5,r,proto.ic_ledger.pb.v1.BlockHeight.serializeBinaryToWriter),r=o.getAmount(),r!=null&&t.writeMessage(6,r,proto.ic_ledger.pb.v1.ICPTs.serializeBinaryToWriter),r=o.getMemo(),r!=null&&t.writeMessage(7,r,proto.ic_ledger.pb.v1.Memo.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.getFrom=function(){return p.Message.getWrapperField(this,M.PrincipalId,1)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.setFrom=function(o){return p.Message.setWrapperField(this,1,o)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.clearFrom=function(){return this.setFrom(void 0)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.hasFrom=function(){return p.Message.getField(this,1)!=null};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.getFromSubaccount=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Subaccount,2)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.setFromSubaccount=function(o){return p.Message.setWrapperField(this,2,o)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.clearFromSubaccount=function(){return this.setFromSubaccount(void 0)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.hasFromSubaccount=function(){return p.Message.getField(this,2)!=null};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.getTo=function(){return p.Message.getWrapperField(this,M.PrincipalId,3)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.setTo=function(o){return p.Message.setWrapperField(this,3,o)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.clearTo=function(){return this.setTo(void 0)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.hasTo=function(){return p.Message.getField(this,3)!=null};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.getToSubaccount=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Subaccount,4)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.setToSubaccount=function(o){return p.Message.setWrapperField(this,4,o)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.clearToSubaccount=function(){return this.setToSubaccount(void 0)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.hasToSubaccount=function(){return p.Message.getField(this,4)!=null};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.getBlockHeight=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.BlockHeight,5)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.setBlockHeight=function(o){return p.Message.setWrapperField(this,5,o)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.clearBlockHeight=function(){return this.setBlockHeight(void 0)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.hasBlockHeight=function(){return p.Message.getField(this,5)!=null};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.getAmount=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.ICPTs,6)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.setAmount=function(o){return p.Message.setWrapperField(this,6,o)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.clearAmount=function(){return this.setAmount(void 0)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.hasAmount=function(){return p.Message.getField(this,6)!=null};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.getMemo=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Memo,7)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.setMemo=function(o){return p.Message.setWrapperField(this,7,o)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.clearMemo=function(){return this.setMemo(void 0)};proto.ic_ledger.pb.v1.TransactionNotificationRequest.prototype.hasMemo=function(){return p.Message.getField(this,7)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.TransactionNotificationResponse.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.TransactionNotificationResponse.toObject(o,this)},proto.ic_ledger.pb.v1.TransactionNotificationResponse.toObject=function(o,t){var r,i={response:t.getResponse_asB64()};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.TransactionNotificationResponse.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.TransactionNotificationResponse;return proto.ic_ledger.pb.v1.TransactionNotificationResponse.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.TransactionNotificationResponse.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readBytes();o.setResponse(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.TransactionNotificationResponse.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.TransactionNotificationResponse.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.TransactionNotificationResponse.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getResponse_asU8(),r.length>0&&t.writeBytes(1,r)};proto.ic_ledger.pb.v1.TransactionNotificationResponse.prototype.getResponse=function(){return p.Message.getFieldWithDefault(this,1,"")};proto.ic_ledger.pb.v1.TransactionNotificationResponse.prototype.getResponse_asB64=function(){return p.Message.bytesAsB64(this.getResponse())};proto.ic_ledger.pb.v1.TransactionNotificationResponse.prototype.getResponse_asU8=function(){return p.Message.bytesAsU8(this.getResponse())};proto.ic_ledger.pb.v1.TransactionNotificationResponse.prototype.setResponse=function(o){return p.Message.setProto3BytesField(this,1,o)};proto.ic_ledger.pb.v1.CyclesNotificationResponse.oneofGroups_=[[1,2,3]];proto.ic_ledger.pb.v1.CyclesNotificationResponse.ResponseCase={RESPONSE_NOT_SET:0,CREATED_CANISTER_ID:1,REFUND:2,TOPPED_UP:3};proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.getResponseCase=function(){return p.Message.computeOneofCase(this,proto.ic_ledger.pb.v1.CyclesNotificationResponse.oneofGroups_[0])};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.CyclesNotificationResponse.toObject(o,this)},proto.ic_ledger.pb.v1.CyclesNotificationResponse.toObject=function(o,t){var r,i={createdCanisterId:(r=t.getCreatedCanisterId())&&M.PrincipalId.toObject(o,r),refund:(r=t.getRefund())&&proto.ic_ledger.pb.v1.Refund.toObject(o,r),toppedUp:(r=t.getToppedUp())&&proto.ic_ledger.pb.v1.ToppedUp.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.CyclesNotificationResponse.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.CyclesNotificationResponse;return proto.ic_ledger.pb.v1.CyclesNotificationResponse.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.CyclesNotificationResponse.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new M.PrincipalId;t.readMessage(i,M.PrincipalId.deserializeBinaryFromReader),o.setCreatedCanisterId(i);break;case 2:var i=new proto.ic_ledger.pb.v1.Refund;t.readMessage(i,proto.ic_ledger.pb.v1.Refund.deserializeBinaryFromReader),o.setRefund(i);break;case 3:var i=new proto.ic_ledger.pb.v1.ToppedUp;t.readMessage(i,proto.ic_ledger.pb.v1.ToppedUp.deserializeBinaryFromReader),o.setToppedUp(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.CyclesNotificationResponse.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.CyclesNotificationResponse.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getCreatedCanisterId(),r!=null&&t.writeMessage(1,r,M.PrincipalId.serializeBinaryToWriter),r=o.getRefund(),r!=null&&t.writeMessage(2,r,proto.ic_ledger.pb.v1.Refund.serializeBinaryToWriter),r=o.getToppedUp(),r!=null&&t.writeMessage(3,r,proto.ic_ledger.pb.v1.ToppedUp.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.getCreatedCanisterId=function(){return p.Message.getWrapperField(this,M.PrincipalId,1)};proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.setCreatedCanisterId=function(o){return p.Message.setOneofWrapperField(this,1,proto.ic_ledger.pb.v1.CyclesNotificationResponse.oneofGroups_[0],o)};proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.clearCreatedCanisterId=function(){return this.setCreatedCanisterId(void 0)};proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.hasCreatedCanisterId=function(){return p.Message.getField(this,1)!=null};proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.getRefund=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Refund,2)};proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.setRefund=function(o){return p.Message.setOneofWrapperField(this,2,proto.ic_ledger.pb.v1.CyclesNotificationResponse.oneofGroups_[0],o)};proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.clearRefund=function(){return this.setRefund(void 0)};proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.hasRefund=function(){return p.Message.getField(this,2)!=null};proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.getToppedUp=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.ToppedUp,3)};proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.setToppedUp=function(o){return p.Message.setOneofWrapperField(this,3,proto.ic_ledger.pb.v1.CyclesNotificationResponse.oneofGroups_[0],o)};proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.clearToppedUp=function(){return this.setToppedUp(void 0)};proto.ic_ledger.pb.v1.CyclesNotificationResponse.prototype.hasToppedUp=function(){return p.Message.getField(this,3)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.AccountBalanceRequest.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.AccountBalanceRequest.toObject(o,this)},proto.ic_ledger.pb.v1.AccountBalanceRequest.toObject=function(o,t){var r,i={account:(r=t.getAccount())&&proto.ic_ledger.pb.v1.AccountIdentifier.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.AccountBalanceRequest.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.AccountBalanceRequest;return proto.ic_ledger.pb.v1.AccountBalanceRequest.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.AccountBalanceRequest.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_ledger.pb.v1.AccountIdentifier;t.readMessage(i,proto.ic_ledger.pb.v1.AccountIdentifier.deserializeBinaryFromReader),o.setAccount(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.AccountBalanceRequest.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.AccountBalanceRequest.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.AccountBalanceRequest.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getAccount(),r!=null&&t.writeMessage(1,r,proto.ic_ledger.pb.v1.AccountIdentifier.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.AccountBalanceRequest.prototype.getAccount=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.AccountIdentifier,1)};proto.ic_ledger.pb.v1.AccountBalanceRequest.prototype.setAccount=function(o){return p.Message.setWrapperField(this,1,o)};proto.ic_ledger.pb.v1.AccountBalanceRequest.prototype.clearAccount=function(){return this.setAccount(void 0)};proto.ic_ledger.pb.v1.AccountBalanceRequest.prototype.hasAccount=function(){return p.Message.getField(this,1)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.AccountBalanceResponse.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.AccountBalanceResponse.toObject(o,this)},proto.ic_ledger.pb.v1.AccountBalanceResponse.toObject=function(o,t){var r,i={balance:(r=t.getBalance())&&proto.ic_ledger.pb.v1.ICPTs.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.AccountBalanceResponse.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.AccountBalanceResponse;return proto.ic_ledger.pb.v1.AccountBalanceResponse.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.AccountBalanceResponse.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_ledger.pb.v1.ICPTs;t.readMessage(i,proto.ic_ledger.pb.v1.ICPTs.deserializeBinaryFromReader),o.setBalance(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.AccountBalanceResponse.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.AccountBalanceResponse.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.AccountBalanceResponse.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getBalance(),r!=null&&t.writeMessage(1,r,proto.ic_ledger.pb.v1.ICPTs.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.AccountBalanceResponse.prototype.getBalance=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.ICPTs,1)};proto.ic_ledger.pb.v1.AccountBalanceResponse.prototype.setBalance=function(o){return p.Message.setWrapperField(this,1,o)};proto.ic_ledger.pb.v1.AccountBalanceResponse.prototype.clearBalance=function(){return this.setBalance(void 0)};proto.ic_ledger.pb.v1.AccountBalanceResponse.prototype.hasBalance=function(){return p.Message.getField(this,1)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.TipOfChainRequest.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.TipOfChainRequest.toObject(o,this)},proto.ic_ledger.pb.v1.TipOfChainRequest.toObject=function(o,t){var r,i={};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.TipOfChainRequest.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.TipOfChainRequest;return proto.ic_ledger.pb.v1.TipOfChainRequest.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.TipOfChainRequest.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.TipOfChainRequest.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.TipOfChainRequest.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.TipOfChainRequest.serializeBinaryToWriter=function(o,t){var r=void 0};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.TipOfChainResponse.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.TipOfChainResponse.toObject(o,this)},proto.ic_ledger.pb.v1.TipOfChainResponse.toObject=function(o,t){var r,i={certification:(r=t.getCertification())&&proto.ic_ledger.pb.v1.Certification.toObject(o,r),chainLength:(r=t.getChainLength())&&proto.ic_ledger.pb.v1.BlockHeight.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.TipOfChainResponse.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.TipOfChainResponse;return proto.ic_ledger.pb.v1.TipOfChainResponse.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.TipOfChainResponse.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_ledger.pb.v1.Certification;t.readMessage(i,proto.ic_ledger.pb.v1.Certification.deserializeBinaryFromReader),o.setCertification(i);break;case 2:var i=new proto.ic_ledger.pb.v1.BlockHeight;t.readMessage(i,proto.ic_ledger.pb.v1.BlockHeight.deserializeBinaryFromReader),o.setChainLength(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.TipOfChainResponse.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.TipOfChainResponse.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.TipOfChainResponse.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getCertification(),r!=null&&t.writeMessage(1,r,proto.ic_ledger.pb.v1.Certification.serializeBinaryToWriter),r=o.getChainLength(),r!=null&&t.writeMessage(2,r,proto.ic_ledger.pb.v1.BlockHeight.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.TipOfChainResponse.prototype.getCertification=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Certification,1)};proto.ic_ledger.pb.v1.TipOfChainResponse.prototype.setCertification=function(o){return p.Message.setWrapperField(this,1,o)};proto.ic_ledger.pb.v1.TipOfChainResponse.prototype.clearCertification=function(){return this.setCertification(void 0)};proto.ic_ledger.pb.v1.TipOfChainResponse.prototype.hasCertification=function(){return p.Message.getField(this,1)!=null};proto.ic_ledger.pb.v1.TipOfChainResponse.prototype.getChainLength=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.BlockHeight,2)};proto.ic_ledger.pb.v1.TipOfChainResponse.prototype.setChainLength=function(o){return p.Message.setWrapperField(this,2,o)};proto.ic_ledger.pb.v1.TipOfChainResponse.prototype.clearChainLength=function(){return this.setChainLength(void 0)};proto.ic_ledger.pb.v1.TipOfChainResponse.prototype.hasChainLength=function(){return p.Message.getField(this,2)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.EncodedBlock.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.EncodedBlock.toObject(o,this)},proto.ic_ledger.pb.v1.EncodedBlock.toObject=function(o,t){var r,i={block:t.getBlock_asB64()};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.EncodedBlock.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.EncodedBlock;return proto.ic_ledger.pb.v1.EncodedBlock.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.EncodedBlock.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readBytes();o.setBlock(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.EncodedBlock.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.EncodedBlock.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.EncodedBlock.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getBlock_asU8(),r.length>0&&t.writeBytes(1,r)};proto.ic_ledger.pb.v1.EncodedBlock.prototype.getBlock=function(){return p.Message.getFieldWithDefault(this,1,"")};proto.ic_ledger.pb.v1.EncodedBlock.prototype.getBlock_asB64=function(){return p.Message.bytesAsB64(this.getBlock())};proto.ic_ledger.pb.v1.EncodedBlock.prototype.getBlock_asU8=function(){return p.Message.bytesAsU8(this.getBlock())};proto.ic_ledger.pb.v1.EncodedBlock.prototype.setBlock=function(o){return p.Message.setProto3BytesField(this,1,o)};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.GetBlocksRequest.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.GetBlocksRequest.toObject(o,this)},proto.ic_ledger.pb.v1.GetBlocksRequest.toObject=function(o,t){var r,i={start:p.Message.getFieldWithDefault(t,1,"0"),length:p.Message.getFieldWithDefault(t,2,"0")};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.GetBlocksRequest.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.GetBlocksRequest;return proto.ic_ledger.pb.v1.GetBlocksRequest.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.GetBlocksRequest.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readUint64String();o.setStart(i);break;case 2:var i=t.readUint64String();o.setLength(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.GetBlocksRequest.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.GetBlocksRequest.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.GetBlocksRequest.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getStart(),parseInt(r,10)!==0&&t.writeUint64String(1,r),r=o.getLength(),parseInt(r,10)!==0&&t.writeUint64String(2,r)};proto.ic_ledger.pb.v1.GetBlocksRequest.prototype.getStart=function(){return p.Message.getFieldWithDefault(this,1,"0")};proto.ic_ledger.pb.v1.GetBlocksRequest.prototype.setStart=function(o){return p.Message.setProto3StringIntField(this,1,o)};proto.ic_ledger.pb.v1.GetBlocksRequest.prototype.getLength=function(){return p.Message.getFieldWithDefault(this,2,"0")};proto.ic_ledger.pb.v1.GetBlocksRequest.prototype.setLength=function(o){return p.Message.setProto3StringIntField(this,2,o)};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.Refund.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.Refund.toObject(o,this)},proto.ic_ledger.pb.v1.Refund.toObject=function(o,t){var r,i={refund:(r=t.getRefund())&&proto.ic_ledger.pb.v1.BlockHeight.toObject(o,r),error:p.Message.getFieldWithDefault(t,3,"")};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.Refund.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.Refund;return proto.ic_ledger.pb.v1.Refund.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.Refund.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 2:var i=new proto.ic_ledger.pb.v1.BlockHeight;t.readMessage(i,proto.ic_ledger.pb.v1.BlockHeight.deserializeBinaryFromReader),o.setRefund(i);break;case 3:var i=t.readString();o.setError(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.Refund.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.Refund.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.Refund.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getRefund(),r!=null&&t.writeMessage(2,r,proto.ic_ledger.pb.v1.BlockHeight.serializeBinaryToWriter),r=o.getError(),r.length>0&&t.writeString(3,r)};proto.ic_ledger.pb.v1.Refund.prototype.getRefund=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.BlockHeight,2)};proto.ic_ledger.pb.v1.Refund.prototype.setRefund=function(o){return p.Message.setWrapperField(this,2,o)};proto.ic_ledger.pb.v1.Refund.prototype.clearRefund=function(){return this.setRefund(void 0)};proto.ic_ledger.pb.v1.Refund.prototype.hasRefund=function(){return p.Message.getField(this,2)!=null};proto.ic_ledger.pb.v1.Refund.prototype.getError=function(){return p.Message.getFieldWithDefault(this,3,"")};proto.ic_ledger.pb.v1.Refund.prototype.setError=function(o){return p.Message.setProto3StringField(this,3,o)};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.ToppedUp.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.ToppedUp.toObject(o,this)},proto.ic_ledger.pb.v1.ToppedUp.toObject=function(o,t){var r,i={};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.ToppedUp.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.ToppedUp;return proto.ic_ledger.pb.v1.ToppedUp.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.ToppedUp.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.ToppedUp.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.ToppedUp.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.ToppedUp.serializeBinaryToWriter=function(o,t){var r=void 0};proto.ic_ledger.pb.v1.EncodedBlocks.repeatedFields_=[1];p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.EncodedBlocks.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.EncodedBlocks.toObject(o,this)},proto.ic_ledger.pb.v1.EncodedBlocks.toObject=function(o,t){var r,i={blocksList:p.Message.toObjectList(t.getBlocksList(),proto.ic_ledger.pb.v1.EncodedBlock.toObject,o)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.EncodedBlocks.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.EncodedBlocks;return proto.ic_ledger.pb.v1.EncodedBlocks.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.EncodedBlocks.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_ledger.pb.v1.EncodedBlock;t.readMessage(i,proto.ic_ledger.pb.v1.EncodedBlock.deserializeBinaryFromReader),o.addBlocks(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.EncodedBlocks.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.EncodedBlocks.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.EncodedBlocks.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getBlocksList(),r.length>0&&t.writeRepeatedMessage(1,r,proto.ic_ledger.pb.v1.EncodedBlock.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.EncodedBlocks.prototype.getBlocksList=function(){return p.Message.getRepeatedWrapperField(this,proto.ic_ledger.pb.v1.EncodedBlock,1)};proto.ic_ledger.pb.v1.EncodedBlocks.prototype.setBlocksList=function(o){return p.Message.setRepeatedWrapperField(this,1,o)};proto.ic_ledger.pb.v1.EncodedBlocks.prototype.addBlocks=function(o,t){return p.Message.addToRepeatedWrapperField(this,1,o,proto.ic_ledger.pb.v1.EncodedBlock,t)};proto.ic_ledger.pb.v1.EncodedBlocks.prototype.clearBlocksList=function(){return this.setBlocksList([])};proto.ic_ledger.pb.v1.GetBlocksResponse.oneofGroups_=[[1,2]];proto.ic_ledger.pb.v1.GetBlocksResponse.GetBlocksContentCase={GET_BLOCKS_CONTENT_NOT_SET:0,BLOCKS:1,ERROR:2};proto.ic_ledger.pb.v1.GetBlocksResponse.prototype.getGetBlocksContentCase=function(){return p.Message.computeOneofCase(this,proto.ic_ledger.pb.v1.GetBlocksResponse.oneofGroups_[0])};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.GetBlocksResponse.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.GetBlocksResponse.toObject(o,this)},proto.ic_ledger.pb.v1.GetBlocksResponse.toObject=function(o,t){var r,i={blocks:(r=t.getBlocks())&&proto.ic_ledger.pb.v1.EncodedBlocks.toObject(o,r),error:p.Message.getFieldWithDefault(t,2,"")};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.GetBlocksResponse.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.GetBlocksResponse;return proto.ic_ledger.pb.v1.GetBlocksResponse.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.GetBlocksResponse.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_ledger.pb.v1.EncodedBlocks;t.readMessage(i,proto.ic_ledger.pb.v1.EncodedBlocks.deserializeBinaryFromReader),o.setBlocks(i);break;case 2:var i=t.readString();o.setError(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.GetBlocksResponse.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.GetBlocksResponse.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.GetBlocksResponse.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getBlocks(),r!=null&&t.writeMessage(1,r,proto.ic_ledger.pb.v1.EncodedBlocks.serializeBinaryToWriter),r=p.Message.getField(o,2),r!=null&&t.writeString(2,r)};proto.ic_ledger.pb.v1.GetBlocksResponse.prototype.getBlocks=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.EncodedBlocks,1)};proto.ic_ledger.pb.v1.GetBlocksResponse.prototype.setBlocks=function(o){return p.Message.setOneofWrapperField(this,1,proto.ic_ledger.pb.v1.GetBlocksResponse.oneofGroups_[0],o)};proto.ic_ledger.pb.v1.GetBlocksResponse.prototype.clearBlocks=function(){return this.setBlocks(void 0)};proto.ic_ledger.pb.v1.GetBlocksResponse.prototype.hasBlocks=function(){return p.Message.getField(this,1)!=null};proto.ic_ledger.pb.v1.GetBlocksResponse.prototype.getError=function(){return p.Message.getFieldWithDefault(this,2,"")};proto.ic_ledger.pb.v1.GetBlocksResponse.prototype.setError=function(o){return p.Message.setOneofField(this,2,proto.ic_ledger.pb.v1.GetBlocksResponse.oneofGroups_[0],o)};proto.ic_ledger.pb.v1.GetBlocksResponse.prototype.clearError=function(){return p.Message.setOneofField(this,2,proto.ic_ledger.pb.v1.GetBlocksResponse.oneofGroups_[0],void 0)};proto.ic_ledger.pb.v1.GetBlocksResponse.prototype.hasError=function(){return p.Message.getField(this,2)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.ICPTs.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.ICPTs.toObject(o,this)},proto.ic_ledger.pb.v1.ICPTs.toObject=function(o,t){var r,i={e8s:p.Message.getFieldWithDefault(t,1,"0")};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.ICPTs.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.ICPTs;return proto.ic_ledger.pb.v1.ICPTs.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.ICPTs.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readUint64String();o.setE8s(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.ICPTs.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.ICPTs.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.ICPTs.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getE8s(),parseInt(r,10)!==0&&t.writeUint64String(1,r)};proto.ic_ledger.pb.v1.ICPTs.prototype.getE8s=function(){return p.Message.getFieldWithDefault(this,1,"0")};proto.ic_ledger.pb.v1.ICPTs.prototype.setE8s=function(o){return p.Message.setProto3StringIntField(this,1,o)};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.Payment.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.Payment.toObject(o,this)},proto.ic_ledger.pb.v1.Payment.toObject=function(o,t){var r,i={receiverGets:(r=t.getReceiverGets())&&proto.ic_ledger.pb.v1.ICPTs.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.Payment.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.Payment;return proto.ic_ledger.pb.v1.Payment.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.Payment.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_ledger.pb.v1.ICPTs;t.readMessage(i,proto.ic_ledger.pb.v1.ICPTs.deserializeBinaryFromReader),o.setReceiverGets(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.Payment.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.Payment.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.Payment.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getReceiverGets(),r!=null&&t.writeMessage(1,r,proto.ic_ledger.pb.v1.ICPTs.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.Payment.prototype.getReceiverGets=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.ICPTs,1)};proto.ic_ledger.pb.v1.Payment.prototype.setReceiverGets=function(o){return p.Message.setWrapperField(this,1,o)};proto.ic_ledger.pb.v1.Payment.prototype.clearReceiverGets=function(){return this.setReceiverGets(void 0)};proto.ic_ledger.pb.v1.Payment.prototype.hasReceiverGets=function(){return p.Message.getField(this,1)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.BlockHeight.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.BlockHeight.toObject(o,this)},proto.ic_ledger.pb.v1.BlockHeight.toObject=function(o,t){var r,i={height:p.Message.getFieldWithDefault(t,1,"0")};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.BlockHeight.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.BlockHeight;return proto.ic_ledger.pb.v1.BlockHeight.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.BlockHeight.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readUint64String();o.setHeight(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.BlockHeight.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.BlockHeight.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.BlockHeight.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getHeight(),parseInt(r,10)!==0&&t.writeUint64String(1,r)};proto.ic_ledger.pb.v1.BlockHeight.prototype.getHeight=function(){return p.Message.getFieldWithDefault(this,1,"0")};proto.ic_ledger.pb.v1.BlockHeight.prototype.setHeight=function(o){return p.Message.setProto3StringIntField(this,1,o)};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.Block.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.Block.toObject(o,this)},proto.ic_ledger.pb.v1.Block.toObject=function(o,t){var r,i={parentHash:(r=t.getParentHash())&&proto.ic_ledger.pb.v1.Hash.toObject(o,r),timestamp:(r=t.getTimestamp())&&proto.ic_ledger.pb.v1.TimeStamp.toObject(o,r),transaction:(r=t.getTransaction())&&proto.ic_ledger.pb.v1.Transaction.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.Block.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.Block;return proto.ic_ledger.pb.v1.Block.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.Block.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_ledger.pb.v1.Hash;t.readMessage(i,proto.ic_ledger.pb.v1.Hash.deserializeBinaryFromReader),o.setParentHash(i);break;case 2:var i=new proto.ic_ledger.pb.v1.TimeStamp;t.readMessage(i,proto.ic_ledger.pb.v1.TimeStamp.deserializeBinaryFromReader),o.setTimestamp(i);break;case 3:var i=new proto.ic_ledger.pb.v1.Transaction;t.readMessage(i,proto.ic_ledger.pb.v1.Transaction.deserializeBinaryFromReader),o.setTransaction(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.Block.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.Block.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.Block.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getParentHash(),r!=null&&t.writeMessage(1,r,proto.ic_ledger.pb.v1.Hash.serializeBinaryToWriter),r=o.getTimestamp(),r!=null&&t.writeMessage(2,r,proto.ic_ledger.pb.v1.TimeStamp.serializeBinaryToWriter),r=o.getTransaction(),r!=null&&t.writeMessage(3,r,proto.ic_ledger.pb.v1.Transaction.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.Block.prototype.getParentHash=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Hash,1)};proto.ic_ledger.pb.v1.Block.prototype.setParentHash=function(o){return p.Message.setWrapperField(this,1,o)};proto.ic_ledger.pb.v1.Block.prototype.clearParentHash=function(){return this.setParentHash(void 0)};proto.ic_ledger.pb.v1.Block.prototype.hasParentHash=function(){return p.Message.getField(this,1)!=null};proto.ic_ledger.pb.v1.Block.prototype.getTimestamp=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.TimeStamp,2)};proto.ic_ledger.pb.v1.Block.prototype.setTimestamp=function(o){return p.Message.setWrapperField(this,2,o)};proto.ic_ledger.pb.v1.Block.prototype.clearTimestamp=function(){return this.setTimestamp(void 0)};proto.ic_ledger.pb.v1.Block.prototype.hasTimestamp=function(){return p.Message.getField(this,2)!=null};proto.ic_ledger.pb.v1.Block.prototype.getTransaction=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Transaction,3)};proto.ic_ledger.pb.v1.Block.prototype.setTransaction=function(o){return p.Message.setWrapperField(this,3,o)};proto.ic_ledger.pb.v1.Block.prototype.clearTransaction=function(){return this.setTransaction(void 0)};proto.ic_ledger.pb.v1.Block.prototype.hasTransaction=function(){return p.Message.getField(this,3)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.Hash.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.Hash.toObject(o,this)},proto.ic_ledger.pb.v1.Hash.toObject=function(o,t){var r,i={hash:t.getHash_asB64()};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.Hash.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.Hash;return proto.ic_ledger.pb.v1.Hash.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.Hash.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readBytes();o.setHash(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.Hash.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.Hash.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.Hash.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getHash_asU8(),r.length>0&&t.writeBytes(1,r)};proto.ic_ledger.pb.v1.Hash.prototype.getHash=function(){return p.Message.getFieldWithDefault(this,1,"")};proto.ic_ledger.pb.v1.Hash.prototype.getHash_asB64=function(){return p.Message.bytesAsB64(this.getHash())};proto.ic_ledger.pb.v1.Hash.prototype.getHash_asU8=function(){return p.Message.bytesAsU8(this.getHash())};proto.ic_ledger.pb.v1.Hash.prototype.setHash=function(o){return p.Message.setProto3BytesField(this,1,o)};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.Account.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.Account.toObject(o,this)},proto.ic_ledger.pb.v1.Account.toObject=function(o,t){var r,i={identifier:(r=t.getIdentifier())&&proto.ic_ledger.pb.v1.AccountIdentifier.toObject(o,r),balance:(r=t.getBalance())&&proto.ic_ledger.pb.v1.ICPTs.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.Account.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.Account;return proto.ic_ledger.pb.v1.Account.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.Account.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_ledger.pb.v1.AccountIdentifier;t.readMessage(i,proto.ic_ledger.pb.v1.AccountIdentifier.deserializeBinaryFromReader),o.setIdentifier(i);break;case 2:var i=new proto.ic_ledger.pb.v1.ICPTs;t.readMessage(i,proto.ic_ledger.pb.v1.ICPTs.deserializeBinaryFromReader),o.setBalance(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.Account.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.Account.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.Account.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getIdentifier(),r!=null&&t.writeMessage(1,r,proto.ic_ledger.pb.v1.AccountIdentifier.serializeBinaryToWriter),r=o.getBalance(),r!=null&&t.writeMessage(2,r,proto.ic_ledger.pb.v1.ICPTs.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.Account.prototype.getIdentifier=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.AccountIdentifier,1)};proto.ic_ledger.pb.v1.Account.prototype.setIdentifier=function(o){return p.Message.setWrapperField(this,1,o)};proto.ic_ledger.pb.v1.Account.prototype.clearIdentifier=function(){return this.setIdentifier(void 0)};proto.ic_ledger.pb.v1.Account.prototype.hasIdentifier=function(){return p.Message.getField(this,1)!=null};proto.ic_ledger.pb.v1.Account.prototype.getBalance=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.ICPTs,2)};proto.ic_ledger.pb.v1.Account.prototype.setBalance=function(o){return p.Message.setWrapperField(this,2,o)};proto.ic_ledger.pb.v1.Account.prototype.clearBalance=function(){return this.setBalance(void 0)};proto.ic_ledger.pb.v1.Account.prototype.hasBalance=function(){return p.Message.getField(this,2)!=null};proto.ic_ledger.pb.v1.Transaction.oneofGroups_=[[1,2,3]];proto.ic_ledger.pb.v1.Transaction.TransferCase={TRANSFER_NOT_SET:0,BURN:1,MINT:2,SEND:3};proto.ic_ledger.pb.v1.Transaction.prototype.getTransferCase=function(){return p.Message.computeOneofCase(this,proto.ic_ledger.pb.v1.Transaction.oneofGroups_[0])};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.Transaction.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.Transaction.toObject(o,this)},proto.ic_ledger.pb.v1.Transaction.toObject=function(o,t){var r,i={burn:(r=t.getBurn())&&proto.ic_ledger.pb.v1.Burn.toObject(o,r),mint:(r=t.getMint())&&proto.ic_ledger.pb.v1.Mint.toObject(o,r),send:(r=t.getSend())&&proto.ic_ledger.pb.v1.Send.toObject(o,r),memo:(r=t.getMemo())&&proto.ic_ledger.pb.v1.Memo.toObject(o,r),createdAt:(r=t.getCreatedAt())&&proto.ic_ledger.pb.v1.BlockHeight.toObject(o,r),createdAtTime:(r=t.getCreatedAtTime())&&proto.ic_ledger.pb.v1.TimeStamp.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.Transaction.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.Transaction;return proto.ic_ledger.pb.v1.Transaction.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.Transaction.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_ledger.pb.v1.Burn;t.readMessage(i,proto.ic_ledger.pb.v1.Burn.deserializeBinaryFromReader),o.setBurn(i);break;case 2:var i=new proto.ic_ledger.pb.v1.Mint;t.readMessage(i,proto.ic_ledger.pb.v1.Mint.deserializeBinaryFromReader),o.setMint(i);break;case 3:var i=new proto.ic_ledger.pb.v1.Send;t.readMessage(i,proto.ic_ledger.pb.v1.Send.deserializeBinaryFromReader),o.setSend(i);break;case 4:var i=new proto.ic_ledger.pb.v1.Memo;t.readMessage(i,proto.ic_ledger.pb.v1.Memo.deserializeBinaryFromReader),o.setMemo(i);break;case 5:var i=new proto.ic_ledger.pb.v1.BlockHeight;t.readMessage(i,proto.ic_ledger.pb.v1.BlockHeight.deserializeBinaryFromReader),o.setCreatedAt(i);break;case 6:var i=new proto.ic_ledger.pb.v1.TimeStamp;t.readMessage(i,proto.ic_ledger.pb.v1.TimeStamp.deserializeBinaryFromReader),o.setCreatedAtTime(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.Transaction.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.Transaction.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.Transaction.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getBurn(),r!=null&&t.writeMessage(1,r,proto.ic_ledger.pb.v1.Burn.serializeBinaryToWriter),r=o.getMint(),r!=null&&t.writeMessage(2,r,proto.ic_ledger.pb.v1.Mint.serializeBinaryToWriter),r=o.getSend(),r!=null&&t.writeMessage(3,r,proto.ic_ledger.pb.v1.Send.serializeBinaryToWriter),r=o.getMemo(),r!=null&&t.writeMessage(4,r,proto.ic_ledger.pb.v1.Memo.serializeBinaryToWriter),r=o.getCreatedAt(),r!=null&&t.writeMessage(5,r,proto.ic_ledger.pb.v1.BlockHeight.serializeBinaryToWriter),r=o.getCreatedAtTime(),r!=null&&t.writeMessage(6,r,proto.ic_ledger.pb.v1.TimeStamp.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.Transaction.prototype.getBurn=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Burn,1)};proto.ic_ledger.pb.v1.Transaction.prototype.setBurn=function(o){return p.Message.setOneofWrapperField(this,1,proto.ic_ledger.pb.v1.Transaction.oneofGroups_[0],o)};proto.ic_ledger.pb.v1.Transaction.prototype.clearBurn=function(){return this.setBurn(void 0)};proto.ic_ledger.pb.v1.Transaction.prototype.hasBurn=function(){return p.Message.getField(this,1)!=null};proto.ic_ledger.pb.v1.Transaction.prototype.getMint=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Mint,2)};proto.ic_ledger.pb.v1.Transaction.prototype.setMint=function(o){return p.Message.setOneofWrapperField(this,2,proto.ic_ledger.pb.v1.Transaction.oneofGroups_[0],o)};proto.ic_ledger.pb.v1.Transaction.prototype.clearMint=function(){return this.setMint(void 0)};proto.ic_ledger.pb.v1.Transaction.prototype.hasMint=function(){return p.Message.getField(this,2)!=null};proto.ic_ledger.pb.v1.Transaction.prototype.getSend=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Send,3)};proto.ic_ledger.pb.v1.Transaction.prototype.setSend=function(o){return p.Message.setOneofWrapperField(this,3,proto.ic_ledger.pb.v1.Transaction.oneofGroups_[0],o)};proto.ic_ledger.pb.v1.Transaction.prototype.clearSend=function(){return this.setSend(void 0)};proto.ic_ledger.pb.v1.Transaction.prototype.hasSend=function(){return p.Message.getField(this,3)!=null};proto.ic_ledger.pb.v1.Transaction.prototype.getMemo=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.Memo,4)};proto.ic_ledger.pb.v1.Transaction.prototype.setMemo=function(o){return p.Message.setWrapperField(this,4,o)};proto.ic_ledger.pb.v1.Transaction.prototype.clearMemo=function(){return this.setMemo(void 0)};proto.ic_ledger.pb.v1.Transaction.prototype.hasMemo=function(){return p.Message.getField(this,4)!=null};proto.ic_ledger.pb.v1.Transaction.prototype.getCreatedAt=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.BlockHeight,5)};proto.ic_ledger.pb.v1.Transaction.prototype.setCreatedAt=function(o){return p.Message.setWrapperField(this,5,o)};proto.ic_ledger.pb.v1.Transaction.prototype.clearCreatedAt=function(){return this.setCreatedAt(void 0)};proto.ic_ledger.pb.v1.Transaction.prototype.hasCreatedAt=function(){return p.Message.getField(this,5)!=null};proto.ic_ledger.pb.v1.Transaction.prototype.getCreatedAtTime=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.TimeStamp,6)};proto.ic_ledger.pb.v1.Transaction.prototype.setCreatedAtTime=function(o){return p.Message.setWrapperField(this,6,o)};proto.ic_ledger.pb.v1.Transaction.prototype.clearCreatedAtTime=function(){return this.setCreatedAtTime(void 0)};proto.ic_ledger.pb.v1.Transaction.prototype.hasCreatedAtTime=function(){return p.Message.getField(this,6)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.Send.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.Send.toObject(o,this)},proto.ic_ledger.pb.v1.Send.toObject=function(o,t){var r,i={from:(r=t.getFrom())&&proto.ic_ledger.pb.v1.AccountIdentifier.toObject(o,r),to:(r=t.getTo())&&proto.ic_ledger.pb.v1.AccountIdentifier.toObject(o,r),amount:(r=t.getAmount())&&proto.ic_ledger.pb.v1.ICPTs.toObject(o,r),maxFee:(r=t.getMaxFee())&&proto.ic_ledger.pb.v1.ICPTs.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.Send.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.Send;return proto.ic_ledger.pb.v1.Send.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.Send.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_ledger.pb.v1.AccountIdentifier;t.readMessage(i,proto.ic_ledger.pb.v1.AccountIdentifier.deserializeBinaryFromReader),o.setFrom(i);break;case 2:var i=new proto.ic_ledger.pb.v1.AccountIdentifier;t.readMessage(i,proto.ic_ledger.pb.v1.AccountIdentifier.deserializeBinaryFromReader),o.setTo(i);break;case 3:var i=new proto.ic_ledger.pb.v1.ICPTs;t.readMessage(i,proto.ic_ledger.pb.v1.ICPTs.deserializeBinaryFromReader),o.setAmount(i);break;case 4:var i=new proto.ic_ledger.pb.v1.ICPTs;t.readMessage(i,proto.ic_ledger.pb.v1.ICPTs.deserializeBinaryFromReader),o.setMaxFee(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.Send.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.Send.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.Send.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getFrom(),r!=null&&t.writeMessage(1,r,proto.ic_ledger.pb.v1.AccountIdentifier.serializeBinaryToWriter),r=o.getTo(),r!=null&&t.writeMessage(2,r,proto.ic_ledger.pb.v1.AccountIdentifier.serializeBinaryToWriter),r=o.getAmount(),r!=null&&t.writeMessage(3,r,proto.ic_ledger.pb.v1.ICPTs.serializeBinaryToWriter),r=o.getMaxFee(),r!=null&&t.writeMessage(4,r,proto.ic_ledger.pb.v1.ICPTs.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.Send.prototype.getFrom=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.AccountIdentifier,1)};proto.ic_ledger.pb.v1.Send.prototype.setFrom=function(o){return p.Message.setWrapperField(this,1,o)};proto.ic_ledger.pb.v1.Send.prototype.clearFrom=function(){return this.setFrom(void 0)};proto.ic_ledger.pb.v1.Send.prototype.hasFrom=function(){return p.Message.getField(this,1)!=null};proto.ic_ledger.pb.v1.Send.prototype.getTo=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.AccountIdentifier,2)};proto.ic_ledger.pb.v1.Send.prototype.setTo=function(o){return p.Message.setWrapperField(this,2,o)};proto.ic_ledger.pb.v1.Send.prototype.clearTo=function(){return this.setTo(void 0)};proto.ic_ledger.pb.v1.Send.prototype.hasTo=function(){return p.Message.getField(this,2)!=null};proto.ic_ledger.pb.v1.Send.prototype.getAmount=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.ICPTs,3)};proto.ic_ledger.pb.v1.Send.prototype.setAmount=function(o){return p.Message.setWrapperField(this,3,o)};proto.ic_ledger.pb.v1.Send.prototype.clearAmount=function(){return this.setAmount(void 0)};proto.ic_ledger.pb.v1.Send.prototype.hasAmount=function(){return p.Message.getField(this,3)!=null};proto.ic_ledger.pb.v1.Send.prototype.getMaxFee=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.ICPTs,4)};proto.ic_ledger.pb.v1.Send.prototype.setMaxFee=function(o){return p.Message.setWrapperField(this,4,o)};proto.ic_ledger.pb.v1.Send.prototype.clearMaxFee=function(){return this.setMaxFee(void 0)};proto.ic_ledger.pb.v1.Send.prototype.hasMaxFee=function(){return p.Message.getField(this,4)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.Mint.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.Mint.toObject(o,this)},proto.ic_ledger.pb.v1.Mint.toObject=function(o,t){var r,i={to:(r=t.getTo())&&proto.ic_ledger.pb.v1.AccountIdentifier.toObject(o,r),amount:(r=t.getAmount())&&proto.ic_ledger.pb.v1.ICPTs.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.Mint.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.Mint;return proto.ic_ledger.pb.v1.Mint.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.Mint.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 2:var i=new proto.ic_ledger.pb.v1.AccountIdentifier;t.readMessage(i,proto.ic_ledger.pb.v1.AccountIdentifier.deserializeBinaryFromReader),o.setTo(i);break;case 3:var i=new proto.ic_ledger.pb.v1.ICPTs;t.readMessage(i,proto.ic_ledger.pb.v1.ICPTs.deserializeBinaryFromReader),o.setAmount(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.Mint.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.Mint.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.Mint.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getTo(),r!=null&&t.writeMessage(2,r,proto.ic_ledger.pb.v1.AccountIdentifier.serializeBinaryToWriter),r=o.getAmount(),r!=null&&t.writeMessage(3,r,proto.ic_ledger.pb.v1.ICPTs.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.Mint.prototype.getTo=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.AccountIdentifier,2)};proto.ic_ledger.pb.v1.Mint.prototype.setTo=function(o){return p.Message.setWrapperField(this,2,o)};proto.ic_ledger.pb.v1.Mint.prototype.clearTo=function(){return this.setTo(void 0)};proto.ic_ledger.pb.v1.Mint.prototype.hasTo=function(){return p.Message.getField(this,2)!=null};proto.ic_ledger.pb.v1.Mint.prototype.getAmount=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.ICPTs,3)};proto.ic_ledger.pb.v1.Mint.prototype.setAmount=function(o){return p.Message.setWrapperField(this,3,o)};proto.ic_ledger.pb.v1.Mint.prototype.clearAmount=function(){return this.setAmount(void 0)};proto.ic_ledger.pb.v1.Mint.prototype.hasAmount=function(){return p.Message.getField(this,3)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.Burn.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.Burn.toObject(o,this)},proto.ic_ledger.pb.v1.Burn.toObject=function(o,t){var r,i={from:(r=t.getFrom())&&proto.ic_ledger.pb.v1.AccountIdentifier.toObject(o,r),amount:(r=t.getAmount())&&proto.ic_ledger.pb.v1.ICPTs.toObject(o,r)};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.Burn.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.Burn;return proto.ic_ledger.pb.v1.Burn.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.Burn.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=new proto.ic_ledger.pb.v1.AccountIdentifier;t.readMessage(i,proto.ic_ledger.pb.v1.AccountIdentifier.deserializeBinaryFromReader),o.setFrom(i);break;case 3:var i=new proto.ic_ledger.pb.v1.ICPTs;t.readMessage(i,proto.ic_ledger.pb.v1.ICPTs.deserializeBinaryFromReader),o.setAmount(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.Burn.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.Burn.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.Burn.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getFrom(),r!=null&&t.writeMessage(1,r,proto.ic_ledger.pb.v1.AccountIdentifier.serializeBinaryToWriter),r=o.getAmount(),r!=null&&t.writeMessage(3,r,proto.ic_ledger.pb.v1.ICPTs.serializeBinaryToWriter)};proto.ic_ledger.pb.v1.Burn.prototype.getFrom=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.AccountIdentifier,1)};proto.ic_ledger.pb.v1.Burn.prototype.setFrom=function(o){return p.Message.setWrapperField(this,1,o)};proto.ic_ledger.pb.v1.Burn.prototype.clearFrom=function(){return this.setFrom(void 0)};proto.ic_ledger.pb.v1.Burn.prototype.hasFrom=function(){return p.Message.getField(this,1)!=null};proto.ic_ledger.pb.v1.Burn.prototype.getAmount=function(){return p.Message.getWrapperField(this,proto.ic_ledger.pb.v1.ICPTs,3)};proto.ic_ledger.pb.v1.Burn.prototype.setAmount=function(o){return p.Message.setWrapperField(this,3,o)};proto.ic_ledger.pb.v1.Burn.prototype.clearAmount=function(){return this.setAmount(void 0)};proto.ic_ledger.pb.v1.Burn.prototype.hasAmount=function(){return p.Message.getField(this,3)!=null};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.AccountIdentifier.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.AccountIdentifier.toObject(o,this)},proto.ic_ledger.pb.v1.AccountIdentifier.toObject=function(o,t){var r,i={hash:t.getHash_asB64()};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.AccountIdentifier.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.AccountIdentifier;return proto.ic_ledger.pb.v1.AccountIdentifier.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.AccountIdentifier.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readBytes();o.setHash(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.AccountIdentifier.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.AccountIdentifier.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.AccountIdentifier.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getHash_asU8(),r.length>0&&t.writeBytes(1,r)};proto.ic_ledger.pb.v1.AccountIdentifier.prototype.getHash=function(){return p.Message.getFieldWithDefault(this,1,"")};proto.ic_ledger.pb.v1.AccountIdentifier.prototype.getHash_asB64=function(){return p.Message.bytesAsB64(this.getHash())};proto.ic_ledger.pb.v1.AccountIdentifier.prototype.getHash_asU8=function(){return p.Message.bytesAsU8(this.getHash())};proto.ic_ledger.pb.v1.AccountIdentifier.prototype.setHash=function(o){return p.Message.setProto3BytesField(this,1,o)};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.Subaccount.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.Subaccount.toObject(o,this)},proto.ic_ledger.pb.v1.Subaccount.toObject=function(o,t){var r,i={subAccount:t.getSubAccount_asB64()};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.Subaccount.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.Subaccount;return proto.ic_ledger.pb.v1.Subaccount.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.Subaccount.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readBytes();o.setSubAccount(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.Subaccount.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.Subaccount.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.Subaccount.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getSubAccount_asU8(),r.length>0&&t.writeBytes(1,r)};proto.ic_ledger.pb.v1.Subaccount.prototype.getSubAccount=function(){return p.Message.getFieldWithDefault(this,1,"")};proto.ic_ledger.pb.v1.Subaccount.prototype.getSubAccount_asB64=function(){return p.Message.bytesAsB64(this.getSubAccount())};proto.ic_ledger.pb.v1.Subaccount.prototype.getSubAccount_asU8=function(){return p.Message.bytesAsU8(this.getSubAccount())};proto.ic_ledger.pb.v1.Subaccount.prototype.setSubAccount=function(o){return p.Message.setProto3BytesField(this,1,o)};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.Memo.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.Memo.toObject(o,this)},proto.ic_ledger.pb.v1.Memo.toObject=function(o,t){var r,i={memo:p.Message.getFieldWithDefault(t,1,"0")};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.Memo.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.Memo;return proto.ic_ledger.pb.v1.Memo.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.Memo.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readUint64String();o.setMemo(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.Memo.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.Memo.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.Memo.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getMemo(),parseInt(r,10)!==0&&t.writeUint64String(1,r)};proto.ic_ledger.pb.v1.Memo.prototype.getMemo=function(){return p.Message.getFieldWithDefault(this,1,"0")};proto.ic_ledger.pb.v1.Memo.prototype.setMemo=function(o){return p.Message.setProto3StringIntField(this,1,o)};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.TimeStamp.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.TimeStamp.toObject(o,this)},proto.ic_ledger.pb.v1.TimeStamp.toObject=function(o,t){var r,i={timestampNanos:p.Message.getFieldWithDefault(t,1,"0")};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.TimeStamp.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.TimeStamp;return proto.ic_ledger.pb.v1.TimeStamp.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.TimeStamp.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readUint64String();o.setTimestampNanos(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.TimeStamp.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.TimeStamp.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.TimeStamp.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getTimestampNanos(),parseInt(r,10)!==0&&t.writeUint64String(1,r)};proto.ic_ledger.pb.v1.TimeStamp.prototype.getTimestampNanos=function(){return p.Message.getFieldWithDefault(this,1,"0")};proto.ic_ledger.pb.v1.TimeStamp.prototype.setTimestampNanos=function(o){return p.Message.setProto3StringIntField(this,1,o)};p.Message.GENERATE_TO_OBJECT&&(proto.ic_ledger.pb.v1.Certification.prototype.toObject=function(o){return proto.ic_ledger.pb.v1.Certification.toObject(o,this)},proto.ic_ledger.pb.v1.Certification.toObject=function(o,t){var r,i={certification:t.getCertification_asB64()};return o&&(i.$jspbMessageInstance=t),i});proto.ic_ledger.pb.v1.Certification.deserializeBinary=function(o){var t=new p.BinaryReader(o),r=new proto.ic_ledger.pb.v1.Certification;return proto.ic_ledger.pb.v1.Certification.deserializeBinaryFromReader(r,t)};proto.ic_ledger.pb.v1.Certification.deserializeBinaryFromReader=function(o,t){for(;t.nextField()&&!t.isEndGroup();){var r=t.getFieldNumber();switch(r){case 1:var i=t.readBytes();o.setCertification(i);break;default:t.skipField();break}}return o};proto.ic_ledger.pb.v1.Certification.prototype.serializeBinary=function(){var o=new p.BinaryWriter;return proto.ic_ledger.pb.v1.Certification.serializeBinaryToWriter(this,o),o.getResultBuffer()};proto.ic_ledger.pb.v1.Certification.serializeBinaryToWriter=function(o,t){var r=void 0;r=o.getCertification_asU8(),r.length>0&&t.writeBytes(1,r)};proto.ic_ledger.pb.v1.Certification.prototype.getCertification=function(){return p.Message.getFieldWithDefault(this,1,"")};proto.ic_ledger.pb.v1.Certification.prototype.getCertification_asB64=function(){return p.Message.bytesAsB64(this.getCertification())};proto.ic_ledger.pb.v1.Certification.prototype.getCertification_asU8=function(){return p.Message.bytesAsU8(this.getCertification())};proto.ic_ledger.pb.v1.Certification.prototype.setCertification=function(o){return p.Message.setProto3BytesField(this,1,o)};u.object.extend(w,proto.ic_ledger.pb.v1)});
//# sourceMappingURL=chunk-IPUXUCZB.js.map


/***/ }),

/***/ 4924:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": () => (/* binding */ O),
/* harmony export */   "b": () => (/* binding */ W),
/* harmony export */   "c": () => (/* binding */ J)
/* harmony export */ });
/* harmony import */ var _chunk_ONAVPXOT_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7640);
var O=(0,_chunk_ONAVPXOT_js__WEBPACK_IMPORTED_MODULE_0__.a)((exports,module)=>{(function(){"use strict";var ERROR="input is invalid type",WINDOW=typeof window=="object",root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&typeof self=="object",NODE_JS=!root.JS_SHA256_NO_NODE_JS&&typeof process=="object"&&process.versions&&process.versions.node;NODE_JS?root=window:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&typeof module=="object"&&module.exports,AMD=typeof define=="function"&&__webpack_require__.amdO,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&typeof ArrayBuffer<"u",HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];(root.JS_SHA256_NO_NODE_JS||!Array.isArray)&&(Array.isArray=function(t){return Object.prototype.toString.call(t)==="[object Array]"}),ARRAY_BUFFER&&(root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW||!ArrayBuffer.isView)&&(ArrayBuffer.isView=function(t){return typeof t=="object"&&t.buffer&&t.buffer.constructor===ArrayBuffer});var createOutputMethod=function(t,r){return function(i){return new Sha256(r,!0).update(i)[t]()}},createMethod=function(t){var r=createOutputMethod("hex",t);NODE_JS&&(r=nodeWrap(r,t)),r.create=function(){return new Sha256(t)},r.update=function(o){return r.create().update(o)};for(var i=0;i<OUTPUT_TYPES.length;++i){var e=OUTPUT_TYPES[i];r[e]=createOutputMethod(e,t)}return r},nodeWrap=function(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(t){if(typeof t=="string")return crypto.createHash(algorithm).update(t,"utf8").digest("hex");if(t==null)throw new Error(ERROR);return t.constructor===ArrayBuffer&&(t=new Uint8Array(t)),Array.isArray(t)||ArrayBuffer.isView(t)||t.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(t)).digest("hex"):method(t)};return nodeMethod},createHmacOutputMethod=function(t,r){return function(i,e){return new HmacSha256(i,r,!0).update(e)[t]()}},createHmacMethod=function(t){var r=createHmacOutputMethod("hex",t);r.create=function(o){return new HmacSha256(o,t)},r.update=function(o,h){return r.create(o).update(h)};for(var i=0;i<OUTPUT_TYPES.length;++i){var e=OUTPUT_TYPES[i];r[e]=createHmacOutputMethod(e,t)}return r};function Sha256(t,r){r?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],t?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=t}Sha256.prototype.update=function(t){if(!this.finalized){var r,i=typeof t;if(i!=="string"){if(i==="object"){if(t===null)throw new Error(ERROR);if(ARRAY_BUFFER&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!Array.isArray(t)&&(!ARRAY_BUFFER||!ArrayBuffer.isView(t)))throw new Error(ERROR)}else throw new Error(ERROR);r=!0}for(var e,o=0,h,s=t.length,a=this.blocks;o<s;){if(this.hashed&&(this.hashed=!1,a[0]=this.block,a[16]=a[1]=a[2]=a[3]=a[4]=a[5]=a[6]=a[7]=a[8]=a[9]=a[10]=a[11]=a[12]=a[13]=a[14]=a[15]=0),r)for(h=this.start;o<s&&h<64;++o)a[h>>2]|=t[o]<<SHIFT[h++&3];else for(h=this.start;o<s&&h<64;++o)e=t.charCodeAt(o),e<128?a[h>>2]|=e<<SHIFT[h++&3]:e<2048?(a[h>>2]|=(192|e>>6)<<SHIFT[h++&3],a[h>>2]|=(128|e&63)<<SHIFT[h++&3]):e<55296||e>=57344?(a[h>>2]|=(224|e>>12)<<SHIFT[h++&3],a[h>>2]|=(128|e>>6&63)<<SHIFT[h++&3],a[h>>2]|=(128|e&63)<<SHIFT[h++&3]):(e=65536+((e&1023)<<10|t.charCodeAt(++o)&1023),a[h>>2]|=(240|e>>18)<<SHIFT[h++&3],a[h>>2]|=(128|e>>12&63)<<SHIFT[h++&3],a[h>>2]|=(128|e>>6&63)<<SHIFT[h++&3],a[h>>2]|=(128|e&63)<<SHIFT[h++&3]);this.lastByteIndex=h,this.bytes+=h-this.start,h>=64?(this.block=a[16],this.start=h-64,this.hash(),this.hashed=!0):this.start=h}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,r=this.lastByteIndex;t[16]=this.block,t[r>>2]|=EXTRA[r&3],this.block=t[16],r>=56&&(this.hashed||this.hash(),t[0]=this.block,t[16]=t[1]=t[2]=t[3]=t[4]=t[5]=t[6]=t[7]=t[8]=t[9]=t[10]=t[11]=t[12]=t[13]=t[14]=t[15]=0),t[14]=this.hBytes<<3|this.bytes>>>29,t[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var t=this.h0,r=this.h1,i=this.h2,e=this.h3,o=this.h4,h=this.h5,s=this.h6,a=this.h7,x=this.blocks,n,c,F,H,f,A,S,d,E,C,p;for(n=16;n<64;++n)f=x[n-15],c=(f>>>7|f<<25)^(f>>>18|f<<14)^f>>>3,f=x[n-2],F=(f>>>17|f<<15)^(f>>>19|f<<13)^f>>>10,x[n]=x[n-16]+c+x[n-7]+F<<0;for(p=r&i,n=0;n<64;n+=4)this.first?(this.is224?(d=300032,f=x[0]-1413257819,a=f-150054599<<0,e=f+24177077<<0):(d=704751109,f=x[0]-210244248,a=f-1521486534<<0,e=f+143694565<<0),this.first=!1):(c=(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10),F=(o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7),d=t&r,H=d^t&i^p,S=o&h^~o&s,f=a+F+S+K[n]+x[n],A=c+H,a=e+f<<0,e=f+A<<0),c=(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10),F=(a>>>6|a<<26)^(a>>>11|a<<21)^(a>>>25|a<<7),E=e&t,H=E^e&r^d,S=a&o^~a&h,f=s+F+S+K[n+1]+x[n+1],A=c+H,s=i+f<<0,i=f+A<<0,c=(i>>>2|i<<30)^(i>>>13|i<<19)^(i>>>22|i<<10),F=(s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7),C=i&e,H=C^i&t^E,S=s&a^~s&o,f=h+F+S+K[n+2]+x[n+2],A=c+H,h=r+f<<0,r=f+A<<0,c=(r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10),F=(h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7),p=r&i,H=p^r&e^C,S=h&s^~h&a,f=o+F+S+K[n+3]+x[n+3],A=c+H,o=t+f<<0,t=f+A<<0;this.h0=this.h0+t<<0,this.h1=this.h1+r<<0,this.h2=this.h2+i<<0,this.h3=this.h3+e<<0,this.h4=this.h4+o<<0,this.h5=this.h5+h<<0,this.h6=this.h6+s<<0,this.h7=this.h7+a<<0},Sha256.prototype.hex=function(){this.finalize();var t=this.h0,r=this.h1,i=this.h2,e=this.h3,o=this.h4,h=this.h5,s=this.h6,a=this.h7,x=HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[t&15]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[r&15]+HEX_CHARS[i>>28&15]+HEX_CHARS[i>>24&15]+HEX_CHARS[i>>20&15]+HEX_CHARS[i>>16&15]+HEX_CHARS[i>>12&15]+HEX_CHARS[i>>8&15]+HEX_CHARS[i>>4&15]+HEX_CHARS[i&15]+HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[e&15]+HEX_CHARS[o>>28&15]+HEX_CHARS[o>>24&15]+HEX_CHARS[o>>20&15]+HEX_CHARS[o>>16&15]+HEX_CHARS[o>>12&15]+HEX_CHARS[o>>8&15]+HEX_CHARS[o>>4&15]+HEX_CHARS[o&15]+HEX_CHARS[h>>28&15]+HEX_CHARS[h>>24&15]+HEX_CHARS[h>>20&15]+HEX_CHARS[h>>16&15]+HEX_CHARS[h>>12&15]+HEX_CHARS[h>>8&15]+HEX_CHARS[h>>4&15]+HEX_CHARS[h&15]+HEX_CHARS[s>>28&15]+HEX_CHARS[s>>24&15]+HEX_CHARS[s>>20&15]+HEX_CHARS[s>>16&15]+HEX_CHARS[s>>12&15]+HEX_CHARS[s>>8&15]+HEX_CHARS[s>>4&15]+HEX_CHARS[s&15];return this.is224||(x+=HEX_CHARS[a>>28&15]+HEX_CHARS[a>>24&15]+HEX_CHARS[a>>20&15]+HEX_CHARS[a>>16&15]+HEX_CHARS[a>>12&15]+HEX_CHARS[a>>8&15]+HEX_CHARS[a>>4&15]+HEX_CHARS[a&15]),x},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var t=this.h0,r=this.h1,i=this.h2,e=this.h3,o=this.h4,h=this.h5,s=this.h6,a=this.h7,x=[t>>24&255,t>>16&255,t>>8&255,t&255,r>>24&255,r>>16&255,r>>8&255,r&255,i>>24&255,i>>16&255,i>>8&255,i&255,e>>24&255,e>>16&255,e>>8&255,e&255,o>>24&255,o>>16&255,o>>8&255,o&255,h>>24&255,h>>16&255,h>>8&255,h&255,s>>24&255,s>>16&255,s>>8&255,s&255];return this.is224||x.push(a>>24&255,a>>16&255,a>>8&255,a&255),x},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var t=new ArrayBuffer(this.is224?28:32),r=new DataView(t);return r.setUint32(0,this.h0),r.setUint32(4,this.h1),r.setUint32(8,this.h2),r.setUint32(12,this.h3),r.setUint32(16,this.h4),r.setUint32(20,this.h5),r.setUint32(24,this.h6),this.is224||r.setUint32(28,this.h7),t};function HmacSha256(t,r,i){var e,o=typeof t;if(o==="string"){var h=[],s=t.length,a=0,x;for(e=0;e<s;++e)x=t.charCodeAt(e),x<128?h[a++]=x:x<2048?(h[a++]=192|x>>6,h[a++]=128|x&63):x<55296||x>=57344?(h[a++]=224|x>>12,h[a++]=128|x>>6&63,h[a++]=128|x&63):(x=65536+((x&1023)<<10|t.charCodeAt(++e)&1023),h[a++]=240|x>>18,h[a++]=128|x>>12&63,h[a++]=128|x>>6&63,h[a++]=128|x&63);t=h}else if(o==="object"){if(t===null)throw new Error(ERROR);if(ARRAY_BUFFER&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!Array.isArray(t)&&(!ARRAY_BUFFER||!ArrayBuffer.isView(t)))throw new Error(ERROR)}else throw new Error(ERROR);t.length>64&&(t=new Sha256(r,!0).update(t).array());var n=[],c=[];for(e=0;e<64;++e){var F=t[e]||0;n[e]=92^F,c[e]=54^F}Sha256.call(this,r,i),this.update(c),this.oKeyPad=n,this.inner=!0,this.sharedMemory=i}HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var t=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(t),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224,AMD&&define(function(){return exports}))})()});var W=(0,_chunk_ONAVPXOT_js__WEBPACK_IMPORTED_MODULE_0__.a)(_=>{"use strict";_.byteLength=M;_.toByteArray=T;_.fromByteArray=k;var l=[],u=[],B=typeof Uint8Array<"u"?Uint8Array:Array,b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(R=0,X=b.length;R<X;++R)l[R]=b[R],u[b.charCodeAt(R)]=R;var R,X;u["-".charCodeAt(0)]=62;u["_".charCodeAt(0)]=63;function w(t){var r=t.length;if(r%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var i=t.indexOf("=");i===-1&&(i=r);var e=i===r?0:4-i%4;return[i,e]}function M(t){var r=w(t),i=r[0],e=r[1];return(i+e)*3/4-e}function U(t,r,i){return(r+i)*3/4-i}function T(t){var r,i=w(t),e=i[0],o=i[1],h=new B(U(t,e,o)),s=0,a=o>0?e-4:e,x;for(x=0;x<a;x+=4)r=u[t.charCodeAt(x)]<<18|u[t.charCodeAt(x+1)]<<12|u[t.charCodeAt(x+2)]<<6|u[t.charCodeAt(x+3)],h[s++]=r>>16&255,h[s++]=r>>8&255,h[s++]=r&255;return o===2&&(r=u[t.charCodeAt(x)]<<2|u[t.charCodeAt(x+1)]>>4,h[s++]=r&255),o===1&&(r=u[t.charCodeAt(x)]<<10|u[t.charCodeAt(x+1)]<<4|u[t.charCodeAt(x+2)]>>2,h[s++]=r>>8&255,h[s++]=r&255),h}function N(t){return l[t>>18&63]+l[t>>12&63]+l[t>>6&63]+l[t&63]}function I(t,r,i){for(var e,o=[],h=r;h<i;h+=3)e=(t[h]<<16&16711680)+(t[h+1]<<8&65280)+(t[h+2]&255),o.push(N(e));return o.join("")}function k(t){for(var r,i=t.length,e=i%3,o=[],h=16383,s=0,a=i-e;s<a;s+=h)o.push(I(t,s,s+h>a?a:s+h));return e===1?(r=t[i-1],o.push(l[r>>2]+l[r<<4&63]+"==")):e===2&&(r=(t[i-2]<<8)+t[i-1],o.push(l[r>>10]+l[r>>4&63]+l[r<<2&63]+"=")),o.join("")}});var J=(0,_chunk_ONAVPXOT_js__WEBPACK_IMPORTED_MODULE_0__.a)(y=>{y.read=function(t,r,i,e,o){var h,s,a=o*8-e-1,x=(1<<a)-1,n=x>>1,c=-7,F=i?o-1:0,H=i?-1:1,f=t[r+F];for(F+=H,h=f&(1<<-c)-1,f>>=-c,c+=a;c>0;h=h*256+t[r+F],F+=H,c-=8);for(s=h&(1<<-c)-1,h>>=-c,c+=e;c>0;s=s*256+t[r+F],F+=H,c-=8);if(h===0)h=1-n;else{if(h===x)return s?NaN:(f?-1:1)*(1/0);s=s+Math.pow(2,e),h=h-n}return(f?-1:1)*s*Math.pow(2,h-e)};y.write=function(t,r,i,e,o,h){var s,a,x,n=h*8-o-1,c=(1<<n)-1,F=c>>1,H=o===23?Math.pow(2,-24)-Math.pow(2,-77):0,f=e?0:h-1,A=e?1:-1,S=r<0||r===0&&1/r<0?1:0;for(r=Math.abs(r),isNaN(r)||r===1/0?(a=isNaN(r)?1:0,s=c):(s=Math.floor(Math.log(r)/Math.LN2),r*(x=Math.pow(2,-s))<1&&(s--,x*=2),s+F>=1?r+=H/x:r+=H*Math.pow(2,1-F),r*x>=2&&(s++,x/=2),s+F>=c?(a=0,s=c):s+F>=1?(a=(r*x-1)*Math.pow(2,o),s=s+F):(a=r*Math.pow(2,F-1)*Math.pow(2,o),s=0));o>=8;t[i+f]=a&255,f+=A,a/=256,o-=8);for(s=s<<o|a,n+=o;n>0;t[i+f]=s&255,f+=A,s/=256,n-=8);t[i+f-A]|=S*128}});
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
/**
 * [js-sha256]{@link https://github.com/emn178/js-sha256}
 *
 * @version 0.9.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */
//# sourceMappingURL=chunk-MGC7CRB4.js.map


/***/ }),

/***/ 7640:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": () => (/* binding */ n),
/* harmony export */   "b": () => (/* binding */ o),
/* harmony export */   "c": () => (/* binding */ p),
/* harmony export */   "d": () => (/* binding */ q)
/* harmony export */ });
var g=Object.create;var e=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var i=Object.getOwnPropertyNames;var j=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var l=(b,a,c)=>a in b?e(b,a,{enumerable:!0,configurable:!0,writable:!0,value:c}):b[a]=c;var n=(b,a)=>()=>(a||b((a={exports:{}}).exports,a),a.exports),o=(b,a)=>{for(var c in a)e(b,c,{get:a[c],enumerable:!0})},m=(b,a,c,f)=>{if(a&&typeof a=="object"||typeof a=="function")for(let d of i(a))!k.call(b,d)&&d!==c&&e(b,d,{get:()=>a[d],enumerable:!(f=h(a,d))||f.enumerable});return b};var p=(b,a,c)=>(c=b!=null?g(j(b)):{},m(a||!b||!b.__esModule?e(c,"default",{value:b,enumerable:!0}):c,b));var q=(b,a,c)=>(l(b,typeof a!="symbol"?a+"":a,c),c);
//# sourceMappingURL=chunk-ONAVPXOT.js.map


/***/ }),

/***/ 3704:
/***/ ((__unused_webpack_module, exports) => {

var __webpack_unused_export__;
/*
 * base64-arraybuffer
 * https://github.com/niklasvh/base64-arraybuffer
 *
 * Copyright (c) 2012 Niklas von Hertzen
 * Licensed under the MIT license.
 */
(function(){
  "use strict";

  var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

  // Use a lookup table to find the index.
  var lookup = new Uint8Array(256);
  for (var i = 0; i < chars.length; i++) {
    lookup[chars.charCodeAt(i)] = i;
  }

  __webpack_unused_export__ = function(arraybuffer) {
    var bytes = new Uint8Array(arraybuffer),
    i, len = bytes.length, base64 = "";

    for (i = 0; i < len; i+=3) {
      base64 += chars[bytes[i] >> 2];
      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];
      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];
      base64 += chars[bytes[i + 2] & 63];
    }

    if ((len % 3) === 2) {
      base64 = base64.substring(0, base64.length - 1) + "=";
    } else if (len % 3 === 1) {
      base64 = base64.substring(0, base64.length - 2) + "==";
    }

    return base64;
  };

  exports.J =  function(base64) {
    var bufferLength = base64.length * 0.75,
    len = base64.length, i, p = 0,
    encoded1, encoded2, encoded3, encoded4;

    if (base64[base64.length - 1] === "=") {
      bufferLength--;
      if (base64[base64.length - 2] === "=") {
        bufferLength--;
      }
    }

    var arraybuffer = new ArrayBuffer(bufferLength),
    bytes = new Uint8Array(arraybuffer);

    for (i = 0; i < len; i+=4) {
      encoded1 = lookup[base64.charCodeAt(i)];
      encoded2 = lookup[base64.charCodeAt(i+1)];
      encoded3 = lookup[base64.charCodeAt(i+2)];
      encoded4 = lookup[base64.charCodeAt(i+3)];

      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);
      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);
      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);
    }

    return arraybuffer;
  };
})();


/***/ }),

/***/ 9742:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ 4431:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;;(function (globalObject) {
  'use strict';

/*
 *      bignumber.js v9.1.0
 *      A JavaScript library for arbitrary-precision arithmetic.
 *      https://github.com/MikeMcl/bignumber.js
 *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>
 *      MIT Licensed.
 *
 *      BigNumber.prototype methods     |  BigNumber methods
 *                                      |
 *      absoluteValue            abs    |  clone
 *      comparedTo                      |  config               set
 *      decimalPlaces            dp     |      DECIMAL_PLACES
 *      dividedBy                div    |      ROUNDING_MODE
 *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT
 *      exponentiatedBy          pow    |      RANGE
 *      integerValue                    |      CRYPTO
 *      isEqualTo                eq     |      MODULO_MODE
 *      isFinite                        |      POW_PRECISION
 *      isGreaterThan            gt     |      FORMAT
 *      isGreaterThanOrEqualTo   gte    |      ALPHABET
 *      isInteger                       |  isBigNumber
 *      isLessThan               lt     |  maximum              max
 *      isLessThanOrEqualTo      lte    |  minimum              min
 *      isNaN                           |  random
 *      isNegative                      |  sum
 *      isPositive                      |
 *      isZero                          |
 *      minus                           |
 *      modulo                   mod    |
 *      multipliedBy             times  |
 *      negated                         |
 *      plus                            |
 *      precision                sd     |
 *      shiftedBy                       |
 *      squareRoot               sqrt   |
 *      toExponential                   |
 *      toFixed                         |
 *      toFormat                        |
 *      toFraction                      |
 *      toJSON                          |
 *      toNumber                        |
 *      toPrecision                     |
 *      toString                        |
 *      valueOf                         |
 *
 */


  var BigNumber,
    isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
    mathceil = Math.ceil,
    mathfloor = Math.floor,

    bignumberError = '[BigNumber Error] ',
    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',

    BASE = 1e14,
    LOG_BASE = 14,
    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1
    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1
    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
    SQRT_BASE = 1e7,

    // EDITABLE
    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and
    // the arguments to toExponential, toFixed, toFormat, and toPrecision.
    MAX = 1E9;                                   // 0 to MAX_INT32


  /*
   * Create and return a BigNumber constructor.
   */
  function clone(configObject) {
    var div, convertBase, parseNumeric,
      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },
      ONE = new BigNumber(1),


      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------


      // The default values below must be integers within the inclusive ranges stated.
      // The values can also be changed at run-time using BigNumber.set.

      // The maximum number of decimal places for operations involving division.
      DECIMAL_PLACES = 20,                     // 0 to MAX

      // The rounding mode used when rounding to the above decimal places, and when using
      // toExponential, toFixed, toFormat and toPrecision, and round (default value).
      // UP         0 Away from zero.
      // DOWN       1 Towards zero.
      // CEIL       2 Towards +Infinity.
      // FLOOR      3 Towards -Infinity.
      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.
      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
      ROUNDING_MODE = 4,                       // 0 to 8

      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]

      // The exponent value at and beneath which toString returns exponential notation.
      // Number type: -7
      TO_EXP_NEG = -7,                         // 0 to -MAX

      // The exponent value at and above which toString returns exponential notation.
      // Number type: 21
      TO_EXP_POS = 21,                         // 0 to MAX

      // RANGE : [MIN_EXP, MAX_EXP]

      // The minimum exponent value, beneath which underflow to zero occurs.
      // Number type: -324  (5e-324)
      MIN_EXP = -1e7,                          // -1 to -MAX

      // The maximum exponent value, above which overflow to Infinity occurs.
      // Number type:  308  (1.7976931348623157e+308)
      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.
      MAX_EXP = 1e7,                           // 1 to MAX

      // Whether to use cryptographically-secure random number generation, if available.
      CRYPTO = false,                          // true or false

      // The modulo mode used when calculating the modulus: a mod n.
      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.
      // The remainder (r) is calculated as: r = a - n * q.
      //
      // UP        0 The remainder is positive if the dividend is negative, else is negative.
      // DOWN      1 The remainder has the same sign as the dividend.
      //             This modulo mode is commonly known as 'truncated division' and is
      //             equivalent to (a % n) in JavaScript.
      // FLOOR     3 The remainder has the same sign as the divisor (Python %).
      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.
      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).
      //             The remainder is always positive.
      //
      // The truncated division, floored division, Euclidian division and IEEE 754 remainder
      // modes are commonly used for the modulus operation.
      // Although the other rounding modes can also be used, they may not give useful results.
      MODULO_MODE = 1,                         // 0 to 9

      // The maximum number of significant digits of the result of the exponentiatedBy operation.
      // If POW_PRECISION is 0, there will be unlimited significant digits.
      POW_PRECISION = 0,                       // 0 to MAX

      // The format specification used by the BigNumber.prototype.toFormat method.
      FORMAT = {
        prefix: '',
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ',',
        decimalSeparator: '.',
        fractionGroupSize: 0,
        fractionGroupSeparator: '\xA0',        // non-breaking space
        suffix: ''
      },

      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',
      // '-', '.', whitespace, or repeated character.
      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'
      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',
      alphabetHasNormalDecimalDigits = true;


    //------------------------------------------------------------------------------------------


    // CONSTRUCTOR


    /*
     * The BigNumber constructor and exported function.
     * Create and return a new instance of a BigNumber object.
     *
     * v {number|string|BigNumber} A numeric value.
     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.
     */
    function BigNumber(v, b) {
      var alphabet, c, caseChanged, e, i, isNum, len, str,
        x = this;

      // Enable constructor call without `new`.
      if (!(x instanceof BigNumber)) return new BigNumber(v, b);

      if (b == null) {

        if (v && v._isBigNumber === true) {
          x.s = v.s;

          if (!v.c || v.e > MAX_EXP) {
            x.c = x.e = null;
          } else if (v.e < MIN_EXP) {
            x.c = [x.e = 0];
          } else {
            x.e = v.e;
            x.c = v.c.slice();
          }

          return;
        }

        if ((isNum = typeof v == 'number') && v * 0 == 0) {

          // Use `1 / n` to handle minus zero also.
          x.s = 1 / v < 0 ? (v = -v, -1) : 1;

          // Fast path for integers, where n < 2147483648 (2**31).
          if (v === ~~v) {
            for (e = 0, i = v; i >= 10; i /= 10, e++);

            if (e > MAX_EXP) {
              x.c = x.e = null;
            } else {
              x.e = e;
              x.c = [v];
            }

            return;
          }

          str = String(v);
        } else {

          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);

          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;
        }

        // Decimal point?
        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');

        // Exponential form?
        if ((i = str.search(/e/i)) > 0) {

          // Determine exponent.
          if (e < 0) e = i;
          e += +str.slice(i + 1);
          str = str.substring(0, i);
        } else if (e < 0) {

          // Integer.
          e = str.length;
        }

      } else {

        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'
        intCheck(b, 2, ALPHABET.length, 'Base');

        // Allow exponential notation to be used with base 10 argument, while
        // also rounding to DECIMAL_PLACES as with other bases.
        if (b == 10 && alphabetHasNormalDecimalDigits) {
          x = new BigNumber(v);
          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);
        }

        str = String(v);

        if (isNum = typeof v == 'number') {

          // Avoid potential interpretation of Infinity and NaN as base 44+ values.
          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);

          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;

          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'
          if (BigNumber.DEBUG && str.replace(/^0\.0*|\./, '').length > 15) {
            throw Error
             (tooManyDigits + v);
          }
        } else {
          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;
        }

        alphabet = ALPHABET.slice(0, b);
        e = i = 0;

        // Check that str is a valid base b number.
        // Don't use RegExp, so alphabet can contain special characters.
        for (len = str.length; i < len; i++) {
          if (alphabet.indexOf(c = str.charAt(i)) < 0) {
            if (c == '.') {

              // If '.' is not the first character and it has not be found before.
              if (i > e) {
                e = len;
                continue;
              }
            } else if (!caseChanged) {

              // Allow e.g. hexadecimal 'FF' as well as 'ff'.
              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||
                  str == str.toLowerCase() && (str = str.toUpperCase())) {
                caseChanged = true;
                i = -1;
                e = 0;
                continue;
              }
            }

            return parseNumeric(x, String(v), isNum, b);
          }
        }

        // Prevent later check for length on converted number.
        isNum = false;
        str = convertBase(str, b, 10, x.s);

        // Decimal point?
        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');
        else e = str.length;
      }

      // Determine leading zeros.
      for (i = 0; str.charCodeAt(i) === 48; i++);

      // Determine trailing zeros.
      for (len = str.length; str.charCodeAt(--len) === 48;);

      if (str = str.slice(i, ++len)) {
        len -= i;

        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'
        if (isNum && BigNumber.DEBUG &&
          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {
            throw Error
             (tooManyDigits + (x.s * v));
        }

         // Overflow?
        if ((e = e - i - 1) > MAX_EXP) {

          // Infinity.
          x.c = x.e = null;

        // Underflow?
        } else if (e < MIN_EXP) {

          // Zero.
          x.c = [x.e = 0];
        } else {
          x.e = e;
          x.c = [];

          // Transform base

          // e is the base 10 exponent.
          // i is where to slice str to get the first element of the coefficient array.
          i = (e + 1) % LOG_BASE;
          if (e < 0) i += LOG_BASE;  // i < 1

          if (i < len) {
            if (i) x.c.push(+str.slice(0, i));

            for (len -= LOG_BASE; i < len;) {
              x.c.push(+str.slice(i, i += LOG_BASE));
            }

            i = LOG_BASE - (str = str.slice(i)).length;
          } else {
            i -= len;
          }

          for (; i--; str += '0');
          x.c.push(+str);
        }
      } else {

        // Zero.
        x.c = [x.e = 0];
      }
    }


    // CONSTRUCTOR PROPERTIES


    BigNumber.clone = clone;

    BigNumber.ROUND_UP = 0;
    BigNumber.ROUND_DOWN = 1;
    BigNumber.ROUND_CEIL = 2;
    BigNumber.ROUND_FLOOR = 3;
    BigNumber.ROUND_HALF_UP = 4;
    BigNumber.ROUND_HALF_DOWN = 5;
    BigNumber.ROUND_HALF_EVEN = 6;
    BigNumber.ROUND_HALF_CEIL = 7;
    BigNumber.ROUND_HALF_FLOOR = 8;
    BigNumber.EUCLID = 9;


    /*
     * Configure infrequently-changing library-wide settings.
     *
     * Accept an object with the following optional properties (if the value of a property is
     * a number, it must be an integer within the inclusive range stated):
     *
     *   DECIMAL_PLACES   {number}           0 to MAX
     *   ROUNDING_MODE    {number}           0 to 8
     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]
     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]
     *   CRYPTO           {boolean}          true or false
     *   MODULO_MODE      {number}           0 to 9
     *   POW_PRECISION       {number}           0 to MAX
     *   ALPHABET         {string}           A string of two or more unique characters which does
     *                                       not contain '.'.
     *   FORMAT           {object}           An object with some of the following properties:
     *     prefix                 {string}
     *     groupSize              {number}
     *     secondaryGroupSize     {number}
     *     groupSeparator         {string}
     *     decimalSeparator       {string}
     *     fractionGroupSize      {number}
     *     fractionGroupSeparator {string}
     *     suffix                 {string}
     *
     * (The values assigned to the above FORMAT object properties are not checked for validity.)
     *
     * E.g.
     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })
     *
     * Ignore properties/parameters set to null or undefined, except for ALPHABET.
     *
     * Return an object with the properties current values.
     */
    BigNumber.config = BigNumber.set = function (obj) {
      var p, v;

      if (obj != null) {

        if (typeof obj == 'object') {

          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.
          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {
            v = obj[p];
            intCheck(v, 0, MAX, p);
            DECIMAL_PLACES = v;
          }

          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.
          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {
            v = obj[p];
            intCheck(v, 0, 8, p);
            ROUNDING_MODE = v;
          }

          // EXPONENTIAL_AT {number|number[]}
          // Integer, -MAX to MAX inclusive or
          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].
          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {
            v = obj[p];
            if (v && v.pop) {
              intCheck(v[0], -MAX, 0, p);
              intCheck(v[1], 0, MAX, p);
              TO_EXP_NEG = v[0];
              TO_EXP_POS = v[1];
            } else {
              intCheck(v, -MAX, MAX, p);
              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);
            }
          }

          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or
          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].
          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'
          if (obj.hasOwnProperty(p = 'RANGE')) {
            v = obj[p];
            if (v && v.pop) {
              intCheck(v[0], -MAX, -1, p);
              intCheck(v[1], 1, MAX, p);
              MIN_EXP = v[0];
              MAX_EXP = v[1];
            } else {
              intCheck(v, -MAX, MAX, p);
              if (v) {
                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);
              } else {
                throw Error
                 (bignumberError + p + ' cannot be zero: ' + v);
              }
            }
          }

          // CRYPTO {boolean} true or false.
          // '[BigNumber Error] CRYPTO not true or false: {v}'
          // '[BigNumber Error] crypto unavailable'
          if (obj.hasOwnProperty(p = 'CRYPTO')) {
            v = obj[p];
            if (v === !!v) {
              if (v) {
                if (typeof crypto != 'undefined' && crypto &&
                 (crypto.getRandomValues || crypto.randomBytes)) {
                  CRYPTO = v;
                } else {
                  CRYPTO = !v;
                  throw Error
                   (bignumberError + 'crypto unavailable');
                }
              } else {
                CRYPTO = v;
              }
            } else {
              throw Error
               (bignumberError + p + ' not true or false: ' + v);
            }
          }

          // MODULO_MODE {number} Integer, 0 to 9 inclusive.
          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {
            v = obj[p];
            intCheck(v, 0, 9, p);
            MODULO_MODE = v;
          }

          // POW_PRECISION {number} Integer, 0 to MAX inclusive.
          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {
            v = obj[p];
            intCheck(v, 0, MAX, p);
            POW_PRECISION = v;
          }

          // FORMAT {object}
          // '[BigNumber Error] FORMAT not an object: {v}'
          if (obj.hasOwnProperty(p = 'FORMAT')) {
            v = obj[p];
            if (typeof v == 'object') FORMAT = v;
            else throw Error
             (bignumberError + p + ' not an object: ' + v);
          }

          // ALPHABET {string}
          // '[BigNumber Error] ALPHABET invalid: {v}'
          if (obj.hasOwnProperty(p = 'ALPHABET')) {
            v = obj[p];

            // Disallow if less than two characters,
            // or if it contains '+', '-', '.', whitespace, or a repeated character.
            if (typeof v == 'string' && !/^.?$|[+\-.\s]|(.).*\1/.test(v)) {
              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';
              ALPHABET = v;
            } else {
              throw Error
               (bignumberError + p + ' invalid: ' + v);
            }
          }

        } else {

          // '[BigNumber Error] Object expected: {v}'
          throw Error
           (bignumberError + 'Object expected: ' + obj);
        }
      }

      return {
        DECIMAL_PLACES: DECIMAL_PLACES,
        ROUNDING_MODE: ROUNDING_MODE,
        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],
        RANGE: [MIN_EXP, MAX_EXP],
        CRYPTO: CRYPTO,
        MODULO_MODE: MODULO_MODE,
        POW_PRECISION: POW_PRECISION,
        FORMAT: FORMAT,
        ALPHABET: ALPHABET
      };
    };


    /*
     * Return true if v is a BigNumber instance, otherwise return false.
     *
     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.
     *
     * v {any}
     *
     * '[BigNumber Error] Invalid BigNumber: {v}'
     */
    BigNumber.isBigNumber = function (v) {
      if (!v || v._isBigNumber !== true) return false;
      if (!BigNumber.DEBUG) return true;

      var i, n,
        c = v.c,
        e = v.e,
        s = v.s;

      out: if ({}.toString.call(c) == '[object Array]') {

        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {

          // If the first element is zero, the BigNumber value must be zero.
          if (c[0] === 0) {
            if (e === 0 && c.length === 1) return true;
            break out;
          }

          // Calculate number of digits that c[0] should have, based on the exponent.
          i = (e + 1) % LOG_BASE;
          if (i < 1) i += LOG_BASE;

          // Calculate number of digits of c[0].
          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {
          if (String(c[0]).length == i) {

            for (i = 0; i < c.length; i++) {
              n = c[i];
              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;
            }

            // Last element cannot be zero, unless it is the only element.
            if (n !== 0) return true;
          }
        }

      // Infinity/NaN
      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {
        return true;
      }

      throw Error
        (bignumberError + 'Invalid BigNumber: ' + v);
    };


    /*
     * Return a new BigNumber whose value is the maximum of the arguments.
     *
     * arguments {number|string|BigNumber}
     */
    BigNumber.maximum = BigNumber.max = function () {
      return maxOrMin(arguments, P.lt);
    };


    /*
     * Return a new BigNumber whose value is the minimum of the arguments.
     *
     * arguments {number|string|BigNumber}
     */
    BigNumber.minimum = BigNumber.min = function () {
      return maxOrMin(arguments, P.gt);
    };


    /*
     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,
     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing
     * zeros are produced).
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'
     * '[BigNumber Error] crypto unavailable'
     */
    BigNumber.random = (function () {
      var pow2_53 = 0x20000000000000;

      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.
      // Check if Math.random() produces more than 32 bits of randomness.
      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.
      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.
      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff
       ? function () { return mathfloor(Math.random() * pow2_53); }
       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +
         (Math.random() * 0x800000 | 0); };

      return function (dp) {
        var a, b, e, k, v,
          i = 0,
          c = [],
          rand = new BigNumber(ONE);

        if (dp == null) dp = DECIMAL_PLACES;
        else intCheck(dp, 0, MAX);

        k = mathceil(dp / LOG_BASE);

        if (CRYPTO) {

          // Browsers supporting crypto.getRandomValues.
          if (crypto.getRandomValues) {

            a = crypto.getRandomValues(new Uint32Array(k *= 2));

            for (; i < k;) {

              // 53 bits:
              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)
              // 11111 11111111 11111111 11111111 11100000 00000000 00000000
              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)
              //                                     11111 11111111 11111111
              // 0x20000 is 2^21.
              v = a[i] * 0x20000 + (a[i + 1] >>> 11);

              // Rejection sampling:
              // 0 <= v < 9007199254740992
              // Probability that v >= 9e15, is
              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251
              if (v >= 9e15) {
                b = crypto.getRandomValues(new Uint32Array(2));
                a[i] = b[0];
                a[i + 1] = b[1];
              } else {

                // 0 <= v <= 8999999999999999
                // 0 <= (v % 1e14) <= 99999999999999
                c.push(v % 1e14);
                i += 2;
              }
            }
            i = k / 2;

          // Node.js supporting crypto.randomBytes.
          } else if (crypto.randomBytes) {

            // buffer
            a = crypto.randomBytes(k *= 7);

            for (; i < k;) {

              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40
              // 0x100000000 is 2^32, 0x1000000 is 2^24
              // 11111 11111111 11111111 11111111 11111111 11111111 11111111
              // 0 <= v < 9007199254740992
              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +
                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +
                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];

              if (v >= 9e15) {
                crypto.randomBytes(7).copy(a, i);
              } else {

                // 0 <= (v % 1e14) <= 99999999999999
                c.push(v % 1e14);
                i += 7;
              }
            }
            i = k / 7;
          } else {
            CRYPTO = false;
            throw Error
             (bignumberError + 'crypto unavailable');
          }
        }

        // Use Math.random.
        if (!CRYPTO) {

          for (; i < k;) {
            v = random53bitInt();
            if (v < 9e15) c[i++] = v % 1e14;
          }
        }

        k = c[--i];
        dp %= LOG_BASE;

        // Convert trailing digits to zeros according to dp.
        if (k && dp) {
          v = POWS_TEN[LOG_BASE - dp];
          c[i] = mathfloor(k / v) * v;
        }

        // Remove trailing elements which are zero.
        for (; c[i] === 0; c.pop(), i--);

        // Zero?
        if (i < 0) {
          c = [e = 0];
        } else {

          // Remove leading elements which are zero and adjust exponent accordingly.
          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);

          // Count the digits of the first element of c to determine leading zeros, and...
          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);

          // adjust the exponent accordingly.
          if (i < LOG_BASE) e -= LOG_BASE - i;
        }

        rand.e = e;
        rand.c = c;
        return rand;
      };
    })();


    /*
     * Return a BigNumber whose value is the sum of the arguments.
     *
     * arguments {number|string|BigNumber}
     */
    BigNumber.sum = function () {
      var i = 1,
        args = arguments,
        sum = new BigNumber(args[0]);
      for (; i < args.length;) sum = sum.plus(args[i++]);
      return sum;
    };


    // PRIVATE FUNCTIONS


    // Called by BigNumber and BigNumber.prototype.toString.
    convertBase = (function () {
      var decimal = '0123456789';

      /*
       * Convert string of baseIn to an array of numbers of baseOut.
       * Eg. toBaseOut('255', 10, 16) returns [15, 15].
       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].
       */
      function toBaseOut(str, baseIn, baseOut, alphabet) {
        var j,
          arr = [0],
          arrL,
          i = 0,
          len = str.length;

        for (; i < len;) {
          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);

          arr[0] += alphabet.indexOf(str.charAt(i++));

          for (j = 0; j < arr.length; j++) {

            if (arr[j] > baseOut - 1) {
              if (arr[j + 1] == null) arr[j + 1] = 0;
              arr[j + 1] += arr[j] / baseOut | 0;
              arr[j] %= baseOut;
            }
          }
        }

        return arr.reverse();
      }

      // Convert a numeric string of baseIn to a numeric string of baseOut.
      // If the caller is toString, we are converting from base 10 to baseOut.
      // If the caller is BigNumber, we are converting from baseIn to base 10.
      return function (str, baseIn, baseOut, sign, callerIsToString) {
        var alphabet, d, e, k, r, x, xc, y,
          i = str.indexOf('.'),
          dp = DECIMAL_PLACES,
          rm = ROUNDING_MODE;

        // Non-integer.
        if (i >= 0) {
          k = POW_PRECISION;

          // Unlimited precision.
          POW_PRECISION = 0;
          str = str.replace('.', '');
          y = new BigNumber(baseIn);
          x = y.pow(str.length - i);
          POW_PRECISION = k;

          // Convert str as if an integer, then restore the fraction part by dividing the
          // result by its base raised to a power.

          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),
           10, baseOut, decimal);
          y.e = y.c.length;
        }

        // Convert the number as integer.

        xc = toBaseOut(str, baseIn, baseOut, callerIsToString
         ? (alphabet = ALPHABET, decimal)
         : (alphabet = decimal, ALPHABET));

        // xc now represents str as an integer and converted to baseOut. e is the exponent.
        e = k = xc.length;

        // Remove trailing zeros.
        for (; xc[--k] == 0; xc.pop());

        // Zero?
        if (!xc[0]) return alphabet.charAt(0);

        // Does str represent an integer? If so, no need for the division.
        if (i < 0) {
          --e;
        } else {
          x.c = xc;
          x.e = e;

          // The sign is needed for correct rounding.
          x.s = sign;
          x = div(x, y, dp, rm, baseOut);
          xc = x.c;
          r = x.r;
          e = x.e;
        }

        // xc now represents str converted to baseOut.

        // THe index of the rounding digit.
        d = e + dp + 1;

        // The rounding digit: the digit to the right of the digit that may be rounded up.
        i = xc[d];

        // Look at the rounding digits and mode to determine whether to round up.

        k = baseOut / 2;
        r = r || d < 0 || xc[d + 1] != null;

        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))
              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||
               rm == (x.s < 0 ? 8 : 7));

        // If the index of the rounding digit is not greater than zero, or xc represents
        // zero, then the result of the base conversion is zero or, if rounding up, a value
        // such as 0.00001.
        if (d < 1 || !xc[0]) {

          // 1^-dp or 0
          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);
        } else {

          // Truncate xc to the required number of decimal places.
          xc.length = d;

          // Round up?
          if (r) {

            // Rounding up may mean the previous digit has to be rounded up and so on.
            for (--baseOut; ++xc[--d] > baseOut;) {
              xc[d] = 0;

              if (!d) {
                ++e;
                xc = [1].concat(xc);
              }
            }
          }

          // Determine trailing zeros.
          for (k = xc.length; !xc[--k];);

          // E.g. [4, 11, 15] becomes 4bf.
          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));

          // Add leading zeros, decimal point and trailing zeros as required.
          str = toFixedPoint(str, e, alphabet.charAt(0));
        }

        // The caller will add the sign.
        return str;
      };
    })();


    // Perform division in the specified base. Called by div and convertBase.
    div = (function () {

      // Assume non-zero x and k.
      function multiply(x, k, base) {
        var m, temp, xlo, xhi,
          carry = 0,
          i = x.length,
          klo = k % SQRT_BASE,
          khi = k / SQRT_BASE | 0;

        for (x = x.slice(); i--;) {
          xlo = x[i] % SQRT_BASE;
          xhi = x[i] / SQRT_BASE | 0;
          m = khi * xlo + xhi * klo;
          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;
          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;
          x[i] = temp % base;
        }

        if (carry) x = [carry].concat(x);

        return x;
      }

      function compare(a, b, aL, bL) {
        var i, cmp;

        if (aL != bL) {
          cmp = aL > bL ? 1 : -1;
        } else {

          for (i = cmp = 0; i < aL; i++) {

            if (a[i] != b[i]) {
              cmp = a[i] > b[i] ? 1 : -1;
              break;
            }
          }
        }

        return cmp;
      }

      function subtract(a, b, aL, base) {
        var i = 0;

        // Subtract b from a.
        for (; aL--;) {
          a[aL] -= i;
          i = a[aL] < b[aL] ? 1 : 0;
          a[aL] = i * base + a[aL] - b[aL];
        }

        // Remove leading zeros.
        for (; !a[0] && a.length > 1; a.splice(0, 1));
      }

      // x: dividend, y: divisor.
      return function (x, y, dp, rm, base) {
        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,
          yL, yz,
          s = x.s == y.s ? 1 : -1,
          xc = x.c,
          yc = y.c;

        // Either NaN, Infinity or 0?
        if (!xc || !xc[0] || !yc || !yc[0]) {

          return new BigNumber(

           // Return NaN if either NaN, or both Infinity or 0.
           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :

            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.
            xc && xc[0] == 0 || !yc ? s * 0 : s / 0
         );
        }

        q = new BigNumber(s);
        qc = q.c = [];
        e = x.e - y.e;
        s = dp + e + 1;

        if (!base) {
          base = BASE;
          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);
          s = s / LOG_BASE | 0;
        }

        // Result exponent may be one less then the current value of e.
        // The coefficients of the BigNumbers from convertBase may have trailing zeros.
        for (i = 0; yc[i] == (xc[i] || 0); i++);

        if (yc[i] > (xc[i] || 0)) e--;

        if (s < 0) {
          qc.push(1);
          more = true;
        } else {
          xL = xc.length;
          yL = yc.length;
          i = 0;
          s += 2;

          // Normalise xc and yc so highest order digit of yc is >= base / 2.

          n = mathfloor(base / (yc[0] + 1));

          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.
          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {
          if (n > 1) {
            yc = multiply(yc, n, base);
            xc = multiply(xc, n, base);
            yL = yc.length;
            xL = xc.length;
          }

          xi = yL;
          rem = xc.slice(0, yL);
          remL = rem.length;

          // Add zeros to make remainder as long as divisor.
          for (; remL < yL; rem[remL++] = 0);
          yz = yc.slice();
          yz = [0].concat(yz);
          yc0 = yc[0];
          if (yc[1] >= base / 2) yc0++;
          // Not necessary, but to prevent trial digit n > base, when using base 3.
          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;

          do {
            n = 0;

            // Compare divisor and remainder.
            cmp = compare(yc, rem, yL, remL);

            // If divisor < remainder.
            if (cmp < 0) {

              // Calculate trial digit, n.

              rem0 = rem[0];
              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);

              // n is how many times the divisor goes into the current remainder.
              n = mathfloor(rem0 / yc0);

              //  Algorithm:
              //  product = divisor multiplied by trial digit (n).
              //  Compare product and remainder.
              //  If product is greater than remainder:
              //    Subtract divisor from product, decrement trial digit.
              //  Subtract product from remainder.
              //  If product was less than remainder at the last compare:
              //    Compare new remainder and divisor.
              //    If remainder is greater than divisor:
              //      Subtract divisor from remainder, increment trial digit.

              if (n > 1) {

                // n may be > base only when base is 3.
                if (n >= base) n = base - 1;

                // product = divisor * trial digit.
                prod = multiply(yc, n, base);
                prodL = prod.length;
                remL = rem.length;

                // Compare product and remainder.
                // If product > remainder then trial digit n too high.
                // n is 1 too high about 5% of the time, and is not known to have
                // ever been more than 1 too high.
                while (compare(prod, rem, prodL, remL) == 1) {
                  n--;

                  // Subtract divisor from product.
                  subtract(prod, yL < prodL ? yz : yc, prodL, base);
                  prodL = prod.length;
                  cmp = 1;
                }
              } else {

                // n is 0 or 1, cmp is -1.
                // If n is 0, there is no need to compare yc and rem again below,
                // so change cmp to 1 to avoid it.
                // If n is 1, leave cmp as -1, so yc and rem are compared again.
                if (n == 0) {

                  // divisor < remainder, so n must be at least 1.
                  cmp = n = 1;
                }

                // product = divisor
                prod = yc.slice();
                prodL = prod.length;
              }

              if (prodL < remL) prod = [0].concat(prod);

              // Subtract product from remainder.
              subtract(rem, prod, remL, base);
              remL = rem.length;

               // If product was < remainder.
              if (cmp == -1) {

                // Compare divisor and new remainder.
                // If divisor < new remainder, subtract divisor from remainder.
                // Trial digit n too low.
                // n is 1 too low about 5% of the time, and very rarely 2 too low.
                while (compare(yc, rem, yL, remL) < 1) {
                  n++;

                  // Subtract divisor from remainder.
                  subtract(rem, yL < remL ? yz : yc, remL, base);
                  remL = rem.length;
                }
              }
            } else if (cmp === 0) {
              n++;
              rem = [0];
            } // else cmp === 1 and n will be 0

            // Add the next digit, n, to the result array.
            qc[i++] = n;

            // Update the remainder.
            if (rem[0]) {
              rem[remL++] = xc[xi] || 0;
            } else {
              rem = [xc[xi]];
              remL = 1;
            }
          } while ((xi++ < xL || rem[0] != null) && s--);

          more = rem[0] != null;

          // Leading zero?
          if (!qc[0]) qc.splice(0, 1);
        }

        if (base == BASE) {

          // To calculate q.e, first get the number of digits of qc[0].
          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);

          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);

        // Caller is convertBase.
        } else {
          q.e = e;
          q.r = +more;
        }

        return q;
      };
    })();


    /*
     * Return a string representing the value of BigNumber n in fixed-point or exponential
     * notation rounded to the specified decimal places or significant digits.
     *
     * n: a BigNumber.
     * i: the index of the last digit required (i.e. the digit that may be rounded up).
     * rm: the rounding mode.
     * id: 1 (toExponential) or 2 (toPrecision).
     */
    function format(n, i, rm, id) {
      var c0, e, ne, len, str;

      if (rm == null) rm = ROUNDING_MODE;
      else intCheck(rm, 0, 8);

      if (!n.c) return n.toString();

      c0 = n.c[0];
      ne = n.e;

      if (i == null) {
        str = coeffToString(n.c);
        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)
         ? toExponential(str, ne)
         : toFixedPoint(str, ne, '0');
      } else {
        n = round(new BigNumber(n), i, rm);

        // n.e may have changed if the value was rounded up.
        e = n.e;

        str = coeffToString(n.c);
        len = str.length;

        // toPrecision returns exponential notation if the number of significant digits
        // specified is less than the number of digits necessary to represent the integer
        // part of the value in fixed-point notation.

        // Exponential notation.
        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {

          // Append zeros?
          for (; len < i; str += '0', len++);
          str = toExponential(str, e);

        // Fixed-point notation.
        } else {
          i -= ne;
          str = toFixedPoint(str, e, '0');

          // Append zeros?
          if (e + 1 > len) {
            if (--i > 0) for (str += '.'; i--; str += '0');
          } else {
            i += e - len;
            if (i > 0) {
              if (e + 1 == len) str += '.';
              for (; i--; str += '0');
            }
          }
        }
      }

      return n.s < 0 && c0 ? '-' + str : str;
    }


    // Handle BigNumber.max and BigNumber.min.
    function maxOrMin(args, method) {
      var n,
        i = 1,
        m = new BigNumber(args[0]);

      for (; i < args.length; i++) {
        n = new BigNumber(args[i]);

        // If any number is NaN, return NaN.
        if (!n.s) {
          m = n;
          break;
        } else if (method.call(m, n)) {
          m = n;
        }
      }

      return m;
    }


    /*
     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.
     * Called by minus, plus and times.
     */
    function normalise(n, c, e) {
      var i = 1,
        j = c.length;

       // Remove trailing zeros.
      for (; !c[--j]; c.pop());

      // Calculate the base 10 exponent. First get the number of digits of c[0].
      for (j = c[0]; j >= 10; j /= 10, i++);

      // Overflow?
      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {

        // Infinity.
        n.c = n.e = null;

      // Underflow?
      } else if (e < MIN_EXP) {

        // Zero.
        n.c = [n.e = 0];
      } else {
        n.e = e;
        n.c = c;
      }

      return n;
    }


    // Handle values that fail the validity test in BigNumber.
    parseNumeric = (function () {
      var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
        dotAfter = /^([^.]+)\.$/,
        dotBefore = /^\.([^.]+)$/,
        isInfinityOrNaN = /^-?(Infinity|NaN)$/,
        whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;

      return function (x, str, isNum, b) {
        var base,
          s = isNum ? str : str.replace(whitespaceOrPlus, '');

        // No exception on ±Infinity or NaN.
        if (isInfinityOrNaN.test(s)) {
          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
        } else {
          if (!isNum) {

            // basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i
            s = s.replace(basePrefix, function (m, p1, p2) {
              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;
              return !b || b == base ? p1 : m;
            });

            if (b) {
              base = b;

              // E.g. '1.' to '1', '.1' to '0.1'
              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');
            }

            if (str != s) return new BigNumber(s, base);
          }

          // '[BigNumber Error] Not a number: {n}'
          // '[BigNumber Error] Not a base {b} number: {n}'
          if (BigNumber.DEBUG) {
            throw Error
              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);
          }

          // NaN
          x.s = null;
        }

        x.c = x.e = null;
      }
    })();


    /*
     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.
     * If r is truthy, it is known that there are more digits after the rounding digit.
     */
    function round(x, sd, rm, r) {
      var d, i, j, k, n, ni, rd,
        xc = x.c,
        pows10 = POWS_TEN;

      // if x is not Infinity or NaN...
      if (xc) {

        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.
        // n is a base 1e14 number, the value of the element of array x.c containing rd.
        // ni is the index of n within x.c.
        // d is the number of digits of n.
        // i is the index of rd within n including leading zeros.
        // j is the actual index of rd within n (if < 0, rd is a leading zero).
        out: {

          // Get the number of digits of the first element of xc.
          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);
          i = sd - d;

          // If the rounding digit is in the first element of xc...
          if (i < 0) {
            i += LOG_BASE;
            j = sd;
            n = xc[ni = 0];

            // Get the rounding digit at index j of n.
            rd = n / pows10[d - j - 1] % 10 | 0;
          } else {
            ni = mathceil((i + 1) / LOG_BASE);

            if (ni >= xc.length) {

              if (r) {

                // Needed by sqrt.
                for (; xc.length <= ni; xc.push(0));
                n = rd = 0;
                d = 1;
                i %= LOG_BASE;
                j = i - LOG_BASE + 1;
              } else {
                break out;
              }
            } else {
              n = k = xc[ni];

              // Get the number of digits of n.
              for (d = 1; k >= 10; k /= 10, d++);

              // Get the index of rd within n.
              i %= LOG_BASE;

              // Get the index of rd within n, adjusted for leading zeros.
              // The number of leading zeros of n is given by LOG_BASE - d.
              j = i - LOG_BASE + d;

              // Get the rounding digit at index j of n.
              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;
            }
          }

          r = r || sd < 0 ||

          // Are there any non-zero digits after the rounding digit?
          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right
          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.
           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);

          r = rm < 4
           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))
           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&

            // Check whether the digit to the left of the rounding digit is odd.
            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||
             rm == (x.s < 0 ? 8 : 7));

          if (sd < 1 || !xc[0]) {
            xc.length = 0;

            if (r) {

              // Convert sd to decimal places.
              sd -= x.e + 1;

              // 1, 0.1, 0.01, 0.001, 0.0001 etc.
              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];
              x.e = -sd || 0;
            } else {

              // Zero.
              xc[0] = x.e = 0;
            }

            return x;
          }

          // Remove excess digits.
          if (i == 0) {
            xc.length = ni;
            k = 1;
            ni--;
          } else {
            xc.length = ni + 1;
            k = pows10[LOG_BASE - i];

            // E.g. 56700 becomes 56000 if 7 is the rounding digit.
            // j > 0 means i > number of leading zeros of n.
            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;
          }

          // Round up?
          if (r) {

            for (; ;) {

              // If the digit to be rounded up is in the first element of xc...
              if (ni == 0) {

                // i will be the length of xc[0] before k is added.
                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);
                j = xc[0] += k;
                for (k = 1; j >= 10; j /= 10, k++);

                // if i != k the length has increased.
                if (i != k) {
                  x.e++;
                  if (xc[0] == BASE) xc[0] = 1;
                }

                break;
              } else {
                xc[ni] += k;
                if (xc[ni] != BASE) break;
                xc[ni--] = 0;
                k = 1;
              }
            }
          }

          // Remove trailing zeros.
          for (i = xc.length; xc[--i] === 0; xc.pop());
        }

        // Overflow? Infinity.
        if (x.e > MAX_EXP) {
          x.c = x.e = null;

        // Underflow? Zero.
        } else if (x.e < MIN_EXP) {
          x.c = [x.e = 0];
        }
      }

      return x;
    }


    function valueOf(n) {
      var str,
        e = n.e;

      if (e === null) return n.toString();

      str = coeffToString(n.c);

      str = e <= TO_EXP_NEG || e >= TO_EXP_POS
        ? toExponential(str, e)
        : toFixedPoint(str, e, '0');

      return n.s < 0 ? '-' + str : str;
    }


    // PROTOTYPE/INSTANCE METHODS


    /*
     * Return a new BigNumber whose value is the absolute value of this BigNumber.
     */
    P.absoluteValue = P.abs = function () {
      var x = new BigNumber(this);
      if (x.s < 0) x.s = 1;
      return x;
    };


    /*
     * Return
     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),
     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),
     *   0 if they have the same value,
     *   or null if the value of either is NaN.
     */
    P.comparedTo = function (y, b) {
      return compare(this, new BigNumber(y, b));
    };


    /*
     * If dp is undefined or null or true or false, return the number of decimal places of the
     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.
     *
     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this
     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or
     * ROUNDING_MODE if rm is omitted.
     *
     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */
    P.decimalPlaces = P.dp = function (dp, rm) {
      var c, n, v,
        x = this;

      if (dp != null) {
        intCheck(dp, 0, MAX);
        if (rm == null) rm = ROUNDING_MODE;
        else intCheck(rm, 0, 8);

        return round(new BigNumber(x), dp + x.e + 1, rm);
      }

      if (!(c = x.c)) return null;
      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;

      // Subtract the number of trailing zeros of the last number.
      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);
      if (n < 0) n = 0;

      return n;
    };


    /*
     *  n / 0 = I
     *  n / N = N
     *  n / I = 0
     *  0 / n = 0
     *  0 / 0 = N
     *  0 / N = N
     *  0 / I = 0
     *  N / n = N
     *  N / 0 = N
     *  N / N = N
     *  N / I = N
     *  I / n = I
     *  I / 0 = I
     *  I / N = N
     *  I / I = N
     *
     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of
     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.
     */
    P.dividedBy = P.div = function (y, b) {
      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);
    };


    /*
     * Return a new BigNumber whose value is the integer part of dividing the value of this
     * BigNumber by the value of BigNumber(y, b).
     */
    P.dividedToIntegerBy = P.idiv = function (y, b) {
      return div(this, new BigNumber(y, b), 0, 1);
    };


    /*
     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.
     *
     * If m is present, return the result modulo m.
     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.
     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.
     *
     * The modular power operation works efficiently when x, n, and m are integers, otherwise it
     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.
     *
     * n {number|string|BigNumber} The exponent. An integer.
     * [m] {number|string|BigNumber} The modulus.
     *
     * '[BigNumber Error] Exponent not an integer: {n}'
     */
    P.exponentiatedBy = P.pow = function (n, m) {
      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,
        x = this;

      n = new BigNumber(n);

      // Allow NaN and ±Infinity, but not other non-integers.
      if (n.c && !n.isInteger()) {
        throw Error
          (bignumberError + 'Exponent not an integer: ' + valueOf(n));
      }

      if (m != null) m = new BigNumber(m);

      // Exponent of MAX_SAFE_INTEGER is 15.
      nIsBig = n.e > 14;

      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.
      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {

        // The sign of the result of pow when x is negative depends on the evenness of n.
        // If +n overflows to ±Infinity, the evenness of n would be not be known.
        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));
        return m ? y.mod(m) : y;
      }

      nIsNeg = n.s < 0;

      if (m) {

        // x % m returns NaN if abs(m) is zero, or m is NaN.
        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);

        isModExp = !nIsNeg && x.isInteger() && m.isInteger();

        if (isModExp) x = x.mod(m);

      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.
      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.
      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0
        // [1, 240000000]
        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7
        // [80000000000000]  [99999750000000]
        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {

        // If x is negative and n is odd, k = -0, else k = 0.
        k = x.s < 0 && isOdd(n) ? -0 : 0;

        // If x >= 1, k = ±Infinity.
        if (x.e > -1) k = 1 / k;

        // If n is negative return ±0, else return ±Infinity.
        return new BigNumber(nIsNeg ? 1 / k : k);

      } else if (POW_PRECISION) {

        // Truncating each coefficient array to a length of k after each multiplication
        // equates to truncating significant digits to POW_PRECISION + [28, 41],
        // i.e. there will be a minimum of 28 guard digits retained.
        k = mathceil(POW_PRECISION / LOG_BASE + 2);
      }

      if (nIsBig) {
        half = new BigNumber(0.5);
        if (nIsNeg) n.s = 1;
        nIsOdd = isOdd(n);
      } else {
        i = Math.abs(+valueOf(n));
        nIsOdd = i % 2;
      }

      y = new BigNumber(ONE);

      // Performs 54 loop iterations for n of 9007199254740991.
      for (; ;) {

        if (nIsOdd) {
          y = y.times(x);
          if (!y.c) break;

          if (k) {
            if (y.c.length > k) y.c.length = k;
          } else if (isModExp) {
            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));
          }
        }

        if (i) {
          i = mathfloor(i / 2);
          if (i === 0) break;
          nIsOdd = i % 2;
        } else {
          n = n.times(half);
          round(n, n.e + 1, 1);

          if (n.e > 14) {
            nIsOdd = isOdd(n);
          } else {
            i = +valueOf(n);
            if (i === 0) break;
            nIsOdd = i % 2;
          }
        }

        x = x.times(x);

        if (k) {
          if (x.c && x.c.length > k) x.c.length = k;
        } else if (isModExp) {
          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));
        }
      }

      if (isModExp) return y;
      if (nIsNeg) y = ONE.div(y);

      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;
    };


    /*
     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer
     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.
     *
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'
     */
    P.integerValue = function (rm) {
      var n = new BigNumber(this);
      if (rm == null) rm = ROUNDING_MODE;
      else intCheck(rm, 0, 8);
      return round(n, n.e + 1, rm);
    };


    /*
     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),
     * otherwise return false.
     */
    P.isEqualTo = P.eq = function (y, b) {
      return compare(this, new BigNumber(y, b)) === 0;
    };


    /*
     * Return true if the value of this BigNumber is a finite number, otherwise return false.
     */
    P.isFinite = function () {
      return !!this.c;
    };


    /*
     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),
     * otherwise return false.
     */
    P.isGreaterThan = P.gt = function (y, b) {
      return compare(this, new BigNumber(y, b)) > 0;
    };


    /*
     * Return true if the value of this BigNumber is greater than or equal to the value of
     * BigNumber(y, b), otherwise return false.
     */
    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {
      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;

    };


    /*
     * Return true if the value of this BigNumber is an integer, otherwise return false.
     */
    P.isInteger = function () {
      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;
    };


    /*
     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),
     * otherwise return false.
     */
    P.isLessThan = P.lt = function (y, b) {
      return compare(this, new BigNumber(y, b)) < 0;
    };


    /*
     * Return true if the value of this BigNumber is less than or equal to the value of
     * BigNumber(y, b), otherwise return false.
     */
    P.isLessThanOrEqualTo = P.lte = function (y, b) {
      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;
    };


    /*
     * Return true if the value of this BigNumber is NaN, otherwise return false.
     */
    P.isNaN = function () {
      return !this.s;
    };


    /*
     * Return true if the value of this BigNumber is negative, otherwise return false.
     */
    P.isNegative = function () {
      return this.s < 0;
    };


    /*
     * Return true if the value of this BigNumber is positive, otherwise return false.
     */
    P.isPositive = function () {
      return this.s > 0;
    };


    /*
     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.
     */
    P.isZero = function () {
      return !!this.c && this.c[0] == 0;
    };


    /*
     *  n - 0 = n
     *  n - N = N
     *  n - I = -I
     *  0 - n = -n
     *  0 - 0 = 0
     *  0 - N = N
     *  0 - I = -I
     *  N - n = N
     *  N - 0 = N
     *  N - N = N
     *  N - I = N
     *  I - n = I
     *  I - 0 = I
     *  I - N = N
     *  I - I = N
     *
     * Return a new BigNumber whose value is the value of this BigNumber minus the value of
     * BigNumber(y, b).
     */
    P.minus = function (y, b) {
      var i, j, t, xLTy,
        x = this,
        a = x.s;

      y = new BigNumber(y, b);
      b = y.s;

      // Either NaN?
      if (!a || !b) return new BigNumber(NaN);

      // Signs differ?
      if (a != b) {
        y.s = -b;
        return x.plus(y);
      }

      var xe = x.e / LOG_BASE,
        ye = y.e / LOG_BASE,
        xc = x.c,
        yc = y.c;

      if (!xe || !ye) {

        // Either Infinity?
        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);

        // Either zero?
        if (!xc[0] || !yc[0]) {

          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :

           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity
           ROUNDING_MODE == 3 ? -0 : 0);
        }
      }

      xe = bitFloor(xe);
      ye = bitFloor(ye);
      xc = xc.slice();

      // Determine which is the bigger number.
      if (a = xe - ye) {

        if (xLTy = a < 0) {
          a = -a;
          t = xc;
        } else {
          ye = xe;
          t = yc;
        }

        t.reverse();

        // Prepend zeros to equalise exponents.
        for (b = a; b--; t.push(0));
        t.reverse();
      } else {

        // Exponents equal. Check digit by digit.
        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;

        for (a = b = 0; b < j; b++) {

          if (xc[b] != yc[b]) {
            xLTy = xc[b] < yc[b];
            break;
          }
        }
      }

      // x < y? Point xc to the array of the bigger number.
      if (xLTy) {
        t = xc;
        xc = yc;
        yc = t;
        y.s = -y.s;
      }  

      b = (j = yc.length) - (i = xc.length);

      // Append zeros to xc if shorter.
      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.
      if (b > 0) for (; b--; xc[i++] = 0);
      b = BASE - 1;

      // Subtract yc from xc.
      for (; j > a;) {

        if (xc[--j] < yc[j]) {
          for (i = j; i && !xc[--i]; xc[i] = b);
          --xc[i];
          xc[j] += BASE;
        }

        xc[j] -= yc[j];
      }

      // Remove leading zeros and adjust exponent accordingly.
      for (; xc[0] == 0; xc.splice(0, 1), --ye);

      // Zero?
      if (!xc[0]) {

        // Following IEEE 754 (2008) 6.3,
        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.
        y.s = ROUNDING_MODE == 3 ? -1 : 1;
        y.c = [y.e = 0];
        return y;
      }

      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity
      // for finite x and y.
      return normalise(y, xc, ye);
    };


    /*
     *   n % 0 =  N
     *   n % N =  N
     *   n % I =  n
     *   0 % n =  0
     *  -0 % n = -0
     *   0 % 0 =  N
     *   0 % N =  N
     *   0 % I =  0
     *   N % n =  N
     *   N % 0 =  N
     *   N % N =  N
     *   N % I =  N
     *   I % n =  N
     *   I % 0 =  N
     *   I % N =  N
     *   I % I =  N
     *
     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of
     * BigNumber(y, b). The result depends on the value of MODULO_MODE.
     */
    P.modulo = P.mod = function (y, b) {
      var q, s,
        x = this;

      y = new BigNumber(y, b);

      // Return NaN if x is Infinity or NaN, or y is NaN or zero.
      if (!x.c || !y.s || y.c && !y.c[0]) {
        return new BigNumber(NaN);

      // Return x if y is Infinity or x is zero.
      } else if (!y.c || x.c && !x.c[0]) {
        return new BigNumber(x);
      }

      if (MODULO_MODE == 9) {

        // Euclidian division: q = sign(y) * floor(x / abs(y))
        // r = x - qy    where  0 <= r < abs(y)
        s = y.s;
        y.s = 1;
        q = div(x, y, 0, 3);
        y.s = s;
        q.s *= s;
      } else {
        q = div(x, y, 0, MODULO_MODE);
      }

      y = x.minus(q.times(y));

      // To match JavaScript %, ensure sign of zero is sign of dividend.
      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;

      return y;
    };


    /*
     *  n * 0 = 0
     *  n * N = N
     *  n * I = I
     *  0 * n = 0
     *  0 * 0 = 0
     *  0 * N = N
     *  0 * I = N
     *  N * n = N
     *  N * 0 = N
     *  N * N = N
     *  N * I = N
     *  I * n = I
     *  I * 0 = N
     *  I * N = N
     *  I * I = I
     *
     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value
     * of BigNumber(y, b).
     */
    P.multipliedBy = P.times = function (y, b) {
      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,
        base, sqrtBase,
        x = this,
        xc = x.c,
        yc = (y = new BigNumber(y, b)).c;

      // Either NaN, ±Infinity or ±0?
      if (!xc || !yc || !xc[0] || !yc[0]) {

        // Return NaN if either is NaN, or one is 0 and the other is Infinity.
        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {
          y.c = y.e = y.s = null;
        } else {
          y.s *= x.s;

          // Return ±Infinity if either is ±Infinity.
          if (!xc || !yc) {
            y.c = y.e = null;

          // Return ±0 if either is ±0.
          } else {
            y.c = [0];
            y.e = 0;
          }
        }

        return y;
      }

      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);
      y.s *= x.s;
      xcL = xc.length;
      ycL = yc.length;

      // Ensure xc points to longer array and xcL to its length.
      if (xcL < ycL) {
        zc = xc;
        xc = yc;
        yc = zc;
        i = xcL;
        xcL = ycL;
        ycL = i;
      }  

      // Initialise the result array with zeros.
      for (i = xcL + ycL, zc = []; i--; zc.push(0));

      base = BASE;
      sqrtBase = SQRT_BASE;

      for (i = ycL; --i >= 0;) {
        c = 0;
        ylo = yc[i] % sqrtBase;
        yhi = yc[i] / sqrtBase | 0;

        for (k = xcL, j = i + k; j > i;) {
          xlo = xc[--k] % sqrtBase;
          xhi = xc[k] / sqrtBase | 0;
          m = yhi * xlo + xhi * ylo;
          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;
          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;
          zc[j--] = xlo % base;
        }

        zc[j] = c;
      }

      if (c) {
        ++e;
      } else {
        zc.splice(0, 1);
      }

      return normalise(y, zc, e);
    };


    /*
     * Return a new BigNumber whose value is the value of this BigNumber negated,
     * i.e. multiplied by -1.
     */
    P.negated = function () {
      var x = new BigNumber(this);
      x.s = -x.s || null;
      return x;
    };


    /*
     *  n + 0 = n
     *  n + N = N
     *  n + I = I
     *  0 + n = n
     *  0 + 0 = 0
     *  0 + N = N
     *  0 + I = I
     *  N + n = N
     *  N + 0 = N
     *  N + N = N
     *  N + I = N
     *  I + n = I
     *  I + 0 = I
     *  I + N = N
     *  I + I = I
     *
     * Return a new BigNumber whose value is the value of this BigNumber plus the value of
     * BigNumber(y, b).
     */
    P.plus = function (y, b) {
      var t,
        x = this,
        a = x.s;

      y = new BigNumber(y, b);
      b = y.s;

      // Either NaN?
      if (!a || !b) return new BigNumber(NaN);

      // Signs differ?
       if (a != b) {
        y.s = -b;
        return x.minus(y);
      }

      var xe = x.e / LOG_BASE,
        ye = y.e / LOG_BASE,
        xc = x.c,
        yc = y.c;

      if (!xe || !ye) {

        // Return ±Infinity if either ±Infinity.
        if (!xc || !yc) return new BigNumber(a / 0);

        // Either zero?
        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);
      }

      xe = bitFloor(xe);
      ye = bitFloor(ye);
      xc = xc.slice();

      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.
      if (a = xe - ye) {
        if (a > 0) {
          ye = xe;
          t = yc;
        } else {
          a = -a;
          t = xc;
        }

        t.reverse();
        for (; a--; t.push(0));
        t.reverse();
      }

      a = xc.length;
      b = yc.length;

      // Point xc to the longer array, and b to the shorter length.
      if (a - b < 0) {
        t = yc;
        yc = xc;
        xc = t;
        b = a;
      }  

      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.
      for (a = 0; b;) {
        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;
        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;
      }

      if (a) {
        xc = [a].concat(xc);
        ++ye;
      }

      // No need to check for zero, as +x + +y != 0 && -x + -y != 0
      // ye = MAX_EXP + 1 possible
      return normalise(y, xc, ye);
    };


    /*
     * If sd is undefined or null or true or false, return the number of significant digits of
     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.
     * If sd is true include integer-part trailing zeros in the count.
     *
     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this
     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or
     * ROUNDING_MODE if rm is omitted.
     *
     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.
     *                     boolean: whether to count integer-part trailing zeros: true or false.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'
     */
    P.precision = P.sd = function (sd, rm) {
      var c, n, v,
        x = this;

      if (sd != null && sd !== !!sd) {
        intCheck(sd, 1, MAX);
        if (rm == null) rm = ROUNDING_MODE;
        else intCheck(rm, 0, 8);

        return round(new BigNumber(x), sd, rm);
      }

      if (!(c = x.c)) return null;
      v = c.length - 1;
      n = v * LOG_BASE + 1;

      if (v = c[v]) {

        // Subtract the number of trailing zeros of the last element.
        for (; v % 10 == 0; v /= 10, n--);

        // Add the number of digits of the first element.
        for (v = c[0]; v >= 10; v /= 10, n++);
      }

      if (sd && x.e + 1 > n) n = x.e + 1;

      return n;
    };


    /*
     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places
     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.
     *
     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'
     */
    P.shiftedBy = function (k) {
      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
      return this.times('1e' + k);
    };


    /*
     *  sqrt(-n) =  N
     *  sqrt(N) =  N
     *  sqrt(-I) =  N
     *  sqrt(I) =  I
     *  sqrt(0) =  0
     *  sqrt(-0) = -0
     *
     * Return a new BigNumber whose value is the square root of the value of this BigNumber,
     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.
     */
    P.squareRoot = P.sqrt = function () {
      var m, n, r, rep, t,
        x = this,
        c = x.c,
        s = x.s,
        e = x.e,
        dp = DECIMAL_PLACES + 4,
        half = new BigNumber('0.5');

      // Negative/NaN/Infinity/zero?
      if (s !== 1 || !c || !c[0]) {
        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);
      }

      // Initial estimate.
      s = Math.sqrt(+valueOf(x));

      // Math.sqrt underflow/overflow?
      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.
      if (s == 0 || s == 1 / 0) {
        n = coeffToString(c);
        if ((n.length + e) % 2 == 0) n += '0';
        s = Math.sqrt(+n);
        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);

        if (s == 1 / 0) {
          n = '5e' + e;
        } else {
          n = s.toExponential();
          n = n.slice(0, n.indexOf('e') + 1) + e;
        }

        r = new BigNumber(n);
      } else {
        r = new BigNumber(s + '');
      }

      // Check for zero.
      // r could be zero if MIN_EXP is changed after the this value was created.
      // This would cause a division by zero (x/t) and hence Infinity below, which would cause
      // coeffToString to throw.
      if (r.c[0]) {
        e = r.e;
        s = e + dp;
        if (s < 3) s = 0;

        // Newton-Raphson iteration.
        for (; ;) {
          t = r;
          r = half.times(t.plus(div(x, t, dp, 1)));

          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {

            // The exponent of r may here be one less than the final result exponent,
            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits
            // are indexed correctly.
            if (r.e < e) --s;
            n = n.slice(s - 3, s + 1);

            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits
            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the
            // iteration.
            if (n == '9999' || !rep && n == '4999') {

              // On the first iteration only, check to see if rounding up gives the
              // exact result as the nines may infinitely repeat.
              if (!rep) {
                round(t, t.e + DECIMAL_PLACES + 2, 0);

                if (t.times(t).eq(x)) {
                  r = t;
                  break;
                }
              }

              dp += 4;
              s += 4;
              rep = 1;
            } else {

              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact
              // result. If not, then there are further digits and m will be truthy.
              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {

                // Truncate to the first rounding digit.
                round(r, r.e + DECIMAL_PLACES + 2, 1);
                m = !r.times(r).eq(x);
              }

              break;
            }
          }
        }
      }

      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);
    };


    /*
     * Return a string representing the value of this BigNumber in exponential notation and
     * rounded using ROUNDING_MODE to dp fixed decimal places.
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */
    P.toExponential = function (dp, rm) {
      if (dp != null) {
        intCheck(dp, 0, MAX);
        dp++;
      }
      return format(this, dp, rm, 1);
    };


    /*
     * Return a string representing the value of this BigNumber in fixed-point notation rounding
     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.
     *
     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',
     * but e.g. (-0.00001).toFixed(0) is '-0'.
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */
    P.toFixed = function (dp, rm) {
      if (dp != null) {
        intCheck(dp, 0, MAX);
        dp = dp + this.e + 1;
      }
      return format(this, dp, rm);
    };


    /*
     * Return a string representing the value of this BigNumber in fixed-point notation rounded
     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties
     * of the format or FORMAT object (see BigNumber.set).
     *
     * The formatting object may contain some or all of the properties shown below.
     *
     * FORMAT = {
     *   prefix: '',
     *   groupSize: 3,
     *   secondaryGroupSize: 0,
     *   groupSeparator: ',',
     *   decimalSeparator: '.',
     *   fractionGroupSize: 0,
     *   fractionGroupSeparator: '\xA0',      // non-breaking space
     *   suffix: ''
     * };
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     * [format] {object} Formatting options. See FORMAT pbject above.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     * '[BigNumber Error] Argument not an object: {format}'
     */
    P.toFormat = function (dp, rm, format) {
      var str,
        x = this;

      if (format == null) {
        if (dp != null && rm && typeof rm == 'object') {
          format = rm;
          rm = null;
        } else if (dp && typeof dp == 'object') {
          format = dp;
          dp = rm = null;
        } else {
          format = FORMAT;
        }
      } else if (typeof format != 'object') {
        throw Error
          (bignumberError + 'Argument not an object: ' + format);
      }

      str = x.toFixed(dp, rm);

      if (x.c) {
        var i,
          arr = str.split('.'),
          g1 = +format.groupSize,
          g2 = +format.secondaryGroupSize,
          groupSeparator = format.groupSeparator || '',
          intPart = arr[0],
          fractionPart = arr[1],
          isNeg = x.s < 0,
          intDigits = isNeg ? intPart.slice(1) : intPart,
          len = intDigits.length;

        if (g2) {
          i = g1;
          g1 = g2;
          g2 = i;
          len -= i;
        }  

        if (g1 > 0 && len > 0) {
          i = len % g1 || g1;
          intPart = intDigits.substr(0, i);
          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);
          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);
          if (isNeg) intPart = '-' + intPart;
        }

        str = fractionPart
         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)
          ? fractionPart.replace(new RegExp('\\d{' + g2 + '}\\B', 'g'),
           '$&' + (format.fractionGroupSeparator || ''))
          : fractionPart)
         : intPart;
      }

      return (format.prefix || '') + str + (format.suffix || '');
    };


    /*
     * Return an array of two BigNumbers representing the value of this BigNumber as a simple
     * fraction with an integer numerator and an integer denominator.
     * The denominator will be a positive non-zero value less than or equal to the specified
     * maximum denominator. If a maximum denominator is not specified, the denominator will be
     * the lowest value necessary to represent the number exactly.
     *
     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.
     *
     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'
     */
    P.toFraction = function (md) {
      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,
        x = this,
        xc = x.c;

      if (md != null) {
        n = new BigNumber(md);

        // Throw if md is less than one or is not an integer, unless it is Infinity.
        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {
          throw Error
            (bignumberError + 'Argument ' +
              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));
        }
      }

      if (!xc) return new BigNumber(x);

      d = new BigNumber(ONE);
      n1 = d0 = new BigNumber(ONE);
      d1 = n0 = new BigNumber(ONE);
      s = coeffToString(xc);

      // Determine initial denominator.
      // d is a power of 10 and the minimum max denominator that specifies the value exactly.
      e = d.e = s.length - x.e - 1;
      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];
      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;

      exp = MAX_EXP;
      MAX_EXP = 1 / 0;
      n = new BigNumber(s);

      // n0 = d1 = 0
      n0.c[0] = 0;

      for (; ;)  {
        q = div(n, d, 0, 1);
        d2 = d0.plus(q.times(d1));
        if (d2.comparedTo(md) == 1) break;
        d0 = d1;
        d1 = d2;
        n1 = n0.plus(q.times(d2 = n1));
        n0 = d2;
        d = n.minus(q.times(d2 = d));
        n = d2;
      }

      d2 = div(md.minus(d0), d1, 0, 1);
      n0 = n0.plus(d2.times(n1));
      d0 = d0.plus(d2.times(d1));
      n0.s = n1.s = x.s;
      e = e * 2;

      // Determine which fraction is closer to x, n0/d0 or n1/d1
      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(
          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];

      MAX_EXP = exp;

      return r;
    };


    /*
     * Return the value of this BigNumber converted to a number primitive.
     */
    P.toNumber = function () {
      return +valueOf(this);
    };


    /*
     * Return a string representing the value of this BigNumber rounded to sd significant digits
     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits
     * necessary to represent the integer part of the value in fixed-point notation, then use
     * exponential notation.
     *
     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'
     */
    P.toPrecision = function (sd, rm) {
      if (sd != null) intCheck(sd, 1, MAX);
      return format(this, sd, rm, 2);
    };


    /*
     * Return a string representing the value of this BigNumber in base b, or base 10 if b is
     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and
     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent
     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than
     * TO_EXP_NEG, return exponential notation.
     *
     * [b] {number} Integer, 2 to ALPHABET.length inclusive.
     *
     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'
     */
    P.toString = function (b) {
      var str,
        n = this,
        s = n.s,
        e = n.e;

      // Infinity or NaN?
      if (e === null) {
        if (s) {
          str = 'Infinity';
          if (s < 0) str = '-' + str;
        } else {
          str = 'NaN';
        }
      } else {
        if (b == null) {
          str = e <= TO_EXP_NEG || e >= TO_EXP_POS
           ? toExponential(coeffToString(n.c), e)
           : toFixedPoint(coeffToString(n.c), e, '0');
        } else if (b === 10 && alphabetHasNormalDecimalDigits) {
          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);
          str = toFixedPoint(coeffToString(n.c), n.e, '0');
        } else {
          intCheck(b, 2, ALPHABET.length, 'Base');
          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);
        }

        if (s < 0 && n.c[0]) str = '-' + str;
      }

      return str;
    };


    /*
     * Return as toString, but do not accept a base argument, and include the minus sign for
     * negative zero.
     */
    P.valueOf = P.toJSON = function () {
      return valueOf(this);
    };


    P._isBigNumber = true;

    if (configObject != null) BigNumber.set(configObject);

    return BigNumber;
  }


  // PRIVATE HELPER FUNCTIONS

  // These functions don't need access to variables,
  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.


  function bitFloor(n) {
    var i = n | 0;
    return n > 0 || n === i ? i : i - 1;
  }


  // Return a coefficient array as a string of base 10 digits.
  function coeffToString(a) {
    var s, z,
      i = 1,
      j = a.length,
      r = a[0] + '';

    for (; i < j;) {
      s = a[i++] + '';
      z = LOG_BASE - s.length;
      for (; z--; s = '0' + s);
      r += s;
    }

    // Determine trailing zeros.
    for (j = r.length; r.charCodeAt(--j) === 48;);

    return r.slice(0, j + 1 || 1);
  }


  // Compare the value of BigNumbers x and y.
  function compare(x, y) {
    var a, b,
      xc = x.c,
      yc = y.c,
      i = x.s,
      j = y.s,
      k = x.e,
      l = y.e;

    // Either NaN?
    if (!i || !j) return null;

    a = xc && !xc[0];
    b = yc && !yc[0];

    // Either zero?
    if (a || b) return a ? b ? 0 : -j : i;

    // Signs differ?
    if (i != j) return i;

    a = i < 0;
    b = k == l;

    // Either Infinity?
    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;

    // Compare exponents.
    if (!b) return k > l ^ a ? 1 : -1;

    j = (k = xc.length) < (l = yc.length) ? k : l;

    // Compare digit by digit.
    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;

    // Compare lengths.
    return k == l ? 0 : k > l ^ a ? 1 : -1;
  }


  /*
   * Check that n is a primitive number, an integer, and in range, otherwise throw.
   */
  function intCheck(n, min, max, name) {
    if (n < min || n > max || n !== mathfloor(n)) {
      throw Error
       (bignumberError + (name || 'Argument') + (typeof n == 'number'
         ? n < min || n > max ? ' out of range: ' : ' not an integer: '
         : ' not a primitive number: ') + String(n));
    }
  }


  // Assumes finite n.
  function isOdd(n) {
    var k = n.c.length - 1;
    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;
  }


  function toExponential(str, e) {
    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +
     (e < 0 ? 'e' : 'e+') + e;
  }


  function toFixedPoint(str, e, z) {
    var len, zs;

    // Negative exponent?
    if (e < 0) {

      // Prepend zeros.
      for (zs = z + '.'; ++e; zs += z);
      str = zs + str;

    // Positive exponent
    } else {
      len = str.length;

      // Append zeros.
      if (++e > len) {
        for (zs = z, e -= len; --e; zs += z);
        str += zs;
      } else if (e < len) {
        str = str.slice(0, e) + '.' + str.slice(e);
      }
    }

    return str;
  }


  // EXPORT


  BigNumber = clone();
  BigNumber['default'] = BigNumber.BigNumber = BigNumber;

  // AMD.
  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () { return BigNumber; }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

  // Node.js and other environments that support module.exports.
  } else {}
})(this);


/***/ }),

/***/ 3550:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = (__webpack_require__(6601).Buffer);
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // 'A' - 'F'
    if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    // '0' - '9'
    } else {
      return (c - 48) & 0xf;
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this.strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);


/***/ }),

/***/ 6526:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(9742)
var ieee754 = __webpack_require__(645)
var customInspectSymbol =
  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation
    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation
    : null

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    var proto = { foo: function () { return 42 } }
    Object.setPrototypeOf(proto, Uint8Array.prototype)
    Object.setPrototypeOf(arr, proto)
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  Object.setPrototypeOf(buf, Buffer.prototype)
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayView(value)
  }

  if (value == null) {
    throw new TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof SharedArrayBuffer !== 'undefined' &&
      (isInstance(value, SharedArrayBuffer) ||
      (value && isInstance(value.buffer, SharedArrayBuffer)))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)
Object.setPrototypeOf(Buffer, Uint8Array)

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpreted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayView (arrayView) {
  if (isInstance(arrayView, Uint8Array)) {
    var copy = new Uint8Array(arrayView)
    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)
  }
  return fromArrayLike(arrayView)
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(buf, Buffer.prototype)

  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      if (pos + buf.length > buffer.length) {
        Buffer.from(buf).copy(buffer, pos)
      } else {
        Uint8Array.prototype.set.call(
          buffer,
          buf,
          pos
        )
      }
    } else if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    } else {
      buf.copy(buffer, pos)
    }
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}
if (customInspectSymbol) {
  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
      case 'latin1':
      case 'binary':
        return asciiWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF)
      ? 4
      : (firstByte > 0xDF)
          ? 3
          : (firstByte > 0xBF)
              ? 2
              : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += hexSliceLookupTable[buf[i]]
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
  for (var i = 0; i < bytes.length - 1; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(newBuf, Buffer.prototype)

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUintLE =
Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUintBE =
Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUint8 =
Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUint16LE =
Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUint16BE =
Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUint32LE =
Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUint32BE =
Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUintLE =
Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUintBE =
Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUint8 =
Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUint16LE =
Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUint16BE =
Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUint32LE =
Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUint32BE =
Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  } else if (typeof val === 'boolean') {
    val = Number(val)
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
var hexSliceLookupTable = (function () {
  var alphabet = '0123456789abcdef'
  var table = new Array(256)
  for (var i = 0; i < 16; ++i) {
    var i16 = i * 16
    for (var j = 0; j < 16; ++j) {
      table[i16 + j] = alphabet[i] + alphabet[j]
    }
  }
  return table
})()


/***/ }),

/***/ 9478:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const Bignumber = (__webpack_require__(4431).BigNumber)

exports.MT = {
  POS_INT: 0,
  NEG_INT: 1,
  BYTE_STRING: 2,
  UTF8_STRING: 3,
  ARRAY: 4,
  MAP: 5,
  TAG: 6,
  SIMPLE_FLOAT: 7
}

exports.TAG = {
  DATE_STRING: 0,
  DATE_EPOCH: 1,
  POS_BIGINT: 2,
  NEG_BIGINT: 3,
  DECIMAL_FRAC: 4,
  BIGFLOAT: 5,
  BASE64URL_EXPECTED: 21,
  BASE64_EXPECTED: 22,
  BASE16_EXPECTED: 23,
  CBOR: 24,
  URI: 32,
  BASE64URL: 33,
  BASE64: 34,
  REGEXP: 35,
  MIME: 36
}

exports.NUMBYTES = {
  ZERO: 0,
  ONE: 24,
  TWO: 25,
  FOUR: 26,
  EIGHT: 27,
  INDEFINITE: 31
}

exports.SIMPLE = {
  FALSE: 20,
  TRUE: 21,
  NULL: 22,
  UNDEFINED: 23
}

exports.SYMS = {
  NULL: Symbol('null'),
  UNDEFINED: Symbol('undef'),
  PARENT: Symbol('parent'),
  BREAK: Symbol('break'),
  STREAM: Symbol('stream')
}

exports.SHIFT32 = Math.pow(2, 32)
exports.SHIFT16 = Math.pow(2, 16)

exports.MAX_SAFE_HIGH = 0x1fffff
exports.NEG_ONE = new Bignumber(-1)
exports.TEN = new Bignumber(10)
exports.TWO = new Bignumber(2)

exports.PARENT = {
  ARRAY: 0,
  OBJECT: 1,
  MAP: 2,
  TAG: 3,
  BYTE_STRING: 4,
  UTF8_STRING: 5
}


/***/ }),

/***/ 5520:
/***/ ((module) => {

/* eslint-disable */

module.exports = function decodeAsm (stdlib, foreign, buffer) {
  'use asm'

  // -- Imports

  var heap = new stdlib.Uint8Array(buffer)
  // var log = foreign.log
  var pushInt = foreign.pushInt
  var pushInt32 = foreign.pushInt32
  var pushInt32Neg = foreign.pushInt32Neg
  var pushInt64 = foreign.pushInt64
  var pushInt64Neg = foreign.pushInt64Neg
  var pushFloat = foreign.pushFloat
  var pushFloatSingle = foreign.pushFloatSingle
  var pushFloatDouble = foreign.pushFloatDouble
  var pushTrue = foreign.pushTrue
  var pushFalse = foreign.pushFalse
  var pushUndefined = foreign.pushUndefined
  var pushNull = foreign.pushNull
  var pushInfinity = foreign.pushInfinity
  var pushInfinityNeg = foreign.pushInfinityNeg
  var pushNaN = foreign.pushNaN
  var pushNaNNeg = foreign.pushNaNNeg

  var pushArrayStart = foreign.pushArrayStart
  var pushArrayStartFixed = foreign.pushArrayStartFixed
  var pushArrayStartFixed32 = foreign.pushArrayStartFixed32
  var pushArrayStartFixed64 = foreign.pushArrayStartFixed64
  var pushObjectStart = foreign.pushObjectStart
  var pushObjectStartFixed = foreign.pushObjectStartFixed
  var pushObjectStartFixed32 = foreign.pushObjectStartFixed32
  var pushObjectStartFixed64 = foreign.pushObjectStartFixed64

  var pushByteString = foreign.pushByteString
  var pushByteStringStart = foreign.pushByteStringStart
  var pushUtf8String = foreign.pushUtf8String
  var pushUtf8StringStart = foreign.pushUtf8StringStart

  var pushSimpleUnassigned = foreign.pushSimpleUnassigned

  var pushTagStart = foreign.pushTagStart
  var pushTagStart4 = foreign.pushTagStart4
  var pushTagStart8 = foreign.pushTagStart8
  var pushTagUnassigned = foreign.pushTagUnassigned

  var pushBreak = foreign.pushBreak

  var pow = stdlib.Math.pow

  // -- Constants


  // -- Mutable Variables

  var offset = 0
  var inputLength = 0
  var code = 0

  // Decode a cbor string represented as Uint8Array
  // which is allocated on the heap from 0 to inputLength
  //
  // input - Int
  //
  // Returns Code - Int,
  // Success = 0
  // Error > 0
  function parse (input) {
    input = input | 0

    offset = 0
    inputLength = input

    while ((offset | 0) < (inputLength | 0)) {
      code = jumpTable[heap[offset] & 255](heap[offset] | 0) | 0

      if ((code | 0) > 0) {
        break
      }
    }

    return code | 0
  }

  // -- Helper Function

  function checkOffset (n) {
    n = n | 0

    if ((((offset | 0) + (n | 0)) | 0) < (inputLength | 0)) {
      return 0
    }

    return 1
  }

  function readUInt16 (n) {
    n = n | 0

    return (
      (heap[n | 0] << 8) | heap[(n + 1) | 0]
    ) | 0
  }

  function readUInt32 (n) {
    n = n | 0

    return (
      (heap[n | 0] << 24) | (heap[(n + 1) | 0] << 16) | (heap[(n + 2) | 0] << 8) | heap[(n + 3) | 0]
    ) | 0
  }

  // -- Initial Byte Handlers

  function INT_P (octet) {
    octet = octet | 0

    pushInt(octet | 0)

    offset = (offset + 1) | 0

    return 0
  }

  function UINT_P_8 (octet) {
    octet = octet | 0

    if (checkOffset(1) | 0) {
      return 1
    }

    pushInt(heap[(offset + 1) | 0] | 0)

    offset = (offset + 2) | 0

    return 0
  }

  function UINT_P_16 (octet) {
    octet = octet | 0

    if (checkOffset(2) | 0) {
      return 1
    }

    pushInt(
      readUInt16((offset + 1) | 0) | 0
    )

    offset = (offset + 3) | 0

    return 0
  }

  function UINT_P_32 (octet) {
    octet = octet | 0

    if (checkOffset(4) | 0) {
      return 1
    }

    pushInt32(
      readUInt16((offset + 1) | 0) | 0,
      readUInt16((offset + 3) | 0) | 0
    )

    offset = (offset + 5) | 0

    return 0
  }

  function UINT_P_64 (octet) {
    octet = octet | 0

    if (checkOffset(8) | 0) {
      return 1
    }

    pushInt64(
      readUInt16((offset + 1) | 0) | 0,
      readUInt16((offset + 3) | 0) | 0,
      readUInt16((offset + 5) | 0) | 0,
      readUInt16((offset + 7) | 0) | 0
    )

    offset = (offset + 9) | 0

    return 0
  }

  function INT_N (octet) {
    octet = octet | 0

    pushInt((-1 - ((octet - 32) | 0)) | 0)

    offset = (offset + 1) | 0

    return 0
  }

  function UINT_N_8 (octet) {
    octet = octet | 0

    if (checkOffset(1) | 0) {
      return 1
    }

    pushInt(
      (-1 - (heap[(offset + 1) | 0] | 0)) | 0
    )

    offset = (offset + 2) | 0

    return 0
  }

  function UINT_N_16 (octet) {
    octet = octet | 0

    var val = 0

    if (checkOffset(2) | 0) {
      return 1
    }

    val = readUInt16((offset + 1) | 0) | 0
    pushInt((-1 - (val | 0)) | 0)

    offset = (offset + 3) | 0

    return 0
  }

  function UINT_N_32 (octet) {
    octet = octet | 0

    if (checkOffset(4) | 0) {
      return 1
    }

    pushInt32Neg(
      readUInt16((offset + 1) | 0) | 0,
      readUInt16((offset + 3) | 0) | 0
    )

    offset = (offset + 5) | 0

    return 0
  }

  function UINT_N_64 (octet) {
    octet = octet | 0

    if (checkOffset(8) | 0) {
      return 1
    }

    pushInt64Neg(
      readUInt16((offset + 1) | 0) | 0,
      readUInt16((offset + 3) | 0) | 0,
      readUInt16((offset + 5) | 0) | 0,
      readUInt16((offset + 7) | 0) | 0
    )

    offset = (offset + 9) | 0

    return 0
  }

  function BYTE_STRING (octet) {
    octet = octet | 0

    var start = 0
    var end = 0
    var step = 0

    step = (octet - 64) | 0
    if (checkOffset(step | 0) | 0) {
      return 1
    }

    start = (offset + 1) | 0
    end = (((offset + 1) | 0) + (step | 0)) | 0

    pushByteString(start | 0, end | 0)

    offset = end | 0

    return 0
  }

  function BYTE_STRING_8 (octet) {
    octet = octet | 0

    var start = 0
    var end = 0
    var length = 0

    if (checkOffset(1) | 0) {
      return 1
    }

    length = heap[(offset + 1) | 0] | 0
    start = (offset + 2) | 0
    end = (((offset + 2) | 0) + (length | 0)) | 0

    if (checkOffset((length + 1) | 0) | 0) {
      return 1
    }

    pushByteString(start | 0, end | 0)

    offset = end | 0

    return 0
  }

  function BYTE_STRING_16 (octet) {
    octet = octet | 0

    var start = 0
    var end = 0
    var length = 0

    if (checkOffset(2) | 0) {
      return 1
    }

    length = readUInt16((offset + 1) | 0) | 0
    start = (offset + 3) | 0
    end = (((offset + 3) | 0) + (length | 0)) | 0


    if (checkOffset((length + 2) | 0) | 0) {
      return 1
    }

    pushByteString(start | 0, end | 0)

    offset = end | 0

    return 0
  }

  function BYTE_STRING_32 (octet) {
    octet = octet | 0

    var start = 0
    var end = 0
    var length = 0

    if (checkOffset(4) | 0) {
      return 1
    }

    length = readUInt32((offset + 1) | 0) | 0
    start = (offset + 5) | 0
    end = (((offset + 5) | 0) + (length | 0)) | 0


    if (checkOffset((length + 4) | 0) | 0) {
      return 1
    }

    pushByteString(start | 0, end | 0)

    offset = end | 0

    return 0
  }

  function BYTE_STRING_64 (octet) {
    // NOT IMPLEMENTED
    octet = octet | 0

    return 1
  }

  function BYTE_STRING_BREAK (octet) {
    octet = octet | 0

    pushByteStringStart()

    offset = (offset + 1) | 0

    return 0
  }

  function UTF8_STRING (octet) {
    octet = octet | 0

    var start = 0
    var end = 0
    var step = 0

    step = (octet - 96) | 0

    if (checkOffset(step | 0) | 0) {
      return 1
    }

    start = (offset + 1) | 0
    end = (((offset + 1) | 0) + (step | 0)) | 0

    pushUtf8String(start | 0, end | 0)

    offset = end | 0

    return 0
  }

  function UTF8_STRING_8 (octet) {
    octet = octet | 0

    var start = 0
    var end = 0
    var length = 0

    if (checkOffset(1) | 0) {
      return 1
    }

    length = heap[(offset + 1) | 0] | 0
    start = (offset + 2) | 0
    end = (((offset + 2) | 0) + (length | 0)) | 0

    if (checkOffset((length + 1) | 0) | 0) {
      return 1
    }

    pushUtf8String(start | 0, end | 0)

    offset = end | 0

    return 0
  }

  function UTF8_STRING_16 (octet) {
    octet = octet | 0

    var start = 0
    var end = 0
    var length = 0

    if (checkOffset(2) | 0) {
      return 1
    }

    length = readUInt16((offset + 1) | 0) | 0
    start = (offset + 3) | 0
    end = (((offset + 3) | 0) + (length | 0)) | 0

    if (checkOffset((length + 2) | 0) | 0) {
      return 1
    }

    pushUtf8String(start | 0, end | 0)

    offset = end | 0

    return 0
  }

  function UTF8_STRING_32 (octet) {
    octet = octet | 0

    var start = 0
    var end = 0
    var length = 0

    if (checkOffset(4) | 0) {
      return 1
    }

    length = readUInt32((offset + 1) | 0) | 0
    start = (offset + 5) | 0
    end = (((offset + 5) | 0) + (length | 0)) | 0

    if (checkOffset((length + 4) | 0) | 0) {
      return 1
    }

    pushUtf8String(start | 0, end | 0)

    offset = end | 0

    return 0
  }

  function UTF8_STRING_64 (octet) {
    // NOT IMPLEMENTED
    octet = octet | 0

    return 1
  }

  function UTF8_STRING_BREAK (octet) {
    octet = octet | 0

    pushUtf8StringStart()

    offset = (offset + 1) | 0

    return 0
  }

  function ARRAY (octet) {
    octet = octet | 0

    pushArrayStartFixed((octet - 128) | 0)

    offset = (offset + 1) | 0

    return 0
  }

  function ARRAY_8 (octet) {
    octet = octet | 0

    if (checkOffset(1) | 0) {
      return 1
    }

    pushArrayStartFixed(heap[(offset + 1) | 0] | 0)

    offset = (offset + 2) | 0

    return 0
  }

  function ARRAY_16 (octet) {
    octet = octet | 0

    if (checkOffset(2) | 0) {
      return 1
    }

    pushArrayStartFixed(
      readUInt16((offset + 1) | 0) | 0
    )

    offset = (offset + 3) | 0

    return 0
  }

  function ARRAY_32 (octet) {
    octet = octet | 0

    if (checkOffset(4) | 0) {
      return 1
    }

    pushArrayStartFixed32(
      readUInt16((offset + 1) | 0) | 0,
      readUInt16((offset + 3) | 0) | 0
    )

    offset = (offset + 5) | 0

    return 0
  }

  function ARRAY_64 (octet) {
    octet = octet | 0

    if (checkOffset(8) | 0) {
      return 1
    }

    pushArrayStartFixed64(
      readUInt16((offset + 1) | 0) | 0,
      readUInt16((offset + 3) | 0) | 0,
      readUInt16((offset + 5) | 0) | 0,
      readUInt16((offset + 7) | 0) | 0
    )

    offset = (offset + 9) | 0

    return 0
  }

  function ARRAY_BREAK (octet) {
    octet = octet | 0

    pushArrayStart()

    offset = (offset + 1) | 0

    return 0
  }

  function MAP (octet) {
    octet = octet | 0

    var step = 0

    step = (octet - 160) | 0

    if (checkOffset(step | 0) | 0) {
      return 1
    }

    pushObjectStartFixed(step | 0)

    offset = (offset + 1) | 0

    return 0
  }

  function MAP_8 (octet) {
    octet = octet | 0

    if (checkOffset(1) | 0) {
      return 1
    }

    pushObjectStartFixed(heap[(offset + 1) | 0] | 0)

    offset = (offset + 2) | 0

    return 0
  }

  function MAP_16 (octet) {
    octet = octet | 0

    if (checkOffset(2) | 0) {
      return 1
    }

    pushObjectStartFixed(
      readUInt16((offset + 1) | 0) | 0
    )

    offset = (offset + 3) | 0

    return 0
  }

  function MAP_32 (octet) {
    octet = octet | 0

    if (checkOffset(4) | 0) {
      return 1
    }

    pushObjectStartFixed32(
      readUInt16((offset + 1) | 0) | 0,
      readUInt16((offset + 3) | 0) | 0
    )

    offset = (offset + 5) | 0

    return 0
  }

  function MAP_64 (octet) {
    octet = octet | 0

    if (checkOffset(8) | 0) {
      return 1
    }

    pushObjectStartFixed64(
      readUInt16((offset + 1) | 0) | 0,
      readUInt16((offset + 3) | 0) | 0,
      readUInt16((offset + 5) | 0) | 0,
      readUInt16((offset + 7) | 0) | 0
    )

    offset = (offset + 9) | 0

    return 0
  }

  function MAP_BREAK (octet) {
    octet = octet | 0

    pushObjectStart()

    offset = (offset + 1) | 0

    return 0
  }

  function TAG_KNOWN (octet) {
    octet = octet | 0

    pushTagStart((octet - 192| 0) | 0)

    offset = (offset + 1 | 0)

    return 0
  }

  function TAG_BIGNUM_POS (octet) {
    octet = octet | 0

    pushTagStart(octet | 0)

    offset = (offset + 1 | 0)

    return 0
  }

  function TAG_BIGNUM_NEG (octet) {
    octet = octet | 0

    pushTagStart(octet | 0)

    offset = (offset + 1 | 0)

    return 0
  }

  function TAG_FRAC (octet) {
    octet = octet | 0

    pushTagStart(octet | 0)

    offset = (offset + 1 | 0)

    return 0
  }

  function TAG_BIGNUM_FLOAT (octet) {
    octet = octet | 0

    pushTagStart(octet | 0)

    offset = (offset + 1 | 0)

    return 0
  }

  function TAG_UNASSIGNED (octet) {
    octet = octet | 0

    pushTagStart((octet - 192| 0) | 0)

    offset = (offset + 1 | 0)

    return 0
  }

  function TAG_BASE64_URL (octet) {
    octet = octet | 0

    pushTagStart(octet | 0)

    offset = (offset + 1 | 0)

    return 0
  }

  function TAG_BASE64 (octet) {
    octet = octet | 0

    pushTagStart(octet | 0)

    offset = (offset + 1 | 0)

    return 0
  }

  function TAG_BASE16 (octet) {
    octet = octet | 0

    pushTagStart(octet | 0)

    offset = (offset + 1 | 0)

    return 0
  }

  function TAG_MORE_1 (octet) {
    octet = octet | 0

    if (checkOffset(1) | 0) {
      return 1
    }

    pushTagStart(heap[(offset + 1) | 0] | 0)

    offset = (offset + 2 | 0)

    return 0
  }

  function TAG_MORE_2 (octet) {
    octet = octet | 0

    if (checkOffset(2) | 0) {
      return 1
    }

    pushTagStart(
      readUInt16((offset + 1) | 0) | 0
    )

    offset = (offset + 3 | 0)

    return 0
  }

  function TAG_MORE_4 (octet) {
    octet = octet | 0

    if (checkOffset(4) | 0) {
      return 1
    }

    pushTagStart4(
      readUInt16((offset + 1) | 0) | 0,
      readUInt16((offset + 3) | 0) | 0
    )

    offset = (offset + 5 | 0)

    return 0
  }

  function TAG_MORE_8 (octet) {
    octet = octet | 0

    if (checkOffset(8) | 0) {
      return 1
    }

    pushTagStart8(
      readUInt16((offset + 1) | 0) | 0,
      readUInt16((offset + 3) | 0) | 0,
      readUInt16((offset + 5) | 0) | 0,
      readUInt16((offset + 7) | 0) | 0
    )

    offset = (offset + 9 | 0)

    return 0
  }

  function SIMPLE_UNASSIGNED (octet) {
    octet = octet | 0

    pushSimpleUnassigned(((octet | 0) - 224) | 0)

    offset = (offset + 1) | 0

    return 0
  }

  function SIMPLE_FALSE (octet) {
    octet = octet | 0

    pushFalse()

    offset = (offset + 1) | 0

    return 0
  }

  function SIMPLE_TRUE (octet) {
    octet = octet | 0

    pushTrue()

    offset = (offset + 1) | 0

    return 0
  }

  function SIMPLE_NULL (octet) {
    octet = octet | 0

    pushNull()

    offset = (offset + 1) | 0

    return 0
  }

  function SIMPLE_UNDEFINED (octet) {
    octet = octet | 0

    pushUndefined()

    offset = (offset + 1) | 0

    return 0
  }

  function SIMPLE_BYTE (octet) {
    octet = octet | 0

    if (checkOffset(1) | 0) {
      return 1
    }

    pushSimpleUnassigned(heap[(offset + 1) | 0] | 0)

    offset = (offset + 2)  | 0

    return 0
  }

  function SIMPLE_FLOAT_HALF (octet) {
    octet = octet | 0

    var f = 0
    var g = 0
    var sign = 1.0
    var exp = 0.0
    var mant = 0.0
    var r = 0.0
    if (checkOffset(2) | 0) {
      return 1
    }

    f = heap[(offset + 1) | 0] | 0
    g = heap[(offset + 2) | 0] | 0

    if ((f | 0) & 0x80) {
      sign = -1.0
    }

    exp = +(((f | 0) & 0x7C) >> 2)
    mant = +((((f | 0) & 0x03) << 8) | g)

    if (+exp == 0.0) {
      pushFloat(+(
        (+sign) * +5.9604644775390625e-8 * (+mant)
      ))
    } else if (+exp == 31.0) {
      if (+sign == 1.0) {
        if (+mant > 0.0) {
          pushNaN()
        } else {
          pushInfinity()
        }
      } else {
        if (+mant > 0.0) {
          pushNaNNeg()
        } else {
          pushInfinityNeg()
        }
      }
    } else {
      pushFloat(+(
        +sign * pow(+2, +(+exp - 25.0)) * +(1024.0 + mant)
      ))
    }

    offset = (offset + 3) | 0

    return 0
  }

  function SIMPLE_FLOAT_SINGLE (octet) {
    octet = octet | 0

    if (checkOffset(4) | 0) {
      return 1
    }

    pushFloatSingle(
      heap[(offset + 1) | 0] | 0,
      heap[(offset + 2) | 0] | 0,
      heap[(offset + 3) | 0] | 0,
      heap[(offset + 4) | 0] | 0
    )

    offset = (offset + 5) | 0

    return 0
  }

  function SIMPLE_FLOAT_DOUBLE (octet) {
    octet = octet | 0

    if (checkOffset(8) | 0) {
      return 1
    }

    pushFloatDouble(
      heap[(offset + 1) | 0] | 0,
      heap[(offset + 2) | 0] | 0,
      heap[(offset + 3) | 0] | 0,
      heap[(offset + 4) | 0] | 0,
      heap[(offset + 5) | 0] | 0,
      heap[(offset + 6) | 0] | 0,
      heap[(offset + 7) | 0] | 0,
      heap[(offset + 8) | 0] | 0
    )

    offset = (offset + 9) | 0

    return 0
  }

  function ERROR (octet) {
    octet = octet | 0

    return 1
  }

  function BREAK (octet) {
    octet = octet | 0

    pushBreak()

    offset = (offset + 1) | 0

    return 0
  }

  // -- Jump Table

  var jumpTable = [
    // Integer 0x00..0x17 (0..23)
    INT_P, // 0x00
    INT_P, // 0x01
    INT_P, // 0x02
    INT_P, // 0x03
    INT_P, // 0x04
    INT_P, // 0x05
    INT_P, // 0x06
    INT_P, // 0x07
    INT_P, // 0x08
    INT_P, // 0x09
    INT_P, // 0x0A
    INT_P, // 0x0B
    INT_P, // 0x0C
    INT_P, // 0x0D
    INT_P, // 0x0E
    INT_P, // 0x0F
    INT_P, // 0x10
    INT_P, // 0x11
    INT_P, // 0x12
    INT_P, // 0x13
    INT_P, // 0x14
    INT_P, // 0x15
    INT_P, // 0x16
    INT_P, // 0x17
    // Unsigned integer (one-byte uint8_t follows)
    UINT_P_8, // 0x18
    // Unsigned integer (two-byte uint16_t follows)
    UINT_P_16, // 0x19
    // Unsigned integer (four-byte uint32_t follows)
    UINT_P_32, // 0x1a
    // Unsigned integer (eight-byte uint64_t follows)
    UINT_P_64, // 0x1b
    ERROR, // 0x1c
    ERROR, // 0x1d
    ERROR, // 0x1e
    ERROR, // 0x1f
    // Negative integer -1-0x00..-1-0x17 (-1..-24)
    INT_N, // 0x20
    INT_N, // 0x21
    INT_N, // 0x22
    INT_N, // 0x23
    INT_N, // 0x24
    INT_N, // 0x25
    INT_N, // 0x26
    INT_N, // 0x27
    INT_N, // 0x28
    INT_N, // 0x29
    INT_N, // 0x2A
    INT_N, // 0x2B
    INT_N, // 0x2C
    INT_N, // 0x2D
    INT_N, // 0x2E
    INT_N, // 0x2F
    INT_N, // 0x30
    INT_N, // 0x31
    INT_N, // 0x32
    INT_N, // 0x33
    INT_N, // 0x34
    INT_N, // 0x35
    INT_N, // 0x36
    INT_N, // 0x37
    // Negative integer -1-n (one-byte uint8_t for n follows)
    UINT_N_8, // 0x38
    // Negative integer -1-n (two-byte uint16_t for n follows)
    UINT_N_16, // 0x39
    // Negative integer -1-n (four-byte uint32_t for nfollows)
    UINT_N_32, // 0x3a
    // Negative integer -1-n (eight-byte uint64_t for n follows)
    UINT_N_64, // 0x3b
    ERROR, // 0x3c
    ERROR, // 0x3d
    ERROR, // 0x3e
    ERROR, // 0x3f
    // byte string (0x00..0x17 bytes follow)
    BYTE_STRING, // 0x40
    BYTE_STRING, // 0x41
    BYTE_STRING, // 0x42
    BYTE_STRING, // 0x43
    BYTE_STRING, // 0x44
    BYTE_STRING, // 0x45
    BYTE_STRING, // 0x46
    BYTE_STRING, // 0x47
    BYTE_STRING, // 0x48
    BYTE_STRING, // 0x49
    BYTE_STRING, // 0x4A
    BYTE_STRING, // 0x4B
    BYTE_STRING, // 0x4C
    BYTE_STRING, // 0x4D
    BYTE_STRING, // 0x4E
    BYTE_STRING, // 0x4F
    BYTE_STRING, // 0x50
    BYTE_STRING, // 0x51
    BYTE_STRING, // 0x52
    BYTE_STRING, // 0x53
    BYTE_STRING, // 0x54
    BYTE_STRING, // 0x55
    BYTE_STRING, // 0x56
    BYTE_STRING, // 0x57
    // byte string (one-byte uint8_t for n, and then n bytes follow)
    BYTE_STRING_8, // 0x58
    // byte string (two-byte uint16_t for n, and then n bytes follow)
    BYTE_STRING_16, // 0x59
    // byte string (four-byte uint32_t for n, and then n bytes follow)
    BYTE_STRING_32, // 0x5a
    // byte string (eight-byte uint64_t for n, and then n bytes follow)
    BYTE_STRING_64, // 0x5b
    ERROR, // 0x5c
    ERROR, // 0x5d
    ERROR, // 0x5e
    // byte string, byte strings follow, terminated by "break"
    BYTE_STRING_BREAK, // 0x5f
    // UTF-8 string (0x00..0x17 bytes follow)
    UTF8_STRING, // 0x60
    UTF8_STRING, // 0x61
    UTF8_STRING, // 0x62
    UTF8_STRING, // 0x63
    UTF8_STRING, // 0x64
    UTF8_STRING, // 0x65
    UTF8_STRING, // 0x66
    UTF8_STRING, // 0x67
    UTF8_STRING, // 0x68
    UTF8_STRING, // 0x69
    UTF8_STRING, // 0x6A
    UTF8_STRING, // 0x6B
    UTF8_STRING, // 0x6C
    UTF8_STRING, // 0x6D
    UTF8_STRING, // 0x6E
    UTF8_STRING, // 0x6F
    UTF8_STRING, // 0x70
    UTF8_STRING, // 0x71
    UTF8_STRING, // 0x72
    UTF8_STRING, // 0x73
    UTF8_STRING, // 0x74
    UTF8_STRING, // 0x75
    UTF8_STRING, // 0x76
    UTF8_STRING, // 0x77
    // UTF-8 string (one-byte uint8_t for n, and then n bytes follow)
    UTF8_STRING_8, // 0x78
    // UTF-8 string (two-byte uint16_t for n, and then n bytes follow)
    UTF8_STRING_16, // 0x79
    // UTF-8 string (four-byte uint32_t for n, and then n bytes follow)
    UTF8_STRING_32, // 0x7a
    // UTF-8 string (eight-byte uint64_t for n, and then n bytes follow)
    UTF8_STRING_64, // 0x7b
    // UTF-8 string, UTF-8 strings follow, terminated by "break"
    ERROR, // 0x7c
    ERROR, // 0x7d
    ERROR, // 0x7e
    UTF8_STRING_BREAK, // 0x7f
    // array (0x00..0x17 data items follow)
    ARRAY, // 0x80
    ARRAY, // 0x81
    ARRAY, // 0x82
    ARRAY, // 0x83
    ARRAY, // 0x84
    ARRAY, // 0x85
    ARRAY, // 0x86
    ARRAY, // 0x87
    ARRAY, // 0x88
    ARRAY, // 0x89
    ARRAY, // 0x8A
    ARRAY, // 0x8B
    ARRAY, // 0x8C
    ARRAY, // 0x8D
    ARRAY, // 0x8E
    ARRAY, // 0x8F
    ARRAY, // 0x90
    ARRAY, // 0x91
    ARRAY, // 0x92
    ARRAY, // 0x93
    ARRAY, // 0x94
    ARRAY, // 0x95
    ARRAY, // 0x96
    ARRAY, // 0x97
    // array (one-byte uint8_t fo, and then n data items follow)
    ARRAY_8, // 0x98
    // array (two-byte uint16_t for n, and then n data items follow)
    ARRAY_16, // 0x99
    // array (four-byte uint32_t for n, and then n data items follow)
    ARRAY_32, // 0x9a
    // array (eight-byte uint64_t for n, and then n data items follow)
    ARRAY_64, // 0x9b
    // array, data items follow, terminated by "break"
    ERROR, // 0x9c
    ERROR, // 0x9d
    ERROR, // 0x9e
    ARRAY_BREAK, // 0x9f
    // map (0x00..0x17 pairs of data items follow)
    MAP, // 0xa0
    MAP, // 0xa1
    MAP, // 0xa2
    MAP, // 0xa3
    MAP, // 0xa4
    MAP, // 0xa5
    MAP, // 0xa6
    MAP, // 0xa7
    MAP, // 0xa8
    MAP, // 0xa9
    MAP, // 0xaA
    MAP, // 0xaB
    MAP, // 0xaC
    MAP, // 0xaD
    MAP, // 0xaE
    MAP, // 0xaF
    MAP, // 0xb0
    MAP, // 0xb1
    MAP, // 0xb2
    MAP, // 0xb3
    MAP, // 0xb4
    MAP, // 0xb5
    MAP, // 0xb6
    MAP, // 0xb7
    // map (one-byte uint8_t for n, and then n pairs of data items follow)
    MAP_8, // 0xb8
    // map (two-byte uint16_t for n, and then n pairs of data items follow)
    MAP_16, // 0xb9
    // map (four-byte uint32_t for n, and then n pairs of data items follow)
    MAP_32, // 0xba
    // map (eight-byte uint64_t for n, and then n pairs of data items follow)
    MAP_64, // 0xbb
    ERROR, // 0xbc
    ERROR, // 0xbd
    ERROR, // 0xbe
    // map, pairs of data items follow, terminated by "break"
    MAP_BREAK, // 0xbf
    // Text-based date/time (data item follows; see Section 2.4.1)
    TAG_KNOWN, // 0xc0
    // Epoch-based date/time (data item follows; see Section 2.4.1)
    TAG_KNOWN, // 0xc1
    // Positive bignum (data item "byte string" follows)
    TAG_KNOWN, // 0xc2
    // Negative bignum (data item "byte string" follows)
    TAG_KNOWN, // 0xc3
    // Decimal Fraction (data item "array" follows; see Section 2.4.3)
    TAG_KNOWN, // 0xc4
    // Bigfloat (data item "array" follows; see Section 2.4.3)
    TAG_KNOWN, // 0xc5
    // (tagged item)
    TAG_UNASSIGNED, // 0xc6
    TAG_UNASSIGNED, // 0xc7
    TAG_UNASSIGNED, // 0xc8
    TAG_UNASSIGNED, // 0xc9
    TAG_UNASSIGNED, // 0xca
    TAG_UNASSIGNED, // 0xcb
    TAG_UNASSIGNED, // 0xcc
    TAG_UNASSIGNED, // 0xcd
    TAG_UNASSIGNED, // 0xce
    TAG_UNASSIGNED, // 0xcf
    TAG_UNASSIGNED, // 0xd0
    TAG_UNASSIGNED, // 0xd1
    TAG_UNASSIGNED, // 0xd2
    TAG_UNASSIGNED, // 0xd3
    TAG_UNASSIGNED, // 0xd4
    // Expected Conversion (data item follows; see Section 2.4.4.2)
    TAG_UNASSIGNED, // 0xd5
    TAG_UNASSIGNED, // 0xd6
    TAG_UNASSIGNED, // 0xd7
    // (more tagged items, 1/2/4/8 bytes and then a data item follow)
    TAG_MORE_1, // 0xd8
    TAG_MORE_2, // 0xd9
    TAG_MORE_4, // 0xda
    TAG_MORE_8, // 0xdb
    ERROR, // 0xdc
    ERROR, // 0xdd
    ERROR, // 0xde
    ERROR, // 0xdf
    // (simple value)
    SIMPLE_UNASSIGNED, // 0xe0
    SIMPLE_UNASSIGNED, // 0xe1
    SIMPLE_UNASSIGNED, // 0xe2
    SIMPLE_UNASSIGNED, // 0xe3
    SIMPLE_UNASSIGNED, // 0xe4
    SIMPLE_UNASSIGNED, // 0xe5
    SIMPLE_UNASSIGNED, // 0xe6
    SIMPLE_UNASSIGNED, // 0xe7
    SIMPLE_UNASSIGNED, // 0xe8
    SIMPLE_UNASSIGNED, // 0xe9
    SIMPLE_UNASSIGNED, // 0xea
    SIMPLE_UNASSIGNED, // 0xeb
    SIMPLE_UNASSIGNED, // 0xec
    SIMPLE_UNASSIGNED, // 0xed
    SIMPLE_UNASSIGNED, // 0xee
    SIMPLE_UNASSIGNED, // 0xef
    SIMPLE_UNASSIGNED, // 0xf0
    SIMPLE_UNASSIGNED, // 0xf1
    SIMPLE_UNASSIGNED, // 0xf2
    SIMPLE_UNASSIGNED, // 0xf3
    // False
    SIMPLE_FALSE, // 0xf4
    // True
    SIMPLE_TRUE, // 0xf5
    // Null
    SIMPLE_NULL, // 0xf6
    // Undefined
    SIMPLE_UNDEFINED, // 0xf7
    // (simple value, one byte follows)
    SIMPLE_BYTE, // 0xf8
    // Half-Precision Float (two-byte IEEE 754)
    SIMPLE_FLOAT_HALF, // 0xf9
    // Single-Precision Float (four-byte IEEE 754)
    SIMPLE_FLOAT_SINGLE, // 0xfa
    // Double-Precision Float (eight-byte IEEE 754)
    SIMPLE_FLOAT_DOUBLE, // 0xfb
    ERROR, // 0xfc
    ERROR, // 0xfd
    ERROR, // 0xfe
    // "break" stop code
    BREAK // 0xff
  ]

  // --

  return {
    parse: parse
  }
}


/***/ }),

/***/ 9988:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const { Buffer } = __webpack_require__(6526)
const ieee754 = __webpack_require__(645)
const Bignumber = (__webpack_require__(4431).BigNumber)

const parser = __webpack_require__(5520)
const utils = __webpack_require__(1516)
const c = __webpack_require__(9478)
const Simple = __webpack_require__(5649)
const Tagged = __webpack_require__(794)
const { URL } = __webpack_require__(7745)

/**
 * Transform binary cbor data into JavaScript objects.
 */
class Decoder {
  /**
   * @param {Object} [opts={}]
   * @param {number} [opts.size=65536] - Size of the allocated heap.
   */
  constructor (opts) {
    opts = opts || {}

    if (!opts.size || opts.size < 0x10000) {
      opts.size = 0x10000
    } else {
      // Ensure the size is a power of 2
      opts.size = utils.nextPowerOf2(opts.size)
    }

    // Heap use to share the input with the parser
    this._heap = new ArrayBuffer(opts.size)
    this._heap8 = new Uint8Array(this._heap)
    this._buffer = Buffer.from(this._heap)

    this._reset()

    // Known tags
    this._knownTags = Object.assign({
      0: (val) => new Date(val),
      1: (val) => new Date(val * 1000),
      2: (val) => utils.arrayBufferToBignumber(val),
      3: (val) => c.NEG_ONE.minus(utils.arrayBufferToBignumber(val)),
      4: (v) => {
        // const v = new Uint8Array(val)
        return c.TEN.pow(v[0]).times(v[1])
      },
      5: (v) => {
        // const v = new Uint8Array(val)
        return c.TWO.pow(v[0]).times(v[1])
      },
      32: (val) => new URL(val),
      35: (val) => new RegExp(val)
    }, opts.tags)

    // Initialize asm based parser
    this.parser = parser(__webpack_require__.g, {
      // eslint-disable-next-line no-console
      log: console.log.bind(console),
      pushInt: this.pushInt.bind(this),
      pushInt32: this.pushInt32.bind(this),
      pushInt32Neg: this.pushInt32Neg.bind(this),
      pushInt64: this.pushInt64.bind(this),
      pushInt64Neg: this.pushInt64Neg.bind(this),
      pushFloat: this.pushFloat.bind(this),
      pushFloatSingle: this.pushFloatSingle.bind(this),
      pushFloatDouble: this.pushFloatDouble.bind(this),
      pushTrue: this.pushTrue.bind(this),
      pushFalse: this.pushFalse.bind(this),
      pushUndefined: this.pushUndefined.bind(this),
      pushNull: this.pushNull.bind(this),
      pushInfinity: this.pushInfinity.bind(this),
      pushInfinityNeg: this.pushInfinityNeg.bind(this),
      pushNaN: this.pushNaN.bind(this),
      pushNaNNeg: this.pushNaNNeg.bind(this),
      pushArrayStart: this.pushArrayStart.bind(this),
      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),
      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),
      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),
      pushObjectStart: this.pushObjectStart.bind(this),
      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),
      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),
      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),
      pushByteString: this.pushByteString.bind(this),
      pushByteStringStart: this.pushByteStringStart.bind(this),
      pushUtf8String: this.pushUtf8String.bind(this),
      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),
      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),
      pushTagUnassigned: this.pushTagUnassigned.bind(this),
      pushTagStart: this.pushTagStart.bind(this),
      pushTagStart4: this.pushTagStart4.bind(this),
      pushTagStart8: this.pushTagStart8.bind(this),
      pushBreak: this.pushBreak.bind(this)
    }, this._heap)
  }

  get _depth () {
    return this._parents.length
  }

  get _currentParent () {
    return this._parents[this._depth - 1]
  }

  get _ref () {
    return this._currentParent.ref
  }

  // Finish the current parent
  _closeParent () {
    var p = this._parents.pop()

    if (p.length > 0) {
      throw new Error(`Missing ${p.length} elements`)
    }

    switch (p.type) {
      case c.PARENT.TAG:
        this._push(
          this.createTag(p.ref[0], p.ref[1])
        )
        break
      case c.PARENT.BYTE_STRING:
        this._push(this.createByteString(p.ref, p.length))
        break
      case c.PARENT.UTF8_STRING:
        this._push(this.createUtf8String(p.ref, p.length))
        break
      case c.PARENT.MAP:
        if (p.values % 2 > 0) {
          throw new Error('Odd number of elements in the map')
        }
        this._push(this.createMap(p.ref, p.length))
        break
      case c.PARENT.OBJECT:
        if (p.values % 2 > 0) {
          throw new Error('Odd number of elements in the map')
        }
        this._push(this.createObject(p.ref, p.length))
        break
      case c.PARENT.ARRAY:
        this._push(this.createArray(p.ref, p.length))
        break
      default:
        break
    }

    if (this._currentParent && this._currentParent.type === c.PARENT.TAG) {
      this._dec()
    }
  }

  // Reduce the expected length of the current parent by one
  _dec () {
    const p = this._currentParent
    // The current parent does not know the epxected child length

    if (p.length < 0) {
      return
    }

    p.length--

    // All children were seen, we can close the current parent
    if (p.length === 0) {
      this._closeParent()
    }
  }

  // Push any value to the current parent
  _push (val, hasChildren) {
    const p = this._currentParent
    p.values++

    switch (p.type) {
      case c.PARENT.ARRAY:
      case c.PARENT.BYTE_STRING:
      case c.PARENT.UTF8_STRING:
        if (p.length > -1) {
          this._ref[this._ref.length - p.length] = val
        } else {
          this._ref.push(val)
        }
        this._dec()
        break
      case c.PARENT.OBJECT:
        if (p.tmpKey != null) {
          this._ref[p.tmpKey] = val
          p.tmpKey = null
          this._dec()
        } else {
          p.tmpKey = val

          if (typeof p.tmpKey !== 'string') {
            // too bad, convert to a Map
            p.type = c.PARENT.MAP
            p.ref = utils.buildMap(p.ref)
          }
        }
        break
      case c.PARENT.MAP:
        if (p.tmpKey != null) {
          this._ref.set(p.tmpKey, val)
          p.tmpKey = null
          this._dec()
        } else {
          p.tmpKey = val
        }
        break
      case c.PARENT.TAG:
        this._ref.push(val)
        if (!hasChildren) {
          this._dec()
        }
        break
      default:
        throw new Error('Unknown parent type')
    }
  }

  // Create a new parent in the parents list
  _createParent (obj, type, len) {
    this._parents[this._depth] = {
      type: type,
      length: len,
      ref: obj,
      values: 0,
      tmpKey: null
    }
  }

  // Reset all state back to the beginning, also used for initiatlization
  _reset () {
    this._res = []
    this._parents = [{
      type: c.PARENT.ARRAY,
      length: -1,
      ref: this._res,
      values: 0,
      tmpKey: null
    }]
  }

  // -- Interface to customize deoding behaviour
  createTag (tagNumber, value) {
    const typ = this._knownTags[tagNumber]

    if (!typ) {
      return new Tagged(tagNumber, value)
    }

    return typ(value)
  }

  createMap (obj, len) {
    return obj
  }

  createObject (obj, len) {
    return obj
  }

  createArray (arr, len) {
    return arr
  }

  createByteString (raw, len) {
    return Buffer.concat(raw)
  }

  createByteStringFromHeap (start, end) {
    if (start === end) {
      return Buffer.alloc(0)
    }

    return Buffer.from(this._heap.slice(start, end))
  }

  createInt (val) {
    return val
  }

  createInt32 (f, g) {
    return utils.buildInt32(f, g)
  }

  createInt64 (f1, f2, g1, g2) {
    return utils.buildInt64(f1, f2, g1, g2)
  }

  createFloat (val) {
    return val
  }

  createFloatSingle (a, b, c, d) {
    return ieee754.read([a, b, c, d], 0, false, 23, 4)
  }

  createFloatDouble (a, b, c, d, e, f, g, h) {
    return ieee754.read([a, b, c, d, e, f, g, h], 0, false, 52, 8)
  }

  createInt32Neg (f, g) {
    return -1 - utils.buildInt32(f, g)
  }

  createInt64Neg (f1, f2, g1, g2) {
    const f = utils.buildInt32(f1, f2)
    const g = utils.buildInt32(g1, g2)

    if (f > c.MAX_SAFE_HIGH) {
      return c.NEG_ONE.minus(new Bignumber(f).times(c.SHIFT32).plus(g))
    }

    return -1 - ((f * c.SHIFT32) + g)
  }

  createTrue () {
    return true
  }

  createFalse () {
    return false
  }

  createNull () {
    return null
  }

  createUndefined () {
    return undefined
  }

  createInfinity () {
    return Infinity
  }

  createInfinityNeg () {
    return -Infinity
  }

  createNaN () {
    return NaN
  }

  createNaNNeg () {
    return -NaN
  }

  createUtf8String (raw, len) {
    return raw.join('')
  }

  createUtf8StringFromHeap (start, end) {
    if (start === end) {
      return ''
    }

    return this._buffer.toString('utf8', start, end)
  }

  createSimpleUnassigned (val) {
    return new Simple(val)
  }

  // -- Interface for decoder.asm.js

  pushInt (val) {
    this._push(this.createInt(val))
  }

  pushInt32 (f, g) {
    this._push(this.createInt32(f, g))
  }

  pushInt64 (f1, f2, g1, g2) {
    this._push(this.createInt64(f1, f2, g1, g2))
  }

  pushFloat (val) {
    this._push(this.createFloat(val))
  }

  pushFloatSingle (a, b, c, d) {
    this._push(this.createFloatSingle(a, b, c, d))
  }

  pushFloatDouble (a, b, c, d, e, f, g, h) {
    this._push(this.createFloatDouble(a, b, c, d, e, f, g, h))
  }

  pushInt32Neg (f, g) {
    this._push(this.createInt32Neg(f, g))
  }

  pushInt64Neg (f1, f2, g1, g2) {
    this._push(this.createInt64Neg(f1, f2, g1, g2))
  }

  pushTrue () {
    this._push(this.createTrue())
  }

  pushFalse () {
    this._push(this.createFalse())
  }

  pushNull () {
    this._push(this.createNull())
  }

  pushUndefined () {
    this._push(this.createUndefined())
  }

  pushInfinity () {
    this._push(this.createInfinity())
  }

  pushInfinityNeg () {
    this._push(this.createInfinityNeg())
  }

  pushNaN () {
    this._push(this.createNaN())
  }

  pushNaNNeg () {
    this._push(this.createNaNNeg())
  }

  pushArrayStart () {
    this._createParent([], c.PARENT.ARRAY, -1)
  }

  pushArrayStartFixed (len) {
    this._createArrayStartFixed(len)
  }

  pushArrayStartFixed32 (len1, len2) {
    const len = utils.buildInt32(len1, len2)
    this._createArrayStartFixed(len)
  }

  pushArrayStartFixed64 (len1, len2, len3, len4) {
    const len = utils.buildInt64(len1, len2, len3, len4)
    this._createArrayStartFixed(len)
  }

  pushObjectStart () {
    this._createObjectStartFixed(-1)
  }

  pushObjectStartFixed (len) {
    this._createObjectStartFixed(len)
  }

  pushObjectStartFixed32 (len1, len2) {
    const len = utils.buildInt32(len1, len2)
    this._createObjectStartFixed(len)
  }

  pushObjectStartFixed64 (len1, len2, len3, len4) {
    const len = utils.buildInt64(len1, len2, len3, len4)
    this._createObjectStartFixed(len)
  }

  pushByteStringStart () {
    this._parents[this._depth] = {
      type: c.PARENT.BYTE_STRING,
      length: -1,
      ref: [],
      values: 0,
      tmpKey: null
    }
  }

  pushByteString (start, end) {
    this._push(this.createByteStringFromHeap(start, end))
  }

  pushUtf8StringStart () {
    this._parents[this._depth] = {
      type: c.PARENT.UTF8_STRING,
      length: -1,
      ref: [],
      values: 0,
      tmpKey: null
    }
  }

  pushUtf8String (start, end) {
    this._push(this.createUtf8StringFromHeap(start, end))
  }

  pushSimpleUnassigned (val) {
    this._push(this.createSimpleUnassigned(val))
  }

  pushTagStart (tag) {
    this._parents[this._depth] = {
      type: c.PARENT.TAG,
      length: 1,
      ref: [tag]
    }
  }

  pushTagStart4 (f, g) {
    this.pushTagStart(utils.buildInt32(f, g))
  }

  pushTagStart8 (f1, f2, g1, g2) {
    this.pushTagStart(utils.buildInt64(f1, f2, g1, g2))
  }

  pushTagUnassigned (tagNumber) {
    this._push(this.createTag(tagNumber))
  }

  pushBreak () {
    if (this._currentParent.length > -1) {
      throw new Error('Unexpected break')
    }

    this._closeParent()
  }

  _createObjectStartFixed (len) {
    if (len === 0) {
      this._push(this.createObject({}))
      return
    }

    this._createParent({}, c.PARENT.OBJECT, len)
  }

  _createArrayStartFixed (len) {
    if (len === 0) {
      this._push(this.createArray([]))
      return
    }

    this._createParent(new Array(len), c.PARENT.ARRAY, len)
  }

  _decode (input) {
    if (input.byteLength === 0) {
      throw new Error('Input too short')
    }

    this._reset()
    this._heap8.set(input)
    const code = this.parser.parse(input.byteLength)

    if (this._depth > 1) {
      while (this._currentParent.length === 0) {
        this._closeParent()
      }
      if (this._depth > 1) {
        throw new Error('Undeterminated nesting')
      }
    }

    if (code > 0) {
      throw new Error('Failed to parse')
    }

    if (this._res.length === 0) {
      throw new Error('No valid result')
    }
  }

  // -- Public Interface

  decodeFirst (input) {
    this._decode(input)

    return this._res[0]
  }

  decodeAll (input) {
    this._decode(input)

    return this._res
  }

  /**
   * Decode the first cbor object.
   *
   * @param {Buffer|string} input
   * @param {string} [enc='hex'] - Encoding used if a string is passed.
   * @returns {*}
   */
  static decode (input, enc) {
    if (typeof input === 'string') {
      input = Buffer.from(input, enc || 'hex')
    }

    const dec = new Decoder({ size: input.length })
    return dec.decodeFirst(input)
  }

  /**
   * Decode all cbor objects.
   *
   * @param {Buffer|string} input
   * @param {string} [enc='hex'] - Encoding used if a string is passed.
   * @returns {Array<*>}
   */
  static decodeAll (input, enc) {
    if (typeof input === 'string') {
      input = Buffer.from(input, enc || 'hex')
    }

    const dec = new Decoder({ size: input.length })
    return dec.decodeAll(input)
  }
}

Decoder.decodeFirst = Decoder.decode

module.exports = Decoder


/***/ }),

/***/ 3817:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const { Buffer } = __webpack_require__(6526)
const Decoder = __webpack_require__(9988)
const utils = __webpack_require__(1516)

/**
 * Output the diagnostic format from a stream of CBOR bytes.
 *
 */
class Diagnose extends Decoder {
  createTag (tagNumber, value) {
    return `${tagNumber}(${value})`
  }

  createInt (val) {
    return super.createInt(val).toString()
  }

  createInt32 (f, g) {
    return super.createInt32(f, g).toString()
  }

  createInt64 (f1, f2, g1, g2) {
    return super.createInt64(f1, f2, g1, g2).toString()
  }

  createInt32Neg (f, g) {
    return super.createInt32Neg(f, g).toString()
  }

  createInt64Neg (f1, f2, g1, g2) {
    return super.createInt64Neg(f1, f2, g1, g2).toString()
  }

  createTrue () {
    return 'true'
  }

  createFalse () {
    return 'false'
  }

  createFloat (val) {
    const fl = super.createFloat(val)
    if (utils.isNegativeZero(val)) {
      return '-0_1'
    }

    return `${fl}_1`
  }

  createFloatSingle (a, b, c, d) {
    const fl = super.createFloatSingle(a, b, c, d)
    return `${fl}_2`
  }

  createFloatDouble (a, b, c, d, e, f, g, h) {
    const fl = super.createFloatDouble(a, b, c, d, e, f, g, h)
    return `${fl}_3`
  }

  createByteString (raw, len) {
    const val = raw.join(', ')

    if (len === -1) {
      return `(_ ${val})`
    }
    return `h'${val}`
  }

  createByteStringFromHeap (start, end) {
    const val = (Buffer.from(
      super.createByteStringFromHeap(start, end)
    )).toString('hex')

    return `h'${val}'`
  }

  createInfinity () {
    return 'Infinity_1'
  }

  createInfinityNeg () {
    return '-Infinity_1'
  }

  createNaN () {
    return 'NaN_1'
  }

  createNaNNeg () {
    return '-NaN_1'
  }

  createNull () {
    return 'null'
  }

  createUndefined () {
    return 'undefined'
  }

  createSimpleUnassigned (val) {
    return `simple(${val})`
  }

  createArray (arr, len) {
    const val = super.createArray(arr, len)

    if (len === -1) {
      // indefinite
      return `[_ ${val.join(', ')}]`
    }

    return `[${val.join(', ')}]`
  }

  createMap (map, len) {
    const val = super.createMap(map)
    const list = Array.from(val.keys())
      .reduce(collectObject(val), '')

    if (len === -1) {
      return `{_ ${list}}`
    }

    return `{${list}}`
  }

  createObject (obj, len) {
    const val = super.createObject(obj)
    const map = Object.keys(val)
      .reduce(collectObject(val), '')

    if (len === -1) {
      return `{_ ${map}}`
    }

    return `{${map}}`
  }

  createUtf8String (raw, len) {
    const val = raw.join(', ')

    if (len === -1) {
      return `(_ ${val})`
    }

    return `"${val}"`
  }

  createUtf8StringFromHeap (start, end) {
    const val = (Buffer.from(
      super.createUtf8StringFromHeap(start, end)
    )).toString('utf8')

    return `"${val}"`
  }

  static diagnose (input, enc) {
    if (typeof input === 'string') {
      input = Buffer.from(input, enc || 'hex')
    }

    const dec = new Diagnose()
    return dec.decodeFirst(input)
  }
}

module.exports = Diagnose

function collectObject (val) {
  return (acc, key) => {
    if (acc) {
      return `${acc}, ${key}: ${val[key]}`
    }
    return `${key}: ${val[key]}`
  }
}


/***/ }),

/***/ 9199:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const { Buffer } = __webpack_require__(6526)
const { URL } = __webpack_require__(7745)
const Bignumber = (__webpack_require__(4431).BigNumber)

const utils = __webpack_require__(1516)
const constants = __webpack_require__(9478)
const MT = constants.MT
const NUMBYTES = constants.NUMBYTES
const SHIFT32 = constants.SHIFT32
const SYMS = constants.SYMS
const TAG = constants.TAG
const HALF = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.TWO
const FLOAT = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.FOUR
const DOUBLE = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.EIGHT
const TRUE = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.TRUE
const FALSE = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.FALSE
const UNDEFINED = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.UNDEFINED
const NULL = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.NULL

const MAXINT_BN = new Bignumber('0x20000000000000')
const BUF_NAN = Buffer.from('f97e00', 'hex')
const BUF_INF_NEG = Buffer.from('f9fc00', 'hex')
const BUF_INF_POS = Buffer.from('f97c00', 'hex')

function toType (obj) {
  // [object Type]
  // --------8---1
  return ({}).toString.call(obj).slice(8, -1)
}

/**
 * Transform JavaScript values into CBOR bytes
 *
 */
class Encoder {
  /**
   * @param {Object} [options={}]
   * @param {function(Buffer)} options.stream
   */
  constructor (options) {
    options = options || {}

    this.streaming = typeof options.stream === 'function'
    this.onData = options.stream

    this.semanticTypes = [
      [URL, this._pushUrl],
      [Bignumber, this._pushBigNumber]
    ]

    const addTypes = options.genTypes || []
    const len = addTypes.length
    for (let i = 0; i < len; i++) {
      this.addSemanticType(
        addTypes[i][0],
        addTypes[i][1]
      )
    }

    this._reset()
  }

  addSemanticType (type, fun) {
    const len = this.semanticTypes.length
    for (let i = 0; i < len; i++) {
      const typ = this.semanticTypes[i][0]
      if (typ === type) {
        const old = this.semanticTypes[i][1]
        this.semanticTypes[i][1] = fun
        return old
      }
    }
    this.semanticTypes.push([type, fun])
    return null
  }

  push (val) {
    if (!val) {
      return true
    }

    this.result[this.offset] = val
    this.resultMethod[this.offset] = 0
    this.resultLength[this.offset] = val.length
    this.offset++

    if (this.streaming) {
      this.onData(this.finalize())
    }

    return true
  }

  pushWrite (val, method, len) {
    this.result[this.offset] = val
    this.resultMethod[this.offset] = method
    this.resultLength[this.offset] = len
    this.offset++

    if (this.streaming) {
      this.onData(this.finalize())
    }

    return true
  }

  _pushUInt8 (val) {
    return this.pushWrite(val, 1, 1)
  }

  _pushUInt16BE (val) {
    return this.pushWrite(val, 2, 2)
  }

  _pushUInt32BE (val) {
    return this.pushWrite(val, 3, 4)
  }

  _pushDoubleBE (val) {
    return this.pushWrite(val, 4, 8)
  }

  _pushNaN () {
    return this.push(BUF_NAN)
  }

  _pushInfinity (obj) {
    const half = (obj < 0) ? BUF_INF_NEG : BUF_INF_POS
    return this.push(half)
  }

  _pushFloat (obj) {
    const b2 = Buffer.allocUnsafe(2)

    if (utils.writeHalf(b2, obj)) {
      if (utils.parseHalf(b2) === obj) {
        return this._pushUInt8(HALF) && this.push(b2)
      }
    }

    const b4 = Buffer.allocUnsafe(4)
    b4.writeFloatBE(obj, 0)
    if (b4.readFloatBE(0) === obj) {
      return this._pushUInt8(FLOAT) && this.push(b4)
    }

    return this._pushUInt8(DOUBLE) && this._pushDoubleBE(obj)
  }

  _pushInt (obj, mt, orig) {
    const m = mt << 5
    if (obj < 24) {
      return this._pushUInt8(m | obj)
    }

    if (obj <= 0xff) {
      return this._pushUInt8(m | NUMBYTES.ONE) && this._pushUInt8(obj)
    }

    if (obj <= 0xffff) {
      return this._pushUInt8(m | NUMBYTES.TWO) && this._pushUInt16BE(obj)
    }

    if (obj <= 0xffffffff) {
      return this._pushUInt8(m | NUMBYTES.FOUR) && this._pushUInt32BE(obj)
    }

    if (obj <= Number.MAX_SAFE_INTEGER) {
      return this._pushUInt8(m | NUMBYTES.EIGHT) &&
        this._pushUInt32BE(Math.floor(obj / SHIFT32)) &&
        this._pushUInt32BE(obj % SHIFT32)
    }

    if (mt === MT.NEG_INT) {
      return this._pushFloat(orig)
    }

    return this._pushFloat(obj)
  }

  _pushIntNum (obj) {
    if (obj < 0) {
      return this._pushInt(-obj - 1, MT.NEG_INT, obj)
    } else {
      return this._pushInt(obj, MT.POS_INT)
    }
  }

  _pushNumber (obj) {
    switch (false) {
      case (obj === obj): // eslint-disable-line
        return this._pushNaN(obj)
      case isFinite(obj):
        return this._pushInfinity(obj)
      case ((obj % 1) !== 0):
        return this._pushIntNum(obj)
      default:
        return this._pushFloat(obj)
    }
  }

  _pushString (obj) {
    const len = Buffer.byteLength(obj, 'utf8')
    return this._pushInt(len, MT.UTF8_STRING) && this.pushWrite(obj, 5, len)
  }

  _pushBoolean (obj) {
    return this._pushUInt8(obj ? TRUE : FALSE)
  }

  _pushUndefined (obj) {
    return this._pushUInt8(UNDEFINED)
  }

  _pushArray (gen, obj) {
    const len = obj.length
    if (!gen._pushInt(len, MT.ARRAY)) {
      return false
    }
    for (let j = 0; j < len; j++) {
      if (!gen.pushAny(obj[j])) {
        return false
      }
    }
    return true
  }

  _pushTag (tag) {
    return this._pushInt(tag, MT.TAG)
  }

  _pushDate (gen, obj) {
    // Round date, to get seconds since 1970-01-01 00:00:00 as defined in
    // Sec. 2.4.1 and get a possibly more compact encoding. Note that it is
    // still allowed to encode fractions of seconds which can be achieved by
    // changing overwriting the encode function for Date objects.
    return gen._pushTag(TAG.DATE_EPOCH) && gen.pushAny(Math.round(obj / 1000))
  }

  _pushBuffer (gen, obj) {
    return gen._pushInt(obj.length, MT.BYTE_STRING) && gen.push(obj)
  }

  _pushNoFilter (gen, obj) {
    return gen._pushBuffer(gen, obj.slice())
  }

  _pushRegexp (gen, obj) {
    return gen._pushTag(TAG.REGEXP) && gen.pushAny(obj.source)
  }

  _pushSet (gen, obj) {
    if (!gen._pushInt(obj.size, MT.ARRAY)) {
      return false
    }
    for (const x of obj) {
      if (!gen.pushAny(x)) {
        return false
      }
    }
    return true
  }

  _pushUrl (gen, obj) {
    return gen._pushTag(TAG.URI) && gen.pushAny(obj.format())
  }

  _pushBigint (obj) {
    let tag = TAG.POS_BIGINT
    if (obj.isNegative()) {
      obj = obj.negated().minus(1)
      tag = TAG.NEG_BIGINT
    }
    let str = obj.toString(16)
    if (str.length % 2) {
      str = '0' + str
    }
    const buf = Buffer.from(str, 'hex')
    return this._pushTag(tag) && this._pushBuffer(this, buf)
  }

  _pushBigNumber (gen, obj) {
    if (obj.isNaN()) {
      return gen._pushNaN()
    }
    if (!obj.isFinite()) {
      return gen._pushInfinity(obj.isNegative() ? -Infinity : Infinity)
    }
    if (obj.isInteger()) {
      return gen._pushBigint(obj)
    }
    if (!(gen._pushTag(TAG.DECIMAL_FRAC) &&
      gen._pushInt(2, MT.ARRAY))) {
      return false
    }

    const dec = obj.decimalPlaces()
    const slide = obj.multipliedBy(new Bignumber(10).pow(dec))
    if (!gen._pushIntNum(-dec)) {
      return false
    }
    if (slide.abs().isLessThan(MAXINT_BN)) {
      return gen._pushIntNum(slide.toNumber())
    } else {
      return gen._pushBigint(slide)
    }
  }

  _pushMap (gen, obj) {
    if (!gen._pushInt(obj.size, MT.MAP)) {
      return false
    }

    return this._pushRawMap(
      obj.size,
      Array.from(obj)
    )
  }

  _pushObject (obj) {
    if (!obj) {
      return this._pushUInt8(NULL)
    }

    var len = this.semanticTypes.length
    for (var i = 0; i < len; i++) {
      if (obj instanceof this.semanticTypes[i][0]) {
        return this.semanticTypes[i][1].call(obj, this, obj)
      }
    }

    var f = obj.encodeCBOR
    if (typeof f === 'function') {
      return f.call(obj, this)
    }

    var keys = Object.keys(obj)
    var keyLength = keys.length
    if (!this._pushInt(keyLength, MT.MAP)) {
      return false
    }

    return this._pushRawMap(
      keyLength,
      keys.map((k) => [k, obj[k]])
    )
  }

  _pushRawMap (len, map) {
    // Sort keys for canoncialization
    // 1. encode key
    // 2. shorter key comes before longer key
    // 3. same length keys are sorted with lower
    //    byte value before higher

    map = map.map(function (a) {
      a[0] = Encoder.encode(a[0])
      return a
    }).sort(utils.keySorter)

    for (var j = 0; j < len; j++) {
      if (!this.push(map[j][0])) {
        return false
      }

      if (!this.pushAny(map[j][1])) {
        return false
      }
    }

    return true
  }

  /**
   * Alias for `.pushAny`
   *
   * @param {*} obj
   * @returns {boolean} true on success
   */
  write (obj) {
    return this.pushAny(obj)
  }

  /**
   * Push any supported type onto the encoded stream
   *
   * @param {any} obj
   * @returns {boolean} true on success
   */
  pushAny (obj) {
    var typ = toType(obj)

    switch (typ) {
      case 'Number':
        return this._pushNumber(obj)
      case 'String':
        return this._pushString(obj)
      case 'Boolean':
        return this._pushBoolean(obj)
      case 'Object':
        return this._pushObject(obj)
      case 'Array':
        return this._pushArray(this, obj)
      case 'Uint8Array':
        return this._pushBuffer(this, Buffer.isBuffer(obj) ? obj : Buffer.from(obj))
      case 'Null':
        return this._pushUInt8(NULL)
      case 'Undefined':
        return this._pushUndefined(obj)
      case 'Map':
        return this._pushMap(this, obj)
      case 'Set':
        return this._pushSet(this, obj)
      case 'URL':
        return this._pushUrl(this, obj)
      case 'BigNumber':
        return this._pushBigNumber(this, obj)
      case 'Date':
        return this._pushDate(this, obj)
      case 'RegExp':
        return this._pushRegexp(this, obj)
      case 'Symbol':
        switch (obj) {
          case SYMS.NULL:
            return this._pushObject(null)
          case SYMS.UNDEFINED:
            return this._pushUndefined(undefined)
          // TODO: Add pluggable support for other symbols
          default:
            throw new Error('Unknown symbol: ' + obj.toString())
        }
      default:
        throw new Error('Unknown type: ' + typeof obj + ', ' + (obj ? obj.toString() : ''))
    }
  }

  finalize () {
    if (this.offset === 0) {
      return null
    }

    var result = this.result
    var resultLength = this.resultLength
    var resultMethod = this.resultMethod
    var offset = this.offset

    // Determine the size of the buffer
    var size = 0
    var i = 0

    for (; i < offset; i++) {
      size += resultLength[i]
    }

    var res = Buffer.allocUnsafe(size)
    var index = 0
    var length = 0

    // Write the content into the result buffer
    for (i = 0; i < offset; i++) {
      length = resultLength[i]

      switch (resultMethod[i]) {
        case 0:
          result[i].copy(res, index)
          break
        case 1:
          res.writeUInt8(result[i], index, true)
          break
        case 2:
          res.writeUInt16BE(result[i], index, true)
          break
        case 3:
          res.writeUInt32BE(result[i], index, true)
          break
        case 4:
          res.writeDoubleBE(result[i], index, true)
          break
        case 5:
          res.write(result[i], index, length, 'utf8')
          break
        default:
          throw new Error('unkown method')
      }

      index += length
    }

    var tmp = res

    this._reset()

    return tmp
  }

  _reset () {
    this.result = []
    this.resultMethod = []
    this.resultLength = []
    this.offset = 0
  }

  /**
   * Encode the given value
   * @param {*} o
   * @returns {Buffer}
   */
  static encode (o) {
    const enc = new Encoder()
    const ret = enc.pushAny(o)
    if (!ret) {
      throw new Error('Failed to encode input')
    }

    return enc.finalize()
  }
}

module.exports = Encoder


/***/ }),

/***/ 7756:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
var __webpack_unused_export__;


// exports.Commented = require('./commented')
exports.Diagnose = __webpack_require__(3817)
exports.Decoder = __webpack_require__(9988)
exports.Encoder = __webpack_require__(9199)
/* unused reexport */ __webpack_require__(5649)
exports.Tagged = __webpack_require__(794)

// exports.comment = exports.Commented.comment
__webpack_unused_export__ = exports.Decoder.decodeAll
__webpack_unused_export__ = exports.Decoder.decodeFirst
__webpack_unused_export__ = exports.Diagnose.diagnose
__webpack_unused_export__ = exports.Encoder.encode
__webpack_unused_export__ = exports.Decoder.decode

__webpack_unused_export__ = {
  decode: exports.Decoder.decodeAll,
  encode: exports.Encoder.encode,
  buffer: true,
  name: 'cbor'
}


/***/ }),

/***/ 5649:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const constants = __webpack_require__(9478)
const MT = constants.MT
const SIMPLE = constants.SIMPLE
const SYMS = constants.SYMS

/**
 * A CBOR Simple Value that does not map onto a known constant.
 */
class Simple {
  /**
   * Creates an instance of Simple.
   *
   * @param {integer} value - the simple value's integer value
   */
  constructor (value) {
    if (typeof value !== 'number') {
      throw new Error('Invalid Simple type: ' + (typeof value))
    }
    if ((value < 0) || (value > 255) || ((value | 0) !== value)) {
      throw new Error('value must be a small positive integer: ' + value)
    }
    this.value = value
  }

  /**
   * Debug string for simple value
   *
   * @returns {string} simple(value)
   */
  toString () {
    return 'simple(' + this.value + ')'
  }

  /**
   * Debug string for simple value
   *
   * @returns {string} simple(value)
   */
  inspect () {
    return 'simple(' + this.value + ')'
  }

  /**
   * Push the simple value onto the CBOR stream
   *
   * @param {cbor.Encoder} gen The generator to push onto
   * @returns {number}
   */
  encodeCBOR (gen) {
    return gen._pushInt(this.value, MT.SIMPLE_FLOAT)
  }

  /**
   * Is the given object a Simple?
   *
   * @param {any} obj - object to test
   * @returns {bool} - is it Simple?
   */
  static isSimple (obj) {
    return obj instanceof Simple
  }

  /**
   * Decode from the CBOR additional information into a JavaScript value.
   * If the CBOR item has no parent, return a "safe" symbol instead of
   * `null` or `undefined`, so that the value can be passed through a
   * stream in object mode.
   *
   * @param {Number} val - the CBOR additional info to convert
   * @param {bool} hasParent - Does the CBOR item have a parent?
   * @returns {(null|undefined|Boolean|Symbol)} - the decoded value
   */
  static decode (val, hasParent) {
    if (hasParent == null) {
      hasParent = true
    }
    switch (val) {
      case SIMPLE.FALSE:
        return false
      case SIMPLE.TRUE:
        return true
      case SIMPLE.NULL:
        if (hasParent) {
          return null
        } else {
          return SYMS.NULL
        }
      case SIMPLE.UNDEFINED:
        if (hasParent) {
          return undefined
        } else {
          return SYMS.UNDEFINED
        }
      case -1:
        if (!hasParent) {
          throw new Error('Invalid BREAK')
        }
        return SYMS.BREAK
      default:
        return new Simple(val)
    }
  }
}

module.exports = Simple


/***/ }),

/***/ 794:
/***/ ((module) => {

"use strict";


/**
 * A CBOR tagged item, where the tag does not have semantics specified at the
 * moment, or those semantics threw an error during parsing. Typically this will
 * be an extension point you're not yet expecting.
 */
class Tagged {
  /**
   * Creates an instance of Tagged.
   *
   * @param {Number} tag - the number of the tag
   * @param {any} value - the value inside the tag
   * @param {Error} err - the error that was thrown parsing the tag, or null
   */
  constructor (tag, value, err) {
    this.tag = tag
    this.value = value
    this.err = err
    if (typeof this.tag !== 'number') {
      throw new Error('Invalid tag type (' + (typeof this.tag) + ')')
    }
    if ((this.tag < 0) || ((this.tag | 0) !== this.tag)) {
      throw new Error('Tag must be a positive integer: ' + this.tag)
    }
  }

  /**
   * Convert to a String
   *
   * @returns {String} string of the form '1(2)'
   */
  toString () {
    return `${this.tag}(${JSON.stringify(this.value)})`
  }

  /**
   * Push the simple value onto the CBOR stream
   *
   * @param {cbor.Encoder} gen The generator to push onto
   * @returns {number}
   */
  encodeCBOR (gen) {
    gen._pushTag(this.tag)
    return gen.pushAny(this.value)
  }

  /**
   * If we have a converter for this type, do the conversion.  Some converters
   * are built-in.  Additional ones can be passed in.  If you want to remove
   * a built-in converter, pass a converter in whose value is 'null' instead
   * of a function.
   *
   * @param {Object} converters - keys in the object are a tag number, the value
   *   is a function that takes the decoded CBOR and returns a JavaScript value
   *   of the appropriate type.  Throw an exception in the function on errors.
   * @returns {any} - the converted item
   */
  convert (converters) {
    var er, f
    f = converters != null ? converters[this.tag] : undefined
    if (typeof f !== 'function') {
      f = Tagged['_tag' + this.tag]
      if (typeof f !== 'function') {
        return this
      }
    }
    try {
      return f.call(Tagged, this.value)
    } catch (error) {
      er = error
      this.err = er
      return this
    }
  }
}

module.exports = Tagged


/***/ }),

/***/ 1516:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const { Buffer } = __webpack_require__(6526)
const Bignumber = (__webpack_require__(4431).BigNumber)

const constants = __webpack_require__(9478)
const SHIFT32 = constants.SHIFT32
const SHIFT16 = constants.SHIFT16
const MAX_SAFE_HIGH = 0x1fffff

exports.parseHalf = function parseHalf (buf) {
  var exp, mant, sign
  sign = buf[0] & 0x80 ? -1 : 1
  exp = (buf[0] & 0x7C) >> 2
  mant = ((buf[0] & 0x03) << 8) | buf[1]
  if (!exp) {
    return sign * 5.9604644775390625e-8 * mant
  } else if (exp === 0x1f) {
    return sign * (mant ? 0 / 0 : 2e308)
  } else {
    return sign * Math.pow(2, exp - 25) * (1024 + mant)
  }
}

function toHex (n) {
  if (n < 16) {
    return '0' + n.toString(16)
  }

  return n.toString(16)
}

exports.arrayBufferToBignumber = function (buf) {
  const len = buf.byteLength
  let res = ''
  for (let i = 0; i < len; i++) {
    res += toHex(buf[i])
  }

  return new Bignumber(res, 16)
}

// convert an Object into a Map
exports.buildMap = (obj) => {
  const res = new Map()
  const keys = Object.keys(obj)
  const length = keys.length
  for (let i = 0; i < length; i++) {
    res.set(keys[i], obj[keys[i]])
  }
  return res
}

exports.buildInt32 = (f, g) => {
  return f * SHIFT16 + g
}

exports.buildInt64 = (f1, f2, g1, g2) => {
  const f = exports.buildInt32(f1, f2)
  const g = exports.buildInt32(g1, g2)

  if (f > MAX_SAFE_HIGH) {
    return new Bignumber(f).times(SHIFT32).plus(g)
  } else {
    return (f * SHIFT32) + g
  }
}

exports.writeHalf = function writeHalf (buf, half) {
  // assume 0, -0, NaN, Infinity, and -Infinity have already been caught

  // HACK: everyone settle in.  This isn't going to be pretty.
  // Translate cn-cbor's C code (from Carsten Borman):

  // uint32_t be32;
  // uint16_t be16, u16;
  // union {
  //   float f;
  //   uint32_t u;
  // } u32;
  // u32.f = float_val;

  const u32 = Buffer.allocUnsafe(4)
  u32.writeFloatBE(half, 0)
  const u = u32.readUInt32BE(0)

  // if ((u32.u & 0x1FFF) == 0) { /* worth trying half */

  // hildjj: If the lower 13 bits are 0, we won't lose anything in the conversion
  if ((u & 0x1FFF) !== 0) {
    return false
  }

  //   int s16 = (u32.u >> 16) & 0x8000;
  //   int exp = (u32.u >> 23) & 0xff;
  //   int mant = u32.u & 0x7fffff;

  var s16 = (u >> 16) & 0x8000 // top bit is sign
  const exp = (u >> 23) & 0xff // then 5 bits of exponent
  const mant = u & 0x7fffff

  //   if (exp == 0 && mant == 0)
  //     ;              /* 0.0, -0.0 */

  // hildjj: zeros already handled.  Assert if you don't believe me.

  //   else if (exp >= 113 && exp <= 142) /* normalized */
  //     s16 += ((exp - 112) << 10) + (mant >> 13);
  if ((exp >= 113) && (exp <= 142)) {
    s16 += ((exp - 112) << 10) + (mant >> 13)

  //   else if (exp >= 103 && exp < 113) { /* denorm, exp16 = 0 */
  //     if (mant & ((1 << (126 - exp)) - 1))
  //       goto float32;         /* loss of precision */
  //     s16 += ((mant + 0x800000) >> (126 - exp));
  } else if ((exp >= 103) && (exp < 113)) {
    if (mant & ((1 << (126 - exp)) - 1)) {
      return false
    }
    s16 += ((mant + 0x800000) >> (126 - exp))

    //   } else if (exp == 255 && mant == 0) { /* Inf */
    //     s16 += 0x7c00;

    // hildjj: Infinity already handled

  //   } else
  //     goto float32;           /* loss of range */
  } else {
    return false
  }

  //   ensure_writable(3);
  //   u16 = s16;
  //   be16 = hton16p((const uint8_t*)&u16);
  buf.writeUInt16BE(s16, 0)
  return true
}

exports.keySorter = function (a, b) {
  var lenA = a[0].byteLength
  var lenB = b[0].byteLength

  if (lenA > lenB) {
    return 1
  }

  if (lenB > lenA) {
    return -1
  }

  return a[0].compare(b[0])
}

// Adapted from http://www.2ality.com/2012/03/signedzero.html
exports.isNegativeZero = (x) => {
  return x === 0 && (1 / x < 0)
}

exports.nextPowerOf2 = (n) => {
  let count = 0
  // First n in the below condition is for
  // the case where n is 0
  if (n && !(n & (n - 1))) {
    return n
  }

  while (n !== 0) {
    n >>= 1
    count += 1
  }

  return 1 << count
}


/***/ }),

/***/ 9931:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = __webpack_require__(9214);
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}


/***/ }),

/***/ 8764:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
var __webpack_unused_export__;
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



const base64 = __webpack_require__(9742)
const ieee754 = __webpack_require__(645)
const customInspectSymbol =
  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation
    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation
    : null

exports.lW = Buffer
__webpack_unused_export__ = SlowBuffer
exports.h2 = 50

const K_MAX_LENGTH = 0x7fffffff
__webpack_unused_export__ = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    const arr = new Uint8Array(1)
    const proto = { foo: function () { return 42 } }
    Object.setPrototypeOf(proto, Uint8Array.prototype)
    Object.setPrototypeOf(arr, proto)
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  const buf = new Uint8Array(length)
  Object.setPrototypeOf(buf, Buffer.prototype)
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayView(value)
  }

  if (value == null) {
    throw new TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof SharedArrayBuffer !== 'undefined' &&
      (isInstance(value, SharedArrayBuffer) ||
      (value && isInstance(value.buffer, SharedArrayBuffer)))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  const valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  const b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)
Object.setPrototypeOf(Buffer, Uint8Array)

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpreted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  const length = byteLength(string, encoding) | 0
  let buf = createBuffer(length)

  const actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  const length = array.length < 0 ? 0 : checked(array.length) | 0
  const buf = createBuffer(length)
  for (let i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayView (arrayView) {
  if (isInstance(arrayView, Uint8Array)) {
    const copy = new Uint8Array(arrayView)
    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)
  }
  return fromArrayLike(arrayView)
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  let buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(buf, Buffer.prototype)

  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    const len = checked(obj.length) | 0
    const buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  let x = a.length
  let y = b.length

  for (let i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  let i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  const buffer = Buffer.allocUnsafe(length)
  let pos = 0
  for (i = 0; i < list.length; ++i) {
    let buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      if (pos + buf.length > buffer.length) {
        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)
        buf.copy(buffer, pos)
      } else {
        Uint8Array.prototype.set.call(
          buffer,
          buf,
          pos
        )
      }
    } else if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    } else {
      buf.copy(buffer, pos)
    }
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  const len = string.length
  const mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  let loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  let loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  const i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  const len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (let i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  const len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (let i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  const len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (let i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  const length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  let str = ''
  const max = exports.h2
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}
if (customInspectSymbol) {
  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  let x = thisEnd - thisStart
  let y = end - start
  const len = Math.min(x, y)

  const thisCopy = this.slice(thisStart, thisEnd)
  const targetCopy = target.slice(start, end)

  for (let i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  let indexSize = 1
  let arrLength = arr.length
  let valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  let i
  if (dir) {
    let foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      let found = true
      for (let j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  const remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  const strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  let i
  for (i = 0; i < length; ++i) {
    const parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  const remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  let loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
      case 'latin1':
      case 'binary':
        return asciiWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  const res = []

  let i = start
  while (i < end) {
    const firstByte = buf[i]
    let codePoint = null
    let bytesPerSequence = (firstByte > 0xEF)
      ? 4
      : (firstByte > 0xDF)
          ? 3
          : (firstByte > 0xBF)
              ? 2
              : 1

    if (i + bytesPerSequence <= end) {
      let secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
const MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  const len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  let res = ''
  let i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  let ret = ''
  end = Math.min(buf.length, end)

  for (let i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  let ret = ''
  end = Math.min(buf.length, end)

  for (let i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  const len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  let out = ''
  for (let i = start; i < end; ++i) {
    out += hexSliceLookupTable[buf[i]]
  }
  return out
}

function utf16leSlice (buf, start, end) {
  const bytes = buf.slice(start, end)
  let res = ''
  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
  for (let i = 0; i < bytes.length - 1; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  const len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  const newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(newBuf, Buffer.prototype)

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUintLE =
Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let val = this[offset]
  let mul = 1
  let i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUintBE =
Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  let val = this[offset + --byteLength]
  let mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUint8 =
Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUint16LE =
Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUint16BE =
Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUint32LE =
Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUint32BE =
Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const lo = first +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 24

  const hi = this[++offset] +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    last * 2 ** 24

  return BigInt(lo) + (BigInt(hi) << BigInt(32))
})

Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const hi = first * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    this[++offset]

  const lo = this[++offset] * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    last

  return (BigInt(hi) << BigInt(32)) + BigInt(lo)
})

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let val = this[offset]
  let mul = 1
  let i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let i = byteLength
  let mul = 1
  let val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  const val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  const val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const val = this[offset + 4] +
    this[offset + 5] * 2 ** 8 +
    this[offset + 6] * 2 ** 16 +
    (last << 24) // Overflow

  return (BigInt(val) << BigInt(32)) +
    BigInt(first +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 24)
})

Buffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const val = (first << 24) + // Overflow
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    this[++offset]

  return (BigInt(val) << BigInt(32)) +
    BigInt(this[++offset] * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    last)
})

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUintLE =
Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    const maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  let mul = 1
  let i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUintBE =
Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    const maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  let i = byteLength - 1
  let mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUint8 =
Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUint16LE =
Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUint16BE =
Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUint32LE =
Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUint32BE =
Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function wrtBigUInt64LE (buf, value, offset, min, max) {
  checkIntBI(value, min, max, buf, offset, 7)

  let lo = Number(value & BigInt(0xffffffff))
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  return offset
}

function wrtBigUInt64BE (buf, value, offset, min, max) {
  checkIntBI(value, min, max, buf, offset, 7)

  let lo = Number(value & BigInt(0xffffffff))
  buf[offset + 7] = lo
  lo = lo >> 8
  buf[offset + 6] = lo
  lo = lo >> 8
  buf[offset + 5] = lo
  lo = lo >> 8
  buf[offset + 4] = lo
  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))
  buf[offset + 3] = hi
  hi = hi >> 8
  buf[offset + 2] = hi
  hi = hi >> 8
  buf[offset + 1] = hi
  hi = hi >> 8
  buf[offset] = hi
  return offset + 8
}

Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {
  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))
})

Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {
  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))
})

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    const limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  let i = 0
  let mul = 1
  let sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    const limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  let i = byteLength - 1
  let mul = 1
  let sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {
  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))
})

Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {
  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))
})

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  const len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      const code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  } else if (typeof val === 'boolean') {
    val = Number(val)
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  let i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    const bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    const len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// CUSTOM ERRORS
// =============

// Simplified versions from Node, changed for Buffer-only usage
const errors = {}
function E (sym, getMessage, Base) {
  errors[sym] = class NodeError extends Base {
    constructor () {
      super()

      Object.defineProperty(this, 'message', {
        value: getMessage.apply(this, arguments),
        writable: true,
        configurable: true
      })

      // Add the error code to the name to include it in the stack trace.
      this.name = `${this.name} [${sym}]`
      // Access the stack to generate the error message including the error code
      // from the name.
      this.stack // eslint-disable-line no-unused-expressions
      // Reset the name to the actual name.
      delete this.name
    }

    get code () {
      return sym
    }

    set code (value) {
      Object.defineProperty(this, 'code', {
        configurable: true,
        enumerable: true,
        value,
        writable: true
      })
    }

    toString () {
      return `${this.name} [${sym}]: ${this.message}`
    }
  }
}

E('ERR_BUFFER_OUT_OF_BOUNDS',
  function (name) {
    if (name) {
      return `${name} is outside of buffer bounds`
    }

    return 'Attempt to access memory outside buffer bounds'
  }, RangeError)
E('ERR_INVALID_ARG_TYPE',
  function (name, actual) {
    return `The "${name}" argument must be of type number. Received type ${typeof actual}`
  }, TypeError)
E('ERR_OUT_OF_RANGE',
  function (str, range, input) {
    let msg = `The value of "${str}" is out of range.`
    let received = input
    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
      received = addNumericalSeparator(String(input))
    } else if (typeof input === 'bigint') {
      received = String(input)
      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {
        received = addNumericalSeparator(received)
      }
      received += 'n'
    }
    msg += ` It must be ${range}. Received ${received}`
    return msg
  }, RangeError)

function addNumericalSeparator (val) {
  let res = ''
  let i = val.length
  const start = val[0] === '-' ? 1 : 0
  for (; i >= start + 4; i -= 3) {
    res = `_${val.slice(i - 3, i)}${res}`
  }
  return `${val.slice(0, i)}${res}`
}

// CHECK FUNCTIONS
// ===============

function checkBounds (buf, offset, byteLength) {
  validateNumber(offset, 'offset')
  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {
    boundsError(offset, buf.length - (byteLength + 1))
  }
}

function checkIntBI (value, min, max, buf, offset, byteLength) {
  if (value > max || value < min) {
    const n = typeof min === 'bigint' ? 'n' : ''
    let range
    if (byteLength > 3) {
      if (min === 0 || min === BigInt(0)) {
        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`
      } else {
        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +
                `${(byteLength + 1) * 8 - 1}${n}`
      }
    } else {
      range = `>= ${min}${n} and <= ${max}${n}`
    }
    throw new errors.ERR_OUT_OF_RANGE('value', range, value)
  }
  checkBounds(buf, offset, byteLength)
}

function validateNumber (value, name) {
  if (typeof value !== 'number') {
    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)
  }
}

function boundsError (value, length, type) {
  if (Math.floor(value) !== value) {
    validateNumber(value, type)
    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)
  }

  if (length < 0) {
    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()
  }

  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',
                                    `>= ${type ? 1 : 0} and <= ${length}`,
                                    value)
}

// HELPER FUNCTIONS
// ================

const INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  let codePoint
  const length = string.length
  let leadSurrogate = null
  const bytes = []

  for (let i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  const byteArray = []
  for (let i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  let c, hi, lo
  const byteArray = []
  for (let i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  let i
  for (i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
const hexSliceLookupTable = (function () {
  const alphabet = '0123456789abcdef'
  const table = new Array(256)
  for (let i = 0; i < 16; ++i) {
    const i16 = i * 16
    for (let j = 0; j < 16; ++j) {
      table[i16 + j] = alphabet[i] + alphabet[j]
    }
  }
  return table
})()

// Return not function with Error if BigInt not supported
function defineBigIntMethod (fn) {
  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn
}

function BufferBigIntNotDefined () {
  throw new Error('BigInt not supported')
}


/***/ }),

/***/ 6266:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var elliptic = exports;

elliptic.version = (__webpack_require__(8597)/* .version */ .i8);
elliptic.utils = __webpack_require__(953);
elliptic.rand = __webpack_require__(9931);
elliptic.curve = __webpack_require__(8254);
elliptic.curves = __webpack_require__(5427);

// Protocols
elliptic.ec = __webpack_require__(7954);
elliptic.eddsa = __webpack_require__(5980);


/***/ }),

/***/ 4918:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(3550);
var utils = __webpack_require__(953);
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  this._bitLength = this.n ? this.n.bitLength() : 0;

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1, this._bitLength);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  var j;
  var nafW;
  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;
    for (var l = j + doubles.step - 1; l >= j; l--)
      nafW = (nafW << 1) + naf[l];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w, this._bitLength);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var l = 0; i >= 0 && naf[i] === 0; i--)
      l++;
    if (i >= 0)
      l++;
    acc = acc.dblp(l);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
  points,
  coeffs,
  len,
  jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  var i;
  var j;
  var p;
  for (i = 0; i < len; i++) {
    p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b], /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3,  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (j = 0; j < len; j++) {
      var z = tmp[j];
      p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
      bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len));
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null,
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles,
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res,
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};


/***/ }),

/***/ 1138:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(953);
var BN = __webpack_require__(3550);
var inherits = __webpack_require__(5717);
var Base = __webpack_require__(4918);

var assert = utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.c2);
  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.fromRed().isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
    (this.y.cmp(this.z) === 0 ||
    (this.zOne && this.y.cmp(this.curve.c) === 0));
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  var e;
  var h;
  var j;
  if (this.curve.twisted) {
    // E = a * C
    e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      h = this.z.redSqr();
      // J = F - 2 * H
      j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    e = c.redAdd(d);
    // H = (c * Z1)^2
    h = this.curve._mulC(this.z).redSqr();
    // J = E - 2 * H
    j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
    this.y,
    this.z,
    this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;


/***/ }),

/***/ 8254:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var curve = exports;

curve.base = __webpack_require__(4918);
curve.short = __webpack_require__(6673);
curve.mont = __webpack_require__(2881);
curve.edwards = __webpack_require__(1138);


/***/ }),

/***/ 2881:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(3550);
var inherits = __webpack_require__(5717);
var Base = __webpack_require__(4918);

var utils = __webpack_require__(953);

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};


/***/ }),

/***/ 6673:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(953);
var BN = __webpack_require__(3550);
var inherits = __webpack_require__(5717);
var Base = __webpack_require__(4918);

var assert = utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16),
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis,
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 },
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
      var npoints = this._endoWnafT1;
      var ncoeffs = this._endoWnafT2;
      for (var i = 0; i < points.length; i++) {
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();

        if (split.k1.negative) {
          split.k1.ineg();
          p = p.neg(true);
        }
        if (split.k2.negative) {
          split.k2.ineg();
          beta = beta.neg(true);
        }

        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
      }
      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

      // Clean-up references to points and coefficients
      for (var j = 0; j < i * 2; j++) {
        npoints[j] = null;
        ncoeffs[j] = null;
      }
      return res;
    };

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul),
      },
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1),
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1),
    },
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point)),
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point)),
    },
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);
  if (this.isInfinity())
    return this;
  else if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate),
      },
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  var i;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};


/***/ }),

/***/ 5427:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var curves = exports;

var hash = __webpack_require__(3715);
var curve = __webpack_require__(8254);
var utils = __webpack_require__(953);

var assert = utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new curve.edwards(options);
  else
    this.curve = new curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve,
      });
      return curve;
    },
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',
  ],
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',
  ],
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',
  ],
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',
  ],
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650',
  ],
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9',
  ],
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658',
  ],
});

var pre;
try {
  pre = __webpack_require__(1037);
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3',
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15',
    },
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre,
  ],
});


/***/ }),

/***/ 7954:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(3550);
var HmacDRBG = __webpack_require__(2156);
var utils = __webpack_require__(953);
var curves = __webpack_require__(5427);
var rand = __webpack_require__(9931);
var assert = utils.assert;

var KeyPair = __webpack_require__(1251);
var Signature = __webpack_require__(611);

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(Object.prototype.hasOwnProperty.call(curves, options),
      'Unknown curve ' + options);

    options = curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray(),
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  for (;;) {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};

EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; ; iter++) {
    var k = options.k ?
      options.k(iter) :
      new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);
  var p;

  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};


/***/ }),

/***/ 1251:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(3550);
var utils = __webpack_require__(953);
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc,
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc,
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  if(!pub.validate()) {
    assert(pub.validate(), 'public point not validated');
  }
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};


/***/ }),

/***/ 611:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(3550);

var utils = __webpack_require__(953);
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;

  // Indefinite length or overflow
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }

  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }

  // Leading zeroes
  if (val <= 0x7f) {
    return false;
  }

  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if (len === false) {
    return false;
  }
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  if (rlen === false) {
    return false;
  }
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0) {
    if (r[1] & 0x80) {
      r = r.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  if (s[0] === 0) {
    if (s[1] & 0x80) {
      s = s.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};


/***/ }),

/***/ 5980:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hash = __webpack_require__(3715);
var curves = __webpack_require__(5427);
var utils = __webpack_require__(953);
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = __webpack_require__(9087);
var Signature = __webpack_require__(3622);

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  curve = curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
    .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};


/***/ }),

/***/ 9087:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(953);
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;


/***/ }),

/***/ 3622:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(3550);
var utils = __webpack_require__(953);
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength),
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;


/***/ }),

/***/ 1037:
/***/ ((module) => {

module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',
      ],
    ],
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',
      ],
    ],
  },
};


/***/ }),

/***/ 953:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = exports;
var BN = __webpack_require__(3550);
var minAssert = __webpack_require__(9746);
var minUtils = __webpack_require__(4504);

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w, bits) {
  var naf = new Array(Math.max(num.bitLength(), bits) + 1);
  naf.fill(0);

  var ws = 1 << (w + 1);
  var k = num.clone();

  for (var i = 0; i < naf.length; i++) {
    var z;
    var mod = k.andln(ws - 1);
    if (k.isOdd()) {
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }

    naf[i] = z;
    k.iushrn(1);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    [],
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  var m8;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
      this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
    bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;



/***/ }),

/***/ 3715:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var hash = exports;

hash.utils = __webpack_require__(6436);
hash.common = __webpack_require__(5772);
hash.sha = __webpack_require__(9041);
hash.ripemd = __webpack_require__(2949);
hash.hmac = __webpack_require__(2344);

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;


/***/ }),

/***/ 5772:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(6436);
var assert = __webpack_require__(9746);

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};


/***/ }),

/***/ 2344:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(6436);
var assert = __webpack_require__(9746);

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};


/***/ }),

/***/ 2949:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(6436);
var common = __webpack_require__(5772);

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];


/***/ }),

/***/ 9041:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


exports.sha1 = __webpack_require__(4761);
exports.sha224 = __webpack_require__(799);
exports.sha256 = __webpack_require__(9344);
exports.sha384 = __webpack_require__(772);
exports.sha512 = __webpack_require__(5900);


/***/ }),

/***/ 4761:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(6436);
var common = __webpack_require__(5772);
var shaCommon = __webpack_require__(7038);

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),

/***/ 799:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(6436);
var SHA256 = __webpack_require__(9344);

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};



/***/ }),

/***/ 9344:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(6436);
var common = __webpack_require__(5772);
var shaCommon = __webpack_require__(7038);
var assert = __webpack_require__(9746);

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),

/***/ 772:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(6436);

var SHA512 = __webpack_require__(5900);

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};


/***/ }),

/***/ 5900:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(6436);
var common = __webpack_require__(5772);
var assert = __webpack_require__(9746);

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}


/***/ }),

/***/ 7038:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(6436);
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;


/***/ }),

/***/ 6436:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var assert = __webpack_require__(9746);
var inherits = __webpack_require__(5717);

exports.inherits = inherits;

function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
    return false;
  }
  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }
  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      // Inspired by stringToUtf8ByteArray() in closure-library by Google
      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
      // Apache License 2.0
      // https://github.com/google/closure-library/blob/master/LICENSE
      var p = 0;
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = (c >> 6) | 192;
          res[p++] = (c & 63) | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
          res[p++] = (c >> 18) | 240;
          res[p++] = ((c >> 12) & 63) | 128;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        } else {
          res[p++] = (c >> 12) | 224;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        }
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;


/***/ }),

/***/ 2156:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hash = __webpack_require__(3715);
var utils = __webpack_require__(4504);
var assert = __webpack_require__(9746);

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};


/***/ }),

/***/ 645:
/***/ ((__unused_webpack_module, exports) => {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ 5717:
/***/ ((module) => {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}


/***/ }),

/***/ 7745:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const {
    URLWithLegacySupport,
    format,
    URLSearchParams,
    defaultBase
} = __webpack_require__(2049);
const relative = __webpack_require__(5939);

module.exports = {
    URL: URLWithLegacySupport,
    URLSearchParams,
    format,
    relative,
    defaultBase
};


/***/ }),

/***/ 5939:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const { URLWithLegacySupport, format } = __webpack_require__(2049);

module.exports = (url, location = {}, protocolMap = {}, defaultProtocol) => {
    let protocol = location.protocol ?
        location.protocol.replace(':', '') :
        'http';

    // Check protocol map
    protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':';
    let urlParsed;

    try {
        urlParsed = new URLWithLegacySupport(url);
    } catch (err) {
        urlParsed = {};
    }

    const base = Object.assign({}, location, {
        protocol: protocol || urlParsed.protocol,
        host: location.host || urlParsed.host
    });

    return new URLWithLegacySupport(url, format(base)).toString();
};


/***/ }),

/***/ 2049:
/***/ ((module) => {

"use strict";


const defaultBase = self.location ?
    self.location.protocol + '//' + self.location.host :
    '';
const URL = self.URL;

class URLWithLegacySupport {
    constructor(url = '', base = defaultBase) {
        this.super = new URL(url, base);
        this.path = this.pathname + this.search;
        this.auth =
            this.username && this.password ?
                this.username + ':' + this.password :
                null;

        this.query =
            this.search && this.search.startsWith('?') ?
                this.search.slice(1) :
                null;
    }

    get hash() {
        return this.super.hash;
    }
    get host() {
        return this.super.host;
    }
    get hostname() {
        return this.super.hostname;
    }
    get href() {
        return this.super.href;
    }
    get origin() {
        return this.super.origin;
    }
    get password() {
        return this.super.password;
    }
    get pathname() {
        return this.super.pathname;
    }
    get port() {
        return this.super.port;
    }
    get protocol() {
        return this.super.protocol;
    }
    get search() {
        return this.super.search;
    }
    get searchParams() {
        return this.super.searchParams;
    }
    get username() {
        return this.super.username;
    }

    set hash(hash) {
        this.super.hash = hash;
    }
    set host(host) {
        this.super.host = host;
    }
    set hostname(hostname) {
        this.super.hostname = hostname;
    }
    set href(href) {
        this.super.href = href;
    }
    set origin(origin) {
        this.super.origin = origin;
    }
    set password(password) {
        this.super.password = password;
    }
    set pathname(pathname) {
        this.super.pathname = pathname;
    }
    set port(port) {
        this.super.port = port;
    }
    set protocol(protocol) {
        this.super.protocol = protocol;
    }
    set search(search) {
        this.super.search = search;
    }
    set searchParams(searchParams) {
        this.super.searchParams = searchParams;
    }
    set username(username) {
        this.super.username = username;
    }

    createObjectURL(o) {
        return this.super.createObjectURL(o);
    }
    revokeObjectURL(o) {
        this.super.revokeObjectURL(o);
    }
    toJSON() {
        return this.super.toJSON();
    }
    toString() {
        return this.super.toString();
    }
    format() {
        return this.toString();
    }
}

function format(obj) {
    if (typeof obj === 'string') {
        const url = new URL(obj);

        return url.toString();
    }

    if (!(obj instanceof URL)) {
        const userPass =
            obj.username && obj.password ?
                `${obj.username}:${obj.password}@` :
                '';
        const auth = obj.auth ? obj.auth + '@' : '';
        const port = obj.port ? ':' + obj.port : '';
        const protocol = obj.protocol ? obj.protocol + '//' : '';
        const host = obj.host || '';
        const hostname = obj.hostname || '';
        const search = obj.search || (obj.query ? '?' + obj.query : '');
        const hash = obj.hash || '';
        const pathname = obj.pathname || '';
        const path = obj.path || pathname + search;

        return `${protocol}${userPass || auth}${host ||
            hostname + port}${path}${hash}`;
    }
}

module.exports = {
    URLWithLegacySupport,
    URLSearchParams: self.URLSearchParams,
    defaultBase,
    format
};


/***/ }),

/***/ 2023:
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * [js-sha256]{@link https://github.com/emn178/js-sha256}
 *
 * @version 0.9.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */
/*jslint bitwise: true */
(function () {
  'use strict';

  var ERROR = 'input is invalid type';
  var WINDOW = typeof window === 'object';
  var root = WINDOW ? window : {};
  if (root.JS_SHA256_NO_WINDOW) {
    WINDOW = false;
  }
  var WEB_WORKER = !WINDOW && typeof self === 'object';
  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;
  if (NODE_JS) {
    root = __webpack_require__.g;
  } else if (WEB_WORKER) {
    root = self;
  }
  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && "object" === 'object' && module.exports;
  var AMD =  true && __webpack_require__.amdO;
  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
  var HEX_CHARS = '0123456789abcdef'.split('');
  var EXTRA = [-2147483648, 8388608, 32768, 128];
  var SHIFT = [24, 16, 8, 0];
  var K = [
    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
  ];
  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];

  var blocks = [];

  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {
    Array.isArray = function (obj) {
      return Object.prototype.toString.call(obj) === '[object Array]';
    };
  }

  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
    ArrayBuffer.isView = function (obj) {
      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
    };
  }

  var createOutputMethod = function (outputType, is224) {
    return function (message) {
      return new Sha256(is224, true).update(message)[outputType]();
    };
  };

  var createMethod = function (is224) {
    var method = createOutputMethod('hex', is224);
    if (NODE_JS) {
      method = nodeWrap(method, is224);
    }
    method.create = function () {
      return new Sha256(is224);
    };
    method.update = function (message) {
      return method.create().update(message);
    };
    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
      var type = OUTPUT_TYPES[i];
      method[type] = createOutputMethod(type, is224);
    }
    return method;
  };

  var nodeWrap = function (method, is224) {
    var crypto = eval("require('crypto')");
    var Buffer = eval("require('buffer').Buffer");
    var algorithm = is224 ? 'sha224' : 'sha256';
    var nodeMethod = function (message) {
      if (typeof message === 'string') {
        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');
      } else {
        if (message === null || message === undefined) {
          throw new Error(ERROR);
        } else if (message.constructor === ArrayBuffer) {
          message = new Uint8Array(message);
        }
      }
      if (Array.isArray(message) || ArrayBuffer.isView(message) ||
        message.constructor === Buffer) {
        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');
      } else {
        return method(message);
      }
    };
    return nodeMethod;
  };

  var createHmacOutputMethod = function (outputType, is224) {
    return function (key, message) {
      return new HmacSha256(key, is224, true).update(message)[outputType]();
    };
  };

  var createHmacMethod = function (is224) {
    var method = createHmacOutputMethod('hex', is224);
    method.create = function (key) {
      return new HmacSha256(key, is224);
    };
    method.update = function (key, message) {
      return method.create(key).update(message);
    };
    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
      var type = OUTPUT_TYPES[i];
      method[type] = createHmacOutputMethod(type, is224);
    }
    return method;
  };

  function Sha256(is224, sharedMemory) {
    if (sharedMemory) {
      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =
        blocks[4] = blocks[5] = blocks[6] = blocks[7] =
        blocks[8] = blocks[9] = blocks[10] = blocks[11] =
        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
      this.blocks = blocks;
    } else {
      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    }

    if (is224) {
      this.h0 = 0xc1059ed8;
      this.h1 = 0x367cd507;
      this.h2 = 0x3070dd17;
      this.h3 = 0xf70e5939;
      this.h4 = 0xffc00b31;
      this.h5 = 0x68581511;
      this.h6 = 0x64f98fa7;
      this.h7 = 0xbefa4fa4;
    } else { // 256
      this.h0 = 0x6a09e667;
      this.h1 = 0xbb67ae85;
      this.h2 = 0x3c6ef372;
      this.h3 = 0xa54ff53a;
      this.h4 = 0x510e527f;
      this.h5 = 0x9b05688c;
      this.h6 = 0x1f83d9ab;
      this.h7 = 0x5be0cd19;
    }

    this.block = this.start = this.bytes = this.hBytes = 0;
    this.finalized = this.hashed = false;
    this.first = true;
    this.is224 = is224;
  }

  Sha256.prototype.update = function (message) {
    if (this.finalized) {
      return;
    }
    var notString, type = typeof message;
    if (type !== 'string') {
      if (type === 'object') {
        if (message === null) {
          throw new Error(ERROR);
        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
          message = new Uint8Array(message);
        } else if (!Array.isArray(message)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
            throw new Error(ERROR);
          }
        }
      } else {
        throw new Error(ERROR);
      }
      notString = true;
    }
    var code, index = 0, i, length = message.length, blocks = this.blocks;

    while (index < length) {
      if (this.hashed) {
        this.hashed = false;
        blocks[0] = this.block;
        blocks[16] = blocks[1] = blocks[2] = blocks[3] =
          blocks[4] = blocks[5] = blocks[6] = blocks[7] =
          blocks[8] = blocks[9] = blocks[10] = blocks[11] =
          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
      }

      if (notString) {
        for (i = this.start; index < length && i < 64; ++index) {
          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
        }
      } else {
        for (i = this.start; index < length && i < 64; ++index) {
          code = message.charCodeAt(index);
          if (code < 0x80) {
            blocks[i >> 2] |= code << SHIFT[i++ & 3];
          } else if (code < 0x800) {
            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else if (code < 0xd800 || code >= 0xe000) {
            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else {
            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          }
        }
      }

      this.lastByteIndex = i;
      this.bytes += i - this.start;
      if (i >= 64) {
        this.block = blocks[16];
        this.start = i - 64;
        this.hash();
        this.hashed = true;
      } else {
        this.start = i;
      }
    }
    if (this.bytes > 4294967295) {
      this.hBytes += this.bytes / 4294967296 << 0;
      this.bytes = this.bytes % 4294967296;
    }
    return this;
  };

  Sha256.prototype.finalize = function () {
    if (this.finalized) {
      return;
    }
    this.finalized = true;
    var blocks = this.blocks, i = this.lastByteIndex;
    blocks[16] = this.block;
    blocks[i >> 2] |= EXTRA[i & 3];
    this.block = blocks[16];
    if (i >= 56) {
      if (!this.hashed) {
        this.hash();
      }
      blocks[0] = this.block;
      blocks[16] = blocks[1] = blocks[2] = blocks[3] =
        blocks[4] = blocks[5] = blocks[6] = blocks[7] =
        blocks[8] = blocks[9] = blocks[10] = blocks[11] =
        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
    }
    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;
    blocks[15] = this.bytes << 3;
    this.hash();
  };

  Sha256.prototype.hash = function () {
    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,
      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;

    for (j = 16; j < 64; ++j) {
      // rightrotate
      t1 = blocks[j - 15];
      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);
      t1 = blocks[j - 2];
      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);
      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;
    }

    bc = b & c;
    for (j = 0; j < 64; j += 4) {
      if (this.first) {
        if (this.is224) {
          ab = 300032;
          t1 = blocks[0] - 1413257819;
          h = t1 - 150054599 << 0;
          d = t1 + 24177077 << 0;
        } else {
          ab = 704751109;
          t1 = blocks[0] - 210244248;
          h = t1 - 1521486534 << 0;
          d = t1 + 143694565 << 0;
        }
        this.first = false;
      } else {
        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));
        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));
        ab = a & b;
        maj = ab ^ (a & c) ^ bc;
        ch = (e & f) ^ (~e & g);
        t1 = h + s1 + ch + K[j] + blocks[j];
        t2 = s0 + maj;
        h = d + t1 << 0;
        d = t1 + t2 << 0;
      }
      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));
      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));
      da = d & a;
      maj = da ^ (d & b) ^ ab;
      ch = (h & e) ^ (~h & f);
      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];
      t2 = s0 + maj;
      g = c + t1 << 0;
      c = t1 + t2 << 0;
      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));
      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));
      cd = c & d;
      maj = cd ^ (c & a) ^ da;
      ch = (g & h) ^ (~g & e);
      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];
      t2 = s0 + maj;
      f = b + t1 << 0;
      b = t1 + t2 << 0;
      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));
      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));
      bc = b & c;
      maj = bc ^ (b & d) ^ cd;
      ch = (f & g) ^ (~f & h);
      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];
      t2 = s0 + maj;
      e = a + t1 << 0;
      a = t1 + t2 << 0;
    }

    this.h0 = this.h0 + a << 0;
    this.h1 = this.h1 + b << 0;
    this.h2 = this.h2 + c << 0;
    this.h3 = this.h3 + d << 0;
    this.h4 = this.h4 + e << 0;
    this.h5 = this.h5 + f << 0;
    this.h6 = this.h6 + g << 0;
    this.h7 = this.h7 + h << 0;
  };

  Sha256.prototype.hex = function () {
    this.finalize();

    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,
      h6 = this.h6, h7 = this.h7;

    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +
      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +
      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +
      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +
      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +
      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +
      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +
      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +
      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +
      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +
      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +
      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +
      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +
      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +
      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +
      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +
      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +
      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +
      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +
      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +
      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +
      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +
      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +
      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +
      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +
      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +
      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +
      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];
    if (!this.is224) {
      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +
        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +
        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +
        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];
    }
    return hex;
  };

  Sha256.prototype.toString = Sha256.prototype.hex;

  Sha256.prototype.digest = function () {
    this.finalize();

    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,
      h6 = this.h6, h7 = this.h7;

    var arr = [
      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,
      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,
      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,
      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,
      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,
      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,
      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF
    ];
    if (!this.is224) {
      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);
    }
    return arr;
  };

  Sha256.prototype.array = Sha256.prototype.digest;

  Sha256.prototype.arrayBuffer = function () {
    this.finalize();

    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);
    var dataView = new DataView(buffer);
    dataView.setUint32(0, this.h0);
    dataView.setUint32(4, this.h1);
    dataView.setUint32(8, this.h2);
    dataView.setUint32(12, this.h3);
    dataView.setUint32(16, this.h4);
    dataView.setUint32(20, this.h5);
    dataView.setUint32(24, this.h6);
    if (!this.is224) {
      dataView.setUint32(28, this.h7);
    }
    return buffer;
  };

  function HmacSha256(key, is224, sharedMemory) {
    var i, type = typeof key;
    if (type === 'string') {
      var bytes = [], length = key.length, index = 0, code;
      for (i = 0; i < length; ++i) {
        code = key.charCodeAt(i);
        if (code < 0x80) {
          bytes[index++] = code;
        } else if (code < 0x800) {
          bytes[index++] = (0xc0 | (code >> 6));
          bytes[index++] = (0x80 | (code & 0x3f));
        } else if (code < 0xd800 || code >= 0xe000) {
          bytes[index++] = (0xe0 | (code >> 12));
          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));
          bytes[index++] = (0x80 | (code & 0x3f));
        } else {
          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));
          bytes[index++] = (0xf0 | (code >> 18));
          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));
          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));
          bytes[index++] = (0x80 | (code & 0x3f));
        }
      }
      key = bytes;
    } else {
      if (type === 'object') {
        if (key === null) {
          throw new Error(ERROR);
        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {
          key = new Uint8Array(key);
        } else if (!Array.isArray(key)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {
            throw new Error(ERROR);
          }
        }
      } else {
        throw new Error(ERROR);
      }
    }

    if (key.length > 64) {
      key = (new Sha256(is224, true)).update(key).array();
    }

    var oKeyPad = [], iKeyPad = [];
    for (i = 0; i < 64; ++i) {
      var b = key[i] || 0;
      oKeyPad[i] = 0x5c ^ b;
      iKeyPad[i] = 0x36 ^ b;
    }

    Sha256.call(this, is224, sharedMemory);

    this.update(iKeyPad);
    this.oKeyPad = oKeyPad;
    this.inner = true;
    this.sharedMemory = sharedMemory;
  }
  HmacSha256.prototype = new Sha256();

  HmacSha256.prototype.finalize = function () {
    Sha256.prototype.finalize.call(this);
    if (this.inner) {
      this.inner = false;
      var innerHash = this.array();
      Sha256.call(this, this.is224, this.sharedMemory);
      this.update(this.oKeyPad);
      this.update(innerHash);
      Sha256.prototype.finalize.call(this);
    }
  };

  var exports = createMethod();
  exports.sha256 = exports;
  exports.sha224 = createMethod(true);
  exports.sha256.hmac = createHmacMethod();
  exports.sha224.hmac = createHmacMethod(true);

  if (COMMON_JS) {
    module.exports = exports;
  } else {
    root.sha256 = exports.sha256;
    root.sha224 = exports.sha224;
    if (AMD) {
      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
        return exports;
      }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    }
  }
})();


/***/ }),

/***/ 9746:
/***/ ((module) => {

module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};


/***/ }),

/***/ 4504:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};


/***/ }),

/***/ 7221:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(9119)(__webpack_require__(8573))


/***/ }),

/***/ 8573:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const EC = (__webpack_require__(6266).ec)

const ec = new EC('secp256k1')
const ecparams = ec.curve

// Hack, we can not use bn.js@5, while elliptic uses bn.js@4
// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758
const BN = ecparams.n.constructor

function loadCompressedPublicKey (first, xbuf) {
  let x = new BN(xbuf)

  // overflow
  if (x.cmp(ecparams.p) >= 0) return null
  x = x.toRed(ecparams.red)

  // compute corresponding Y
  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()
  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()

  return ec.keyPair({ pub: { x: x, y: y } })
}

function loadUncompressedPublicKey (first, xbuf, ybuf) {
  let x = new BN(xbuf)
  let y = new BN(ybuf)

  // overflow
  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null

  x = x.toRed(ecparams.red)
  y = y.toRed(ecparams.red)

  // is odd flag
  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null

  // x*x*x + b = y*y
  const x3 = x.redSqr().redIMul(x)
  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null

  return ec.keyPair({ pub: { x: x, y: y } })
}

function loadPublicKey (pubkey) {
  // length should be validated in interface
  const first = pubkey[0]
  switch (first) {
    case 0x02:
    case 0x03:
      if (pubkey.length !== 33) return null
      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))
    case 0x04:
    case 0x06:
    case 0x07:
      if (pubkey.length !== 65) return null
      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))
    default:
      return null
  }
}

function savePublicKey (output, point) {
  const pubkey = point.encode(null, output.length === 33)
  // Loop should be faster because we do not need create extra Uint8Array
  // output.set(new Uint8Array(pubkey))
  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]
}

module.exports = {
  contextRandomize () {
    return 0
  },

  privateKeyVerify (seckey) {
    const bn = new BN(seckey)
    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1
  },

  privateKeyNegate (seckey) {
    const bn = new BN(seckey)
    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)
    seckey.set(negate)
    return 0
  },

  privateKeyTweakAdd (seckey, tweak) {
    const bn = new BN(tweak)
    if (bn.cmp(ecparams.n) >= 0) return 1

    bn.iadd(new BN(seckey))
    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)
    if (bn.isZero()) return 1

    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)
    seckey.set(tweaked)

    return 0
  },

  privateKeyTweakMul (seckey, tweak) {
    let bn = new BN(tweak)
    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1

    bn.imul(new BN(seckey))
    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)

    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)
    seckey.set(tweaked)

    return 0
  },

  publicKeyVerify (pubkey) {
    const pair = loadPublicKey(pubkey)
    return pair === null ? 1 : 0
  },

  publicKeyCreate (output, seckey) {
    const bn = new BN(seckey)
    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1

    const point = ec.keyFromPrivate(seckey).getPublic()
    savePublicKey(output, point)

    return 0
  },

  publicKeyConvert (output, pubkey) {
    const pair = loadPublicKey(pubkey)
    if (pair === null) return 1

    const point = pair.getPublic()
    savePublicKey(output, point)

    return 0
  },

  publicKeyNegate (output, pubkey) {
    const pair = loadPublicKey(pubkey)
    if (pair === null) return 1

    const point = pair.getPublic()
    point.y = point.y.redNeg()
    savePublicKey(output, point)

    return 0
  },

  publicKeyCombine (output, pubkeys) {
    const pairs = new Array(pubkeys.length)
    for (let i = 0; i < pubkeys.length; ++i) {
      pairs[i] = loadPublicKey(pubkeys[i])
      if (pairs[i] === null) return 1
    }

    let point = pairs[0].getPublic()
    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)
    if (point.isInfinity()) return 2

    savePublicKey(output, point)

    return 0
  },

  publicKeyTweakAdd (output, pubkey, tweak) {
    const pair = loadPublicKey(pubkey)
    if (pair === null) return 1

    tweak = new BN(tweak)
    if (tweak.cmp(ecparams.n) >= 0) return 2

    const point = pair.getPublic().add(ecparams.g.mul(tweak))
    if (point.isInfinity()) return 2

    savePublicKey(output, point)

    return 0
  },

  publicKeyTweakMul (output, pubkey, tweak) {
    const pair = loadPublicKey(pubkey)
    if (pair === null) return 1

    tweak = new BN(tweak)
    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2

    const point = pair.getPublic().mul(tweak)
    savePublicKey(output, point)

    return 0
  },

  signatureNormalize (sig) {
    const r = new BN(sig.subarray(0, 32))
    const s = new BN(sig.subarray(32, 64))
    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1

    if (s.cmp(ec.nh) === 1) {
      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)
    }

    return 0
  },

  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js
  // Adapted for Uint8Array instead Buffer
  signatureExport (obj, sig) {
    const sigR = sig.subarray(0, 32)
    const sigS = sig.subarray(32, 64)
    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1
    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1

    const { output } = obj

    // Prepare R
    let r = output.subarray(4, 4 + 33)
    r[0] = 0x00
    r.set(sigR, 1)

    let lenR = 33
    let posR = 0
    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);

    r = r.subarray(posR)
    if (r[0] & 0x80) return 1
    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1

    // Prepare S
    let s = output.subarray(6 + 33, 6 + 33 + 33)
    s[0] = 0x00
    s.set(sigS, 1)

    let lenS = 33
    let posS = 0
    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);

    s = s.subarray(posS)
    if (s[0] & 0x80) return 1
    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1

    // Set output length for return
    obj.outputlen = 6 + lenR + lenS

    // Output in specified format
    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]
    output[0] = 0x30
    output[1] = obj.outputlen - 2
    output[2] = 0x02
    output[3] = r.length
    output.set(r, 4)
    output[4 + lenR] = 0x02
    output[5 + lenR] = s.length
    output.set(s, 6 + lenR)

    return 0
  },

  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js
  // Adapted for Uint8Array instead Buffer
  signatureImport (output, sig) {
    if (sig.length < 8) return 1
    if (sig.length > 72) return 1
    if (sig[0] !== 0x30) return 1
    if (sig[1] !== sig.length - 2) return 1
    if (sig[2] !== 0x02) return 1

    const lenR = sig[3]
    if (lenR === 0) return 1
    if (5 + lenR >= sig.length) return 1
    if (sig[4 + lenR] !== 0x02) return 1

    const lenS = sig[5 + lenR]
    if (lenS === 0) return 1
    if ((6 + lenR + lenS) !== sig.length) return 1

    if (sig[4] & 0x80) return 1
    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1

    if (sig[lenR + 6] & 0x80) return 1
    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1

    let sigR = sig.subarray(4, 4 + lenR)
    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)
    if (sigR.length > 32) return 1

    let sigS = sig.subarray(6 + lenR)
    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)
    if (sigS.length > 32) throw new Error('S length is too long')

    let r = new BN(sigR)
    if (r.cmp(ecparams.n) >= 0) r = new BN(0)

    let s = new BN(sig.subarray(6 + lenR))
    if (s.cmp(ecparams.n) >= 0) s = new BN(0)

    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)
    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)

    return 0
  },

  ecdsaSign (obj, message, seckey, data, noncefn) {
    if (noncefn) {
      const _noncefn = noncefn
      noncefn = (counter) => {
        const nonce = _noncefn(message, seckey, null, data, counter)

        const isValid = nonce instanceof Uint8Array && nonce.length === 32
        if (!isValid) throw new Error('This is the way')

        return new BN(nonce)
      }
    }

    const d = new BN(seckey)
    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1

    let sig
    try {
      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })
    } catch (err) {
      return 1
    }

    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)
    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)
    obj.recid = sig.recoveryParam

    return 0
  },

  ecdsaVerify (sig, msg32, pubkey) {
    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }

    const sigr = new BN(sigObj.r)
    const sigs = new BN(sigObj.s)
    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1
    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3

    const pair = loadPublicKey(pubkey)
    if (pair === null) return 2

    const point = pair.getPublic()
    const isValid = ec.verify(msg32, sigObj, point)
    return isValid ? 0 : 3
  },

  ecdsaRecover (output, sig, recid, msg32) {
    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }

    const sigr = new BN(sigObj.r)
    const sigs = new BN(sigObj.s)
    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1

    if (sigr.isZero() || sigs.isZero()) return 2

    // Can throw `throw new Error('Unable to find sencond key candinate');`
    let point
    try {
      point = ec.recoverPubKey(msg32, sigObj, recid)
    } catch (err) {
      return 2
    }

    savePublicKey(output, point)

    return 0
  },

  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {
    const pair = loadPublicKey(pubkey)
    if (pair === null) return 1

    const scalar = new BN(seckey)
    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2

    const point = pair.getPublic().mul(scalar)

    if (hashfn === undefined) {
      const data = point.encode(null, true)
      const sha256 = ec.hash().update(data).digest()
      for (let i = 0; i < 32; ++i) output[i] = sha256[i]
    } else {
      if (!xbuf) xbuf = new Uint8Array(32)
      const x = point.getX().toArray('be', 32)
      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]

      if (!ybuf) ybuf = new Uint8Array(32)
      const y = point.getY().toArray('be', 32)
      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]

      const hash = hashfn(xbuf, ybuf, data)

      const isValid = hash instanceof Uint8Array && hash.length === output.length
      if (!isValid) return 2

      output.set(hash)
    }

    return 0
  }
}


/***/ }),

/***/ 9119:
/***/ ((module) => {

const errors = {
  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',
  TWEAK_ADD:
    'The tweak was out of range or the resulted private key is invalid',
  TWEAK_MUL: 'The tweak was out of range or equal to zero',
  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',
  SECKEY_INVALID: 'Private Key is invalid',
  PUBKEY_PARSE: 'Public Key could not be parsed',
  PUBKEY_SERIALIZE: 'Public Key serialization error',
  PUBKEY_COMBINE: 'The sum of the public keys is not valid',
  SIG_PARSE: 'Signature could not be parsed',
  SIGN: 'The nonce generation function failed, or the private key was invalid',
  RECOVER: 'Public key could not be recover',
  ECDH: 'Scalar was invalid (zero or overflow)'
}

function assert (cond, msg) {
  if (!cond) throw new Error(msg)
}

function isUint8Array (name, value, length) {
  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)

  if (length !== undefined) {
    if (Array.isArray(length)) {
      const numbers = length.join(', ')
      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`
      assert(length.includes(value.length), msg)
    } else {
      const msg = `Expected ${name} to be an Uint8Array with length ${length}`
      assert(value.length === length, msg)
    }
  }
}

function isCompressed (value) {
  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')
}

function getAssertedOutput (output = (len) => new Uint8Array(len), length) {
  if (typeof output === 'function') output = output(length)
  isUint8Array('output', output, length)
  return output
}

function toTypeString (value) {
  return Object.prototype.toString.call(value).slice(8, -1)
}

module.exports = (secp256k1) => {
  return {
    contextRandomize (seed) {
      assert(
        seed === null || seed instanceof Uint8Array,
        'Expected seed to be an Uint8Array or null'
      )
      if (seed !== null) isUint8Array('seed', seed, 32)

      switch (secp256k1.contextRandomize(seed)) {
        case 1:
          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)
      }
    },

    privateKeyVerify (seckey) {
      isUint8Array('private key', seckey, 32)

      return secp256k1.privateKeyVerify(seckey) === 0
    },

    privateKeyNegate (seckey) {
      isUint8Array('private key', seckey, 32)

      switch (secp256k1.privateKeyNegate(seckey)) {
        case 0:
          return seckey
        case 1:
          throw new Error(errors.IMPOSSIBLE_CASE)
      }
    },

    privateKeyTweakAdd (seckey, tweak) {
      isUint8Array('private key', seckey, 32)
      isUint8Array('tweak', tweak, 32)

      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {
        case 0:
          return seckey
        case 1:
          throw new Error(errors.TWEAK_ADD)
      }
    },

    privateKeyTweakMul (seckey, tweak) {
      isUint8Array('private key', seckey, 32)
      isUint8Array('tweak', tweak, 32)

      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {
        case 0:
          return seckey
        case 1:
          throw new Error(errors.TWEAK_MUL)
      }
    },

    publicKeyVerify (pubkey) {
      isUint8Array('public key', pubkey, [33, 65])

      return secp256k1.publicKeyVerify(pubkey) === 0
    },

    publicKeyCreate (seckey, compressed = true, output) {
      isUint8Array('private key', seckey, 32)
      isCompressed(compressed)
      output = getAssertedOutput(output, compressed ? 33 : 65)

      switch (secp256k1.publicKeyCreate(output, seckey)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.SECKEY_INVALID)
        case 2:
          throw new Error(errors.PUBKEY_SERIALIZE)
      }
    },

    publicKeyConvert (pubkey, compressed = true, output) {
      isUint8Array('public key', pubkey, [33, 65])
      isCompressed(compressed)
      output = getAssertedOutput(output, compressed ? 33 : 65)

      switch (secp256k1.publicKeyConvert(output, pubkey)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.PUBKEY_PARSE)
        case 2:
          throw new Error(errors.PUBKEY_SERIALIZE)
      }
    },

    publicKeyNegate (pubkey, compressed = true, output) {
      isUint8Array('public key', pubkey, [33, 65])
      isCompressed(compressed)
      output = getAssertedOutput(output, compressed ? 33 : 65)

      switch (secp256k1.publicKeyNegate(output, pubkey)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.PUBKEY_PARSE)
        case 2:
          throw new Error(errors.IMPOSSIBLE_CASE)
        case 3:
          throw new Error(errors.PUBKEY_SERIALIZE)
      }
    },

    publicKeyCombine (pubkeys, compressed = true, output) {
      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')
      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')
      for (const pubkey of pubkeys) {
        isUint8Array('public key', pubkey, [33, 65])
      }
      isCompressed(compressed)
      output = getAssertedOutput(output, compressed ? 33 : 65)

      switch (secp256k1.publicKeyCombine(output, pubkeys)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.PUBKEY_PARSE)
        case 2:
          throw new Error(errors.PUBKEY_COMBINE)
        case 3:
          throw new Error(errors.PUBKEY_SERIALIZE)
      }
    },

    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {
      isUint8Array('public key', pubkey, [33, 65])
      isUint8Array('tweak', tweak, 32)
      isCompressed(compressed)
      output = getAssertedOutput(output, compressed ? 33 : 65)

      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.PUBKEY_PARSE)
        case 2:
          throw new Error(errors.TWEAK_ADD)
      }
    },

    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {
      isUint8Array('public key', pubkey, [33, 65])
      isUint8Array('tweak', tweak, 32)
      isCompressed(compressed)
      output = getAssertedOutput(output, compressed ? 33 : 65)

      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.PUBKEY_PARSE)
        case 2:
          throw new Error(errors.TWEAK_MUL)
      }
    },

    signatureNormalize (sig) {
      isUint8Array('signature', sig, 64)

      switch (secp256k1.signatureNormalize(sig)) {
        case 0:
          return sig
        case 1:
          throw new Error(errors.SIG_PARSE)
      }
    },

    signatureExport (sig, output) {
      isUint8Array('signature', sig, 64)
      output = getAssertedOutput(output, 72)

      const obj = { output, outputlen: 72 }
      switch (secp256k1.signatureExport(obj, sig)) {
        case 0:
          return output.slice(0, obj.outputlen)
        case 1:
          throw new Error(errors.SIG_PARSE)
        case 2:
          throw new Error(errors.IMPOSSIBLE_CASE)
      }
    },

    signatureImport (sig, output) {
      isUint8Array('signature', sig)
      output = getAssertedOutput(output, 64)

      switch (secp256k1.signatureImport(output, sig)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.SIG_PARSE)
        case 2:
          throw new Error(errors.IMPOSSIBLE_CASE)
      }
    },

    ecdsaSign (msg32, seckey, options = {}, output) {
      isUint8Array('message', msg32, 32)
      isUint8Array('private key', seckey, 32)
      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')
      if (options.data !== undefined) isUint8Array('options.data', options.data)
      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')
      output = getAssertedOutput(output, 64)

      const obj = { signature: output, recid: null }
      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {
        case 0:
          return obj
        case 1:
          throw new Error(errors.SIGN)
        case 2:
          throw new Error(errors.IMPOSSIBLE_CASE)
      }
    },

    ecdsaVerify (sig, msg32, pubkey) {
      isUint8Array('signature', sig, 64)
      isUint8Array('message', msg32, 32)
      isUint8Array('public key', pubkey, [33, 65])

      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {
        case 0:
          return true
        case 3:
          return false
        case 1:
          throw new Error(errors.SIG_PARSE)
        case 2:
          throw new Error(errors.PUBKEY_PARSE)
      }
    },

    ecdsaRecover (sig, recid, msg32, compressed = true, output) {
      isUint8Array('signature', sig, 64)
      assert(
        toTypeString(recid) === 'Number' &&
          recid >= 0 &&
          recid <= 3,
        'Expected recovery id to be a Number within interval [0, 3]'
      )
      isUint8Array('message', msg32, 32)
      isCompressed(compressed)
      output = getAssertedOutput(output, compressed ? 33 : 65)

      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.SIG_PARSE)
        case 2:
          throw new Error(errors.RECOVER)
        case 3:
          throw new Error(errors.IMPOSSIBLE_CASE)
      }
    },

    ecdh (pubkey, seckey, options = {}, output) {
      isUint8Array('public key', pubkey, [33, 65])
      isUint8Array('private key', seckey, 32)
      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')
      if (options.data !== undefined) isUint8Array('options.data', options.data)
      if (options.hashfn !== undefined) {
        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')
        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)
        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)
        isUint8Array('output', output)
      } else {
        output = getAssertedOutput(output, 32)
      }

      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.PUBKEY_PARSE)
        case 2:
          throw new Error(errors.ECDH)
      }
    }
  }
}


/***/ }),

/***/ 8419:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__export(__webpack_require__(4925));
const value = __importStar(__webpack_require__(7996));
exports.value = value;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 4925:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const cbor = __importStar(__webpack_require__(7996));
const BufferClasses = [
    ArrayBuffer,
    Uint8Array,
    Uint16Array,
    Uint32Array,
    Int8Array,
    Int16Array,
    Int32Array,
    Float32Array,
    Float64Array,
];
class JsonDefaultCborEncoder {
    // @param _serializer The CBOR Serializer to use.
    // @param _stable Whether or not keys from objects should be sorted (stable). This is
    //     particularly useful when testing encodings between JSON objects.
    constructor(_serializer, _stable = false) {
        this._serializer = _serializer;
        this._stable = _stable;
        this.name = "jsonDefault";
        this.priority = -100;
    }
    match(value) {
        return ["undefined", "boolean", "number", "string", "object"].indexOf(typeof value) != -1;
    }
    encode(value) {
        switch (typeof value) {
            case "undefined":
                return cbor.undefined_();
            case "boolean":
                return cbor.bool(value);
            case "number":
                if (Math.floor(value) === value) {
                    return cbor.number(value);
                }
                else {
                    return cbor.doubleFloat(value);
                }
            case "string":
                return cbor.string(value);
            case "object":
                if (value === null) {
                    return cbor.null_();
                }
                else if (Array.isArray(value)) {
                    return cbor.array(value.map((x) => this._serializer.serializeValue(x)));
                }
                else if (BufferClasses.find((x) => value instanceof x)) {
                    return cbor.bytes(value.buffer);
                }
                else if (Object.getOwnPropertyNames(value).indexOf("toJSON") !== -1) {
                    return this.encode(value.toJSON());
                }
                else if (value instanceof Map) {
                    const m = new Map();
                    for (const [key, item] of value.entries()) {
                        m.set(key, this._serializer.serializeValue(item));
                    }
                    return cbor.map(m, this._stable);
                }
                else {
                    const m = new Map();
                    for (const [key, item] of Object.entries(value)) {
                        m.set(key, this._serializer.serializeValue(item));
                    }
                    return cbor.map(m, this._stable);
                }
            default:
                throw new Error("Invalid value.");
        }
    }
}
exports.JsonDefaultCborEncoder = JsonDefaultCborEncoder;
class ToCborEncoder {
    constructor() {
        this.name = "cborEncoder";
        this.priority = -90;
    }
    match(value) {
        return typeof value == "object" && typeof value["toCBOR"] == "function";
    }
    encode(value) {
        return value.toCBOR();
    }
}
exports.ToCborEncoder = ToCborEncoder;
class CborSerializer {
    constructor() {
        this._encoders = new Set();
    }
    static withDefaultEncoders(stable = false) {
        const s = new this();
        s.addEncoder(new JsonDefaultCborEncoder(s, stable));
        s.addEncoder(new ToCborEncoder());
        return s;
    }
    removeEncoder(name) {
        // Has to make an extra call to values() to ensure it doesn't break on iteration.
        for (const encoder of this._encoders.values()) {
            if (encoder.name == name) {
                this._encoders.delete(encoder);
            }
        }
    }
    addEncoder(encoder) {
        this._encoders.add(encoder);
    }
    getEncoderFor(value) {
        let chosenEncoder = null;
        for (const encoder of this._encoders) {
            if (!chosenEncoder || encoder.priority > chosenEncoder.priority) {
                if (encoder.match(value)) {
                    chosenEncoder = encoder;
                }
            }
        }
        if (chosenEncoder === null) {
            throw new Error("Could not find an encoder for value.");
        }
        return chosenEncoder;
    }
    serializeValue(value) {
        return this.getEncoderFor(value).encode(value);
    }
    serialize(value) {
        return this.serializeValue(value);
    }
}
exports.CborSerializer = CborSerializer;
class SelfDescribeCborSerializer extends CborSerializer {
    serialize(value) {
        return cbor.raw(new Uint8Array([
            // Self describe CBOR.
            ...new Uint8Array([0xd9, 0xd9, 0xf7]),
            ...new Uint8Array(super.serializeValue(value)),
        ]));
    }
}
exports.SelfDescribeCborSerializer = SelfDescribeCborSerializer;
//# sourceMappingURL=serializer.js.map

/***/ }),

/***/ 7996:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const MAX_U64_NUMBER = 0x20000000000000;
function _concat(a, ...args) {
    const newBuffer = new Uint8Array(a.byteLength + args.reduce((acc, b) => acc + b.byteLength, 0));
    newBuffer.set(new Uint8Array(a), 0);
    let i = a.byteLength;
    for (const b of args) {
        newBuffer.set(new Uint8Array(b), i);
        i += b.byteLength;
    }
    return newBuffer.buffer;
}
function _serializeValue(major, minor, value) {
    // Remove everything that's not an hexadecimal character. These are not
    // considered errors since the value was already validated and they might
    // be number decimals or sign.
    value = value.replace(/[^0-9a-fA-F]/g, "");
    // Create the buffer from the value with left padding with 0.
    const length = 2 ** (minor - 24 /* Int8 */);
    value = value.slice(-length * 2).padStart(length * 2, "0");
    const bytes = [(major << 5) + minor].concat(value.match(/../g).map((byte) => parseInt(byte, 16)));
    return new Uint8Array(bytes).buffer;
}
function _serializeNumber(major, value) {
    if (value < 24) {
        return new Uint8Array([(major << 5) + value]).buffer;
    }
    else {
        const minor = value <= 0xff
            ? 24 /* Int8 */
            : value <= 0xffff
                ? 25 /* Int16 */
                : value <= 0xffffffff
                    ? 26 /* Int32 */
                    : 27 /* Int64 */;
        return _serializeValue(major, minor, value.toString(16));
    }
}
function _serializeString(str) {
    const utf8 = [];
    for (let i = 0; i < str.length; i++) {
        let charcode = str.charCodeAt(i);
        if (charcode < 0x80) {
            utf8.push(charcode);
        }
        else if (charcode < 0x800) {
            utf8.push(0xc0 | (charcode >> 6), 0x80 | (charcode & 0x3f));
        }
        else if (charcode < 0xd800 || charcode >= 0xe000) {
            utf8.push(0xe0 | (charcode >> 12), 0x80 | ((charcode >> 6) & 0x3f), 0x80 | (charcode & 0x3f));
        }
        else {
            // Surrogate pair
            i++;
            charcode = ((charcode & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff);
            utf8.push(0xf0 | (charcode >> 18), 0x80 | ((charcode >> 12) & 0x3f), 0x80 | ((charcode >> 6) & 0x3f), 0x80 | (charcode & 0x3f));
        }
    }
    return _concat(new Uint8Array(_serializeNumber(3 /* TextString */, str.length)), new Uint8Array(utf8));
}
/**
 * Tag a value.
 */
function tagged(tag, value) {
    if (tag == 0xd9d9f7) {
        return _concat(new Uint8Array([0xd9, 0xd9, 0xf7]), value);
    }
    if (tag < 24) {
        return _concat(new Uint8Array([(6 /* Tag */ << 5) + tag]), value);
    }
    else {
        const minor = tag <= 0xff
            ? 24 /* Int8 */
            : tag <= 0xffff
                ? 25 /* Int16 */
                : tag <= 0xffffffff
                    ? 26 /* Int32 */
                    : 27 /* Int64 */;
        const length = 2 ** (minor - 24 /* Int8 */);
        const value = tag
            .toString(16)
            .slice(-length * 2)
            .padStart(length * 2, "0");
        const bytes = [(6 /* Tag */ << 5) + minor].concat(value.match(/../g).map((byte) => parseInt(byte, 16)));
        return new Uint8Array(bytes).buffer;
    }
}
exports.tagged = tagged;
/**
 * Set the raw bytes contained by this value. This should only be used with another
 * CborValue, or if you are implementing extensions to CBOR.
 * @param bytes A buffer containing the value.
 */
function raw(bytes) {
    return new Uint8Array(bytes).buffer;
}
exports.raw = raw;
/**
 * Encode a number that is between [0, 23].
 * @param n
 */
function uSmall(n) {
    if (isNaN(n)) {
        throw new RangeError("Invalid number.");
    }
    n = Math.min(Math.max(0, n), 23); // Clamp it.
    const bytes = [(0 /* UnsignedInteger */ << 5) + n];
    return new Uint8Array(bytes).buffer;
}
exports.uSmall = uSmall;
function u8(u8, radix) {
    // Force u8 into a number, and validate it.
    u8 = parseInt("" + u8, radix);
    if (isNaN(u8)) {
        throw new RangeError("Invalid number.");
    }
    u8 = Math.min(Math.max(0, u8), 0xff); // Clamp it.
    u8 = u8.toString(16);
    return _serializeValue(0 /* UnsignedInteger */, 24 /* Int8 */, u8);
}
exports.u8 = u8;
function u16(u16, radix) {
    // Force u16 into a number, and validate it.
    u16 = parseInt("" + u16, radix);
    if (isNaN(u16)) {
        throw new RangeError("Invalid number.");
    }
    u16 = Math.min(Math.max(0, u16), 0xffff); // Clamp it.
    u16 = u16.toString(16);
    return _serializeValue(0 /* UnsignedInteger */, 25 /* Int16 */, u16);
}
exports.u16 = u16;
function u32(u32, radix) {
    // Force u32 into a number, and validate it.
    u32 = parseInt("" + u32, radix);
    if (isNaN(u32)) {
        throw new RangeError("Invalid number.");
    }
    u32 = Math.min(Math.max(0, u32), 0xffffffff); // Clamp it.
    u32 = u32.toString(16);
    return _serializeValue(0 /* UnsignedInteger */, 26 /* Int32 */, u32);
}
exports.u32 = u32;
function u64(u64, radix) {
    // Special consideration for numbers that might be larger than expected.
    if (typeof u64 == "string" && radix == 16) {
        // This is the only case where we guarantee we'll encode the number directly.
        // Validate it's all hexadecimal first.
        if (u64.match(/[^0-9a-fA-F]/)) {
            throw new RangeError("Invalid number.");
        }
        return _serializeValue(0 /* UnsignedInteger */, 27 /* Int64 */, u64);
    }
    // Force u64 into a number, and validate it.
    u64 = parseInt("" + u64, radix);
    if (isNaN(u64)) {
        throw new RangeError("Invalid number.");
    }
    u64 = Math.min(Math.max(0, u64), MAX_U64_NUMBER); // Clamp it to actual limit.
    u64 = u64.toString(16);
    return _serializeValue(0 /* UnsignedInteger */, 27 /* Int64 */, u64);
}
exports.u64 = u64;
/**
 * Encode a negative number that is between [-24, -1].
 */
function iSmall(n) {
    if (isNaN(n)) {
        throw new RangeError("Invalid number.");
    }
    if (n === 0) {
        return uSmall(0);
    }
    // Negative n, clamped to [1, 24], minus 1 (there's no negative 0).
    n = Math.min(Math.max(0, -n), 24) - 1;
    const bytes = [(1 /* SignedInteger */ << 5) + n];
    return new Uint8Array(bytes).buffer;
}
exports.iSmall = iSmall;
function i8(i8, radix) {
    // Force i8 into a number, and validate it.
    i8 = parseInt("" + i8, radix);
    if (isNaN(i8)) {
        throw new RangeError("Invalid number.");
    }
    // Negative n, clamped, minus 1 (there's no negative 0).
    i8 = Math.min(Math.max(0, -i8 - 1), 0xff);
    i8 = i8.toString(16);
    return _serializeValue(1 /* SignedInteger */, 24 /* Int8 */, i8);
}
exports.i8 = i8;
function i16(i16, radix) {
    // Force i16 into a number, and validate it.
    i16 = parseInt("" + i16, radix);
    if (isNaN(i16)) {
        throw new RangeError("Invalid number.");
    }
    // Negative n, clamped, minus 1 (there's no negative 0).
    i16 = Math.min(Math.max(0, -i16 - 1), 0xffff);
    i16 = i16.toString(16);
    return _serializeValue(1 /* SignedInteger */, 25 /* Int16 */, i16);
}
exports.i16 = i16;
function i32(i32, radix) {
    // Force i32 into a number, and validate it.
    i32 = parseInt("" + i32, radix);
    if (isNaN(i32)) {
        throw new RangeError("Invalid number.");
    }
    // Negative n, clamped, minus 1 (there's no negative 0).
    i32 = Math.min(Math.max(0, -i32 - 1), 0xffffffff);
    i32 = i32.toString(16);
    return _serializeValue(1 /* SignedInteger */, 26 /* Int32 */, i32);
}
exports.i32 = i32;
function i64(i64, radix) {
    // Special consideration for numbers that might be larger than expected.
    if (typeof i64 == "string" && radix == 16) {
        if (i64.startsWith("-")) {
            i64 = i64.slice(1);
        }
        else {
            // Clamp it.
            i64 = "0";
        }
        // This is the only case where we guarantee we'll encode the number directly.
        // Validate it's all hexadecimal first.
        if (i64.match(/[^0-9a-fA-F]/) || i64.length > 16) {
            throw new RangeError("Invalid number.");
        }
        // We need to do -1 to the number.
        let done = false;
        let newI64 = i64.split("").reduceRight((acc, x) => {
            if (done) {
                return x + acc;
            }
            let n = parseInt(x, 16) - 1;
            if (n >= 0) {
                done = true;
                return n.toString(16) + acc;
            }
            else {
                return "f" + acc;
            }
        }, "");
        if (!done) {
            // This number was 0.
            return u64(0);
        }
        return _serializeValue(1 /* SignedInteger */, 27 /* Int64 */, newI64);
    }
    // Force i64 into a number, and validate it.
    i64 = parseInt("" + i64, radix);
    if (isNaN(i64)) {
        throw new RangeError("Invalid number.");
    }
    i64 = Math.min(Math.max(0, -i64 - 1), 0x20000000000000); // Clamp it to actual.
    i64 = i64.toString(16);
    return _serializeValue(1 /* SignedInteger */, 27 /* Int64 */, i64);
}
exports.i64 = i64;
/**
 * Encode a number using the smallest amount of bytes, by calling the methods
 * above. e.g. If the number fits in a u8, it will use that.
 */
function number(n) {
    if (n >= 0) {
        if (n < 24) {
            return uSmall(n);
        }
        else if (n <= 0xff) {
            return u8(n);
        }
        else if (n <= 0xffff) {
            return u16(n);
        }
        else if (n <= 0xffffffff) {
            return u32(n);
        }
        else {
            return u64(n);
        }
    }
    else {
        if (n >= -24) {
            return iSmall(n);
        }
        else if (n >= -0xff) {
            return i8(n);
        }
        else if (n >= -0xffff) {
            return i16(n);
        }
        else if (n >= -0xffffffff) {
            return i32(n);
        }
        else {
            return i64(n);
        }
    }
}
exports.number = number;
/**
 * Encode a byte array. This is different than the `raw()` method.
 */
function bytes(bytes) {
    return _concat(_serializeNumber(2 /* ByteString */, bytes.byteLength), bytes);
}
exports.bytes = bytes;
/**
 * Encode a JavaScript string.
 */
function string(str) {
    return _serializeString(str);
}
exports.string = string;
/**
 * Encode an array of cbor values.
 */
function array(items) {
    return _concat(_serializeNumber(4 /* Array */, items.length), ...items);
}
exports.array = array;
/**
 * Encode a map of key-value pairs. The keys are string, and the values are CBOR
 * encoded.
 */
function map(items, stable = false) {
    if (!(items instanceof Map)) {
        items = new Map(Object.entries(items));
    }
    let entries = Array.from(items.entries());
    if (stable) {
        entries = entries.sort(([keyA], [keyB]) => keyA.localeCompare(keyB));
    }
    return _concat(_serializeNumber(5 /* Map */, items.size), ...entries.map(([k, v]) => _concat(_serializeString(k), v)));
}
exports.map = map;
/**
 * Encode a single (32 bits) precision floating point number.
 */
function singleFloat(f) {
    const single = new Float32Array([f]);
    return _concat(new Uint8Array([(7 /* SimpleValue */ << 5) + 26]), new Uint8Array(single.buffer));
}
exports.singleFloat = singleFloat;
/**
 * Encode a double (64 bits) precision floating point number.
 */
function doubleFloat(f) {
    const single = new Float64Array([f]);
    return _concat(new Uint8Array([(7 /* SimpleValue */ << 5) + 27]), new Uint8Array(single.buffer));
}
exports.doubleFloat = doubleFloat;
function bool(v) {
    return v ? true_() : false_();
}
exports.bool = bool;
/**
 * Encode the boolean true.
 */
function true_() {
    return raw(new Uint8Array([(7 /* SimpleValue */ << 5) + 21]));
}
exports.true_ = true_;
/**
 * Encode the boolean false.
 */
function false_() {
    return raw(new Uint8Array([(7 /* SimpleValue */ << 5) + 20]));
}
exports.false_ = false_;
/**
 * Encode the constant null.
 */
function null_() {
    return raw(new Uint8Array([(7 /* SimpleValue */ << 5) + 22]));
}
exports.null_ = null_;
/**
 * Encode the constant undefined.
 */
function undefined_() {
    return raw(new Uint8Array([(7 /* SimpleValue */ << 5) + 23]));
}
exports.undefined_ = undefined_;
//# sourceMappingURL=value.js.map

/***/ }),

/***/ 780:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

(function(nacl) {
'use strict';

// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.
// Public domain.
//
// Implementation derived from TweetNaCl version 20140427.
// See for details: http://tweetnacl.cr.yp.to/

var gf = function(init) {
  var i, r = new Float64Array(16);
  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];
  return r;
};

//  Pluggable, initialized in high-level API below.
var randombytes = function(/* x, n */) { throw new Error('no PRNG'); };

var _0 = new Uint8Array(16);
var _9 = new Uint8Array(32); _9[0] = 9;

var gf0 = gf(),
    gf1 = gf([1]),
    _121665 = gf([0xdb41, 1]),
    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),
    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),
    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),
    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),
    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);

function ts64(x, i, h, l) {
  x[i]   = (h >> 24) & 0xff;
  x[i+1] = (h >> 16) & 0xff;
  x[i+2] = (h >>  8) & 0xff;
  x[i+3] = h & 0xff;
  x[i+4] = (l >> 24)  & 0xff;
  x[i+5] = (l >> 16)  & 0xff;
  x[i+6] = (l >>  8)  & 0xff;
  x[i+7] = l & 0xff;
}

function vn(x, xi, y, yi, n) {
  var i,d = 0;
  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];
  return (1 & ((d - 1) >>> 8)) - 1;
}

function crypto_verify_16(x, xi, y, yi) {
  return vn(x,xi,y,yi,16);
}

function crypto_verify_32(x, xi, y, yi) {
  return vn(x,xi,y,yi,32);
}

function core_salsa20(o, p, k, c) {
  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,
      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,
      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,
      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,
      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,
      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,
      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,
      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,
      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,
      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,
      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,
      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,
      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,
      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,
      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,
      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;

  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,
      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,
      x15 = j15, u;

  for (var i = 0; i < 20; i += 2) {
    u = x0 + x12 | 0;
    x4 ^= u<<7 | u>>>(32-7);
    u = x4 + x0 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x4 | 0;
    x12 ^= u<<13 | u>>>(32-13);
    u = x12 + x8 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x1 | 0;
    x9 ^= u<<7 | u>>>(32-7);
    u = x9 + x5 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x9 | 0;
    x1 ^= u<<13 | u>>>(32-13);
    u = x1 + x13 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x6 | 0;
    x14 ^= u<<7 | u>>>(32-7);
    u = x14 + x10 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x14 | 0;
    x6 ^= u<<13 | u>>>(32-13);
    u = x6 + x2 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x11 | 0;
    x3 ^= u<<7 | u>>>(32-7);
    u = x3 + x15 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x3 | 0;
    x11 ^= u<<13 | u>>>(32-13);
    u = x11 + x7 | 0;
    x15 ^= u<<18 | u>>>(32-18);

    u = x0 + x3 | 0;
    x1 ^= u<<7 | u>>>(32-7);
    u = x1 + x0 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x1 | 0;
    x3 ^= u<<13 | u>>>(32-13);
    u = x3 + x2 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x4 | 0;
    x6 ^= u<<7 | u>>>(32-7);
    u = x6 + x5 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x6 | 0;
    x4 ^= u<<13 | u>>>(32-13);
    u = x4 + x7 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x9 | 0;
    x11 ^= u<<7 | u>>>(32-7);
    u = x11 + x10 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x11 | 0;
    x9 ^= u<<13 | u>>>(32-13);
    u = x9 + x8 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x14 | 0;
    x12 ^= u<<7 | u>>>(32-7);
    u = x12 + x15 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x12 | 0;
    x14 ^= u<<13 | u>>>(32-13);
    u = x14 + x13 | 0;
    x15 ^= u<<18 | u>>>(32-18);
  }
   x0 =  x0 +  j0 | 0;
   x1 =  x1 +  j1 | 0;
   x2 =  x2 +  j2 | 0;
   x3 =  x3 +  j3 | 0;
   x4 =  x4 +  j4 | 0;
   x5 =  x5 +  j5 | 0;
   x6 =  x6 +  j6 | 0;
   x7 =  x7 +  j7 | 0;
   x8 =  x8 +  j8 | 0;
   x9 =  x9 +  j9 | 0;
  x10 = x10 + j10 | 0;
  x11 = x11 + j11 | 0;
  x12 = x12 + j12 | 0;
  x13 = x13 + j13 | 0;
  x14 = x14 + j14 | 0;
  x15 = x15 + j15 | 0;

  o[ 0] = x0 >>>  0 & 0xff;
  o[ 1] = x0 >>>  8 & 0xff;
  o[ 2] = x0 >>> 16 & 0xff;
  o[ 3] = x0 >>> 24 & 0xff;

  o[ 4] = x1 >>>  0 & 0xff;
  o[ 5] = x1 >>>  8 & 0xff;
  o[ 6] = x1 >>> 16 & 0xff;
  o[ 7] = x1 >>> 24 & 0xff;

  o[ 8] = x2 >>>  0 & 0xff;
  o[ 9] = x2 >>>  8 & 0xff;
  o[10] = x2 >>> 16 & 0xff;
  o[11] = x2 >>> 24 & 0xff;

  o[12] = x3 >>>  0 & 0xff;
  o[13] = x3 >>>  8 & 0xff;
  o[14] = x3 >>> 16 & 0xff;
  o[15] = x3 >>> 24 & 0xff;

  o[16] = x4 >>>  0 & 0xff;
  o[17] = x4 >>>  8 & 0xff;
  o[18] = x4 >>> 16 & 0xff;
  o[19] = x4 >>> 24 & 0xff;

  o[20] = x5 >>>  0 & 0xff;
  o[21] = x5 >>>  8 & 0xff;
  o[22] = x5 >>> 16 & 0xff;
  o[23] = x5 >>> 24 & 0xff;

  o[24] = x6 >>>  0 & 0xff;
  o[25] = x6 >>>  8 & 0xff;
  o[26] = x6 >>> 16 & 0xff;
  o[27] = x6 >>> 24 & 0xff;

  o[28] = x7 >>>  0 & 0xff;
  o[29] = x7 >>>  8 & 0xff;
  o[30] = x7 >>> 16 & 0xff;
  o[31] = x7 >>> 24 & 0xff;

  o[32] = x8 >>>  0 & 0xff;
  o[33] = x8 >>>  8 & 0xff;
  o[34] = x8 >>> 16 & 0xff;
  o[35] = x8 >>> 24 & 0xff;

  o[36] = x9 >>>  0 & 0xff;
  o[37] = x9 >>>  8 & 0xff;
  o[38] = x9 >>> 16 & 0xff;
  o[39] = x9 >>> 24 & 0xff;

  o[40] = x10 >>>  0 & 0xff;
  o[41] = x10 >>>  8 & 0xff;
  o[42] = x10 >>> 16 & 0xff;
  o[43] = x10 >>> 24 & 0xff;

  o[44] = x11 >>>  0 & 0xff;
  o[45] = x11 >>>  8 & 0xff;
  o[46] = x11 >>> 16 & 0xff;
  o[47] = x11 >>> 24 & 0xff;

  o[48] = x12 >>>  0 & 0xff;
  o[49] = x12 >>>  8 & 0xff;
  o[50] = x12 >>> 16 & 0xff;
  o[51] = x12 >>> 24 & 0xff;

  o[52] = x13 >>>  0 & 0xff;
  o[53] = x13 >>>  8 & 0xff;
  o[54] = x13 >>> 16 & 0xff;
  o[55] = x13 >>> 24 & 0xff;

  o[56] = x14 >>>  0 & 0xff;
  o[57] = x14 >>>  8 & 0xff;
  o[58] = x14 >>> 16 & 0xff;
  o[59] = x14 >>> 24 & 0xff;

  o[60] = x15 >>>  0 & 0xff;
  o[61] = x15 >>>  8 & 0xff;
  o[62] = x15 >>> 16 & 0xff;
  o[63] = x15 >>> 24 & 0xff;
}

function core_hsalsa20(o,p,k,c) {
  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,
      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,
      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,
      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,
      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,
      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,
      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,
      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,
      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,
      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,
      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,
      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,
      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,
      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,
      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,
      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;

  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,
      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,
      x15 = j15, u;

  for (var i = 0; i < 20; i += 2) {
    u = x0 + x12 | 0;
    x4 ^= u<<7 | u>>>(32-7);
    u = x4 + x0 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x4 | 0;
    x12 ^= u<<13 | u>>>(32-13);
    u = x12 + x8 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x1 | 0;
    x9 ^= u<<7 | u>>>(32-7);
    u = x9 + x5 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x9 | 0;
    x1 ^= u<<13 | u>>>(32-13);
    u = x1 + x13 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x6 | 0;
    x14 ^= u<<7 | u>>>(32-7);
    u = x14 + x10 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x14 | 0;
    x6 ^= u<<13 | u>>>(32-13);
    u = x6 + x2 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x11 | 0;
    x3 ^= u<<7 | u>>>(32-7);
    u = x3 + x15 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x3 | 0;
    x11 ^= u<<13 | u>>>(32-13);
    u = x11 + x7 | 0;
    x15 ^= u<<18 | u>>>(32-18);

    u = x0 + x3 | 0;
    x1 ^= u<<7 | u>>>(32-7);
    u = x1 + x0 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x1 | 0;
    x3 ^= u<<13 | u>>>(32-13);
    u = x3 + x2 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x4 | 0;
    x6 ^= u<<7 | u>>>(32-7);
    u = x6 + x5 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x6 | 0;
    x4 ^= u<<13 | u>>>(32-13);
    u = x4 + x7 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x9 | 0;
    x11 ^= u<<7 | u>>>(32-7);
    u = x11 + x10 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x11 | 0;
    x9 ^= u<<13 | u>>>(32-13);
    u = x9 + x8 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x14 | 0;
    x12 ^= u<<7 | u>>>(32-7);
    u = x12 + x15 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x12 | 0;
    x14 ^= u<<13 | u>>>(32-13);
    u = x14 + x13 | 0;
    x15 ^= u<<18 | u>>>(32-18);
  }

  o[ 0] = x0 >>>  0 & 0xff;
  o[ 1] = x0 >>>  8 & 0xff;
  o[ 2] = x0 >>> 16 & 0xff;
  o[ 3] = x0 >>> 24 & 0xff;

  o[ 4] = x5 >>>  0 & 0xff;
  o[ 5] = x5 >>>  8 & 0xff;
  o[ 6] = x5 >>> 16 & 0xff;
  o[ 7] = x5 >>> 24 & 0xff;

  o[ 8] = x10 >>>  0 & 0xff;
  o[ 9] = x10 >>>  8 & 0xff;
  o[10] = x10 >>> 16 & 0xff;
  o[11] = x10 >>> 24 & 0xff;

  o[12] = x15 >>>  0 & 0xff;
  o[13] = x15 >>>  8 & 0xff;
  o[14] = x15 >>> 16 & 0xff;
  o[15] = x15 >>> 24 & 0xff;

  o[16] = x6 >>>  0 & 0xff;
  o[17] = x6 >>>  8 & 0xff;
  o[18] = x6 >>> 16 & 0xff;
  o[19] = x6 >>> 24 & 0xff;

  o[20] = x7 >>>  0 & 0xff;
  o[21] = x7 >>>  8 & 0xff;
  o[22] = x7 >>> 16 & 0xff;
  o[23] = x7 >>> 24 & 0xff;

  o[24] = x8 >>>  0 & 0xff;
  o[25] = x8 >>>  8 & 0xff;
  o[26] = x8 >>> 16 & 0xff;
  o[27] = x8 >>> 24 & 0xff;

  o[28] = x9 >>>  0 & 0xff;
  o[29] = x9 >>>  8 & 0xff;
  o[30] = x9 >>> 16 & 0xff;
  o[31] = x9 >>> 24 & 0xff;
}

function crypto_core_salsa20(out,inp,k,c) {
  core_salsa20(out,inp,k,c);
}

function crypto_core_hsalsa20(out,inp,k,c) {
  core_hsalsa20(out,inp,k,c);
}

var sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
            // "expand 32-byte k"

function crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {
  var z = new Uint8Array(16), x = new Uint8Array(64);
  var u, i;
  for (i = 0; i < 16; i++) z[i] = 0;
  for (i = 0; i < 8; i++) z[i] = n[i];
  while (b >= 64) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];
    u = 1;
    for (i = 8; i < 16; i++) {
      u = u + (z[i] & 0xff) | 0;
      z[i] = u & 0xff;
      u >>>= 8;
    }
    b -= 64;
    cpos += 64;
    mpos += 64;
  }
  if (b > 0) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];
  }
  return 0;
}

function crypto_stream_salsa20(c,cpos,b,n,k) {
  var z = new Uint8Array(16), x = new Uint8Array(64);
  var u, i;
  for (i = 0; i < 16; i++) z[i] = 0;
  for (i = 0; i < 8; i++) z[i] = n[i];
  while (b >= 64) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < 64; i++) c[cpos+i] = x[i];
    u = 1;
    for (i = 8; i < 16; i++) {
      u = u + (z[i] & 0xff) | 0;
      z[i] = u & 0xff;
      u >>>= 8;
    }
    b -= 64;
    cpos += 64;
  }
  if (b > 0) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < b; i++) c[cpos+i] = x[i];
  }
  return 0;
}

function crypto_stream(c,cpos,d,n,k) {
  var s = new Uint8Array(32);
  crypto_core_hsalsa20(s,n,k,sigma);
  var sn = new Uint8Array(8);
  for (var i = 0; i < 8; i++) sn[i] = n[i+16];
  return crypto_stream_salsa20(c,cpos,d,sn,s);
}

function crypto_stream_xor(c,cpos,m,mpos,d,n,k) {
  var s = new Uint8Array(32);
  crypto_core_hsalsa20(s,n,k,sigma);
  var sn = new Uint8Array(8);
  for (var i = 0; i < 8; i++) sn[i] = n[i+16];
  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);
}

/*
* Port of Andrew Moon's Poly1305-donna-16. Public domain.
* https://github.com/floodyberry/poly1305-donna
*/

var poly1305 = function(key) {
  this.buffer = new Uint8Array(16);
  this.r = new Uint16Array(10);
  this.h = new Uint16Array(10);
  this.pad = new Uint16Array(8);
  this.leftover = 0;
  this.fin = 0;

  var t0, t1, t2, t3, t4, t5, t6, t7;

  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;
  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;
  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;
  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;
  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;
  this.r[5] = ((t4 >>>  1)) & 0x1ffe;
  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;
  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;
  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;
  this.r[9] = ((t7 >>>  5)) & 0x007f;

  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;
  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;
  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;
  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;
  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;
  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;
  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;
  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;
};

poly1305.prototype.blocks = function(m, mpos, bytes) {
  var hibit = this.fin ? 0 : (1 << 11);
  var t0, t1, t2, t3, t4, t5, t6, t7, c;
  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;

  var h0 = this.h[0],
      h1 = this.h[1],
      h2 = this.h[2],
      h3 = this.h[3],
      h4 = this.h[4],
      h5 = this.h[5],
      h6 = this.h[6],
      h7 = this.h[7],
      h8 = this.h[8],
      h9 = this.h[9];

  var r0 = this.r[0],
      r1 = this.r[1],
      r2 = this.r[2],
      r3 = this.r[3],
      r4 = this.r[4],
      r5 = this.r[5],
      r6 = this.r[6],
      r7 = this.r[7],
      r8 = this.r[8],
      r9 = this.r[9];

  while (bytes >= 16) {
    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;
    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;
    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;
    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;
    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;
    h5 += ((t4 >>>  1)) & 0x1fff;
    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;
    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;
    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;
    h9 += ((t7 >>> 5)) | hibit;

    c = 0;

    d0 = c;
    d0 += h0 * r0;
    d0 += h1 * (5 * r9);
    d0 += h2 * (5 * r8);
    d0 += h3 * (5 * r7);
    d0 += h4 * (5 * r6);
    c = (d0 >>> 13); d0 &= 0x1fff;
    d0 += h5 * (5 * r5);
    d0 += h6 * (5 * r4);
    d0 += h7 * (5 * r3);
    d0 += h8 * (5 * r2);
    d0 += h9 * (5 * r1);
    c += (d0 >>> 13); d0 &= 0x1fff;

    d1 = c;
    d1 += h0 * r1;
    d1 += h1 * r0;
    d1 += h2 * (5 * r9);
    d1 += h3 * (5 * r8);
    d1 += h4 * (5 * r7);
    c = (d1 >>> 13); d1 &= 0x1fff;
    d1 += h5 * (5 * r6);
    d1 += h6 * (5 * r5);
    d1 += h7 * (5 * r4);
    d1 += h8 * (5 * r3);
    d1 += h9 * (5 * r2);
    c += (d1 >>> 13); d1 &= 0x1fff;

    d2 = c;
    d2 += h0 * r2;
    d2 += h1 * r1;
    d2 += h2 * r0;
    d2 += h3 * (5 * r9);
    d2 += h4 * (5 * r8);
    c = (d2 >>> 13); d2 &= 0x1fff;
    d2 += h5 * (5 * r7);
    d2 += h6 * (5 * r6);
    d2 += h7 * (5 * r5);
    d2 += h8 * (5 * r4);
    d2 += h9 * (5 * r3);
    c += (d2 >>> 13); d2 &= 0x1fff;

    d3 = c;
    d3 += h0 * r3;
    d3 += h1 * r2;
    d3 += h2 * r1;
    d3 += h3 * r0;
    d3 += h4 * (5 * r9);
    c = (d3 >>> 13); d3 &= 0x1fff;
    d3 += h5 * (5 * r8);
    d3 += h6 * (5 * r7);
    d3 += h7 * (5 * r6);
    d3 += h8 * (5 * r5);
    d3 += h9 * (5 * r4);
    c += (d3 >>> 13); d3 &= 0x1fff;

    d4 = c;
    d4 += h0 * r4;
    d4 += h1 * r3;
    d4 += h2 * r2;
    d4 += h3 * r1;
    d4 += h4 * r0;
    c = (d4 >>> 13); d4 &= 0x1fff;
    d4 += h5 * (5 * r9);
    d4 += h6 * (5 * r8);
    d4 += h7 * (5 * r7);
    d4 += h8 * (5 * r6);
    d4 += h9 * (5 * r5);
    c += (d4 >>> 13); d4 &= 0x1fff;

    d5 = c;
    d5 += h0 * r5;
    d5 += h1 * r4;
    d5 += h2 * r3;
    d5 += h3 * r2;
    d5 += h4 * r1;
    c = (d5 >>> 13); d5 &= 0x1fff;
    d5 += h5 * r0;
    d5 += h6 * (5 * r9);
    d5 += h7 * (5 * r8);
    d5 += h8 * (5 * r7);
    d5 += h9 * (5 * r6);
    c += (d5 >>> 13); d5 &= 0x1fff;

    d6 = c;
    d6 += h0 * r6;
    d6 += h1 * r5;
    d6 += h2 * r4;
    d6 += h3 * r3;
    d6 += h4 * r2;
    c = (d6 >>> 13); d6 &= 0x1fff;
    d6 += h5 * r1;
    d6 += h6 * r0;
    d6 += h7 * (5 * r9);
    d6 += h8 * (5 * r8);
    d6 += h9 * (5 * r7);
    c += (d6 >>> 13); d6 &= 0x1fff;

    d7 = c;
    d7 += h0 * r7;
    d7 += h1 * r6;
    d7 += h2 * r5;
    d7 += h3 * r4;
    d7 += h4 * r3;
    c = (d7 >>> 13); d7 &= 0x1fff;
    d7 += h5 * r2;
    d7 += h6 * r1;
    d7 += h7 * r0;
    d7 += h8 * (5 * r9);
    d7 += h9 * (5 * r8);
    c += (d7 >>> 13); d7 &= 0x1fff;

    d8 = c;
    d8 += h0 * r8;
    d8 += h1 * r7;
    d8 += h2 * r6;
    d8 += h3 * r5;
    d8 += h4 * r4;
    c = (d8 >>> 13); d8 &= 0x1fff;
    d8 += h5 * r3;
    d8 += h6 * r2;
    d8 += h7 * r1;
    d8 += h8 * r0;
    d8 += h9 * (5 * r9);
    c += (d8 >>> 13); d8 &= 0x1fff;

    d9 = c;
    d9 += h0 * r9;
    d9 += h1 * r8;
    d9 += h2 * r7;
    d9 += h3 * r6;
    d9 += h4 * r5;
    c = (d9 >>> 13); d9 &= 0x1fff;
    d9 += h5 * r4;
    d9 += h6 * r3;
    d9 += h7 * r2;
    d9 += h8 * r1;
    d9 += h9 * r0;
    c += (d9 >>> 13); d9 &= 0x1fff;

    c = (((c << 2) + c)) | 0;
    c = (c + d0) | 0;
    d0 = c & 0x1fff;
    c = (c >>> 13);
    d1 += c;

    h0 = d0;
    h1 = d1;
    h2 = d2;
    h3 = d3;
    h4 = d4;
    h5 = d5;
    h6 = d6;
    h7 = d7;
    h8 = d8;
    h9 = d9;

    mpos += 16;
    bytes -= 16;
  }
  this.h[0] = h0;
  this.h[1] = h1;
  this.h[2] = h2;
  this.h[3] = h3;
  this.h[4] = h4;
  this.h[5] = h5;
  this.h[6] = h6;
  this.h[7] = h7;
  this.h[8] = h8;
  this.h[9] = h9;
};

poly1305.prototype.finish = function(mac, macpos) {
  var g = new Uint16Array(10);
  var c, mask, f, i;

  if (this.leftover) {
    i = this.leftover;
    this.buffer[i++] = 1;
    for (; i < 16; i++) this.buffer[i] = 0;
    this.fin = 1;
    this.blocks(this.buffer, 0, 16);
  }

  c = this.h[1] >>> 13;
  this.h[1] &= 0x1fff;
  for (i = 2; i < 10; i++) {
    this.h[i] += c;
    c = this.h[i] >>> 13;
    this.h[i] &= 0x1fff;
  }
  this.h[0] += (c * 5);
  c = this.h[0] >>> 13;
  this.h[0] &= 0x1fff;
  this.h[1] += c;
  c = this.h[1] >>> 13;
  this.h[1] &= 0x1fff;
  this.h[2] += c;

  g[0] = this.h[0] + 5;
  c = g[0] >>> 13;
  g[0] &= 0x1fff;
  for (i = 1; i < 10; i++) {
    g[i] = this.h[i] + c;
    c = g[i] >>> 13;
    g[i] &= 0x1fff;
  }
  g[9] -= (1 << 13);

  mask = (c ^ 1) - 1;
  for (i = 0; i < 10; i++) g[i] &= mask;
  mask = ~mask;
  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];

  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;
  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;
  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;
  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;
  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;
  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;
  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;
  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;

  f = this.h[0] + this.pad[0];
  this.h[0] = f & 0xffff;
  for (i = 1; i < 8; i++) {
    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;
    this.h[i] = f & 0xffff;
  }

  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;
  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;
  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;
  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;
  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;
  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;
  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;
  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;
  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;
  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;
  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;
  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;
  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;
  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;
  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;
  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;
};

poly1305.prototype.update = function(m, mpos, bytes) {
  var i, want;

  if (this.leftover) {
    want = (16 - this.leftover);
    if (want > bytes)
      want = bytes;
    for (i = 0; i < want; i++)
      this.buffer[this.leftover + i] = m[mpos+i];
    bytes -= want;
    mpos += want;
    this.leftover += want;
    if (this.leftover < 16)
      return;
    this.blocks(this.buffer, 0, 16);
    this.leftover = 0;
  }

  if (bytes >= 16) {
    want = bytes - (bytes % 16);
    this.blocks(m, mpos, want);
    mpos += want;
    bytes -= want;
  }

  if (bytes) {
    for (i = 0; i < bytes; i++)
      this.buffer[this.leftover + i] = m[mpos+i];
    this.leftover += bytes;
  }
};

function crypto_onetimeauth(out, outpos, m, mpos, n, k) {
  var s = new poly1305(k);
  s.update(m, mpos, n);
  s.finish(out, outpos);
  return 0;
}

function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {
  var x = new Uint8Array(16);
  crypto_onetimeauth(x,0,m,mpos,n,k);
  return crypto_verify_16(h,hpos,x,0);
}

function crypto_secretbox(c,m,d,n,k) {
  var i;
  if (d < 32) return -1;
  crypto_stream_xor(c,0,m,0,d,n,k);
  crypto_onetimeauth(c, 16, c, 32, d - 32, c);
  for (i = 0; i < 16; i++) c[i] = 0;
  return 0;
}

function crypto_secretbox_open(m,c,d,n,k) {
  var i;
  var x = new Uint8Array(32);
  if (d < 32) return -1;
  crypto_stream(x,0,32,n,k);
  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;
  crypto_stream_xor(m,0,c,0,d,n,k);
  for (i = 0; i < 32; i++) m[i] = 0;
  return 0;
}

function set25519(r, a) {
  var i;
  for (i = 0; i < 16; i++) r[i] = a[i]|0;
}

function car25519(o) {
  var i, v, c = 1;
  for (i = 0; i < 16; i++) {
    v = o[i] + c + 65535;
    c = Math.floor(v / 65536);
    o[i] = v - c * 65536;
  }
  o[0] += c-1 + 37 * (c-1);
}

function sel25519(p, q, b) {
  var t, c = ~(b-1);
  for (var i = 0; i < 16; i++) {
    t = c & (p[i] ^ q[i]);
    p[i] ^= t;
    q[i] ^= t;
  }
}

function pack25519(o, n) {
  var i, j, b;
  var m = gf(), t = gf();
  for (i = 0; i < 16; i++) t[i] = n[i];
  car25519(t);
  car25519(t);
  car25519(t);
  for (j = 0; j < 2; j++) {
    m[0] = t[0] - 0xffed;
    for (i = 1; i < 15; i++) {
      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);
      m[i-1] &= 0xffff;
    }
    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);
    b = (m[15]>>16) & 1;
    m[14] &= 0xffff;
    sel25519(t, m, 1-b);
  }
  for (i = 0; i < 16; i++) {
    o[2*i] = t[i] & 0xff;
    o[2*i+1] = t[i]>>8;
  }
}

function neq25519(a, b) {
  var c = new Uint8Array(32), d = new Uint8Array(32);
  pack25519(c, a);
  pack25519(d, b);
  return crypto_verify_32(c, 0, d, 0);
}

function par25519(a) {
  var d = new Uint8Array(32);
  pack25519(d, a);
  return d[0] & 1;
}

function unpack25519(o, n) {
  var i;
  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);
  o[15] &= 0x7fff;
}

function A(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];
}

function Z(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];
}

function M(o, a, b) {
  var v, c,
     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,
     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,
    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,
    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,
    b0 = b[0],
    b1 = b[1],
    b2 = b[2],
    b3 = b[3],
    b4 = b[4],
    b5 = b[5],
    b6 = b[6],
    b7 = b[7],
    b8 = b[8],
    b9 = b[9],
    b10 = b[10],
    b11 = b[11],
    b12 = b[12],
    b13 = b[13],
    b14 = b[14],
    b15 = b[15];

  v = a[0];
  t0 += v * b0;
  t1 += v * b1;
  t2 += v * b2;
  t3 += v * b3;
  t4 += v * b4;
  t5 += v * b5;
  t6 += v * b6;
  t7 += v * b7;
  t8 += v * b8;
  t9 += v * b9;
  t10 += v * b10;
  t11 += v * b11;
  t12 += v * b12;
  t13 += v * b13;
  t14 += v * b14;
  t15 += v * b15;
  v = a[1];
  t1 += v * b0;
  t2 += v * b1;
  t3 += v * b2;
  t4 += v * b3;
  t5 += v * b4;
  t6 += v * b5;
  t7 += v * b6;
  t8 += v * b7;
  t9 += v * b8;
  t10 += v * b9;
  t11 += v * b10;
  t12 += v * b11;
  t13 += v * b12;
  t14 += v * b13;
  t15 += v * b14;
  t16 += v * b15;
  v = a[2];
  t2 += v * b0;
  t3 += v * b1;
  t4 += v * b2;
  t5 += v * b3;
  t6 += v * b4;
  t7 += v * b5;
  t8 += v * b6;
  t9 += v * b7;
  t10 += v * b8;
  t11 += v * b9;
  t12 += v * b10;
  t13 += v * b11;
  t14 += v * b12;
  t15 += v * b13;
  t16 += v * b14;
  t17 += v * b15;
  v = a[3];
  t3 += v * b0;
  t4 += v * b1;
  t5 += v * b2;
  t6 += v * b3;
  t7 += v * b4;
  t8 += v * b5;
  t9 += v * b6;
  t10 += v * b7;
  t11 += v * b8;
  t12 += v * b9;
  t13 += v * b10;
  t14 += v * b11;
  t15 += v * b12;
  t16 += v * b13;
  t17 += v * b14;
  t18 += v * b15;
  v = a[4];
  t4 += v * b0;
  t5 += v * b1;
  t6 += v * b2;
  t7 += v * b3;
  t8 += v * b4;
  t9 += v * b5;
  t10 += v * b6;
  t11 += v * b7;
  t12 += v * b8;
  t13 += v * b9;
  t14 += v * b10;
  t15 += v * b11;
  t16 += v * b12;
  t17 += v * b13;
  t18 += v * b14;
  t19 += v * b15;
  v = a[5];
  t5 += v * b0;
  t6 += v * b1;
  t7 += v * b2;
  t8 += v * b3;
  t9 += v * b4;
  t10 += v * b5;
  t11 += v * b6;
  t12 += v * b7;
  t13 += v * b8;
  t14 += v * b9;
  t15 += v * b10;
  t16 += v * b11;
  t17 += v * b12;
  t18 += v * b13;
  t19 += v * b14;
  t20 += v * b15;
  v = a[6];
  t6 += v * b0;
  t7 += v * b1;
  t8 += v * b2;
  t9 += v * b3;
  t10 += v * b4;
  t11 += v * b5;
  t12 += v * b6;
  t13 += v * b7;
  t14 += v * b8;
  t15 += v * b9;
  t16 += v * b10;
  t17 += v * b11;
  t18 += v * b12;
  t19 += v * b13;
  t20 += v * b14;
  t21 += v * b15;
  v = a[7];
  t7 += v * b0;
  t8 += v * b1;
  t9 += v * b2;
  t10 += v * b3;
  t11 += v * b4;
  t12 += v * b5;
  t13 += v * b6;
  t14 += v * b7;
  t15 += v * b8;
  t16 += v * b9;
  t17 += v * b10;
  t18 += v * b11;
  t19 += v * b12;
  t20 += v * b13;
  t21 += v * b14;
  t22 += v * b15;
  v = a[8];
  t8 += v * b0;
  t9 += v * b1;
  t10 += v * b2;
  t11 += v * b3;
  t12 += v * b4;
  t13 += v * b5;
  t14 += v * b6;
  t15 += v * b7;
  t16 += v * b8;
  t17 += v * b9;
  t18 += v * b10;
  t19 += v * b11;
  t20 += v * b12;
  t21 += v * b13;
  t22 += v * b14;
  t23 += v * b15;
  v = a[9];
  t9 += v * b0;
  t10 += v * b1;
  t11 += v * b2;
  t12 += v * b3;
  t13 += v * b4;
  t14 += v * b5;
  t15 += v * b6;
  t16 += v * b7;
  t17 += v * b8;
  t18 += v * b9;
  t19 += v * b10;
  t20 += v * b11;
  t21 += v * b12;
  t22 += v * b13;
  t23 += v * b14;
  t24 += v * b15;
  v = a[10];
  t10 += v * b0;
  t11 += v * b1;
  t12 += v * b2;
  t13 += v * b3;
  t14 += v * b4;
  t15 += v * b5;
  t16 += v * b6;
  t17 += v * b7;
  t18 += v * b8;
  t19 += v * b9;
  t20 += v * b10;
  t21 += v * b11;
  t22 += v * b12;
  t23 += v * b13;
  t24 += v * b14;
  t25 += v * b15;
  v = a[11];
  t11 += v * b0;
  t12 += v * b1;
  t13 += v * b2;
  t14 += v * b3;
  t15 += v * b4;
  t16 += v * b5;
  t17 += v * b6;
  t18 += v * b7;
  t19 += v * b8;
  t20 += v * b9;
  t21 += v * b10;
  t22 += v * b11;
  t23 += v * b12;
  t24 += v * b13;
  t25 += v * b14;
  t26 += v * b15;
  v = a[12];
  t12 += v * b0;
  t13 += v * b1;
  t14 += v * b2;
  t15 += v * b3;
  t16 += v * b4;
  t17 += v * b5;
  t18 += v * b6;
  t19 += v * b7;
  t20 += v * b8;
  t21 += v * b9;
  t22 += v * b10;
  t23 += v * b11;
  t24 += v * b12;
  t25 += v * b13;
  t26 += v * b14;
  t27 += v * b15;
  v = a[13];
  t13 += v * b0;
  t14 += v * b1;
  t15 += v * b2;
  t16 += v * b3;
  t17 += v * b4;
  t18 += v * b5;
  t19 += v * b6;
  t20 += v * b7;
  t21 += v * b8;
  t22 += v * b9;
  t23 += v * b10;
  t24 += v * b11;
  t25 += v * b12;
  t26 += v * b13;
  t27 += v * b14;
  t28 += v * b15;
  v = a[14];
  t14 += v * b0;
  t15 += v * b1;
  t16 += v * b2;
  t17 += v * b3;
  t18 += v * b4;
  t19 += v * b5;
  t20 += v * b6;
  t21 += v * b7;
  t22 += v * b8;
  t23 += v * b9;
  t24 += v * b10;
  t25 += v * b11;
  t26 += v * b12;
  t27 += v * b13;
  t28 += v * b14;
  t29 += v * b15;
  v = a[15];
  t15 += v * b0;
  t16 += v * b1;
  t17 += v * b2;
  t18 += v * b3;
  t19 += v * b4;
  t20 += v * b5;
  t21 += v * b6;
  t22 += v * b7;
  t23 += v * b8;
  t24 += v * b9;
  t25 += v * b10;
  t26 += v * b11;
  t27 += v * b12;
  t28 += v * b13;
  t29 += v * b14;
  t30 += v * b15;

  t0  += 38 * t16;
  t1  += 38 * t17;
  t2  += 38 * t18;
  t3  += 38 * t19;
  t4  += 38 * t20;
  t5  += 38 * t21;
  t6  += 38 * t22;
  t7  += 38 * t23;
  t8  += 38 * t24;
  t9  += 38 * t25;
  t10 += 38 * t26;
  t11 += 38 * t27;
  t12 += 38 * t28;
  t13 += 38 * t29;
  t14 += 38 * t30;
  // t15 left as is

  // first car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  // second car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  o[ 0] = t0;
  o[ 1] = t1;
  o[ 2] = t2;
  o[ 3] = t3;
  o[ 4] = t4;
  o[ 5] = t5;
  o[ 6] = t6;
  o[ 7] = t7;
  o[ 8] = t8;
  o[ 9] = t9;
  o[10] = t10;
  o[11] = t11;
  o[12] = t12;
  o[13] = t13;
  o[14] = t14;
  o[15] = t15;
}

function S(o, a) {
  M(o, a, a);
}

function inv25519(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 253; a >= 0; a--) {
    S(c, c);
    if(a !== 2 && a !== 4) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function pow2523(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 250; a >= 0; a--) {
      S(c, c);
      if(a !== 1) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function crypto_scalarmult(q, n, p) {
  var z = new Uint8Array(32);
  var x = new Float64Array(80), r, i;
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf();
  for (i = 0; i < 31; i++) z[i] = n[i];
  z[31]=(n[31]&127)|64;
  z[0]&=248;
  unpack25519(x,p);
  for (i = 0; i < 16; i++) {
    b[i]=x[i];
    d[i]=a[i]=c[i]=0;
  }
  a[0]=d[0]=1;
  for (i=254; i>=0; --i) {
    r=(z[i>>>3]>>>(i&7))&1;
    sel25519(a,b,r);
    sel25519(c,d,r);
    A(e,a,c);
    Z(a,a,c);
    A(c,b,d);
    Z(b,b,d);
    S(d,e);
    S(f,a);
    M(a,c,a);
    M(c,b,e);
    A(e,a,c);
    Z(a,a,c);
    S(b,a);
    Z(c,d,f);
    M(a,c,_121665);
    A(a,a,d);
    M(c,c,a);
    M(a,d,f);
    M(d,b,x);
    S(b,e);
    sel25519(a,b,r);
    sel25519(c,d,r);
  }
  for (i = 0; i < 16; i++) {
    x[i+16]=a[i];
    x[i+32]=c[i];
    x[i+48]=b[i];
    x[i+64]=d[i];
  }
  var x32 = x.subarray(32);
  var x16 = x.subarray(16);
  inv25519(x32,x32);
  M(x16,x16,x32);
  pack25519(q,x16);
  return 0;
}

function crypto_scalarmult_base(q, n) {
  return crypto_scalarmult(q, n, _9);
}

function crypto_box_keypair(y, x) {
  randombytes(x, 32);
  return crypto_scalarmult_base(y, x);
}

function crypto_box_beforenm(k, y, x) {
  var s = new Uint8Array(32);
  crypto_scalarmult(s, x, y);
  return crypto_core_hsalsa20(k, _0, s, sigma);
}

var crypto_box_afternm = crypto_secretbox;
var crypto_box_open_afternm = crypto_secretbox_open;

function crypto_box(c, m, d, n, y, x) {
  var k = new Uint8Array(32);
  crypto_box_beforenm(k, y, x);
  return crypto_box_afternm(c, m, d, n, k);
}

function crypto_box_open(m, c, d, n, y, x) {
  var k = new Uint8Array(32);
  crypto_box_beforenm(k, y, x);
  return crypto_box_open_afternm(m, c, d, n, k);
}

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function crypto_hashblocks_hl(hh, hl, m, n) {
  var wh = new Int32Array(16), wl = new Int32Array(16),
      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,
      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,
      th, tl, i, j, h, l, a, b, c, d;

  var ah0 = hh[0],
      ah1 = hh[1],
      ah2 = hh[2],
      ah3 = hh[3],
      ah4 = hh[4],
      ah5 = hh[5],
      ah6 = hh[6],
      ah7 = hh[7],

      al0 = hl[0],
      al1 = hl[1],
      al2 = hl[2],
      al3 = hl[3],
      al4 = hl[4],
      al5 = hl[5],
      al6 = hl[6],
      al7 = hl[7];

  var pos = 0;
  while (n >= 128) {
    for (i = 0; i < 16; i++) {
      j = 8 * i + pos;
      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];
      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];
    }
    for (i = 0; i < 80; i++) {
      bh0 = ah0;
      bh1 = ah1;
      bh2 = ah2;
      bh3 = ah3;
      bh4 = ah4;
      bh5 = ah5;
      bh6 = ah6;
      bh7 = ah7;

      bl0 = al0;
      bl1 = al1;
      bl2 = al2;
      bl3 = al3;
      bl4 = al4;
      bl5 = al5;
      bl6 = al6;
      bl7 = al7;

      // add
      h = ah7;
      l = al7;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma1
      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));
      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Ch
      h = (ah4 & ah5) ^ (~ah4 & ah6);
      l = (al4 & al5) ^ (~al4 & al6);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // K
      h = K[i*2];
      l = K[i*2+1];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // w
      h = wh[i%16];
      l = wl[i%16];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      th = c & 0xffff | d << 16;
      tl = a & 0xffff | b << 16;

      // add
      h = th;
      l = tl;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma0
      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));
      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Maj
      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);
      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh7 = (c & 0xffff) | (d << 16);
      bl7 = (a & 0xffff) | (b << 16);

      // add
      h = bh3;
      l = bl3;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      h = th;
      l = tl;

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh3 = (c & 0xffff) | (d << 16);
      bl3 = (a & 0xffff) | (b << 16);

      ah1 = bh0;
      ah2 = bh1;
      ah3 = bh2;
      ah4 = bh3;
      ah5 = bh4;
      ah6 = bh5;
      ah7 = bh6;
      ah0 = bh7;

      al1 = bl0;
      al2 = bl1;
      al3 = bl2;
      al4 = bl3;
      al5 = bl4;
      al6 = bl5;
      al7 = bl6;
      al0 = bl7;

      if (i%16 === 15) {
        for (j = 0; j < 16; j++) {
          // add
          h = wh[j];
          l = wl[j];

          a = l & 0xffff; b = l >>> 16;
          c = h & 0xffff; d = h >>> 16;

          h = wh[(j+9)%16];
          l = wl[(j+9)%16];

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma0
          th = wh[(j+1)%16];
          tl = wl[(j+1)%16];
          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);
          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma1
          th = wh[(j+14)%16];
          tl = wl[(j+14)%16];
          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);
          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;

          wh[j] = (c & 0xffff) | (d << 16);
          wl[j] = (a & 0xffff) | (b << 16);
        }
      }
    }

    // add
    h = ah0;
    l = al0;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[0];
    l = hl[0];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[0] = ah0 = (c & 0xffff) | (d << 16);
    hl[0] = al0 = (a & 0xffff) | (b << 16);

    h = ah1;
    l = al1;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[1];
    l = hl[1];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[1] = ah1 = (c & 0xffff) | (d << 16);
    hl[1] = al1 = (a & 0xffff) | (b << 16);

    h = ah2;
    l = al2;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[2];
    l = hl[2];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[2] = ah2 = (c & 0xffff) | (d << 16);
    hl[2] = al2 = (a & 0xffff) | (b << 16);

    h = ah3;
    l = al3;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[3];
    l = hl[3];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[3] = ah3 = (c & 0xffff) | (d << 16);
    hl[3] = al3 = (a & 0xffff) | (b << 16);

    h = ah4;
    l = al4;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[4];
    l = hl[4];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[4] = ah4 = (c & 0xffff) | (d << 16);
    hl[4] = al4 = (a & 0xffff) | (b << 16);

    h = ah5;
    l = al5;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[5];
    l = hl[5];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[5] = ah5 = (c & 0xffff) | (d << 16);
    hl[5] = al5 = (a & 0xffff) | (b << 16);

    h = ah6;
    l = al6;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[6];
    l = hl[6];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[6] = ah6 = (c & 0xffff) | (d << 16);
    hl[6] = al6 = (a & 0xffff) | (b << 16);

    h = ah7;
    l = al7;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[7];
    l = hl[7];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[7] = ah7 = (c & 0xffff) | (d << 16);
    hl[7] = al7 = (a & 0xffff) | (b << 16);

    pos += 128;
    n -= 128;
  }

  return n;
}

function crypto_hash(out, m, n) {
  var hh = new Int32Array(8),
      hl = new Int32Array(8),
      x = new Uint8Array(256),
      i, b = n;

  hh[0] = 0x6a09e667;
  hh[1] = 0xbb67ae85;
  hh[2] = 0x3c6ef372;
  hh[3] = 0xa54ff53a;
  hh[4] = 0x510e527f;
  hh[5] = 0x9b05688c;
  hh[6] = 0x1f83d9ab;
  hh[7] = 0x5be0cd19;

  hl[0] = 0xf3bcc908;
  hl[1] = 0x84caa73b;
  hl[2] = 0xfe94f82b;
  hl[3] = 0x5f1d36f1;
  hl[4] = 0xade682d1;
  hl[5] = 0x2b3e6c1f;
  hl[6] = 0xfb41bd6b;
  hl[7] = 0x137e2179;

  crypto_hashblocks_hl(hh, hl, m, n);
  n %= 128;

  for (i = 0; i < n; i++) x[i] = m[b-n+i];
  x[n] = 128;

  n = 256-128*(n<112?1:0);
  x[n-9] = 0;
  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);
  crypto_hashblocks_hl(hh, hl, x, n);

  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);

  return 0;
}

function add(p, q) {
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf(),
      g = gf(), h = gf(), t = gf();

  Z(a, p[1], p[0]);
  Z(t, q[1], q[0]);
  M(a, a, t);
  A(b, p[0], p[1]);
  A(t, q[0], q[1]);
  M(b, b, t);
  M(c, p[3], q[3]);
  M(c, c, D2);
  M(d, p[2], q[2]);
  A(d, d, d);
  Z(e, b, a);
  Z(f, d, c);
  A(g, d, c);
  A(h, b, a);

  M(p[0], e, f);
  M(p[1], h, g);
  M(p[2], g, f);
  M(p[3], e, h);
}

function cswap(p, q, b) {
  var i;
  for (i = 0; i < 4; i++) {
    sel25519(p[i], q[i], b);
  }
}

function pack(r, p) {
  var tx = gf(), ty = gf(), zi = gf();
  inv25519(zi, p[2]);
  M(tx, p[0], zi);
  M(ty, p[1], zi);
  pack25519(r, ty);
  r[31] ^= par25519(tx) << 7;
}

function scalarmult(p, q, s) {
  var b, i;
  set25519(p[0], gf0);
  set25519(p[1], gf1);
  set25519(p[2], gf1);
  set25519(p[3], gf0);
  for (i = 255; i >= 0; --i) {
    b = (s[(i/8)|0] >> (i&7)) & 1;
    cswap(p, q, b);
    add(q, p);
    add(p, p);
    cswap(p, q, b);
  }
}

function scalarbase(p, s) {
  var q = [gf(), gf(), gf(), gf()];
  set25519(q[0], X);
  set25519(q[1], Y);
  set25519(q[2], gf1);
  M(q[3], X, Y);
  scalarmult(p, q, s);
}

function crypto_sign_keypair(pk, sk, seeded) {
  var d = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()];
  var i;

  if (!seeded) randombytes(sk, 32);
  crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;

  scalarbase(p, d);
  pack(pk, p);

  for (i = 0; i < 32; i++) sk[i+32] = pk[i];
  return 0;
}

var L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);

function modL(r, x) {
  var carry, i, j, k;
  for (i = 63; i >= 32; --i) {
    carry = 0;
    for (j = i - 32, k = i - 12; j < k; ++j) {
      x[j] += carry - 16 * x[i] * L[j - (i - 32)];
      carry = Math.floor((x[j] + 128) / 256);
      x[j] -= carry * 256;
    }
    x[j] += carry;
    x[i] = 0;
  }
  carry = 0;
  for (j = 0; j < 32; j++) {
    x[j] += carry - (x[31] >> 4) * L[j];
    carry = x[j] >> 8;
    x[j] &= 255;
  }
  for (j = 0; j < 32; j++) x[j] -= carry * L[j];
  for (i = 0; i < 32; i++) {
    x[i+1] += x[i] >> 8;
    r[i] = x[i] & 255;
  }
}

function reduce(r) {
  var x = new Float64Array(64), i;
  for (i = 0; i < 64; i++) x[i] = r[i];
  for (i = 0; i < 64; i++) r[i] = 0;
  modL(r, x);
}

// Note: difference from C - smlen returned, not passed as argument.
function crypto_sign(sm, m, n, sk) {
  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);
  var i, j, x = new Float64Array(64);
  var p = [gf(), gf(), gf(), gf()];

  crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;

  var smlen = n + 64;
  for (i = 0; i < n; i++) sm[64 + i] = m[i];
  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];

  crypto_hash(r, sm.subarray(32), n+32);
  reduce(r);
  scalarbase(p, r);
  pack(sm, p);

  for (i = 32; i < 64; i++) sm[i] = sk[i];
  crypto_hash(h, sm, n + 64);
  reduce(h);

  for (i = 0; i < 64; i++) x[i] = 0;
  for (i = 0; i < 32; i++) x[i] = r[i];
  for (i = 0; i < 32; i++) {
    for (j = 0; j < 32; j++) {
      x[i+j] += h[i] * d[j];
    }
  }

  modL(sm.subarray(32), x);
  return smlen;
}

function unpackneg(r, p) {
  var t = gf(), chk = gf(), num = gf(),
      den = gf(), den2 = gf(), den4 = gf(),
      den6 = gf();

  set25519(r[2], gf1);
  unpack25519(r[1], p);
  S(num, r[1]);
  M(den, num, D);
  Z(num, num, r[2]);
  A(den, r[2], den);

  S(den2, den);
  S(den4, den2);
  M(den6, den4, den2);
  M(t, den6, num);
  M(t, t, den);

  pow2523(t, t);
  M(t, t, num);
  M(t, t, den);
  M(t, t, den);
  M(r[0], t, den);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) M(r[0], r[0], I);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) return -1;

  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);

  M(r[3], r[0], r[1]);
  return 0;
}

function crypto_sign_open(m, sm, n, pk) {
  var i;
  var t = new Uint8Array(32), h = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()],
      q = [gf(), gf(), gf(), gf()];

  if (n < 64) return -1;

  if (unpackneg(q, pk)) return -1;

  for (i = 0; i < n; i++) m[i] = sm[i];
  for (i = 0; i < 32; i++) m[i+32] = pk[i];
  crypto_hash(h, m, n);
  reduce(h);
  scalarmult(p, q, h);

  scalarbase(q, sm.subarray(32));
  add(p, q);
  pack(t, p);

  n -= 64;
  if (crypto_verify_32(sm, 0, t, 0)) {
    for (i = 0; i < n; i++) m[i] = 0;
    return -1;
  }

  for (i = 0; i < n; i++) m[i] = sm[i + 64];
  return n;
}

var crypto_secretbox_KEYBYTES = 32,
    crypto_secretbox_NONCEBYTES = 24,
    crypto_secretbox_ZEROBYTES = 32,
    crypto_secretbox_BOXZEROBYTES = 16,
    crypto_scalarmult_BYTES = 32,
    crypto_scalarmult_SCALARBYTES = 32,
    crypto_box_PUBLICKEYBYTES = 32,
    crypto_box_SECRETKEYBYTES = 32,
    crypto_box_BEFORENMBYTES = 32,
    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,
    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,
    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,
    crypto_sign_BYTES = 64,
    crypto_sign_PUBLICKEYBYTES = 32,
    crypto_sign_SECRETKEYBYTES = 64,
    crypto_sign_SEEDBYTES = 32,
    crypto_hash_BYTES = 64;

nacl.lowlevel = {
  crypto_core_hsalsa20: crypto_core_hsalsa20,
  crypto_stream_xor: crypto_stream_xor,
  crypto_stream: crypto_stream,
  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,
  crypto_stream_salsa20: crypto_stream_salsa20,
  crypto_onetimeauth: crypto_onetimeauth,
  crypto_onetimeauth_verify: crypto_onetimeauth_verify,
  crypto_verify_16: crypto_verify_16,
  crypto_verify_32: crypto_verify_32,
  crypto_secretbox: crypto_secretbox,
  crypto_secretbox_open: crypto_secretbox_open,
  crypto_scalarmult: crypto_scalarmult,
  crypto_scalarmult_base: crypto_scalarmult_base,
  crypto_box_beforenm: crypto_box_beforenm,
  crypto_box_afternm: crypto_box_afternm,
  crypto_box: crypto_box,
  crypto_box_open: crypto_box_open,
  crypto_box_keypair: crypto_box_keypair,
  crypto_hash: crypto_hash,
  crypto_sign: crypto_sign,
  crypto_sign_keypair: crypto_sign_keypair,
  crypto_sign_open: crypto_sign_open,

  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,
  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,
  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,
  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,
  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,
  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,
  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,
  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,
  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,
  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,
  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,
  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,
  crypto_sign_BYTES: crypto_sign_BYTES,
  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,
  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,
  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,
  crypto_hash_BYTES: crypto_hash_BYTES,

  gf: gf,
  D: D,
  L: L,
  pack25519: pack25519,
  unpack25519: unpack25519,
  M: M,
  A: A,
  S: S,
  Z: Z,
  pow2523: pow2523,
  add: add,
  set25519: set25519,
  modL: modL,
  scalarmult: scalarmult,
  scalarbase: scalarbase,
};

/* High-level API */

function checkLengths(k, n) {
  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');
  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');
}

function checkBoxLengths(pk, sk) {
  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');
  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');
}

function checkArrayTypes() {
  for (var i = 0; i < arguments.length; i++) {
    if (!(arguments[i] instanceof Uint8Array))
      throw new TypeError('unexpected type, use Uint8Array');
  }
}

function cleanup(arr) {
  for (var i = 0; i < arr.length; i++) arr[i] = 0;
}

nacl.randomBytes = function(n) {
  var b = new Uint8Array(n);
  randombytes(b, n);
  return b;
};

nacl.secretbox = function(msg, nonce, key) {
  checkArrayTypes(msg, nonce, key);
  checkLengths(key, nonce);
  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);
  var c = new Uint8Array(m.length);
  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];
  crypto_secretbox(c, m, m.length, nonce, key);
  return c.subarray(crypto_secretbox_BOXZEROBYTES);
};

nacl.secretbox.open = function(box, nonce, key) {
  checkArrayTypes(box, nonce, key);
  checkLengths(key, nonce);
  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);
  var m = new Uint8Array(c.length);
  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];
  if (c.length < 32) return null;
  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;
  return m.subarray(crypto_secretbox_ZEROBYTES);
};

nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;
nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;
nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;

nacl.scalarMult = function(n, p) {
  checkArrayTypes(n, p);
  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');
  var q = new Uint8Array(crypto_scalarmult_BYTES);
  crypto_scalarmult(q, n, p);
  return q;
};

nacl.scalarMult.base = function(n) {
  checkArrayTypes(n);
  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
  var q = new Uint8Array(crypto_scalarmult_BYTES);
  crypto_scalarmult_base(q, n);
  return q;
};

nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;
nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;

nacl.box = function(msg, nonce, publicKey, secretKey) {
  var k = nacl.box.before(publicKey, secretKey);
  return nacl.secretbox(msg, nonce, k);
};

nacl.box.before = function(publicKey, secretKey) {
  checkArrayTypes(publicKey, secretKey);
  checkBoxLengths(publicKey, secretKey);
  var k = new Uint8Array(crypto_box_BEFORENMBYTES);
  crypto_box_beforenm(k, publicKey, secretKey);
  return k;
};

nacl.box.after = nacl.secretbox;

nacl.box.open = function(msg, nonce, publicKey, secretKey) {
  var k = nacl.box.before(publicKey, secretKey);
  return nacl.secretbox.open(msg, nonce, k);
};

nacl.box.open.after = nacl.secretbox.open;

nacl.box.keyPair = function() {
  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);
  crypto_box_keypair(pk, sk);
  return {publicKey: pk, secretKey: sk};
};

nacl.box.keyPair.fromSecretKey = function(secretKey) {
  checkArrayTypes(secretKey);
  if (secretKey.length !== crypto_box_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
  crypto_scalarmult_base(pk, secretKey);
  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};
};

nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;
nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;
nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;
nacl.box.nonceLength = crypto_box_NONCEBYTES;
nacl.box.overheadLength = nacl.secretbox.overheadLength;

nacl.sign = function(msg, secretKey) {
  checkArrayTypes(msg, secretKey);
  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);
  crypto_sign(signedMsg, msg, msg.length, secretKey);
  return signedMsg;
};

nacl.sign.open = function(signedMsg, publicKey) {
  checkArrayTypes(signedMsg, publicKey);
  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
    throw new Error('bad public key size');
  var tmp = new Uint8Array(signedMsg.length);
  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);
  if (mlen < 0) return null;
  var m = new Uint8Array(mlen);
  for (var i = 0; i < m.length; i++) m[i] = tmp[i];
  return m;
};

nacl.sign.detached = function(msg, secretKey) {
  var signedMsg = nacl.sign(msg, secretKey);
  var sig = new Uint8Array(crypto_sign_BYTES);
  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];
  return sig;
};

nacl.sign.detached.verify = function(msg, sig, publicKey) {
  checkArrayTypes(msg, sig, publicKey);
  if (sig.length !== crypto_sign_BYTES)
    throw new Error('bad signature size');
  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
    throw new Error('bad public key size');
  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);
  var m = new Uint8Array(crypto_sign_BYTES + msg.length);
  var i;
  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];
  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];
  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);
};

nacl.sign.keyPair = function() {
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
  crypto_sign_keypair(pk, sk);
  return {publicKey: pk, secretKey: sk};
};

nacl.sign.keyPair.fromSecretKey = function(secretKey) {
  checkArrayTypes(secretKey);
  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];
  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};
};

nacl.sign.keyPair.fromSeed = function(seed) {
  checkArrayTypes(seed);
  if (seed.length !== crypto_sign_SEEDBYTES)
    throw new Error('bad seed size');
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
  for (var i = 0; i < 32; i++) sk[i] = seed[i];
  crypto_sign_keypair(pk, sk, true);
  return {publicKey: pk, secretKey: sk};
};

nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;
nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;
nacl.sign.seedLength = crypto_sign_SEEDBYTES;
nacl.sign.signatureLength = crypto_sign_BYTES;

nacl.hash = function(msg) {
  checkArrayTypes(msg);
  var h = new Uint8Array(crypto_hash_BYTES);
  crypto_hash(h, msg, msg.length);
  return h;
};

nacl.hash.hashLength = crypto_hash_BYTES;

nacl.verify = function(x, y) {
  checkArrayTypes(x, y);
  // Zero length arguments are considered not equal.
  if (x.length === 0 || y.length === 0) return false;
  if (x.length !== y.length) return false;
  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;
};

nacl.setPRNG = function(fn) {
  randombytes = fn;
};

(function() {
  // Initialize PRNG if environment provides CSPRNG.
  // If not, methods calling randombytes will throw.
  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;
  if (crypto && crypto.getRandomValues) {
    // Browsers.
    var QUOTA = 65536;
    nacl.setPRNG(function(x, n) {
      var i, v = new Uint8Array(n);
      for (i = 0; i < n; i += QUOTA) {
        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));
      }
      for (i = 0; i < n; i++) x[i] = v[i];
      cleanup(v);
    });
  } else if (true) {
    // Node.js.
    crypto = __webpack_require__(5024);
    if (crypto && crypto.randomBytes) {
      nacl.setPRNG(function(x, n) {
        var i, v = crypto.randomBytes(n);
        for (i = 0; i < n; i++) x[i] = v[i];
        cleanup(v);
      });
    }
  }
})();

})( true && module.exports ? module.exports : (self.nacl = self.nacl || {}));


/***/ }),

/***/ 6601:
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ 9214:
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ 5024:
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ 8597:
/***/ ((module) => {

"use strict";
module.exports = {"i8":"6.5.4"};

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";

// NAMESPACE OBJECT: ./node_modules/@dfinity/candid/lib/esm/idl.js
var esm_idl_namespaceObject = {};
__webpack_require__.r(esm_idl_namespaceObject);
__webpack_require__.d(esm_idl_namespaceObject, {
  "Bool": () => (idl_Bool),
  "BoolClass": () => (idl_BoolClass),
  "ConstructType": () => (idl_ConstructType),
  "Empty": () => (idl_Empty),
  "EmptyClass": () => (idl_EmptyClass),
  "FixedIntClass": () => (idl_FixedIntClass),
  "FixedNatClass": () => (idl_FixedNatClass),
  "Float32": () => (idl_Float32),
  "Float64": () => (idl_Float64),
  "FloatClass": () => (idl_FloatClass),
  "Func": () => (idl_Func),
  "FuncClass": () => (idl_FuncClass),
  "Int": () => (idl_Int),
  "Int16": () => (idl_Int16),
  "Int32": () => (idl_Int32),
  "Int64": () => (idl_Int64),
  "Int8": () => (idl_Int8),
  "IntClass": () => (idl_IntClass),
  "Nat": () => (idl_Nat),
  "Nat16": () => (idl_Nat16),
  "Nat32": () => (idl_Nat32),
  "Nat64": () => (idl_Nat64),
  "Nat8": () => (idl_Nat8),
  "NatClass": () => (idl_NatClass),
  "Null": () => (idl_Null),
  "NullClass": () => (idl_NullClass),
  "Opt": () => (idl_Opt),
  "OptClass": () => (idl_OptClass),
  "PrimitiveType": () => (idl_PrimitiveType),
  "Principal": () => (esm_idl_Principal),
  "PrincipalClass": () => (idl_PrincipalClass),
  "Rec": () => (idl_Rec),
  "RecClass": () => (idl_RecClass),
  "Record": () => (idl_Record),
  "RecordClass": () => (idl_RecordClass),
  "Reserved": () => (idl_Reserved),
  "ReservedClass": () => (idl_ReservedClass),
  "Service": () => (idl_Service),
  "ServiceClass": () => (idl_ServiceClass),
  "Text": () => (idl_Text),
  "TextClass": () => (idl_TextClass),
  "Tuple": () => (idl_Tuple),
  "TupleClass": () => (idl_TupleClass),
  "Type": () => (idl_Type),
  "Unknown": () => (Unknown),
  "UnknownClass": () => (UnknownClass),
  "Variant": () => (idl_Variant),
  "VariantClass": () => (idl_VariantClass),
  "Vec": () => (idl_Vec),
  "VecClass": () => (idl_VecClass),
  "Visitor": () => (idl_Visitor),
  "decode": () => (esm_idl_decode),
  "encode": () => (esm_idl_encode)
});

;// CONCATENATED MODULE: ./src/plug/plug.html
// Module
var code = " <!DOCTYPE html> <html> <head> </head> <body> <h1>PLUG</h1> <button id=\"connect_button_plug\">Connect</button> <button id=\"get_principal_button_plug\">Get principal</button> <button id=\"get_balance_button_plug\">Get balance</button> <button id=\"get_nft_button_plug\">Get NFT</button> </body> </html>";
// Exports
/* harmony default export */ const plug = (code);
;// CONCATENATED MODULE: ./src/factories/ghost_canister_factory.js
/* harmony default export */ const ghost_canister_factory = (({ IDL }) => {
  const TokenIdentifier = IDL.Text;
  const AccountIdentifier__1 = IDL.Text;
  const User = IDL.Variant({
    principal: IDL.Principal,
    address: AccountIdentifier__1,
  });
  const AllowanceRequest = IDL.Record({
    token: TokenIdentifier,
    owner: User,
    spender: IDL.Principal,
  });
  const Balance__1 = IDL.Nat;
  const CommonError = IDL.Variant({
    InsufficientBalance: IDL.Null,
    InvalidToken: TokenIdentifier,
    Unauthorized: AccountIdentifier__1,
    Other: IDL.Text,
  });
  const Result_1 = IDL.Variant({ ok: Balance__1, err: CommonError });
  const SubAccount = IDL.Vec(IDL.Nat8);
  const Balance = IDL.Nat;
  const ApproveRequest = IDL.Record({
    token: TokenIdentifier,
    subaccount: IDL.Opt(SubAccount),
    allowance: Balance,
    spender: IDL.Principal,
  });
  const ApproveAllRequest = IDL.Record({
    approved: IDL.Bool,
    spender: User,
  });
  const BoolResult = IDL.Variant({ ok: IDL.Bool, err: IDL.Text });
  const BalanceRequest = IDL.Record({
    token: TokenIdentifier,
    user: User,
  });
  const CommonError__1 = IDL.Variant({
    InsufficientBalance: IDL.Null,
    InvalidToken: TokenIdentifier,
    Unauthorized: AccountIdentifier__1,
    Other: IDL.Text,
  });
  const BalanceResponse = IDL.Variant({
    ok: Balance,
    err: CommonError__1,
  });
  const TokenIdentifier__1 = IDL.Text;
  const AccountIdentifier__2 = IDL.Text;
  const Result_4 = IDL.Variant({
    ok: AccountIdentifier__2,
    err: CommonError,
  });
  const AccountIdentifier = IDL.Text;
  const KVPair = IDL.Record({ k: IDL.Text, v: IDL.Text });
  const CanisterInfo__1 = IDL.Record({
    cid: IDL.Text,
    creator: AccountIdentifier,
    linkMap: IDL.Vec(KVPair),
    ownerName: IDL.Text,
    owner: AccountIdentifier,
    name: IDL.Text,
    createTime: IDL.Int,
    totalSupply: IDL.Nat,
    introduction: IDL.Text,
    mintSupply: IDL.Nat,
    royalties: IDL.Nat,
    image: IDL.Text,
  });
  const ResponseResult_12 = IDL.Variant({
    ok: CanisterInfo__1,
    err: IDL.Text,
  });
  const TokenIndex = IDL.Nat32;
  const TextResult = IDL.Variant({ ok: IDL.Text, err: IDL.Text });
  const Chunk = IDL.Record({
    content: IDL.Vec(IDL.Nat8),
    batch_id: IDL.Nat,
  });
  const NatResult = IDL.Variant({ ok: IDL.Nat, err: IDL.Text });
  const Extension = IDL.Text;
  const ResponseResult_11 = IDL.Variant({
    ok: IDL.Tuple(IDL.Text, IDL.Text),
    err: IDL.Text,
  });
  const User__1 = IDL.Variant({
    principal: IDL.Principal,
    address: AccountIdentifier__1,
  });
  const TokenIndex__1 = IDL.Nat32;
  const KVPair__1 = IDL.Record({ k: IDL.Text, v: IDL.Text });
  const IcsMetadata = IDL.Record({
    cId: IDL.Text,
    tokenId: TokenIndex__1,
    owner: AccountIdentifier__1,
    metadata: IDL.Opt(IDL.Vec(IDL.Nat8)),
    link: IDL.Text,
    name: IDL.Text,
    minter: AccountIdentifier__1,
    filePath: IDL.Text,
    fileType: IDL.Text,
    mintTime: IDL.Int,
    introduction: IDL.Text,
    attributes: IDL.Vec(KVPair__1),
    royalties: IDL.Nat,
    nftType: IDL.Text,
    artistName: IDL.Text,
  });
  const Page_1 = IDL.Record({
    content: IDL.Vec(IcsMetadata),
    offset: IDL.Nat,
    limit: IDL.Nat,
    totalElements: IDL.Nat,
  });
  const ResponseResult_10 = IDL.Variant({ ok: Page_1, err: IDL.Text });
  const Remark = IDL.Text;
  const Memo = IDL.Vec(IDL.Nat8);
  const TransType = IDL.Variant({
    burn: IDL.Null,
    mint: IDL.Null,
    approve: IDL.Null,
    transfer: IDL.Null,
  });
  const TransferRecord = IDL.Record({
    to: AccountIdentifier__1,
    remark: Remark,
    tokenId: TokenIndex__1,
    from: AccountIdentifier__1,
    hash: IDL.Text,
    memo: IDL.Opt(Memo),
    time: IDL.Int,
    tokenName: IDL.Text,
    txType: TransType,
    caller: AccountIdentifier__1,
    price: Balance,
    amount: Balance,
  });
  const Page = IDL.Record({
    content: IDL.Vec(TransferRecord),
    offset: IDL.Nat,
    limit: IDL.Nat,
    totalElements: IDL.Nat,
  });
  const ResponseResult_9 = IDL.Variant({ ok: Page, err: IDL.Text });
  const ResponseResult_8 = IDL.Variant({
    ok: IDL.Tuple(IDL.Nat, IDL.Nat),
    err: IDL.Text,
  });
  const Metadata = IDL.Variant({
    fungible: IDL.Record({
      decimals: IDL.Nat8,
      ownerAccount: AccountIdentifier__1,
      metadata: IDL.Opt(IDL.Vec(IDL.Nat8)),
      name: IDL.Text,
      symbol: IDL.Text,
    }),
    nonfungible: IDL.Record({ metadata: IDL.Opt(IDL.Vec(IDL.Nat8)) }),
  });
  const HeaderField = IDL.Tuple(IDL.Text, IDL.Text);
  const HttpRequest = IDL.Record({
    url: IDL.Text,
    method: IDL.Text,
    body: IDL.Vec(IDL.Nat8),
    headers: IDL.Vec(HeaderField),
  });
  const StreamingCallbackToken__1 = IDL.Record({
    key: IDL.Text,
    index: IDL.Nat,
    content_encoding: IDL.Text,
  });
  const StreamingStrategy = IDL.Variant({
    Callback: IDL.Record({
      token: StreamingCallbackToken__1,
      callback: IDL.Func([], [], []),
    }),
  });
  const HttpResponse = IDL.Record({
    body: IDL.Vec(IDL.Nat8),
    headers: IDL.Vec(HeaderField),
    streaming_strategy: IDL.Opt(StreamingStrategy),
    status_code: IDL.Nat16,
  });
  const StreamingCallbackToken = IDL.Record({
    key: IDL.Text,
    index: IDL.Nat,
    content_encoding: IDL.Text,
  });
  const StreamingCallbackHttpResponse = IDL.Record({
    token: IDL.Opt(StreamingCallbackToken__1),
    body: IDL.Vec(IDL.Nat8),
  });
  const ResponseResult_7 = IDL.Variant({
    ok: IcsMetadata,
    err: IDL.Text,
  });
  const ResponseResult_5 = IDL.Variant({ ok: Balance__1, err: IDL.Text });
  const Result_3 = IDL.Variant({ ok: IDL.Text, err: IDL.Text });
  const Result_2 = IDL.Variant({ ok: Metadata, err: CommonError });
  const IcsMintRequest = IDL.Record({
    metadata: IDL.Opt(IDL.Vec(IDL.Nat8)),
    link: IDL.Text,
    name: IDL.Text,
    filePath: IDL.Text,
    fileType: IDL.Text,
    introduction: IDL.Text,
    attributes: IDL.Vec(KVPair__1),
    royalties: IDL.Nat,
    nftType: IDL.Text,
    image: IDL.Text,
    artistName: IDL.Text,
  });
  const ResponseResult_6 = IDL.Variant({ ok: TokenIndex, err: IDL.Text });
  const MintRequest = IDL.Record({
    to: User,
    metadata: IDL.Opt(IDL.Vec(IDL.Nat8)),
  });
  const IcsMintRequests = IDL.Record({
    owner: User,
    metadata: IDL.Opt(IDL.Vec(IDL.Nat8)),
    link: IDL.Text,
    name: IDL.Text,
    count: IDL.Nat,
    filePath: IDL.Text,
    fileType: IDL.Text,
    introduction: IDL.Text,
    attributes: IDL.Vec(KVPair__1),
    royalties: IDL.Nat,
    nftType: IDL.Text,
    image: IDL.Text,
    artistName: IDL.Text,
  });
  const Time = IDL.Int;
  const Listing = IDL.Record({
    locked: IDL.Opt(Time),
    seller: IDL.Principal,
    price: IDL.Nat64,
  });
  const Result = IDL.Variant({
    ok: IDL.Vec(
      IDL.Tuple(TokenIndex, IDL.Opt(Listing), IDL.Opt(IDL.Vec(IDL.Nat8)))
    ),
    err: CommonError,
  });
  const TransferRequest = IDL.Record({
    to: User,
    token: TokenIdentifier,
    notify: IDL.Bool,
    from: User,
    memo: Memo,
    subaccount: IDL.Opt(SubAccount),
    nonce: IDL.Opt(IDL.Nat),
    amount: Balance,
  });
  const TransferResponse = IDL.Variant({
    ok: Balance,
    err: IDL.Variant({
      InsufficientAllowance: IDL.Null,
      CannotNotify: AccountIdentifier__1,
      InsufficientBalance: IDL.Null,
      InvalidToken: TokenIdentifier,
      Rejected: IDL.Null,
      Unauthorized: AccountIdentifier__1,
      Other: IDL.Text,
    }),
  });
  return IDL.Service({
    acceptCycles: IDL.Func([], [], []),
    allowance: IDL.Func([AllowanceRequest], [Result_1], ["query"]),
    approve: IDL.Func([ApproveRequest], [], []),
    approveForAll: IDL.Func([ApproveAllRequest], [BoolResult], []),
    availableCycles: IDL.Func([], [IDL.Nat], ["query"]),
    balance: IDL.Func([BalanceRequest], [BalanceResponse], ["query"]),
    bearer: IDL.Func([TokenIdentifier__1], [Result_4], ["query"]),
    canisterInfo: IDL.Func([], [ResponseResult_12], ["query"]),
    chunkSize: IDL.Func([], [IDL.Nat], ["query"]),
    clearChunk: IDL.Func([], [IDL.Bool], []),
    commit_batch: IDL.Func(
      [
        IDL.Record({
          batch_id: IDL.Nat,
          content_type: IDL.Text,
          chunk_ids: IDL.Vec(IDL.Nat),
        }),
      ],
      [],
      []
    ),
    create: IDL.Func(
      [CanisterInfo__1, TokenIndex, IDL.Text, IDL.Text],
      [TextResult],
      []
    ),
    create_batch: IDL.Func([], [IDL.Record({ batch_id: IDL.Nat })], []),
    create_chunk: IDL.Func([Chunk], [IDL.Record({ chunk_id: IDL.Nat })], []),
    cycleAvailable: IDL.Func([], [NatResult], []),
    cycleBalance: IDL.Func([], [NatResult], []),
    extensions: IDL.Func([], [IDL.Vec(Extension)], ["query"]),
    findCanisterId: IDL.Func([], [ResponseResult_11], []),
    findTokenList: IDL.Func(
      [User__1, IDL.Nat, IDL.Nat],
      [ResponseResult_10],
      ["query"]
    ),
    findTokenMarket: IDL.Func(
      [IDL.Vec(IDL.Text), IDL.Nat, IDL.Nat],
      [ResponseResult_10],
      ["query"]
    ),
    findTokenTxRecord: IDL.Func(
      [User__1, IDL.Nat, IDL.Nat],
      [ResponseResult_9],
      ["query"]
    ),
    findTxRecord: IDL.Func(
      [TokenIdentifier, IDL.Nat, IDL.Nat],
      [ResponseResult_9],
      ["query"]
    ),
    getAllowances: IDL.Func(
      [],
      [IDL.Vec(IDL.Tuple(TokenIndex, IDL.Vec(AccountIdentifier__2)))],
      ["query"]
    ),
    getMinter: IDL.Func([], [IDL.Principal], ["query"]),
    getNftStat: IDL.Func([], [ResponseResult_8], ["query"]),
    getRegistry: IDL.Func(
      [],
      [IDL.Vec(IDL.Tuple(TokenIndex, AccountIdentifier__2))],
      ["query"]
    ),
    getTokens: IDL.Func(
      [],
      [IDL.Vec(IDL.Tuple(TokenIndex, Metadata))],
      ["query"]
    ),
    http_request: IDL.Func([HttpRequest], [HttpResponse], ["query"]),
    http_request_streaming_callback: IDL.Func(
      [StreamingCallbackToken],
      [StreamingCallbackHttpResponse],
      ["query"]
    ),
    icsMetadata: IDL.Func([TokenIndex], [ResponseResult_7], ["query"]),
    isApproveForAll: IDL.Func(
      [AccountIdentifier__2, AccountIdentifier__2],
      [BoolResult],
      ["query"]
    ),
    isApproveForToken: IDL.Func(
      [TokenIndex, AccountIdentifier__2, AccountIdentifier__2],
      [ResponseResult_5],
      ["query"]
    ),
    maxFileSize: IDL.Func([IDL.Nat], [Result_3], []),
    metadata: IDL.Func([TokenIdentifier__1], [Result_2], ["query"]),
    mint: IDL.Func([IcsMintRequest], [ResponseResult_6], []),
    mintNFT: IDL.Func([MintRequest], [TokenIndex], []),
    mint_batch: IDL.Func([IcsMintRequests], [ResponseResult_6], []),
    ownerNFTCount: IDL.Func([User__1], [ResponseResult_5], ["query"]),
    removeAllApproval: IDL.Func([ApproveAllRequest], [BoolResult], []),
    removeApproval: IDL.Func([ApproveRequest], [BoolResult], []),
    setCanisterId: IDL.Func(
      [IDL.Opt(IDL.Text), IDL.Opt(IDL.Text)],
      [BoolResult],
      []
    ),
    setLogo: IDL.Func([IDL.Text], [BoolResult], []),
    setMinter: IDL.Func([IDL.Principal], [], []),
    spenderRemoveApproval: IDL.Func([TokenIdentifier], [BoolResult], []),
    supply: IDL.Func([TokenIdentifier__1], [Result_1], ["query"]),
    tokens_ext: IDL.Func([AccountIdentifier__2], [Result], ["query"]),
    transfer: IDL.Func([TransferRequest], [TransferResponse], []),
  });
});

;// CONCATENATED MODULE: ./src/plug/plug.js



const plug_buttons = document.createElement("div");
plug_buttons.innerHTML = plug;
document.body.appendChild(plug_buttons);

const ghost_canister = "xzcnc-myaaa-aaaak-abk7a-cai";

const whitelist = [ghost_canister];

const connect_button = document.getElementById("connect_button_plug");
connect_button.addEventListener("click", () => connect_plug());

const get_principal_button = document.getElementById(
  "get_principal_button_plug"
);
get_principal_button.addEventListener("click", () => get_principal());

const get_balance_button = document.getElementById("get_balance_button_plug");
get_balance_button.addEventListener("click", () => get_balance());

const get_nft_button = document.getElementById("get_nft_button_plug");
get_nft_button.addEventListener("click", () => get_nft());

async function connect_plug() {
  try {
    const publicKey = await window.ic.plug.requestConnect({
      whitelist,
    });
    console.log(publicKey);
  } catch (e) {
    console.log(e);
  }
}

function get_principal() {
  const principalId = window.ic.plug.agent.getPrincipal();
  console.log(principalId);
}

async function get_balance() {
  const result = await window.ic.plug.requestBalance();
  console.log(result);
}

async function get_nft() {
  // ERC721 standard
  const actor = await window.ic.plug.createActor({
    canisterId: ghost_canister,
    interfaceFactory: ghost_canister_factory,
  });

  const result = await actor.tokens_ext(window.ic.plug.accountId);
  if ("ok" in result) {
    console.log(result.ok[0][0]);
  }
}

;// CONCATENATED MODULE: ./src/stoic/stoic.html
// Module
var stoic_code = " <!DOCTYPE html> <html> <head> </head> <body> <h1>Stoic</h1> <button id=\"connect_button_stoic\">Connect</button> <button id=\"get_principal_button_stoic\">Get principal</button> <button id=\"get_balance_button_stoic\">Get balance</button> <button id=\"get_nft_button_stoic\">Get NFT</button> </body> </html>";
// Exports
/* harmony default export */ const stoic = (stoic_code);
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/principal/lib/esm/utils/base32.js
// tslint:disable:no-bitwise
const alphabet = 'abcdefghijklmnopqrstuvwxyz234567';
// Build a lookup table for decoding.
const lookupTable = Object.create(null);
for (let i = 0; i < alphabet.length; i++) {
    lookupTable[alphabet[i]] = i;
}
// Add aliases for rfc4648.
lookupTable['0'] = lookupTable.o;
lookupTable['1'] = lookupTable.i;
/**
 * @param input The input array to encode.
 * @returns A Base32 string encoding the input.
 */
function encode(input) {
    // How many bits will we skip from the first byte.
    let skip = 0;
    // 5 high bits, carry from one byte to the next.
    let bits = 0;
    // The output string in base32.
    let output = '';
    function encodeByte(byte) {
        if (skip < 0) {
            // we have a carry from the previous byte
            bits |= byte >> -skip;
        }
        else {
            // no carry
            bits = (byte << skip) & 248;
        }
        if (skip > 3) {
            // Not enough data to produce a character, get us another one
            skip -= 8;
            return 1;
        }
        if (skip < 4) {
            // produce a character
            output += alphabet[bits >> 3];
            skip += 5;
        }
        return 0;
    }
    for (let i = 0; i < input.length;) {
        i += encodeByte(input[i]);
    }
    return output + (skip < 0 ? alphabet[bits >> 3] : '');
}
/**
 * @param input The base32 encoded string to decode.
 */
function decode(input) {
    // how many bits we have from the previous character.
    let skip = 0;
    // current byte we're producing.
    let byte = 0;
    const output = new Uint8Array(((input.length * 4) / 3) | 0);
    let o = 0;
    function decodeChar(char) {
        // Consume a character from the stream, store
        // the output in this.output. As before, better
        // to use update().
        let val = lookupTable[char.toLowerCase()];
        if (val === undefined) {
            throw new Error(`Invalid character: ${JSON.stringify(char)}`);
        }
        // move to the high bits
        val <<= 3;
        byte |= val >>> skip;
        skip += 5;
        if (skip >= 8) {
            // We have enough bytes to produce an output
            output[o++] = byte;
            skip -= 8;
            if (skip > 0) {
                byte = (val << (5 - skip)) & 255;
            }
            else {
                byte = 0;
            }
        }
    }
    for (const c of input) {
        decodeChar(c);
    }
    return output.slice(0, o);
}
//# sourceMappingURL=base32.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/principal/lib/esm/utils/getCrc.js
// tslint:disable:no-bitwise
// This file is translated to JavaScript from
// https://lxp32.github.io/docs/a-simple-example-crc32-calculation/
const lookUpTable = new Uint32Array([
    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,
    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,
    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,
    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,
    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,
    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,
    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,
    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,
    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,
    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,
    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,
    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,
    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,
    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,
    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,
    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,
    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,
    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,
    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,
    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,
    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,
    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,
    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,
    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,
    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,
    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,
    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,
    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,
    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,
    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,
    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,
    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,
]);
/**
 * Calculate the CRC32 of an ArrayBufferLike.
 * @param buf The BufferLike to calculate the CRC32 of.
 */
function getCrc32(buf) {
    const b = new Uint8Array(buf);
    let crc = -1;
    // tslint:disable-next-line:prefer-for-of
    for (let i = 0; i < b.length; i++) {
        const byte = b[i];
        const t = (byte ^ crc) & 0xff;
        crc = lookUpTable[t] ^ (crc >>> 8);
    }
    return (crc ^ -1) >>> 0;
}
//# sourceMappingURL=getCrc.js.map
// EXTERNAL MODULE: ./node_modules/js-sha256/src/sha256.js
var src_sha256 = __webpack_require__(2023);
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/principal/lib/esm/utils/sha224.js

/**
 * Returns the SHA224 hash of the buffer.
 * @param data Arraybuffer to encode
 */
function sha224(data) {
    const shaObj = src_sha256.sha224.create();
    shaObj.update(data);
    return new Uint8Array(shaObj.array());
}
//# sourceMappingURL=sha224.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/principal/lib/esm/index.js



const SELF_AUTHENTICATING_SUFFIX = 2;
const ANONYMOUS_SUFFIX = 4;
const esm_fromHexString = (hexString) => { var _a; return new Uint8Array(((_a = hexString.match(/.{1,2}/g)) !== null && _a !== void 0 ? _a : []).map(byte => parseInt(byte, 16))); };
const esm_toHexString = (bytes) => bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');
class esm_Principal {
    constructor(_arr) {
        this._arr = _arr;
        this._isPrincipal = true;
    }
    static anonymous() {
        return new this(new Uint8Array([ANONYMOUS_SUFFIX]));
    }
    static selfAuthenticating(publicKey) {
        const sha = sha224(publicKey);
        return new this(new Uint8Array([...sha, SELF_AUTHENTICATING_SUFFIX]));
    }
    static from(other) {
        if (typeof other === 'string') {
            return esm_Principal.fromText(other);
        }
        else if (typeof other === 'object' &&
            other !== null &&
            other._isPrincipal === true) {
            return new esm_Principal(other._arr);
        }
        throw new Error(`Impossible to convert ${JSON.stringify(other)} to Principal.`);
    }
    static fromHex(hex) {
        return new this(esm_fromHexString(hex));
    }
    static fromText(text) {
        const canisterIdNoDash = text.toLowerCase().replace(/-/g, '');
        let arr = decode(canisterIdNoDash);
        arr = arr.slice(4, arr.length);
        const principal = new this(arr);
        if (principal.toText() !== text) {
            throw new Error(`Principal "${principal.toText()}" does not have a valid checksum (original value "${text}" may not be a valid Principal ID).`);
        }
        return principal;
    }
    static fromUint8Array(arr) {
        return new this(arr);
    }
    isAnonymous() {
        return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX;
    }
    toUint8Array() {
        return this._arr;
    }
    toHex() {
        return esm_toHexString(this._arr).toUpperCase();
    }
    toText() {
        const checksumArrayBuf = new ArrayBuffer(4);
        const view = new DataView(checksumArrayBuf);
        view.setUint32(0, getCrc32(this._arr));
        const checksum = new Uint8Array(checksumArrayBuf);
        const bytes = Uint8Array.from(this._arr);
        const array = new Uint8Array([...checksum, ...bytes]);
        const result = encode(array);
        const matches = result.match(/.{1,5}/g);
        if (!matches) {
            // This should only happen if there's no character, which is unreachable.
            throw new Error();
        }
        return matches.join('-');
    }
    toString() {
        return this.toText();
    }
}
//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: ./node_modules/buffer/index.js
var buffer = __webpack_require__(8764);
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/agent/api.js
/**
 * Codes used by the replica for rejecting a message.
 * See {@link https://sdk.dfinity.org/docs/interface-spec/#reject-codes | the interface spec}.
 */
var api_ReplicaRejectCode;
(function (ReplicaRejectCode) {
    ReplicaRejectCode[ReplicaRejectCode["SysFatal"] = 1] = "SysFatal";
    ReplicaRejectCode[ReplicaRejectCode["SysTransient"] = 2] = "SysTransient";
    ReplicaRejectCode[ReplicaRejectCode["DestinationInvalid"] = 3] = "DestinationInvalid";
    ReplicaRejectCode[ReplicaRejectCode["CanisterReject"] = 4] = "CanisterReject";
    ReplicaRejectCode[ReplicaRejectCode["CanisterError"] = 5] = "CanisterError";
})(api_ReplicaRejectCode || (api_ReplicaRejectCode = {}));
//# sourceMappingURL=api.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/errors.js
/**
 * An error that happens in the Agent. This is the root of all errors and should be used
 * everywhere in the Agent code (this package).
 *
 * @todo https://github.com/dfinity/agent-js/issues/420
 */
class errors_AgentError extends Error {
    constructor(message) {
        super(message);
        this.message = message;
        Object.setPrototypeOf(this, errors_AgentError.prototype);
    }
}
//# sourceMappingURL=errors.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/candid/lib/esm/utils/buffer.js
/**
 * Concatenate multiple array buffers.
 * @param buffers The buffers to concatenate.
 */
function buffer_concat(...buffers) {
    const result = new Uint8Array(buffers.reduce((acc, curr) => acc + curr.byteLength, 0));
    let index = 0;
    for (const b of buffers) {
        result.set(new Uint8Array(b), index);
        index += b.byteLength;
    }
    return result;
}
/**
 * Returns an hexadecimal representation of an array buffer.
 * @param bytes The array buffer.
 */
function buffer_toHexString(bytes) {
    return new Uint8Array(bytes).reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');
}
/**
 * Return an array buffer from its hexadecimal representation.
 * @param hexString The hexadecimal string.
 */
function buffer_fromHexString(hexString) {
    var _a;
    return new Uint8Array(((_a = hexString.match(/.{1,2}/g)) !== null && _a !== void 0 ? _a : []).map(byte => parseInt(byte, 16)));
}
/**
 * A class that abstracts a pipe-like ArrayBuffer.
 */
class buffer_PipeArrayBuffer {
    /**
     * Creates a new instance of a pipe
     * @param buffer an optional buffer to start with
     * @param length an optional amount of bytes to use for the length.
     */
    constructor(buffer, length = (buffer === null || buffer === void 0 ? void 0 : buffer.byteLength) || 0) {
        this._buffer = buffer || new ArrayBuffer(0);
        this._view = new Uint8Array(this._buffer, 0, length);
    }
    get buffer() {
        // Return a copy of the buffer.
        return this._view.slice();
    }
    get byteLength() {
        return this._view.byteLength;
    }
    /**
     * Read `num` number of bytes from the front of the pipe.
     * @param num The number of bytes to read.
     */
    read(num) {
        const result = this._view.subarray(0, num);
        this._view = this._view.subarray(num);
        return result.slice().buffer;
    }
    readUint8() {
        const result = this._view[0];
        this._view = this._view.subarray(1);
        return result;
    }
    /**
     * Write a buffer to the end of the pipe.
     * @param buf The bytes to write.
     */
    write(buf) {
        const b = new Uint8Array(buf);
        const offset = this._view.byteLength;
        if (this._view.byteOffset + this._view.byteLength + b.byteLength >= this._buffer.byteLength) {
            // Alloc grow the view to include the new bytes.
            this.alloc(b.byteLength);
        }
        else {
            // Update the view to include the new bytes.
            this._view = new Uint8Array(this._buffer, this._view.byteOffset, this._view.byteLength + b.byteLength);
        }
        this._view.set(b, offset);
    }
    /**
     * Whether or not there is more data to read from the buffer
     */
    get end() {
        return this._view.byteLength === 0;
    }
    /**
     * Allocate a fixed amount of memory in the buffer. This does not affect the view.
     * @param amount A number of bytes to add to the buffer.
     */
    alloc(amount) {
        // Add a little bit of exponential growth.
        // tslint:disable-next-line:no-bitwise
        const b = new ArrayBuffer(((this._buffer.byteLength + amount) * 1.2) | 0);
        const v = new Uint8Array(b, 0, this._view.byteLength + amount);
        v.set(this._view);
        this._buffer = b;
        this._view = v;
    }
}
//# sourceMappingURL=buffer.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/candid/lib/esm/utils/leb128.js
/* eslint-disable no-constant-condition */
// tslint:disable:no-bitwise
// Note: this file uses buffer-pipe, which on Node only, uses the Node Buffer
//       implementation, which isn't compatible with the NPM buffer package
//       which we use everywhere else. This means that we have to transform
//       one into the other, hence why every function that returns a Buffer
//       actually return `new Buffer(pipe.buffer)`.
// TODO: The best solution would be to have our own buffer type around
//       Uint8Array which is standard.

function eob() {
    throw new Error('unexpected end of buffer');
}
/**
 *
 * @param pipe Pipe from buffer-pipe
 * @param num number
 * @returns Buffer
 */
function leb128_safeRead(pipe, num) {
    if (pipe.byteLength < num) {
        eob();
    }
    return pipe.read(num);
}
/**
 * @param pipe
 */
function leb128_safeReadUint8(pipe) {
    const byte = pipe.readUint8();
    if (byte === undefined) {
        eob();
    }
    return byte;
}
/**
 * Encode a positive number (or bigint) into a Buffer. The number will be floored to the
 * nearest integer.
 * @param value The number to encode.
 */
function leb128_lebEncode(value) {
    if (typeof value === 'number') {
        value = BigInt(value);
    }
    if (value < BigInt(0)) {
        throw new Error('Cannot leb encode negative values.');
    }
    const byteLength = (value === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(value)))) + 1;
    const pipe = new buffer_PipeArrayBuffer(new ArrayBuffer(byteLength), 0);
    while (true) {
        const i = Number(value & BigInt(0x7f));
        value /= BigInt(0x80);
        if (value === BigInt(0)) {
            pipe.write(new Uint8Array([i]));
            break;
        }
        else {
            pipe.write(new Uint8Array([i | 0x80]));
        }
    }
    return pipe.buffer;
}
/**
 * Decode a leb encoded buffer into a bigint. The number will always be positive (does not
 * support signed leb encoding).
 * @param pipe A Buffer containing the leb encoded bits.
 */
function leb128_lebDecode(pipe) {
    let weight = BigInt(1);
    let value = BigInt(0);
    let byte;
    do {
        byte = leb128_safeReadUint8(pipe);
        value += BigInt(byte & 0x7f).valueOf() * weight;
        weight *= BigInt(128);
    } while (byte >= 0x80);
    return value;
}
/**
 * Encode a number (or bigint) into a Buffer, with support for negative numbers. The number
 * will be floored to the nearest integer.
 * @param value The number to encode.
 */
function leb128_slebEncode(value) {
    if (typeof value === 'number') {
        value = BigInt(value);
    }
    const isNeg = value < BigInt(0);
    if (isNeg) {
        value = -value - BigInt(1);
    }
    const byteLength = (value === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(value)))) + 1;
    const pipe = new buffer_PipeArrayBuffer(new ArrayBuffer(byteLength), 0);
    while (true) {
        const i = getLowerBytes(value);
        value /= BigInt(0x80);
        // prettier-ignore
        if ((isNeg && value === BigInt(0) && (i & 0x40) !== 0)
            || (!isNeg && value === BigInt(0) && (i & 0x40) === 0)) {
            pipe.write(new Uint8Array([i]));
            break;
        }
        else {
            pipe.write(new Uint8Array([i | 0x80]));
        }
    }
    function getLowerBytes(num) {
        const bytes = num % BigInt(0x80);
        if (isNeg) {
            // We swap the bits here again, and remove 1 to do two's complement.
            return Number(BigInt(0x80) - bytes - BigInt(1));
        }
        else {
            return Number(bytes);
        }
    }
    return pipe.buffer;
}
/**
 * Decode a leb encoded buffer into a bigint. The number is decoded with support for negative
 * signed-leb encoding.
 * @param pipe A Buffer containing the signed leb encoded bits.
 */
function leb128_slebDecode(pipe) {
    // Get the size of the buffer, then cut a buffer of that size.
    const pipeView = new Uint8Array(pipe.buffer);
    let len = 0;
    for (; len < pipeView.byteLength; len++) {
        if (pipeView[len] < 0x80) {
            // If it's a positive number, we reuse lebDecode.
            if ((pipeView[len] & 0x40) === 0) {
                return leb128_lebDecode(pipe);
            }
            break;
        }
    }
    const bytes = new Uint8Array(leb128_safeRead(pipe, len + 1));
    let value = BigInt(0);
    for (let i = bytes.byteLength - 1; i >= 0; i--) {
        value = value * BigInt(0x80) + BigInt(0x80 - (bytes[i] & 0x7f) - 1);
    }
    return -value - BigInt(1);
}
/**
 *
 * @param value bigint or number
 * @param byteLength number
 * @returns Buffer
 */
function writeUIntLE(value, byteLength) {
    if (BigInt(value) < BigInt(0)) {
        throw new Error('Cannot write negative values.');
    }
    return writeIntLE(value, byteLength);
}
/**
 *
 * @param value
 * @param byteLength
 */
function writeIntLE(value, byteLength) {
    value = BigInt(value);
    const pipe = new buffer_PipeArrayBuffer(new ArrayBuffer(Math.min(1, byteLength)), 0);
    let i = 0;
    let mul = BigInt(256);
    let sub = BigInt(0);
    let byte = Number(value % mul);
    pipe.write(new Uint8Array([byte]));
    while (++i < byteLength) {
        if (value < 0 && sub === BigInt(0) && byte !== 0) {
            sub = BigInt(1);
        }
        byte = Number((value / mul - sub) % BigInt(256));
        pipe.write(new Uint8Array([byte]));
        mul *= BigInt(256);
    }
    return pipe.buffer;
}
/**
 *
 * @param pipe Pipe from buffer-pipe
 * @param byteLength number
 * @returns bigint
 */
function readUIntLE(pipe, byteLength) {
    let val = BigInt(leb128_safeReadUint8(pipe));
    let mul = BigInt(1);
    let i = 0;
    while (++i < byteLength) {
        mul *= BigInt(256);
        const byte = BigInt(leb128_safeReadUint8(pipe));
        val = val + mul * byte;
    }
    return val;
}
/**
 *
 * @param pipe Pipe from buffer-pipe
 * @param byteLength number
 * @returns bigint
 */
function readIntLE(pipe, byteLength) {
    let val = readUIntLE(pipe, byteLength);
    const mul = BigInt(2) ** (BigInt(8) * BigInt(byteLength - 1) + BigInt(7));
    if (val >= mul) {
        val -= mul * BigInt(2);
    }
    return val;
}
//# sourceMappingURL=leb128.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/candid/lib/esm/idl.js
// tslint:disable:max-classes-per-file





const magicNumber = 'DIDL';
function zipWith(xs, ys, f) {
    return xs.map((x, i) => f(x, ys[i]));
}
/**
 * An IDL Type Table, which precedes the data in the stream.
 */
class TypeTable {
    constructor() {
        // List of types. Needs to be an array as the index needs to be stable.
        this._typs = [];
        this._idx = new Map();
    }
    has(obj) {
        return this._idx.has(obj.name);
    }
    add(type, buf) {
        const idx = this._typs.length;
        this._idx.set(type.name, idx);
        this._typs.push(buf);
    }
    merge(obj, knot) {
        const idx = this._idx.get(obj.name);
        const knotIdx = this._idx.get(knot);
        if (idx === undefined) {
            throw new Error('Missing type index for ' + obj);
        }
        if (knotIdx === undefined) {
            throw new Error('Missing type index for ' + knot);
        }
        this._typs[idx] = this._typs[knotIdx];
        // Delete the type.
        this._typs.splice(knotIdx, 1);
        this._idx.delete(knot);
    }
    encode() {
        const len = lebEncode(this._typs.length);
        const buf = concat(...this._typs);
        return concat(len, buf);
    }
    indexOf(typeName) {
        if (!this._idx.has(typeName)) {
            throw new Error('Missing type index for ' + typeName);
        }
        return slebEncode(this._idx.get(typeName) || 0);
    }
}
class Visitor {
    visitType(t, data) {
        throw new Error('Not implemented');
    }
    visitPrimitive(t, data) {
        return this.visitType(t, data);
    }
    visitEmpty(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitBool(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitNull(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitReserved(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitText(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitNumber(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitInt(t, data) {
        return this.visitNumber(t, data);
    }
    visitNat(t, data) {
        return this.visitNumber(t, data);
    }
    visitFloat(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitFixedInt(t, data) {
        return this.visitNumber(t, data);
    }
    visitFixedNat(t, data) {
        return this.visitNumber(t, data);
    }
    visitPrincipal(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitConstruct(t, data) {
        return this.visitType(t, data);
    }
    visitVec(t, ty, data) {
        return this.visitConstruct(t, data);
    }
    visitOpt(t, ty, data) {
        return this.visitConstruct(t, data);
    }
    visitRecord(t, fields, data) {
        return this.visitConstruct(t, data);
    }
    visitTuple(t, components, data) {
        const fields = components.map((ty, i) => [`_${i}_`, ty]);
        return this.visitRecord(t, fields, data);
    }
    visitVariant(t, fields, data) {
        return this.visitConstruct(t, data);
    }
    visitRec(t, ty, data) {
        return this.visitConstruct(ty, data);
    }
    visitFunc(t, data) {
        return this.visitConstruct(t, data);
    }
    visitService(t, data) {
        return this.visitConstruct(t, data);
    }
}
/**
 * Represents an IDL type.
 */
class Type {
    /* Display type name */
    display() {
        return this.name;
    }
    valueToString(x) {
        return toReadableString(x);
    }
    /* Implement `T` in the IDL spec, only needed for non-primitive types */
    buildTypeTable(typeTable) {
        if (!typeTable.has(this)) {
            this._buildTypeTableImpl(typeTable);
        }
    }
}
class PrimitiveType extends Type {
    checkType(t) {
        if (this.name !== t.name) {
            throw new Error(`type mismatch: type on the wire ${t.name}, expect type ${this.name}`);
        }
        return t;
    }
    _buildTypeTableImpl(typeTable) {
        // No type table encoding for Primitive types.
        return;
    }
}
class ConstructType extends Type {
    checkType(t) {
        if (t instanceof RecClass) {
            const ty = t.getType();
            if (typeof ty === 'undefined') {
                throw new Error('type mismatch with uninitialized type');
            }
            return ty;
        }
        throw new Error(`type mismatch: type on the wire ${t.name}, expect type ${this.name}`);
    }
    encodeType(typeTable) {
        return typeTable.indexOf(this.name);
    }
}
/**
 * Represents an IDL Empty, a type which has no inhabitants.
 * Since no values exist for this type, it cannot be serialised or deserialised.
 * Result types like `Result<Text, Empty>` should always succeed.
 */
class EmptyClass extends PrimitiveType {
    accept(v, d) {
        return v.visitEmpty(this, d);
    }
    covariant(x) {
        return false;
    }
    encodeValue() {
        throw new Error('Empty cannot appear as a function argument');
    }
    valueToString() {
        throw new Error('Empty cannot appear as a value');
    }
    encodeType() {
        return leb128_slebEncode(-17 /* Empty */);
    }
    decodeValue() {
        throw new Error('Empty cannot appear as an output');
    }
    get name() {
        return 'empty';
    }
}
/**
 * Represents an IDL Bool
 */
class BoolClass extends PrimitiveType {
    accept(v, d) {
        return v.visitBool(this, d);
    }
    covariant(x) {
        return typeof x === 'boolean';
    }
    encodeValue(x) {
        return new Uint8Array([x ? 1 : 0]);
    }
    encodeType() {
        return leb128_slebEncode(-2 /* Bool */);
    }
    decodeValue(b, t) {
        this.checkType(t);
        switch (leb128_safeReadUint8(b)) {
            case 0:
                return false;
            case 1:
                return true;
            default:
                throw new Error('Boolean value out of range');
        }
    }
    get name() {
        return 'bool';
    }
}
/**
 * Represents an IDL Null
 */
class NullClass extends PrimitiveType {
    accept(v, d) {
        return v.visitNull(this, d);
    }
    covariant(x) {
        return x === null;
    }
    encodeValue() {
        return new ArrayBuffer(0);
    }
    encodeType() {
        return leb128_slebEncode(-1 /* Null */);
    }
    decodeValue(b, t) {
        this.checkType(t);
        return null;
    }
    get name() {
        return 'null';
    }
}
/**
 * Represents an IDL Reserved
 */
class ReservedClass extends PrimitiveType {
    accept(v, d) {
        return v.visitReserved(this, d);
    }
    covariant(x) {
        return true;
    }
    encodeValue() {
        return new ArrayBuffer(0);
    }
    encodeType() {
        return leb128_slebEncode(-16 /* Reserved */);
    }
    decodeValue(b, t) {
        if (t.name !== this.name) {
            t.decodeValue(b, t);
        }
        return null;
    }
    get name() {
        return 'reserved';
    }
}
/**
 * Represents an IDL Text
 */
class TextClass extends PrimitiveType {
    accept(v, d) {
        return v.visitText(this, d);
    }
    covariant(x) {
        return typeof x === 'string';
    }
    encodeValue(x) {
        const buf = new TextEncoder().encode(x);
        const len = leb128_lebEncode(buf.byteLength);
        return buffer_concat(len, buf);
    }
    encodeType() {
        return leb128_slebEncode(-15 /* Text */);
    }
    decodeValue(b, t) {
        this.checkType(t);
        const len = leb128_lebDecode(b);
        const buf = leb128_safeRead(b, Number(len));
        const decoder = new TextDecoder('utf8', { fatal: true });
        return decoder.decode(buf);
    }
    get name() {
        return 'text';
    }
    valueToString(x) {
        return '"' + x + '"';
    }
}
/**
 * Represents an IDL Int
 */
class IntClass extends PrimitiveType {
    accept(v, d) {
        return v.visitInt(this, d);
    }
    covariant(x) {
        // We allow encoding of JavaScript plain numbers.
        // But we will always decode to bigint.
        return typeof x === 'bigint' || Number.isInteger(x);
    }
    encodeValue(x) {
        return leb128_slebEncode(x);
    }
    encodeType() {
        return leb128_slebEncode(-4 /* Int */);
    }
    decodeValue(b, t) {
        this.checkType(t);
        return leb128_slebDecode(b);
    }
    get name() {
        return 'int';
    }
    valueToString(x) {
        return x.toString();
    }
}
/**
 * Represents an IDL Nat
 */
class NatClass extends PrimitiveType {
    accept(v, d) {
        return v.visitNat(this, d);
    }
    covariant(x) {
        // We allow encoding of JavaScript plain numbers.
        // But we will always decode to bigint.
        return (typeof x === 'bigint' && x >= BigInt(0)) || (Number.isInteger(x) && x >= 0);
    }
    encodeValue(x) {
        return leb128_lebEncode(x);
    }
    encodeType() {
        return leb128_slebEncode(-3 /* Nat */);
    }
    decodeValue(b, t) {
        this.checkType(t);
        return leb128_lebDecode(b);
    }
    get name() {
        return 'nat';
    }
    valueToString(x) {
        return x.toString();
    }
}
/**
 * Represents an IDL Float
 */
class FloatClass extends PrimitiveType {
    constructor(_bits) {
        super();
        this._bits = _bits;
        if (_bits !== 32 && _bits !== 64) {
            throw new Error('not a valid float type');
        }
    }
    accept(v, d) {
        return v.visitFloat(this, d);
    }
    covariant(x) {
        return typeof x === 'number' || x instanceof Number;
    }
    encodeValue(x) {
        const buf = new ArrayBuffer(this._bits / 8);
        const view = new DataView(buf);
        if (this._bits === 32) {
            view.setFloat32(0, x, true);
        }
        else {
            view.setFloat64(0, x, true);
        }
        return buf;
    }
    encodeType() {
        const opcode = this._bits === 32 ? -13 /* Float32 */ : -14 /* Float64 */;
        return leb128_slebEncode(opcode);
    }
    decodeValue(b, t) {
        this.checkType(t);
        const bytes = leb128_safeRead(b, this._bits / 8);
        const view = new DataView(bytes);
        if (this._bits === 32) {
            return view.getFloat32(0, true);
        }
        else {
            return view.getFloat64(0, true);
        }
    }
    get name() {
        return 'float' + this._bits;
    }
    valueToString(x) {
        return x.toString();
    }
}
/**
 * Represents an IDL fixed-width Int(n)
 */
class FixedIntClass extends PrimitiveType {
    constructor(_bits) {
        super();
        this._bits = _bits;
    }
    accept(v, d) {
        return v.visitFixedInt(this, d);
    }
    covariant(x) {
        const min = BigInt(2) ** BigInt(this._bits - 1) * BigInt(-1);
        const max = BigInt(2) ** BigInt(this._bits - 1) - BigInt(1);
        if (typeof x === 'bigint') {
            return x >= min && x <= max;
        }
        else if (Number.isInteger(x)) {
            const v = BigInt(x);
            return v >= min && v <= max;
        }
        else {
            return false;
        }
    }
    encodeValue(x) {
        return writeIntLE(x, this._bits / 8);
    }
    encodeType() {
        const offset = Math.log2(this._bits) - 3;
        return leb128_slebEncode(-9 - offset);
    }
    decodeValue(b, t) {
        this.checkType(t);
        const num = readIntLE(b, this._bits / 8);
        if (this._bits <= 32) {
            return Number(num);
        }
        else {
            return num;
        }
    }
    get name() {
        return `int${this._bits}`;
    }
    valueToString(x) {
        return x.toString();
    }
}
/**
 * Represents an IDL fixed-width Nat(n)
 */
class FixedNatClass extends PrimitiveType {
    constructor(bits) {
        super();
        this.bits = bits;
    }
    accept(v, d) {
        return v.visitFixedNat(this, d);
    }
    covariant(x) {
        const max = BigInt(2) ** BigInt(this.bits);
        if (typeof x === 'bigint' && x >= BigInt(0)) {
            return x < max;
        }
        else if (Number.isInteger(x) && x >= 0) {
            const v = BigInt(x);
            return v < max;
        }
        else {
            return false;
        }
    }
    encodeValue(x) {
        return writeUIntLE(x, this.bits / 8);
    }
    encodeType() {
        const offset = Math.log2(this.bits) - 3;
        return leb128_slebEncode(-5 - offset);
    }
    decodeValue(b, t) {
        this.checkType(t);
        const num = readUIntLE(b, this.bits / 8);
        if (this.bits <= 32) {
            return Number(num);
        }
        else {
            return num;
        }
    }
    get name() {
        return `nat${this.bits}`;
    }
    valueToString(x) {
        return x.toString();
    }
}
/**
 * Represents an IDL Array
 * @param {Type} t
 */
class VecClass extends (/* unused pure expression or super */ null && (ConstructType)) {
    constructor(_type) {
        super();
        this._type = _type;
        // If true, this vector is really a blob and we can just use memcpy.
        this._blobOptimization = false;
        if (_type instanceof FixedNatClass && _type.bits === 8) {
            this._blobOptimization = true;
        }
    }
    accept(v, d) {
        return v.visitVec(this, this._type, d);
    }
    covariant(x) {
        return Array.isArray(x) && x.every(v => this._type.covariant(v));
    }
    encodeValue(x) {
        const len = lebEncode(x.length);
        if (this._blobOptimization) {
            return concat(len, new Uint8Array(x));
        }
        return concat(len, ...x.map(d => this._type.encodeValue(d)));
    }
    _buildTypeTableImpl(typeTable) {
        this._type.buildTypeTable(typeTable);
        const opCode = slebEncode(-19 /* Vector */);
        const buffer = this._type.encodeType(typeTable);
        typeTable.add(this, concat(opCode, buffer));
    }
    decodeValue(b, t) {
        const vec = this.checkType(t);
        if (!(vec instanceof VecClass)) {
            throw new Error('Not a vector type');
        }
        const len = Number(lebDecode(b));
        if (this._blobOptimization) {
            return [...new Uint8Array(b.read(len))];
        }
        const rets = [];
        for (let i = 0; i < len; i++) {
            rets.push(this._type.decodeValue(b, vec._type));
        }
        return rets;
    }
    get name() {
        return `vec ${this._type.name}`;
    }
    display() {
        return `vec ${this._type.display()}`;
    }
    valueToString(x) {
        const elements = x.map(e => this._type.valueToString(e));
        return 'vec {' + elements.join('; ') + '}';
    }
}
/**
 * Represents an IDL Option
 * @param {Type} t
 */
class OptClass extends (/* unused pure expression or super */ null && (ConstructType)) {
    constructor(_type) {
        super();
        this._type = _type;
    }
    accept(v, d) {
        return v.visitOpt(this, this._type, d);
    }
    covariant(x) {
        return Array.isArray(x) && (x.length === 0 || (x.length === 1 && this._type.covariant(x[0])));
    }
    encodeValue(x) {
        if (x.length === 0) {
            return new Uint8Array([0]);
        }
        else {
            return concat(new Uint8Array([1]), this._type.encodeValue(x[0]));
        }
    }
    _buildTypeTableImpl(typeTable) {
        this._type.buildTypeTable(typeTable);
        const opCode = slebEncode(-18 /* Opt */);
        const buffer = this._type.encodeType(typeTable);
        typeTable.add(this, concat(opCode, buffer));
    }
    decodeValue(b, t) {
        const opt = this.checkType(t);
        if (!(opt instanceof OptClass)) {
            throw new Error('Not an option type');
        }
        switch (safeReadUint8(b)) {
            case 0:
                return [];
            case 1:
                return [this._type.decodeValue(b, opt._type)];
            default:
                throw new Error('Not an option value');
        }
    }
    get name() {
        return `opt ${this._type.name}`;
    }
    display() {
        return `opt ${this._type.display()}`;
    }
    valueToString(x) {
        if (x.length === 0) {
            return 'null';
        }
        else {
            return `opt ${this._type.valueToString(x[0])}`;
        }
    }
}
/**
 * Represents an IDL Record
 * @param {Object} [fields] - mapping of function name to Type
 */
class RecordClass extends (/* unused pure expression or super */ null && (ConstructType)) {
    constructor(fields = {}) {
        super();
        this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));
    }
    accept(v, d) {
        return v.visitRecord(this, this._fields, d);
    }
    tryAsTuple() {
        const res = [];
        for (let i = 0; i < this._fields.length; i++) {
            const [key, type] = this._fields[i];
            if (key !== `_${i}_`) {
                return null;
            }
            res.push(type);
        }
        return res;
    }
    covariant(x) {
        return (typeof x === 'object' &&
            this._fields.every(([k, t]) => {
                // eslint-disable-next-line
                if (!x.hasOwnProperty(k)) {
                    throw new Error(`Record is missing key "${k}".`);
                }
                return t.covariant(x[k]);
            }));
    }
    encodeValue(x) {
        const values = this._fields.map(([key]) => x[key]);
        const bufs = zipWith(this._fields, values, ([, c], d) => c.encodeValue(d));
        return concat(...bufs);
    }
    _buildTypeTableImpl(T) {
        this._fields.forEach(([_, value]) => value.buildTypeTable(T));
        const opCode = slebEncode(-20 /* Record */);
        const len = lebEncode(this._fields.length);
        const fields = this._fields.map(([key, value]) => concat(lebEncode(idlLabelToId(key)), value.encodeType(T)));
        T.add(this, concat(opCode, len, concat(...fields)));
    }
    decodeValue(b, t) {
        const record = this.checkType(t);
        if (!(record instanceof RecordClass)) {
            throw new Error('Not a record type');
        }
        const x = {};
        let idx = 0;
        for (const [hash, type] of record._fields) {
            if (idx >= this._fields.length || idlLabelToId(this._fields[idx][0]) !== idlLabelToId(hash)) {
                // skip field
                type.decodeValue(b, type);
                continue;
            }
            const [expectKey, expectType] = this._fields[idx];
            x[expectKey] = expectType.decodeValue(b, type);
            idx++;
        }
        for (const [expectKey, expectType] of this._fields.slice(idx)) {
            if (expectType instanceof OptClass || expectType instanceof ReservedClass) {
                // TODO this assumes null value in opt is represented as []
                x[expectKey] = [];
            }
            else {
                throw new Error('Cannot find required field ' + expectKey);
            }
        }
        return x;
    }
    get name() {
        const fields = this._fields.map(([key, value]) => key + ':' + value.name);
        return `record {${fields.join('; ')}}`;
    }
    display() {
        const fields = this._fields.map(([key, value]) => key + ':' + value.display());
        return `record {${fields.join('; ')}}`;
    }
    valueToString(x) {
        const values = this._fields.map(([key]) => x[key]);
        const fields = zipWith(this._fields, values, ([k, c], d) => k + '=' + c.valueToString(d));
        return `record {${fields.join('; ')}}`;
    }
}
/**
 * Represents Tuple, a syntactic sugar for Record.
 * @param {Type} components
 */
class TupleClass extends (/* unused pure expression or super */ null && (RecordClass)) {
    constructor(_components) {
        const x = {};
        _components.forEach((e, i) => (x['_' + i + '_'] = e));
        super(x);
        this._components = _components;
    }
    accept(v, d) {
        return v.visitTuple(this, this._components, d);
    }
    covariant(x) {
        // `>=` because tuples can be covariant when encoded.
        return (Array.isArray(x) &&
            x.length >= this._fields.length &&
            this._components.every((t, i) => t.covariant(x[i])));
    }
    encodeValue(x) {
        const bufs = zipWith(this._components, x, (c, d) => c.encodeValue(d));
        return concat(...bufs);
    }
    decodeValue(b, t) {
        const tuple = this.checkType(t);
        if (!(tuple instanceof TupleClass)) {
            throw new Error('not a tuple type');
        }
        if (tuple._components.length < this._components.length) {
            throw new Error('tuple mismatch');
        }
        const res = [];
        for (const [i, wireType] of tuple._components.entries()) {
            if (i >= this._components.length) {
                // skip value
                wireType.decodeValue(b, wireType);
            }
            else {
                res.push(this._components[i].decodeValue(b, wireType));
            }
        }
        return res;
    }
    display() {
        const fields = this._components.map(value => value.display());
        return `record {${fields.join('; ')}}`;
    }
    valueToString(values) {
        const fields = zipWith(this._components, values, (c, d) => c.valueToString(d));
        return `record {${fields.join('; ')}}`;
    }
}
/**
 * Represents an IDL Variant
 * @param {Object} [fields] - mapping of function name to Type
 */
class VariantClass extends (/* unused pure expression or super */ null && (ConstructType)) {
    constructor(fields = {}) {
        super();
        this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));
    }
    accept(v, d) {
        return v.visitVariant(this, this._fields, d);
    }
    covariant(x) {
        return (typeof x === 'object' &&
            Object.entries(x).length === 1 &&
            this._fields.every(([k, v]) => {
                // eslint-disable-next-line
                return !x.hasOwnProperty(k) || v.covariant(x[k]);
            }));
    }
    encodeValue(x) {
        for (let i = 0; i < this._fields.length; i++) {
            const [name, type] = this._fields[i];
            // eslint-disable-next-line
            if (x.hasOwnProperty(name)) {
                const idx = lebEncode(i);
                const buf = type.encodeValue(x[name]);
                return concat(idx, buf);
            }
        }
        throw Error('Variant has no data: ' + x);
    }
    _buildTypeTableImpl(typeTable) {
        this._fields.forEach(([, type]) => {
            type.buildTypeTable(typeTable);
        });
        const opCode = slebEncode(-21 /* Variant */);
        const len = lebEncode(this._fields.length);
        const fields = this._fields.map(([key, value]) => concat(lebEncode(idlLabelToId(key)), value.encodeType(typeTable)));
        typeTable.add(this, concat(opCode, len, ...fields));
    }
    decodeValue(b, t) {
        const variant = this.checkType(t);
        if (!(variant instanceof VariantClass)) {
            throw new Error('Not a variant type');
        }
        const idx = Number(lebDecode(b));
        if (idx >= variant._fields.length) {
            throw Error('Invalid variant index: ' + idx);
        }
        const [wireHash, wireType] = variant._fields[idx];
        for (const [key, expectType] of this._fields) {
            if (idlLabelToId(wireHash) === idlLabelToId(key)) {
                const value = expectType.decodeValue(b, wireType);
                return { [key]: value };
            }
        }
        throw new Error('Cannot find field hash ' + wireHash);
    }
    get name() {
        const fields = this._fields.map(([key, type]) => key + ':' + type.name);
        return `variant {${fields.join('; ')}}`;
    }
    display() {
        const fields = this._fields.map(([key, type]) => key + (type.name === 'null' ? '' : `:${type.display()}`));
        return `variant {${fields.join('; ')}}`;
    }
    valueToString(x) {
        for (const [name, type] of this._fields) {
            // eslint-disable-next-line
            if (x.hasOwnProperty(name)) {
                const value = type.valueToString(x[name]);
                if (value === 'null') {
                    return `variant {${name}}`;
                }
                else {
                    return `variant {${name}=${value}}`;
                }
            }
        }
        throw new Error('Variant has no data: ' + x);
    }
}
/**
 * Represents a reference to an IDL type, used for defining recursive data
 * types.
 */
class RecClass extends ConstructType {
    constructor() {
        super(...arguments);
        this._id = RecClass._counter++;
        this._type = undefined;
    }
    accept(v, d) {
        if (!this._type) {
            throw Error('Recursive type uninitialized.');
        }
        return v.visitRec(this, this._type, d);
    }
    fill(t) {
        this._type = t;
    }
    getType() {
        return this._type;
    }
    covariant(x) {
        return this._type ? this._type.covariant(x) : false;
    }
    encodeValue(x) {
        if (!this._type) {
            throw Error('Recursive type uninitialized.');
        }
        return this._type.encodeValue(x);
    }
    _buildTypeTableImpl(typeTable) {
        if (!this._type) {
            throw Error('Recursive type uninitialized.');
        }
        typeTable.add(this, new Uint8Array([]));
        this._type.buildTypeTable(typeTable);
        typeTable.merge(this, this._type.name);
    }
    decodeValue(b, t) {
        if (!this._type) {
            throw Error('Recursive type uninitialized.');
        }
        return this._type.decodeValue(b, t);
    }
    get name() {
        return `rec_${this._id}`;
    }
    display() {
        if (!this._type) {
            throw Error('Recursive type uninitialized.');
        }
        return `μ${this.name}.${this._type.name}`;
    }
    valueToString(x) {
        if (!this._type) {
            throw Error('Recursive type uninitialized.');
        }
        return this._type.valueToString(x);
    }
}
RecClass._counter = 0;
function decodePrincipalId(b) {
    const x = leb128_safeReadUint8(b);
    if (x !== 1) {
        throw new Error('Cannot decode principal');
    }
    const len = Number(leb128_lebDecode(b));
    return esm_Principal.fromUint8Array(new Uint8Array(leb128_safeRead(b, len)));
}
/**
 * Represents an IDL principal reference
 */
class PrincipalClass extends PrimitiveType {
    accept(v, d) {
        return v.visitPrincipal(this, d);
    }
    covariant(x) {
        return x && x._isPrincipal;
    }
    encodeValue(x) {
        const buf = x.toUint8Array();
        const len = leb128_lebEncode(buf.byteLength);
        return buffer_concat(new Uint8Array([1]), len, buf);
    }
    encodeType() {
        return leb128_slebEncode(-24 /* Principal */);
    }
    decodeValue(b, t) {
        this.checkType(t);
        return decodePrincipalId(b);
    }
    get name() {
        return 'principal';
    }
    valueToString(x) {
        return `${this.name} "${x.toText()}"`;
    }
}
/**
 * Represents an IDL function reference.
 * @param argTypes Argument types.
 * @param retTypes Return types.
 * @param annotations Function annotations.
 */
class FuncClass extends (/* unused pure expression or super */ null && (ConstructType)) {
    constructor(argTypes, retTypes, annotations = []) {
        super();
        this.argTypes = argTypes;
        this.retTypes = retTypes;
        this.annotations = annotations;
    }
    static argsToString(types, v) {
        if (types.length !== v.length) {
            throw new Error('arity mismatch');
        }
        return '(' + types.map((t, i) => t.valueToString(v[i])).join(', ') + ')';
    }
    accept(v, d) {
        return v.visitFunc(this, d);
    }
    covariant(x) {
        return (Array.isArray(x) && x.length === 2 && x[0] && x[0]._isPrincipal && typeof x[1] === 'string');
    }
    encodeValue([principal, methodName]) {
        const buf = principal.toUint8Array();
        const len = lebEncode(buf.byteLength);
        const canister = concat(new Uint8Array([1]), len, buf);
        const method = new TextEncoder().encode(methodName);
        const methodLen = lebEncode(method.byteLength);
        return concat(new Uint8Array([1]), canister, methodLen, method);
    }
    _buildTypeTableImpl(T) {
        this.argTypes.forEach(arg => arg.buildTypeTable(T));
        this.retTypes.forEach(arg => arg.buildTypeTable(T));
        const opCode = slebEncode(-22 /* Func */);
        const argLen = lebEncode(this.argTypes.length);
        const args = concat(...this.argTypes.map(arg => arg.encodeType(T)));
        const retLen = lebEncode(this.retTypes.length);
        const rets = concat(...this.retTypes.map(arg => arg.encodeType(T)));
        const annLen = lebEncode(this.annotations.length);
        const anns = concat(...this.annotations.map(a => this.encodeAnnotation(a)));
        T.add(this, concat(opCode, argLen, args, retLen, rets, annLen, anns));
    }
    decodeValue(b) {
        const x = safeReadUint8(b);
        if (x !== 1) {
            throw new Error('Cannot decode function reference');
        }
        const canister = decodePrincipalId(b);
        const mLen = Number(lebDecode(b));
        const buf = safeRead(b, mLen);
        const decoder = new TextDecoder('utf8', { fatal: true });
        const method = decoder.decode(buf);
        return [canister, method];
    }
    get name() {
        const args = this.argTypes.map(arg => arg.name).join(', ');
        const rets = this.retTypes.map(arg => arg.name).join(', ');
        const annon = ' ' + this.annotations.join(' ');
        return `(${args}) -> (${rets})${annon}`;
    }
    valueToString([principal, str]) {
        return `func "${principal.toText()}".${str}`;
    }
    display() {
        const args = this.argTypes.map(arg => arg.display()).join(', ');
        const rets = this.retTypes.map(arg => arg.display()).join(', ');
        const annon = ' ' + this.annotations.join(' ');
        return `(${args}) → (${rets})${annon}`;
    }
    encodeAnnotation(ann) {
        if (ann === 'query') {
            return new Uint8Array([1]);
        }
        else if (ann === 'oneway') {
            return new Uint8Array([2]);
        }
        else {
            throw new Error('Illeagal function annotation');
        }
    }
}
class ServiceClass extends (/* unused pure expression or super */ null && (ConstructType)) {
    constructor(fields) {
        super();
        this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));
    }
    accept(v, d) {
        return v.visitService(this, d);
    }
    covariant(x) {
        return x && x._isPrincipal;
    }
    encodeValue(x) {
        const buf = x.toUint8Array();
        const len = lebEncode(buf.length);
        return concat(new Uint8Array([1]), len, buf);
    }
    _buildTypeTableImpl(T) {
        this._fields.forEach(([_, func]) => func.buildTypeTable(T));
        const opCode = slebEncode(-23 /* Service */);
        const len = lebEncode(this._fields.length);
        const meths = this._fields.map(([label, func]) => {
            const labelBuf = new TextEncoder().encode(label);
            const labelLen = lebEncode(labelBuf.length);
            return concat(labelLen, labelBuf, func.encodeType(T));
        });
        T.add(this, concat(opCode, len, ...meths));
    }
    decodeValue(b) {
        return decodePrincipalId(b);
    }
    get name() {
        const fields = this._fields.map(([key, value]) => key + ':' + value.name);
        return `service {${fields.join('; ')}}`;
    }
    valueToString(x) {
        return `service "${x.toText()}"`;
    }
}
/**
 *
 * @param x
 * @returns {string}
 */
function toReadableString(x) {
    return JSON.stringify(x, (_key, value) => typeof value === 'bigint' ? `BigInt(${value})` : value);
}
/**
 * Encode a array of values
 * @param argTypes
 * @param args
 * @returns {Buffer} serialised value
 */
function idl_encode(argTypes, args) {
    if (args.length < argTypes.length) {
        throw Error('Wrong number of message arguments');
    }
    const typeTable = new TypeTable();
    argTypes.forEach(t => t.buildTypeTable(typeTable));
    const magic = new TextEncoder().encode(magicNumber);
    const table = typeTable.encode();
    const len = lebEncode(args.length);
    const typs = concat(...argTypes.map(t => t.encodeType(typeTable)));
    const vals = concat(...zipWith(argTypes, args, (t, x) => {
        if (!t.covariant(x)) {
            throw new Error(`Invalid ${t.display()} argument: ${toReadableString(x)}`);
        }
        return t.encodeValue(x);
    }));
    return concat(magic, table, len, typs, vals);
}
/**
 * Decode a binary value
 * @param retTypes - Types expected in the buffer.
 * @param bytes - hex-encoded string, or buffer.
 * @returns Value deserialised to JS type
 */
function idl_decode(retTypes, bytes) {
    const b = new Pipe(bytes);
    if (bytes.byteLength < magicNumber.length) {
        throw new Error('Message length smaller than magic number');
    }
    const magicBuffer = safeRead(b, magicNumber.length);
    const magic = new TextDecoder().decode(magicBuffer);
    if (magic !== magicNumber) {
        throw new Error('Wrong magic number: ' + JSON.stringify(magic));
    }
    function readTypeTable(pipe) {
        const typeTable = [];
        const len = Number(lebDecode(pipe));
        for (let i = 0; i < len; i++) {
            const ty = Number(slebDecode(pipe));
            switch (ty) {
                case -18 /* Opt */:
                case -19 /* Vector */: {
                    const t = Number(slebDecode(pipe));
                    typeTable.push([ty, t]);
                    break;
                }
                case -20 /* Record */:
                case -21 /* Variant */: {
                    const fields = [];
                    let objectLength = Number(lebDecode(pipe));
                    let prevHash;
                    while (objectLength--) {
                        const hash = Number(lebDecode(pipe));
                        if (hash >= Math.pow(2, 32)) {
                            throw new Error('field id out of 32-bit range');
                        }
                        if (typeof prevHash === 'number' && prevHash >= hash) {
                            throw new Error('field id collision or not sorted');
                        }
                        prevHash = hash;
                        const t = Number(slebDecode(pipe));
                        fields.push([hash, t]);
                    }
                    typeTable.push([ty, fields]);
                    break;
                }
                case -22 /* Func */: {
                    for (let k = 0; k < 2; k++) {
                        let funcLength = Number(lebDecode(pipe));
                        while (funcLength--) {
                            slebDecode(pipe);
                        }
                    }
                    const annLen = Number(lebDecode(pipe));
                    safeRead(pipe, annLen);
                    typeTable.push([ty, undefined]);
                    break;
                }
                case -23 /* Service */: {
                    let servLength = Number(lebDecode(pipe));
                    while (servLength--) {
                        const l = Number(lebDecode(pipe));
                        safeRead(pipe, l);
                        slebDecode(pipe);
                    }
                    typeTable.push([ty, undefined]);
                    break;
                }
                default:
                    throw new Error('Illegal op_code: ' + ty);
            }
        }
        const rawList = [];
        const length = Number(lebDecode(pipe));
        for (let i = 0; i < length; i++) {
            rawList.push(Number(slebDecode(pipe)));
        }
        return [typeTable, rawList];
    }
    const [rawTable, rawTypes] = readTypeTable(b);
    if (rawTypes.length < retTypes.length) {
        throw new Error('Wrong number of return values');
    }
    const table = rawTable.map(_ => Rec());
    function getType(t) {
        if (t < -24) {
            throw new Error('future value not supported');
        }
        if (t < 0) {
            switch (t) {
                case -1:
                    return Null;
                case -2:
                    return Bool;
                case -3:
                    return Nat;
                case -4:
                    return Int;
                case -5:
                    return Nat8;
                case -6:
                    return Nat16;
                case -7:
                    return Nat32;
                case -8:
                    return Nat64;
                case -9:
                    return Int8;
                case -10:
                    return Int16;
                case -11:
                    return Int32;
                case -12:
                    return Int64;
                case -13:
                    return Float32;
                case -14:
                    return Float64;
                case -15:
                    return Text;
                case -16:
                    return Reserved;
                case -17:
                    return Empty;
                case -24:
                    return idl_Principal;
                default:
                    throw new Error('Illegal op_code: ' + t);
            }
        }
        if (t >= rawTable.length) {
            throw new Error('type index out of range');
        }
        return table[t];
    }
    function buildType(entry) {
        switch (entry[0]) {
            case -19 /* Vector */: {
                const ty = getType(entry[1]);
                return Vec(ty);
            }
            case -18 /* Opt */: {
                const ty = getType(entry[1]);
                return Opt(ty);
            }
            case -20 /* Record */: {
                const fields = {};
                for (const [hash, ty] of entry[1]) {
                    const name = `_${hash}_`;
                    fields[name] = getType(ty);
                }
                const record = Record(fields);
                const tuple = record.tryAsTuple();
                if (Array.isArray(tuple)) {
                    return Tuple(...tuple);
                }
                else {
                    return record;
                }
            }
            case -21 /* Variant */: {
                const fields = {};
                for (const [hash, ty] of entry[1]) {
                    const name = `_${hash}_`;
                    fields[name] = getType(ty);
                }
                return Variant(fields);
            }
            case -22 /* Func */: {
                return Func([], [], []);
            }
            case -23 /* Service */: {
                return Service({});
            }
            default:
                throw new Error('Illegal op_code: ' + entry[0]);
        }
    }
    rawTable.forEach((entry, i) => {
        const t = buildType(entry);
        table[i].fill(t);
    });
    const types = rawTypes.map(t => getType(t));
    const output = retTypes.map((t, i) => {
        return t.decodeValue(b, types[i]);
    });
    // skip unused values
    for (let ind = retTypes.length; ind < types.length; ind++) {
        types[ind].decodeValue(b, types[ind]);
    }
    if (b.byteLength > 0) {
        throw new Error('decode: Left-over bytes');
    }
    return output;
}
// Export Types instances.
const Empty = new EmptyClass();
const Reserved = new ReservedClass();
const Bool = new BoolClass();
const Null = new NullClass();
const Text = new TextClass();
const Int = new IntClass();
const Nat = new NatClass();
const Float32 = new FloatClass(32);
const Float64 = new FloatClass(64);
const Int8 = new FixedIntClass(8);
const Int16 = new FixedIntClass(16);
const Int32 = new FixedIntClass(32);
const Int64 = new FixedIntClass(64);
const Nat8 = new FixedNatClass(8);
const Nat16 = new FixedNatClass(16);
const Nat32 = new FixedNatClass(32);
const Nat64 = new FixedNatClass(64);
const idl_Principal = new PrincipalClass();
/**
 *
 * @param types array of any types
 * @returns TupleClass from those types
 */
function Tuple(...types) {
    return new TupleClass(types);
}
/**
 *
 * @param t IDL Type
 * @returns VecClass from that type
 */
function Vec(t) {
    return new VecClass(t);
}
/**
 *
 * @param t IDL Type
 * @returns OptClass of Type
 */
function Opt(t) {
    return new OptClass(t);
}
/**
 *
 * @param t Record of string and IDL Type
 * @returns RecordClass of string and Type
 */
function Record(t) {
    return new RecordClass(t);
}
/**
 *
 * @param fields Record of string and IDL Type
 * @returns VariantClass
 */
function Variant(fields) {
    return new VariantClass(fields);
}
/**
 *
 * @returns new RecClass
 */
function Rec() {
    return new RecClass();
}
/**
 *
 * @param args array of IDL Types
 * @param ret array of IDL Types
 * @param annotations array of strings, [] by default
 * @returns new FuncClass
 */
function Func(args, ret, annotations = []) {
    return new FuncClass(args, ret, annotations);
}
/**
 *
 * @param t Record of string and FuncClass
 * @returns ServiceClass
 */
function Service(t) {
    return new ServiceClass(t);
}
//# sourceMappingURL=idl.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/candid/lib/esm/candid-core.js
class InputBox {
    constructor(idl, ui) {
        this.idl = idl;
        this.ui = ui;
        this.label = null;
        this.value = undefined;
        const status = document.createElement('span');
        status.className = 'status';
        this.status = status;
        if (ui.input) {
            ui.input.addEventListener('blur', () => {
                if (ui.input.value === '') {
                    return;
                }
                this.parse();
            });
            ui.input.addEventListener('input', () => {
                status.style.display = 'none';
                ui.input.classList.remove('reject');
            });
        }
    }
    isRejected() {
        return this.value === undefined;
    }
    parse(config = {}) {
        if (this.ui.form) {
            const value = this.ui.form.parse(config);
            this.value = value;
            return value;
        }
        if (this.ui.input) {
            const input = this.ui.input;
            try {
                const value = this.ui.parse(this.idl, config, input.value);
                if (!this.idl.covariant(value)) {
                    throw new Error(`${input.value} is not of type ${this.idl.display()}`);
                }
                this.status.style.display = 'none';
                this.value = value;
                return value;
            }
            catch (err) {
                input.classList.add('reject');
                this.status.style.display = 'block';
                this.status.innerHTML = 'InputError: ' + err.message;
                this.value = undefined;
                return undefined;
            }
        }
        return null;
    }
    render(dom) {
        const container = document.createElement('span');
        if (this.label) {
            const label = document.createElement('label');
            label.innerText = this.label;
            container.appendChild(label);
        }
        if (this.ui.input) {
            container.appendChild(this.ui.input);
            container.appendChild(this.status);
        }
        if (this.ui.form) {
            this.ui.form.render(container);
        }
        dom.appendChild(container);
    }
}
class InputForm {
    constructor(ui) {
        this.ui = ui;
        this.form = [];
    }
    renderForm(dom) {
        if (this.ui.container) {
            this.form.forEach(e => e.render(this.ui.container));
            dom.appendChild(this.ui.container);
        }
        else {
            this.form.forEach(e => e.render(dom));
        }
    }
    render(dom) {
        if (this.ui.open && this.ui.event) {
            dom.appendChild(this.ui.open);
            const form = this;
            // eslint-disable-next-line
            form.ui.open.addEventListener(form.ui.event, () => {
                // Remove old form
                if (form.ui.container) {
                    form.ui.container.innerHTML = '';
                }
                else {
                    const oldContainer = form.ui.open.nextElementSibling;
                    if (oldContainer) {
                        oldContainer.parentNode.removeChild(oldContainer);
                    }
                }
                // Render form
                form.generateForm();
                form.renderForm(dom);
            });
        }
        else {
            this.generateForm();
            this.renderForm(dom);
        }
    }
}
class RecordForm extends InputForm {
    constructor(fields, ui) {
        super(ui);
        this.fields = fields;
        this.ui = ui;
    }
    generateForm() {
        this.form = this.fields.map(([key, type]) => {
            const input = this.ui.render(type);
            // eslint-disable-next-line
            if (this.ui.labelMap && this.ui.labelMap.hasOwnProperty(key)) {
                input.label = this.ui.labelMap[key] + ' ';
            }
            else {
                input.label = key + ' ';
            }
            return input;
        });
    }
    parse(config) {
        const v = {};
        this.fields.forEach(([key, _], i) => {
            const value = this.form[i].parse(config);
            v[key] = value;
        });
        if (this.form.some(input => input.isRejected())) {
            return undefined;
        }
        return v;
    }
}
class TupleForm extends InputForm {
    constructor(components, ui) {
        super(ui);
        this.components = components;
        this.ui = ui;
    }
    generateForm() {
        this.form = this.components.map(type => {
            const input = this.ui.render(type);
            return input;
        });
    }
    parse(config) {
        const v = [];
        this.components.forEach((_, i) => {
            const value = this.form[i].parse(config);
            v.push(value);
        });
        if (this.form.some(input => input.isRejected())) {
            return undefined;
        }
        return v;
    }
}
class VariantForm extends InputForm {
    constructor(fields, ui) {
        super(ui);
        this.fields = fields;
        this.ui = ui;
    }
    generateForm() {
        const index = this.ui.open.selectedIndex;
        const [_, type] = this.fields[index];
        const variant = this.ui.render(type);
        this.form = [variant];
    }
    parse(config) {
        const select = this.ui.open;
        const selected = select.options[select.selectedIndex].value;
        const value = this.form[0].parse(config);
        if (value === undefined) {
            return undefined;
        }
        const v = {};
        v[selected] = value;
        return v;
    }
}
class OptionForm extends InputForm {
    constructor(ty, ui) {
        super(ui);
        this.ty = ty;
        this.ui = ui;
    }
    generateForm() {
        if (this.ui.open.checked) {
            const opt = this.ui.render(this.ty);
            this.form = [opt];
        }
        else {
            this.form = [];
        }
    }
    parse(config) {
        if (this.form.length === 0) {
            return [];
        }
        else {
            const value = this.form[0].parse(config);
            if (value === undefined) {
                return undefined;
            }
            return [value];
        }
    }
}
class VecForm extends InputForm {
    constructor(ty, ui) {
        super(ui);
        this.ty = ty;
        this.ui = ui;
    }
    generateForm() {
        const len = +this.ui.open.value;
        this.form = [];
        for (let i = 0; i < len; i++) {
            const t = this.ui.render(this.ty);
            this.form.push(t);
        }
    }
    parse(config) {
        const value = this.form.map(input => {
            return input.parse(config);
        });
        if (this.form.some(input => input.isRejected())) {
            return undefined;
        }
        return value;
    }
}
//# sourceMappingURL=candid-core.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/candid/lib/esm/candid-ui.js



const InputConfig = { parse: parsePrimitive };
const FormConfig = { render: renderInput };
const inputBox = (t, config) => {
    return new InputBox(t, Object.assign(Object.assign({}, InputConfig), config));
};
const recordForm = (fields, config) => {
    return new RecordForm(fields, Object.assign(Object.assign({}, FormConfig), config));
};
const tupleForm = (components, config) => {
    return new TupleForm(components, Object.assign(Object.assign({}, FormConfig), config));
};
const variantForm = (fields, config) => {
    return new VariantForm(fields, Object.assign(Object.assign({}, FormConfig), config));
};
const optForm = (ty, config) => {
    return new OptionForm(ty, Object.assign(Object.assign({}, FormConfig), config));
};
const vecForm = (ty, config) => {
    return new VecForm(ty, Object.assign(Object.assign({}, FormConfig), config));
};
class Render extends Visitor {
    visitType(t, d) {
        const input = document.createElement('input');
        input.classList.add('argument');
        input.placeholder = t.display();
        return inputBox(t, { input });
    }
    visitNull(t, d) {
        return inputBox(t, {});
    }
    visitRecord(t, fields, d) {
        let config = {};
        if (fields.length > 1) {
            const container = document.createElement('div');
            container.classList.add('popup-form');
            config = { container };
        }
        const form = recordForm(fields, config);
        return inputBox(t, { form });
    }
    visitTuple(t, components, d) {
        let config = {};
        if (components.length > 1) {
            const container = document.createElement('div');
            container.classList.add('popup-form');
            config = { container };
        }
        const form = tupleForm(components, config);
        return inputBox(t, { form });
    }
    visitVariant(t, fields, d) {
        const select = document.createElement('select');
        for (const [key, type] of fields) {
            const option = new Option(key);
            select.add(option);
        }
        select.selectedIndex = -1;
        select.classList.add('open');
        const config = { open: select, event: 'change' };
        const form = variantForm(fields, config);
        return inputBox(t, { form });
    }
    visitOpt(t, ty, d) {
        const checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.classList.add('open');
        const form = optForm(ty, { open: checkbox, event: 'change' });
        return inputBox(t, { form });
    }
    visitVec(t, ty, d) {
        const len = document.createElement('input');
        len.type = 'number';
        len.min = '0';
        len.max = '100';
        len.style.width = '8rem';
        len.placeholder = 'len';
        len.classList.add('open');
        const container = document.createElement('div');
        container.classList.add('popup-form');
        const form = vecForm(ty, { open: len, event: 'change', container });
        return inputBox(t, { form });
    }
    visitRec(t, ty, d) {
        return renderInput(ty);
    }
}
class Parse extends Visitor {
    visitNull(t, v) {
        return null;
    }
    visitBool(t, v) {
        if (v === 'true') {
            return true;
        }
        if (v === 'false') {
            return false;
        }
        throw new Error(`Cannot parse ${v} as boolean`);
    }
    visitText(t, v) {
        return v;
    }
    visitFloat(t, v) {
        return parseFloat(v);
    }
    visitNumber(t, v) {
        return BigInt(v);
    }
    visitPrincipal(t, v) {
        return esm_Principal.fromText(v);
    }
    visitService(t, v) {
        return esm_Principal.fromText(v);
    }
    visitFunc(t, v) {
        const x = v.split('.', 2);
        return [esm_Principal.fromText(x[0]), x[1]];
    }
}
class Random extends Visitor {
    visitNull(t, v) {
        return null;
    }
    visitBool(t, v) {
        return Math.random() < 0.5;
    }
    visitText(t, v) {
        return Math.random().toString(36).substring(6);
    }
    visitFloat(t, v) {
        return Math.random();
    }
    visitInt(t, v) {
        return BigInt(this.generateNumber(true));
    }
    visitNat(t, v) {
        return BigInt(this.generateNumber(false));
    }
    visitFixedInt(t, v) {
        return BigInt(this.generateNumber(true));
    }
    visitFixedNat(t, v) {
        return BigInt(this.generateNumber(false));
    }
    generateNumber(signed) {
        const num = Math.floor(Math.random() * 100);
        if (signed && Math.random() < 0.5) {
            return -num;
        }
        else {
            return num;
        }
    }
}
function parsePrimitive(t, config, d) {
    if (config.random && d === '') {
        return t.accept(new Random(), d);
    }
    else {
        return t.accept(new Parse(), d);
    }
}
/**
 *
 * @param t an IDL type
 * @returns an input for that type
 */
function renderInput(t) {
    return t.accept(new Render(), null);
}
/**
 *
 * @param t an IDL Type
 * @param input an InputBox
 * @param value any
 * @returns rendering that value to the provided input
 */
function renderValue(t, input, value) {
    return t.accept(new RenderValue(), { input, value });
}
class RenderValue extends Visitor {
    visitType(t, d) {
        d.input.ui.input.value = t.valueToString(d.value);
    }
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    visitNull(t, d) { }
    visitText(t, d) {
        d.input.ui.input.value = d.value;
    }
    visitRec(t, ty, d) {
        renderValue(ty, d.input, d.value);
    }
    visitOpt(t, ty, d) {
        if (d.value.length === 0) {
            return;
        }
        else {
            const form = d.input.ui.form;
            const open = form.ui.open;
            open.checked = true;
            open.dispatchEvent(new Event(form.ui.event));
            renderValue(ty, form.form[0], d.value[0]);
        }
    }
    visitRecord(t, fields, d) {
        const form = d.input.ui.form;
        fields.forEach(([key, type], i) => {
            renderValue(type, form.form[i], d.value[key]);
        });
    }
    visitTuple(t, components, d) {
        const form = d.input.ui.form;
        components.forEach((type, i) => {
            renderValue(type, form.form[i], d.value[i]);
        });
    }
    visitVariant(t, fields, d) {
        const form = d.input.ui.form;
        const selected = Object.entries(d.value)[0];
        fields.forEach(([key, type], i) => {
            if (key === selected[0]) {
                const open = form.ui.open;
                open.selectedIndex = i;
                open.dispatchEvent(new Event(form.ui.event));
                renderValue(type, form.form[0], selected[1]);
            }
        });
    }
    visitVec(t, ty, d) {
        const form = d.input.ui.form;
        const len = d.value.length;
        const open = form.ui.open;
        open.value = len;
        open.dispatchEvent(new Event(form.ui.event));
        d.value.forEach((v, i) => {
            renderValue(ty, form.form[i], v);
        });
    }
}
//# sourceMappingURL=candid-ui.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/candid/lib/esm/index.js






//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: ./node_modules/borc/src/index.js
var src = __webpack_require__(7756);
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/utils/buffer.js
/**
 * Concatenate multiple array buffers.
 * @param buffers The buffers to concatenate.
 */
function utils_buffer_concat(...buffers) {
    const result = new Uint8Array(buffers.reduce((acc, curr) => acc + curr.byteLength, 0));
    let index = 0;
    for (const b of buffers) {
        result.set(new Uint8Array(b), index);
        index += b.byteLength;
    }
    return result.buffer;
}
/**
 * Transforms a buffer to an hexadecimal string. This will use the buffer as an Uint8Array.
 * @param buffer The buffer to return the hexadecimal string of.
 */
function buffer_toHex(buffer) {
    return [...new Uint8Array(buffer)].map(x => x.toString(16).padStart(2, '0')).join('');
}
const hexRe = new RegExp(/^([0-9A-F]{2})*$/i);
/**
 * Transforms a hexadecimal string into an array buffer.
 * @param hex The hexadecimal string to use.
 */
function buffer_fromHex(hex) {
    if (!hexRe.test(hex)) {
        throw new Error('Invalid hexadecimal string.');
    }
    const buffer = [...hex]
        .reduce((acc, curr, i) => {
        // tslint:disable-next-line:no-bitwise
        acc[(i / 2) | 0] = (acc[(i / 2) | 0] || '') + curr;
        return acc;
    }, [])
        .map(x => Number.parseInt(x, 16));
    return new Uint8Array(buffer).buffer;
}
function compare(b1, b2) {
    if (b1.byteLength !== b2.byteLength) {
        return b1.byteLength - b2.byteLength;
    }
    const u1 = new Uint8Array(b1);
    const u2 = new Uint8Array(b2);
    for (let i = 0; i < u1.length; i++) {
        if (u1[i] !== u2[i]) {
            return u1[i] - u2[i];
        }
    }
    return 0;
}
//# sourceMappingURL=buffer.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/request_id.js




/**
 * sha256 hash the provided Buffer
 * @param data - input to hash function
 */
function request_id_hash(data) {
    return src_sha256.sha256.create().update(new Uint8Array(data)).arrayBuffer();
}
/**
 *
 * @param value unknown value
 * @returns ArrayBuffer
 */
function hashValue(value) {
    if (value instanceof src.Tagged) {
        return hashValue(value.value);
    }
    else if (typeof value === 'string') {
        return hashString(value);
    }
    else if (typeof value === 'number') {
        return request_id_hash(leb128_lebEncode(value));
    }
    else if (value instanceof ArrayBuffer || ArrayBuffer.isView(value)) {
        return request_id_hash(value);
    }
    else if (Array.isArray(value)) {
        const vals = value.map(hashValue);
        return request_id_hash(utils_buffer_concat(...vals));
    }
    else if (value && typeof value === 'object' && value._isPrincipal) {
        return request_id_hash(value.toUint8Array());
    }
    else if (typeof value === 'object' &&
        value !== null &&
        typeof value.toHash === 'function') {
        return hashValue(value.toHash());
        // TODO This should be move to a specific async method as the webauthn flow required
        // the flow to be synchronous to ensure Safari touch id works.
        // } else if (value instanceof Promise) {
        //   return value.then(x => hashValue(x));
    }
    else if (typeof value === 'bigint') {
        // Do this check much later than the other bigint check because this one is much less
        // type-safe.
        // So we want to try all the high-assurance type guards before this 'probable' one.
        return request_id_hash(leb128_lebEncode(value));
    }
    throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${value}`), {
        // include so logs/callers can understand the confusing value.
        // (when stringified in error message, prototype info is lost)
        value,
    });
}
const hashString = (value) => {
    const encoded = new TextEncoder().encode(value);
    return request_id_hash(encoded);
};
/**
 * Get the RequestId of the provided ic-ref request.
 * RequestId is the result of the representation-independent-hash function.
 * https://sdk.dfinity.org/docs/interface-spec/index.html#hash-of-map
 * @param request - ic-ref request to hash into RequestId
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function request_id_requestIdOf(request) {
    const hashed = Object.entries(request)
        .filter(([, value]) => value !== undefined)
        .map(([key, value]) => {
        const hashedKey = hashString(key);
        const hashedValue = hashValue(value);
        return [hashedKey, hashedValue];
    });
    const traversed = hashed;
    const sorted = traversed.sort(([k1], [k2]) => {
        return compare(k1, k2);
    });
    const concatenated = utils_buffer_concat(...sorted.map(x => utils_buffer_concat(...x)));
    const requestId = request_id_hash(concatenated);
    return requestId;
}
//# sourceMappingURL=request_id.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/auth.js
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};



const domainSeparator = new TextEncoder().encode('\x0Aic-request');
/**
 * An Identity that can sign blobs.
 */
class auth_SignIdentity {
    /**
     * Get the principal represented by this identity. Normally should be a
     * `Principal.selfAuthenticating()`.
     */
    getPrincipal() {
        if (!this._principal) {
            this._principal = esm_Principal.selfAuthenticating(new Uint8Array(this.getPublicKey().toDer()));
        }
        return this._principal;
    }
    /**
     * Transform a request into a signed version of the request. This is done last
     * after the transforms on the body of a request. The returned object can be
     * anything, but must be serializable to CBOR.
     * @param request - internet computer request to transform
     */
    async transformRequest(request) {
        const { body } = request, fields = __rest(request, ["body"]);
        const requestId = await request_id_requestIdOf(body);
        return Object.assign(Object.assign({}, fields), { body: {
                content: body,
                sender_pubkey: this.getPublicKey().toDer(),
                sender_sig: await this.sign(utils_buffer_concat(domainSeparator, requestId)),
            } });
    }
}
class auth_AnonymousIdentity {
    getPrincipal() {
        return Principal.anonymous();
    }
    async transformRequest(request) {
        return Object.assign(Object.assign({}, request), { body: { content: request.body } });
    }
}
/**
 * Create an IdentityDescriptor from a @dfinity/authentication Identity
 * @param identity - identity describe in returned descriptor
 */
function createIdentityDescriptor(identity) {
    const identityIndicator = 'getPublicKey' in identity
        ? { type: 'PublicKeyIdentity', publicKey: toHex(identity.getPublicKey().toDer()) }
        : { type: 'AnonymousIdentity' };
    return identityIndicator;
}
//# sourceMappingURL=auth.js.map
// EXTERNAL MODULE: ./node_modules/simple-cbor/src/index.js
var simple_cbor_src = __webpack_require__(8419);
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/cbor.js
// tslint:disable:max-classes-per-file
// This file is based on:
// tslint:disable-next-line: max-line-length
// https://github.com/dfinity-lab/dfinity/blob/9bca65f8edd65701ea6bdb00e0752f9186bbc893/docs/spec/public/index.adoc#cbor-encoding-of-requests-and-responses




// We are using hansl/simple-cbor for CBOR serialization, to avoid issues with
// encoding the uint64 values that the HTTP handler of the client expects for
// canister IDs. However, simple-cbor does not yet provide deserialization so
// we are using `Uint8Array` so that we can use the dignifiedquire/borc CBOR
// decoder.
class PrincipalEncoder {
    get name() {
        return 'Principal';
    }
    get priority() {
        return 0;
    }
    match(value) {
        return value && value._isPrincipal === true;
    }
    encode(v) {
        return simple_cbor_src.value.bytes(v.toUint8Array());
    }
}
class BufferEncoder {
    get name() {
        return 'Buffer';
    }
    get priority() {
        return 1;
    }
    match(value) {
        return value instanceof ArrayBuffer || ArrayBuffer.isView(value);
    }
    encode(v) {
        return simple_cbor_src.value.bytes(new Uint8Array(v));
    }
}
class BigIntEncoder {
    get name() {
        return 'BigInt';
    }
    get priority() {
        return 1;
    }
    match(value) {
        return typeof value === `bigint`;
    }
    encode(v) {
        // Always use a bigint encoding.
        if (v > BigInt(0)) {
            return simple_cbor_src.value.tagged(2, simple_cbor_src.value.bytes(buffer_fromHex(v.toString(16))));
        }
        else {
            return simple_cbor_src.value.tagged(3, simple_cbor_src.value.bytes(buffer_fromHex((BigInt('-1') * v).toString(16))));
        }
    }
}
const serializer = simple_cbor_src.SelfDescribeCborSerializer.withDefaultEncoders(true);
serializer.addEncoder(new PrincipalEncoder());
serializer.addEncoder(new BufferEncoder());
serializer.addEncoder(new BigIntEncoder());
var CborTag;
(function (CborTag) {
    CborTag[CborTag["Uint64LittleEndian"] = 71] = "Uint64LittleEndian";
    CborTag[CborTag["Semantic"] = 55799] = "Semantic";
})(CborTag || (CborTag = {}));
/**
 * Encode a JavaScript value into CBOR.
 */
function cbor_encode(value) {
    return serializer.serialize(value);
}
function decodePositiveBigInt(buf) {
    const len = buf.byteLength;
    let res = BigInt(0);
    for (let i = 0; i < len; i++) {
        // tslint:disable-next-line:no-bitwise
        res = res * BigInt(0x100) + BigInt(buf[i]);
    }
    return res;
}
// A BORC subclass that decodes byte strings to ArrayBuffer instead of the Buffer class.
class Uint8ArrayDecoder extends src.Decoder {
    createByteString(raw) {
        return concat(...raw);
    }
    createByteStringFromHeap(start, end) {
        if (start === end) {
            return new ArrayBuffer(0);
        }
        return new Uint8Array(this._heap.slice(start, end));
    }
}
function cbor_decode(input) {
    const buffer = new Uint8Array(input);
    const decoder = new Uint8ArrayDecoder({
        size: buffer.byteLength,
        tags: {
            // Override tags 2 and 3 for BigInt support (borc supports only BigNumber).
            2: val => decodePositiveBigInt(val),
            3: val => -decodePositiveBigInt(val),
            [CborTag.Semantic]: (value) => value,
        },
    });
    return decoder.decodeFirst(buffer);
}
//# sourceMappingURL=cbor.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/agent/http/types.js
// tslint:enable:camel-case
// The types of values allowed in the `request_type` field for submit requests.
var types_SubmitRequestType;
(function (SubmitRequestType) {
    SubmitRequestType["Call"] = "call";
})(types_SubmitRequestType || (types_SubmitRequestType = {}));
/**
 * Create a random Nonce, based on date and a random suffix.
 */
function types_makeNonce() {
    // Encode 128 bits.
    const buffer = new ArrayBuffer(16);
    const view = new DataView(buffer);
    const value = BigInt(+Date.now()) * BigInt(100000) + BigInt(Math.floor(Math.random() * 100000));
    view.setBigUint64(0, value);
    // tslint:disable-next-line:no-bitwise
    view.setBigUint64(1, value >> BigInt(64));
    return buffer;
}
//# sourceMappingURL=types.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/agent/http/transforms.js



const NANOSECONDS_PER_MILLISECONDS = BigInt(1000000);
const REPLICA_PERMITTED_DRIFT_MILLISECONDS = BigInt(60 * 1000);
class transforms_Expiry {
    constructor(deltaInMSec) {
        // Use bigint because it can overflow the maximum number allowed in a double float.
        this._value =
            (BigInt(Date.now()) + BigInt(deltaInMSec) - REPLICA_PERMITTED_DRIFT_MILLISECONDS) *
                NANOSECONDS_PER_MILLISECONDS;
    }
    toCBOR() {
        // TODO: change this to take the minimum amount of space (it always takes 8 bytes now).
        return cbor.value.u64(this._value.toString(16), 16);
    }
    toHash() {
        return lebEncode(this._value);
    }
}
/**
 * Create a Nonce transform, which takes a function that returns a Buffer, and adds it
 * as the nonce to every call requests.
 * @param nonceFn A function that returns a buffer. By default uses a semi-random method.
 */
function makeNonceTransform(nonceFn = makeNonce) {
    return async (request) => {
        // Nonce are only useful for async calls, to prevent replay attacks. Other types of
        // calls don't need Nonce so we just skip creating one.
        if (request.endpoint === "call" /* Call */) {
            request.body.nonce = nonceFn();
        }
    };
}
/**
 * Create a transform that adds a delay (by default 5 minutes) to the expiry.
 *
 * @param delayInMilliseconds The delay to add to the call time, in milliseconds.
 */
function makeExpiryTransform(delayInMilliseconds) {
    return async (request) => {
        request.body.ingress_expiry = new transforms_Expiry(delayInMilliseconds);
    };
}
//# sourceMappingURL=transforms.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/agent/http/index.js










var http_RequestStatusResponseStatus;
(function (RequestStatusResponseStatus) {
    RequestStatusResponseStatus["Received"] = "received";
    RequestStatusResponseStatus["Processing"] = "processing";
    RequestStatusResponseStatus["Replied"] = "replied";
    RequestStatusResponseStatus["Rejected"] = "rejected";
    RequestStatusResponseStatus["Unknown"] = "unknown";
    RequestStatusResponseStatus["Done"] = "done";
})(http_RequestStatusResponseStatus || (http_RequestStatusResponseStatus = {}));
// Default delta for ingress expiry is 5 minutes.
const DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS = (/* unused pure expression or super */ null && (5 * 60 * 1000));
// Root public key for the IC, encoded as hex
const IC_ROOT_KEY = (/* unused pure expression or super */ null && ('308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814' +
    'c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d968' +
    '5f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484' +
    'b01291091c5f87b98883463f98091a0baaae'));
// IC0 domain info
const IC0_DOMAIN = 'ic0.app';
const IC0_SUB_DOMAIN = '.ic0.app';
class HttpDefaultFetchError extends (/* unused pure expression or super */ null && (AgentError)) {
    constructor(message) {
        super(message);
        this.message = message;
    }
}
class IdentityInvalidError extends (/* unused pure expression or super */ null && (AgentError)) {
    constructor(message) {
        super(message);
        this.message = message;
    }
}
function getDefaultFetch() {
    let defaultFetch;
    if (typeof window !== 'undefined') {
        // Browser context
        if (window.fetch) {
            defaultFetch = window.fetch.bind(window);
        }
        else {
            throw new HttpDefaultFetchError('Fetch implementation was not available. You appear to be in a browser context, but window.fetch was not present.');
        }
    }
    else if (typeof __webpack_require__.g !== 'undefined') {
        // Node context
        if (__webpack_require__.g.fetch) {
            defaultFetch = __webpack_require__.g.fetch.bind(__webpack_require__.g);
        }
        else {
            throw new HttpDefaultFetchError('Fetch implementation was not available. You appear to be in a Node.js context, but global.fetch was not available.');
        }
    }
    else if (typeof self !== 'undefined') {
        if (self.fetch) {
            defaultFetch = self.fetch.bind(self);
        }
    }
    if (defaultFetch) {
        return defaultFetch;
    }
    throw new HttpDefaultFetchError('Fetch implementation was not available. Please provide fetch to the HttpAgent constructor, or ensure it is available in the window or global context.');
}
// A HTTP agent allows users to interact with a client of the internet computer
// using the available methods. It exposes an API that closely follows the
// public view of the internet computer, and is not intended to be exposed
// directly to the majority of users due to its low-level interface.
//
// There is a pipeline to apply transformations to the request before sending
// it to the client. This is to decouple signature, nonce generation and
// other computations so that this class can stay as simple as possible while
// allowing extensions.
class HttpAgent {
    constructor(options = {}) {
        this.rootKey = fromHex(IC_ROOT_KEY);
        this._pipeline = [];
        this._rootKeyFetched = false;
        if (options.source) {
            if (!(options.source instanceof HttpAgent)) {
                throw new Error("An Agent's source can only be another HttpAgent");
            }
            this._pipeline = [...options.source._pipeline];
            this._identity = options.source._identity;
            this._fetch = options.source._fetch;
            this._host = options.source._host;
            this._credentials = options.source._credentials;
        }
        else {
            this._fetch = options.fetch || getDefaultFetch() || fetch.bind(__webpack_require__.g);
        }
        if (options.host !== undefined) {
            if (!options.host.match(/^[a-z]+:/) && typeof window !== 'undefined') {
                this._host = new URL(window.location.protocol + '//' + options.host);
            }
            else {
                this._host = new URL(options.host);
            }
        }
        else if (options.source !== undefined) {
            // Safe to ignore here.
            this._host = options.source._host;
        }
        else {
            const location = typeof window !== 'undefined' ? window.location : undefined;
            if (!location) {
                throw new Error('Must specify a host to connect to.');
            }
            this._host = new URL(location + '');
        }
        // Rewrite to avoid redirects
        if (this._host.hostname.endsWith(IC0_SUB_DOMAIN)) {
            this._host.hostname = IC0_DOMAIN;
        }
        if (options.credentials) {
            const { name, password } = options.credentials;
            this._credentials = `${name}${password ? ':' + password : ''}`;
        }
        this._identity = Promise.resolve(options.identity || new AnonymousIdentity());
    }
    addTransform(fn, priority = fn.priority || 0) {
        // Keep the pipeline sorted at all time, by priority.
        const i = this._pipeline.findIndex(x => (x.priority || 0) < priority);
        this._pipeline.splice(i >= 0 ? i : this._pipeline.length, 0, Object.assign(fn, { priority }));
    }
    async getPrincipal() {
        if (!this._identity) {
            throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
        }
        return (await this._identity).getPrincipal();
    }
    async call(canisterId, options, identity) {
        const id = await (identity !== undefined ? await identity : await this._identity);
        if (!id) {
            throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
        }
        const canister = Principal.from(canisterId);
        const ecid = options.effectiveCanisterId
            ? Principal.from(options.effectiveCanisterId)
            : canister;
        const sender = id.getPrincipal() || Principal.anonymous();
        const submit = {
            request_type: SubmitRequestType.Call,
            canister_id: canister,
            method_name: options.methodName,
            arg: options.arg,
            sender,
            ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),
        };
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        let transformedRequest = (await this._transform({
            request: {
                body: null,
                method: 'POST',
                headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),
            },
            endpoint: "call" /* Call */,
            body: submit,
        }));
        // Apply transform for identity.
        transformedRequest = await id.transformRequest(transformedRequest);
        const body = cbor.encode(transformedRequest.body);
        // Run both in parallel. The fetch is quite expensive, so we have plenty of time to
        // calculate the requestId locally.
        const [response, requestId] = await Promise.all([
            this._fetch('' + new URL(`/api/v2/canister/${ecid.toText()}/call`, this._host), Object.assign(Object.assign({}, transformedRequest.request), { body })),
            requestIdOf(submit),
        ]);
        if (!response.ok) {
            throw new Error(`Server returned an error:\n` +
                `  Code: ${response.status} (${response.statusText})\n` +
                `  Body: ${await response.text()}\n`);
        }
        return {
            requestId,
            response: {
                ok: response.ok,
                status: response.status,
                statusText: response.statusText,
            },
        };
    }
    async query(canisterId, fields, identity) {
        const id = await (identity !== undefined ? await identity : await this._identity);
        if (!id) {
            throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
        }
        const canister = typeof canisterId === 'string' ? Principal.fromText(canisterId) : canisterId;
        const sender = (id === null || id === void 0 ? void 0 : id.getPrincipal()) || Principal.anonymous();
        const request = {
            request_type: "query" /* Query */,
            canister_id: canister,
            method_name: fields.methodName,
            arg: fields.arg,
            sender,
            ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),
        };
        // TODO: remove this any. This can be a Signed or UnSigned request.
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        let transformedRequest = await this._transform({
            request: {
                method: 'POST',
                headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),
            },
            endpoint: "read" /* Query */,
            body: request,
        });
        // Apply transform for identity.
        transformedRequest = await (id === null || id === void 0 ? void 0 : id.transformRequest(transformedRequest));
        const body = cbor.encode(transformedRequest.body);
        const response = await this._fetch('' + new URL(`/api/v2/canister/${canister.toText()}/query`, this._host), Object.assign(Object.assign({}, transformedRequest.request), { body }));
        if (!response.ok) {
            throw new Error(`Server returned an error:\n` +
                `  Code: ${response.status} (${response.statusText})\n` +
                `  Body: ${await response.text()}\n`);
        }
        return cbor.decode(await response.arrayBuffer());
    }
    async readState(canisterId, fields, identity) {
        const canister = typeof canisterId === 'string' ? Principal.fromText(canisterId) : canisterId;
        const id = await (identity !== undefined ? await identity : await this._identity);
        if (!id) {
            throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
        }
        const sender = (id === null || id === void 0 ? void 0 : id.getPrincipal()) || Principal.anonymous();
        // TODO: remove this any. This can be a Signed or UnSigned request.
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        let transformedRequest = await this._transform({
            request: {
                method: 'POST',
                headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),
            },
            endpoint: "read_state" /* ReadState */,
            body: {
                request_type: "read_state" /* ReadState */,
                paths: fields.paths,
                sender,
                ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),
            },
        });
        // Apply transform for identity.
        transformedRequest = await (id === null || id === void 0 ? void 0 : id.transformRequest(transformedRequest));
        const body = cbor.encode(transformedRequest.body);
        const response = await this._fetch('' + new URL(`/api/v2/canister/${canister}/read_state`, this._host), Object.assign(Object.assign({}, transformedRequest.request), { body }));
        if (!response.ok) {
            throw new Error(`Server returned an error:\n` +
                `  Code: ${response.status} (${response.statusText})\n` +
                `  Body: ${await response.text()}\n`);
        }
        return cbor.decode(await response.arrayBuffer());
    }
    async status() {
        const headers = this._credentials
            ? {
                Authorization: 'Basic ' + btoa(this._credentials),
            }
            : {};
        const response = await this._fetch('' + new URL(`/api/v2/status`, this._host), { headers });
        if (!response.ok) {
            throw new Error(`Server returned an error:\n` +
                `  Code: ${response.status} (${response.statusText})\n` +
                `  Body: ${await response.text()}\n`);
        }
        return cbor.decode(await response.arrayBuffer());
    }
    async fetchRootKey() {
        if (!this._rootKeyFetched) {
            // Hex-encoded version of the replica root key
            this.rootKey = (await this.status()).root_key;
            this._rootKeyFetched = true;
        }
        return this.rootKey;
    }
    invalidateIdentity() {
        this._identity = null;
    }
    replaceIdentity(identity) {
        this._identity = Promise.resolve(identity);
    }
    _transform(request) {
        let p = Promise.resolve(request);
        for (const fn of this._pipeline) {
            p = p.then(r => fn(r).then(r2 => r2 || r));
        }
        return p;
    }
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/agent/proxy.js

var ProxyMessageKind;
(function (ProxyMessageKind) {
    ProxyMessageKind["Error"] = "err";
    ProxyMessageKind["GetPrincipal"] = "gp";
    ProxyMessageKind["GetPrincipalResponse"] = "gpr";
    ProxyMessageKind["Query"] = "q";
    ProxyMessageKind["QueryResponse"] = "qr";
    ProxyMessageKind["Call"] = "c";
    ProxyMessageKind["CallResponse"] = "cr";
    ProxyMessageKind["ReadState"] = "rs";
    ProxyMessageKind["ReadStateResponse"] = "rsr";
    ProxyMessageKind["Status"] = "s";
    ProxyMessageKind["StatusResponse"] = "sr";
})(ProxyMessageKind || (ProxyMessageKind = {}));
// A Stub Agent that forwards calls to another Agent implementation.
class ProxyStubAgent {
    constructor(_frontend, _agent) {
        this._frontend = _frontend;
        this._agent = _agent;
    }
    onmessage(msg) {
        switch (msg.type) {
            case ProxyMessageKind.GetPrincipal:
                this._agent.getPrincipal().then(response => {
                    this._frontend({
                        id: msg.id,
                        type: ProxyMessageKind.GetPrincipalResponse,
                        response: response.toText(),
                    });
                });
                break;
            case ProxyMessageKind.Query:
                this._agent.query(...msg.args).then(response => {
                    this._frontend({
                        id: msg.id,
                        type: ProxyMessageKind.QueryResponse,
                        response,
                    });
                });
                break;
            case ProxyMessageKind.Call:
                this._agent.call(...msg.args).then(response => {
                    this._frontend({
                        id: msg.id,
                        type: ProxyMessageKind.CallResponse,
                        response,
                    });
                });
                break;
            case ProxyMessageKind.ReadState:
                this._agent.readState(...msg.args).then(response => {
                    this._frontend({
                        id: msg.id,
                        type: ProxyMessageKind.ReadStateResponse,
                        response,
                    });
                });
                break;
            case ProxyMessageKind.Status:
                this._agent.status().then(response => {
                    this._frontend({
                        id: msg.id,
                        type: ProxyMessageKind.StatusResponse,
                        response,
                    });
                });
                break;
            default:
                throw new Error(`Invalid message received: ${JSON.stringify(msg)}`);
        }
    }
}
// An Agent that forwards calls to a backend. The calls are serialized
class ProxyAgent {
    constructor(_backend) {
        this._backend = _backend;
        this._nextId = 0;
        this._pendingCalls = new Map();
        this.rootKey = null;
    }
    onmessage(msg) {
        const id = msg.id;
        const maybePromise = this._pendingCalls.get(id);
        if (!maybePromise) {
            throw new Error('A proxy get the same message twice...');
        }
        this._pendingCalls.delete(id);
        const [resolve, reject] = maybePromise;
        switch (msg.type) {
            case ProxyMessageKind.Error:
                return reject(msg.error);
            case ProxyMessageKind.GetPrincipalResponse:
            case ProxyMessageKind.CallResponse:
            case ProxyMessageKind.QueryResponse:
            case ProxyMessageKind.ReadStateResponse:
            case ProxyMessageKind.StatusResponse:
                return resolve(msg.response);
            default:
                throw new Error(`Invalid message being sent to ProxyAgent: ${JSON.stringify(msg)}`);
        }
    }
    async getPrincipal() {
        return this._sendAndWait({
            id: this._nextId++,
            type: ProxyMessageKind.GetPrincipal,
        }).then(principal => {
            if (typeof principal !== 'string') {
                throw new Error('Invalid principal received.');
            }
            return Principal.fromText(principal);
        });
    }
    readState(canisterId, fields) {
        return this._sendAndWait({
            id: this._nextId++,
            type: ProxyMessageKind.ReadState,
            args: [canisterId.toString(), fields],
        });
    }
    call(canisterId, fields) {
        return this._sendAndWait({
            id: this._nextId++,
            type: ProxyMessageKind.Call,
            args: [canisterId.toString(), fields],
        });
    }
    status() {
        return this._sendAndWait({
            id: this._nextId++,
            type: ProxyMessageKind.Status,
        });
    }
    query(canisterId, fields) {
        return this._sendAndWait({
            id: this._nextId++,
            type: ProxyMessageKind.Query,
            args: [canisterId.toString(), fields],
        });
    }
    async _sendAndWait(msg) {
        return new Promise((resolve, reject) => {
            this._pendingCalls.set(msg.id, [resolve, reject]);
            this._backend(msg);
        });
    }
    async fetchRootKey() {
        // Hex-encoded version of the replica root key
        const rootKey = (await this.status()).root_key;
        this.rootKey = rootKey;
        return rootKey;
    }
}
//# sourceMappingURL=proxy.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/agent/index.js



function agent_getDefaultAgent() {
    const agent = typeof window === 'undefined'
        ? typeof __webpack_require__.g === 'undefined'
            ? typeof self === 'undefined'
                ? undefined
                : self.ic.agent
            : __webpack_require__.g.ic.agent
        : window.ic.agent;
    if (!agent) {
        throw new Error('No Agent could be found.');
    }
    return agent;
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/canisters/management.js



/* tslint:enable */
/**
 * Create a management canister actor.
 * @param config
 */
function management_getManagementCanister(config) {
    function transform(methodName, args, callConfig) {
        const first = args[0];
        let effectiveCanisterId = Principal.fromHex('');
        if (first && typeof first === 'object' && first.canister_id) {
            effectiveCanisterId = Principal.from(first.canister_id);
        }
        return { effectiveCanisterId };
    }
    return Actor.createActor(managementCanisterIdl, Object.assign(Object.assign(Object.assign({}, config), { canisterId: Principal.fromHex('') }), {
        callTransform: transform,
        queryTransform: transform,
    }));
}
//# sourceMappingURL=management.js.map
// EXTERNAL MODULE: ./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js
var base64_arraybuffer = __webpack_require__(3704);
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/vendor/bls/bls.js

/* tslint:disable */
/* eslint-disable */
let wasm;
// This WASM is generated from the BLS Rust code of the Agent RS (see
// http://github.com/dfinity/agent-rs/)
// Once the WASM is compiled, simply base64 encode it and include it in this string.
const wasmBytesBase64 = `
    AGFzbQEAAAABXg9gAn9/AGABfwBgA39/fwBgAn9/AX9gAX8Bf2ADf39/AX9gBH9/f38AYAV/f39/fwBgBn9/f39/fwF/
    YAAAYAZ/f39/f38AYAV/fn5+fgBgAAF/YAF/AX5gAn9/AX4DvAG6AQgEAAEAAAABAgEDAAAMAAACAQEKAQAHBgEAAQEA
    AgcCAgABAgAGAAgOBAEBBAAAAQALAQkAAwMAAQQBAAICAAIBAQEBAQEGAQACAQEEAAECAQEABQMBAQMEAwQCAwAAAAEA
    AAAAAAEFAQEAAAACAQIAAQMAAQAGBAACAgMEAAAAAAAGAAQABAQEBAAAAwIAAgACAAEBAAAAAQEBAAEAAAAAAgAAAQAB
    AQEBAQEBAQEBAQIBAAAAAQ0AAQQFAXABBQUFAwEAEQYJAX8BQYCAwAALBzYEBm1lbW9yeQIACGJsc19pbml0AA0KYmxz
    X3ZlcmlmeQAnEV9fd2JpbmRnZW5fbWFsbG9jAHwJDQEAQQELBLgBCrkBtwEKiO8CugGXVQIQfwV+IwBB4OEAayIGJABB
    KxABIgkEQCAJQfSgwABBKxBnIQwDQCAHQStHBEAgByAMaiIJQV9BfyAJLQAAIglBn39qQf8BcUEaSRsgCXE6AAAgB0EB
    aiEHDAELC0EAIQcgBkGoA2pBOBByGiAGQQE2AuADIAZB6ANqQTgQciEPIAZBoARqQQE2AgAgBkGoBmpBoKfAABBfIAZB
    qAZqECkhCSAGQbgVakGAAhByGiAGQdjbAGpBgAEQchogBkGbI2pBgQIQciENIAZBsAxqQcAAEHIaIAZByM8AakHAABBy
    GiAGQdDVAGpBwAAQchogBkEAOgCaIyAGIAlB/wBqIhBBA3ZBAWoiCkEBdCILOgCZIyAGIApBB3Y6AJgjIAtBf2pBBXYi
    CEEBaiERA0AgB0ErRwRAIAcgDWogByAMai0AADoAACAHQQFqIQcMAQsLIAZBKzoAxiMgBkEgaiAGQZgjakEvQdinwAAQ
    ggEgBkGwDGpBwAAgAiADIAYoAiAgBigCJBATQQAhDUEAIAtrIRIgBkGZI2ohE0EBIQNBACEJA0ACQCANIAMgEUtyRQRA
    IAMgCEshDSADIAMgCE1qIQJBACEHA0AgB0EgRgRAIAYgAzoAmCNBACEHA0AgB0ErRwRAIAcgE2ogByAMai0AADoAACAH
    QQFqIQcMAQsLIAZBKzoAxCMgBkEYaiAGQZgjakEtQeinwAAQggFBACEHIAZByM8AakEAIAZB0NUAakEgIAYoAhggBigC
    HBATIAkgEmohAyAJIAlBgAIgCUGAAksbIg5rIRQgBkG4FWogCWohFQJAA0AgB0EgRg0FIAcgFGpFDQEgByAVaiAGQcjP
    AGogB2otAAA6AAAgAyAHQQFqIgdqDQALIAIhAyALIQkMBQsgDkGAAkH4p8AAEDwABSAGQcjPAGogB2oiDiAOLQAAIAZB
    sAxqIAdqLQAAcyIOOgAAIAZB0NUAaiAHaiAOOgAAIAdBAWohBwwBCwALAAsgEEGACEkhDUEAIQNBACEJA0ACQCAJQQJH
    BEAgCUEBaiELIAZBuBVqIANqIQJBACEHAkADQCAHIApGBEAgDQRAIAZByM8AakHwABByGiAGQdjbAGohCCAKIQcDQCAH
    BEAgBkHIzwBqQQgQLiAGIAYpA8hPIAgxAAB8NwPITyAHQX9qIQcgCEEBaiEIDAELCyAGQcjPAGoQRSAGQdDVAGogBkGo
    BmoQMCAGQZgjakHwABByGiAGQcjPAGogBkHQ1QBqEDZBAEgNBUEAIQIDQCAGQdDVAGpBARAuIAJBAWohAiAGQcjPAGog
    BkHQ1QBqEDZBf0oNAAsDQCACQQFIDQZBACEHA0AgB0HoAEYEQCAGIAYpA7hWQgGHNwO4VkEAIQcDQCAHQfAARwRAIAZB
    mCNqIAdqIAZByM8AaiAHaikDADcDACAHQQhqIQcMAQsLIAZBmCNqIAZB0NUAahBkIAZBmCNqEEUgBikDgCRCP4chF0EA
    IQcDQCAHQfAARwRAIAZByM8AaiAHaiIIIAZBmCNqIAdqKQMAIhYgCCkDAIUgF4MgFoU3AwAgB0EIaiEHDAELCyACQX9q
    IQIMAgUgBkHQ1QBqIAdqIgggCEEIaikDAEI5hkKAgICAgICAgAKDIAgpAwBCAYeENwMAIAdBCGohBwwBCwALAAsACyAK
    QYABQaChwAAQPQALIAMgB2oiCEH/AU0EQCAHQYABRg0CIAZB2NsAaiAHaiACIAdqLQAAOgAAIAdBAWohBwwBCwsgCEGA
    AkGwocAAEDwAC0GAAUGAAUHAocAAEDwACyAGQShqIAZBqANqEAIgBkG4EmogDxACIAZBKGogBkG4EmoQDCAGQegBakHo
    g8AAEF8CQAJAIAZB6AFqEFoNACAGQShqEIQBDQAgBkGIPWoQS0EAIQcgBkGIwwBqQTgQchogBkG4IWpBOBByGiAGQYjA
    AGoQSyAGQcjEAGoQSyAGQcjJAGoQSyAGQcjMAGoQSyAGQagGahBLIAZBsAxqEEsgBkHIzwBqEEsgBkHQ1QBqEEsgBkHY
    2wBqEEsgBkG4FWoQSyAGQZgjaiAGQcjJAGpBwAEQZxogBkHYJGogBkHIzABqQcABEGcaIAZBmCZqIAZBqAZqQcABEGca
    IAZB2CdqIAZBsAxqQcABEGcaIAZBmClqIAZByM8AakHAARBnGiAGQdgqaiAGQdDVAGpBwAEQZxogBkGYLGogBkHY2wBq
    QcABEGcaIAZB2C1qIAZBuBVqQcABEGcaIAZBuBVqQecAEHIaIAZBiMAAaiAGQShqEH8gBkGIwABqEBggBkGYI2ogBkEo
    ahB/A0AgB0HACkYEQCAGQbghaiAGQegBahBrIAYpA7ghIRcgBkG4IWpBARCdASAGQbghahBEIAYpA7ghIRYgBkGIwwBq
    IAZBuCFqEGsgBkGIwwBqQQEQnQEgBkGIwwBqEEQgBkG4IWogBkGIwwBqIBdCAoGnEE8gBkGIwABqIAZBKGogFkICgacQ
    bSAGQcjEAGogBkGIwABqEH8gBkG4IWoQKUEDaiIJQQJ2IgdBAWohAkEAIQgCQAJAAkADQAJAIAZBuCFqQQUQjAEhAyAC
    IAhGBEAgCUGYA0kNASACQecAQbCEwAAQPAALIAhB5wBGDQIgBkG4FWogCGogA0FwaiIDOgAAIAZBuCFqIANBGHRBGHUQ
    ngEgBkG4IWoQRCAGQbghakEEEDsgCEEBaiEIDAELCyAGQbgVaiACaiADOgAAIANBGHRBGHVBf2oiA0EBdiECIANBD0sN
    ASAGQYg9aiAGQZgjaiACQcABbGoQfwNAIAdBf0YEQCAGQYg9aiAGQcjEAGoQcyAGQZgjaiAGQYg9akHAARBnGgwICyAH
    QeYASw0DIAZBiMAAaiAGQZgjaiAGQbgVaiAHaiwAABAfIAdBf2ohByAGQYg9ahAYIAZBiD1qEBggBkGIPWoQGCAGQYg9
    ahAYIAZBiD1qIAZBiMAAahAMDAALAAtB5wBB5wBBoITAABA8AAsgAkEIQcCEwAAQPAALIAdB5wBB0ITAABA8AAUgBkHI
    xABqIAZBmCNqIAdqIgIQfyACQcABaiICIAZByMQAahB/IAIgBkGIwABqEAwgB0HAAWohBwwBCwALAAsgBkGYI2oQSwsgB
    kEoaiAGQZgjahB/IAZBKGoQRyAMEAlBACEHIAZBqAZqQTAQchogBkGwDGpBoKfAABBfAkACQAJAAkACQANAAkAgB0EwRg
    RAIAYgBi0AqAZBH3E6AKgGIAZByM8AaiAGQagGahBdIAENAUEAQQBB8ILAABA8AAsgASAHRg0CIAZBqAZqIAdqIAAgB2o
    tAAA6AAAgB0EBaiEHDAELC0EAIQcCQCAALAAAIgJBAE4EQCAAQTBqIQAgAUEwIAFBMEsbQVBqIQIDQCAHQTBGBEAgBkHY
    2wBqIAZBqAZqEF0gBkHoAWoQSyAGQegBaiAGQcjPAGoQtAEgBkGoAmoiACAGQdjbAGoQtAEgBkHoAmoQaSAGQegBahBEI
    AZBuBVqIAZB6AFqEE0gBkGYI2ogABCFASAGQZgjahADIAZBmCNqIAZBuBVqEFkNAyAGQegBahCUAQwDCyACIAdGDQQgBk
    GoBmogB2ogACAHai0AADoAACAHQQFqIQcMAAsACyAGQZgjahBLIAZB0NUAakE4EHIaIAZBATYCiFYgBkGYI2ogBkHIzwB
    qELQBIAZBmCNqEEQgBkGYJGoQaSAGQdjbAGogBkGYI2oQTQJAIAZB2NsAaiAGQdDVAGoQXEEBRwRAIAZBmCNqEJQBDAEL
    IAZBuBVqIAZB2NsAaiAGQdDVAGoQIyAGQbgVahBYBEAgBkG4FWoQQSAGQbgVahBECyAGQdgjaiAGQbgVahClAQsgAkEgc
    UEFdiAGQdgjahBMQQFGRwRAIAZBmCNqEKYBCyAGQegBaiAGQZgjakHAARBnGgsgBkHQPGpB8IHAABBfIAZB6AFqEIQBRQ
    0CDAMLIAEgAUHggsAAEDwACyAHQTBqIAFBgIPAABA8AAsgBkGoA2oQSyAGQagDaiAGQegBahB/IAZBuBJqEEsgBkG4Emo
    gBkHoAWoQfyAGQbgSahBHIAZByMcAakHwgcAAEF8gBkGYI2pBqILAABBfIAZBiMMAaiAGQZgjahCLAUEAIQAgBkG4IWpB
    OBByGiAGQfAhakE4EHIhCSAGQdjbAGpB8IHAABBfIAZBuBVqQYCAwAAQXyAGQZgjakE4EHIaIAZBkCNqIQsgBkGwFWohC
    gJAAkADQCAAQQdGDQIgAEEBaiEBIAZBuBVqIABBA3RqIQxCACEXQQAhAwNAIANBf2ohByAKIANBA3RqIQIgCyAAIANqQQ
    N0aiEIA0AgB0EGRgRAIAEhAAwDCyAIQQhqIQggAkEIaiECIAAgB0EBaiIHakEGSw0ACyAAQQZNBEAgB0EGSw0DIAdBAWo
    hAyAGQQhqIAIpAwAiFiAWQj+HIAwpAwAiFiAWQj+HEDEgCCAGKQMIIhkgF3wiFiAIKQMAIhp8IhhC//////////8DgzcD
    ACAYIBZUrSAWIBlUrSAGQRBqKQMAIBdCP4d8fCAaQj+HfHxCBoYgGEI6iIQhFwwBCwsLIABBB0G0ncAAEDwACyAHQQdBx
    J3AABA8AAsgBkG4IWogBkHQPGoQayAGQbghaiAGQZgjahAkIAkgBkHQPGoQayAJIAZBmCNqEBwgCSAGQdjbAGoQYyAGQb
    gSaiAGQYjDAGoQSCAGQbghahApIQAgBkGIyABqIAZBuCFqIAZByMcAahCNASAGQYjIAGoQKSAASQRAIAZBuCFqIAZBiMg
    AahBrIAZBqANqEKYBCyAJECkhACAGQYjIAGogCSAGQcjHAGoQjQEgBkGIyABqECkgAEkEQCAJIAZBiMgAahBrIAZBuBJq
    EKYBCyAGQbghahBEIAkQREEAIQcgBkHIyABqQTgQchogBkGIyQBqQTgQchogBkGYO2pBOBByGiAGQYg9ahBLIAZBiMAAa
    hBLIAZByMQAahBLIAZByMkAahBLIAZByMwAahBLIAZBqAZqEEsgBkGwDGoQSyAGQcjPAGoQSyAGQdDVAGoQSyAGQdjbAG
    oQSyAGQbgVahBLIAZBmCNqIAZByMkAakHAARBnGiAGQdgkaiAGQcjMAGpBwAEQZyEAIAZBmCZqIAZBqAZqQcABEGchASA
    GQdgnaiAGQbAMakHAARBnIQsgBkGYKWogBkHIzwBqQcABEGchCiAGQdgqaiAGQdDVAGpBwAEQZyECIAZBmCxqIAZB2NsA
    akHAARBnIQMgBkHYLWogBkG4FWpBwAEQZyEIIAZBuBVqQcwBEHIaIAZByMgAaiAGQbghahBrIAZBiMkAaiAJEGsgACAGQ
    agDahB/IAAgBkG4EmoQcyABIAZBqANqEH8gASAGQbgSahAMIAZBiD1qIAZBuBJqEH8gBkGIPWoQGCAGQcjEAGogABB/IA
    ZBmCNqIAZByMQAahB/IAZBmCNqIAZBiD1qEHMgBkHIxABqIAEQfyALIAZByMQAahB/IAsgBkGIPWoQDCAGQYjAAGogBkG
    oA2oQfyAGQYjAAGoQGCAGQcjEAGogABB/IAIgBkHIxABqEH8gAiAGQYjAAGoQDCAGQcjEAGogARB/IAMgBkHIxABqEH8g
    AyAGQYjAAGoQDCAGQcjEAGogAhB/IAogBkHIxABqEH8gCiAGQYg9ahBzIAZByMQAaiADEH8gCCAGQcjEAGoQfyAIIAZBi
    D1qEAwgBikDyEghFyAGQcjIAGpBARCdASAGQcjIAGoQRCAGKQPISCEWIAZBmDtqIAZByMgAahBrIAZBmDtqQQEQnQEgBk
    GYO2oQRCAGQcjIAGogBkGYO2ogF0ICgacQTyAGQYjAAGogBkGoA2ogFkICgacQbSAGQcjEAGogBkGIwABqEH8gBikDiEk
    hFyAGQYjJAGpBARCdASAGQYjJAGoQRCAGKQOISSEWIAZBmDtqIAZBiMkAahBrIAZBmDtqQQEQnQEgBkGYO2oQRCAGQYjJ
    AGogBkGYO2ogF0ICgacQTyAGQYg9aiAGQbgSaiAWQgKBpxBtIAZByMQAaiAGQYg9ahAMIAZBmDtqIAZByMgAahBrIAZBm
    DtqIAZBiMkAahBhIAZBmDtqEEQgBkGYO2oQKUEBaiICQQF2IghBAWohAAJAAkACQAJAA0ACQCAGQcjIAGpBAxCMASEBIA
    AgB0YEQCAGQYjJAGpBAxCMASEDIAJBlgNJDQEgAEHMAUG0g8AAEDwACyAGQcjIAGogAUF8aiIBEJ4BIAZByMgAahBEIAZ
    ByMgAakECEDsgBkGIyQBqIAZBiMkAakEDEIwBQXxqIgMQngEgBkGIyQBqEEQgBkGIyQBqQQIQOyAHQcwBRg0CIAZBuBVq
    IAdqIAMgAUECdGo6AAAgB0EBaiEHDAELCyAGQbgVaiAAaiADIAFBAnRqIgA6AAAgAEEYdEEYdUF/aiIBQQF2IQAgAUEPS
    w0BIAZBiD1qIAZBmCNqIABBwAFsahB/A0AgCEF/Rg0EIAhBywFLDQMgBkGIwABqIAZBmCNqIAZBuBVqIAhqLAAAEB8gCE
    F/aiEIIAZBiD1qEBggBkGIPWoQGCAGQYg9aiAGQYjAAGoQDAwACwALQcwBQcwBQaSDwAAQPAALIABBCEHEg8AAEDwACyA
    IQcwBQdSDwAAQPAALIAZBiD1qIAZByMQAahBzIAZBqANqIAZBiD1qQcABEGcaQX8hByAGQagDahCEAUUNASAGQegBahCm
    AUEAIQcgBkHIzwBqQeAAEHIaIAUEQANAIAdB4ABGBEAgBiAGLQDIT0EfcToAyE8gBkHQ1QBqIAZByM8AahAhAkACQAJAI
    AQsAAAiA0F/SgRAIARB4ABqIQAgBUHgACAFQeAASxtBoH9qIQFBACEHA0AgB0HgAEYEQCAGQZgjaiAGQcjPAGoQISAGQa
    gDaiAGQdDVAGogBkGYI2oQPwwDCyABIAdGDQMgBkHIzwBqIAdqIAAgB2otAAA6AAAgB0EBaiEHDAALAAsgBkGYI2oQKiA
    GQYjAAGpBOBByGiAGQQE2AsBAIAZBmCNqIAZB0NUAahCQASAGQZgkaiIBELABIAZBmCVqELABIAZBmCNqEKgBIAZB2NsA
    aiAGQZgjahAmIAZBuBVqIAZB2NsAahBeIAZBuBVqEKYBIAZBuBVqIAZB2NsAahAPIAZBsAxqIAZBuBVqQcAAEGcaAkAgB
    kGwDGogBkGIwABqEFxBAUcEQCAGQZgjahCYAQwBCyAGQdjbAGoQhwFFBEAgBkHIxABqIAZBmNwAaiIAEIUBIAZByMkAai
    AGQdjbAGoQhQEgBkHIzABqIAZB2NsAahCFASAGQagGakE4EHIaIAZBATYC4AYgBkGwDGpBOBByGiAGQQE2AugMIAZByMQ
    AahADIAZByMkAahADIAZByMQAaiAGQcjJAGoQeCAGQcjEAGoQRCAGQbgVaiAGQcjEAGogBkGIwABqECMgBkHIyQBqIAZB
    uBVqEKUBIAZByMQAaiAGQcjJAGoQpQEgBkHIyQBqIAZB2NsAahClASAGQcjJAGogBkHIxABqEHggBkHIyQBqEEQgBkHIy
    QBqEEIgBkHIxABqIAAQpQEgBkHIxABqEEIgBkHIyQBqIAZBsAxqEFwhAiAGQcjMAGogBkGwDGoQpQEgBkHIzABqEEEgBk
    HIzABqEEQgBkGoBmogBkHIyQBqEKUBIAZBqAZqEEEgBkGoBmoQRCAGQcjJAGogBkGoBmpBASACayICEHkgBkGwDGogBkH
    IzABqIAIQeSAGQbgVaiAGQcjJAGogBkGwDGoQIyAGQdjbAGogBkG4FWoQpQEgBkHIzABqIAZByMkAahClASAGQcjMAGog
    BkGwDGoQNCAGQcjMAGogBkHY2wBqEEggACAGQcjMAGoQpQEgACAGQcjEAGoQSCAGQagGaiAGQdjbAGoQpQEgBkHY2wBqI
    AAgAhB5IAAgBkGoBmogAhB5IAZB2NsAahCJASEAIAZBuBVqIAZB2NsAahBeIAZBuBVqEDogBkG4FWoQqAEgBkHY2wBqIA
    ZBuBVqIAAQjwELIAZB2NsAahCJAQRAIAZB2NsAahA6CyAGQdjbAGoQqwEgASAGQdjbAGoQkAELQQAhAgJAIAEQhwENACA
    GQdgkahBMIgINACABEEwhAgsgA0EgcUEFdiACQQFGRwRAIAZBmCNqEJwBCyAGQagDaiAGQZgjakGAAxBnGgsgBkHIyABq
    QfCBwAAQXyAGQagDahCIAQ0FIAZBuBJqECogBkG4FWoQKiAGQdDVAGoQKiAGQdjbAGoQKiAGQZgjahAqIAZBuBhqIAZB0
    NUAakGAAxBnIQ0gBkG4G2ogBkHY2wBqQYADEGchCSAGQbgeaiAGQZgjakGAAxBnIQAgBkHY2wBqQbiAwAAQXyAGQZgjak
    HwgMAAEF8gBkGIwwBqIAZB2NsAaiAGQZgjahBJIAZBiMkAakHwgcAAEF9BACEHIAZBuCFqQTgQchogBkHwIWpBqAEQciE
    DIAZBsAxqQfCBwAAQXyAGQcjPAGpBgIDAABBfIAZB4CJqIQEgBkGoImohDyAGQdDVAGogBkHIyABqEF8DQCAHQagBRg0C
    IAZBuCFqIAdqIgIgBkHQ1QBqEGsgAiAGQcjPAGoQJCAHQThqIQcgBkHQ1QBqIAZByM8AahAcDAALAAsgB0HgAGogBUGwp
    MAAEDwACyABIAZB0NUAahBrQQAhByAGQdjbAGpBOBByGiAGQZgjaiADIAZBsAxqEI0BIAZB2NsAaiAGQZgjahBrIAMgBk
    HY2wBqEGsgBkGYI2ogASAGQbAMahCNASAGQdjbAGogBkGYI2oQayABIAZB2NsAahBrIAZBiD1qECogBkGIwwBqEEAgBkG
    IwwBqEKgBIAZBmDtqQTgQchogBkG4FWogBkGoA2oQfgNAIAdBgAlGBEACQCAGQbgVaiECQQAhBwNAIAdB4AFHBEAgBkG4
    IWogB2oiBBApIQUgBkGYI2ogBCAGQYjJAGoQjQEgBkGYO2ogBkGYI2oQayAGQZg7ahApIAVJBEAgBCAGQZg7ahBrIAIQn
    AELIAQQRCAHQThqIQcgAkGAA2ohAgwBCwsgBkHIxABqECogBkGIwABqECogBkGYI2oQKiAGQcjJAGoQKiAGQcjMAGoQKi
    AGQagGahAqIAZBsAxqECogBkHIzwBqECogBkHQ1QBqECogBkHY2wBqECogBkGYJmogBkHIyQBqQYADEGchAiAGQZgpaiA
    GQcjMAGpBgAMQZyEEIAZBmCxqIAZBqAZqQYADEGchBSAGQZgvaiAGQbAMakGAAxBnIQsgBkGYMmogBkHIzwBqQYADEGch
    CiAGQZg1aiAGQdDVAGpBgAMQZyEIIAZBmDhqIAZB2NsAakGAAxBnIQxBACEHIAZBqAZqQTgQchogBkGwDGogBkG4IWoQX
    yAGQcjPAGogAxBfIAZB0NUAaiAPEF8gBkHY2wBqIAEQXyAGQegMaiAGQcjPAGpBOBBnGiAGQaANaiAGQdDVAGpBOBBnGi
    AGQdgNaiAGQdjbAGpBOBBnGiAGQdDVAGpBlwMQchogBkHY2wBqQZcDEHIaA0AgB0HgAUYEQAJAIAZBmCNqIAZBuBVqEH4
    gBkHIxABqIAZBmCNqEH4gAiAGQcjEAGoQfiACIA0QCyAEIAZByMQAahB+IAQgCRALIAZByMQAaiACEH4gBSAGQcjEAGoQ
    fiAFIAkQCyAGQcjEAGogBkGYI2oQfiALIAZByMQAahB+IAsgABALIAZByMQAaiACEH4gCiAGQcjEAGoQfiAKIAAQCyAGQ
    cjEAGogBBB+IAggBkHIxABqEH4gCCAAEAsgBkHIxABqIAUQfiAMIAZByMQAahB+IAwgABALIAZBsAxqQQEgBikDsAxCAo
    GnayIFEJ0BIAZBsAxqEEQgBkGoBmoQdEEAIQAgBkGwDGohAgJAAkACQAJAA38gAEEERgR/IAZBqAZqECkiA0GXA08NAiA
    DQQFqIQkgBkHY2wBqIANqQQE6AAAgBkHY2wBqIQggAwVBACEHA0AgB0E4RwRAIAZBqAZqIAdqIgEgASkDACACIAdqKQMA
    hDcDACAHQQhqIQcMAQsLIAJBOGohAiAAQQFqIQAMAQsLIQcDQCAHBEAgBkGwDGpBARA7IAggBikDsAxCAoGnQQF0QX9qO
    gAAIAdBf2ohByAIQQFqIQgMAQsLQQAhBwNAIAcgCUYEQCAGQYjAAGogBkGYI2ogBkHQ1QBqIANqLQAAQRl0QRh1QQFyEC
    AgA0F/aiEHA0AgB0F/Rg0GIAZBiMAAahAUIAdBlgNLDQUgBkHIxABqIAZBmCNqIAZB2NsAaiAHai0AACAGQdDVAGogB2o
    tAABBAXRqQRh0QRh1ECAgB0F/aiEHIAZBiMAAaiAGQcjEAGoQCwwACwALIAdBlwNGDQIgB0EBaiEBQQAhACAGQdDVAGog
    B2oiC0EAOgAAIAZB2NsAaiAHai0AACEKQQEhAkE4IQcDQCAHQeABRgRAIAEhBwwCBSAGQbAMaiAHaiIEKQMAIRcgBEEBE
    DsgBCAKIBdCAoGnbCIIQRh0QRl1EJ4BIAQQRCALIAAgAiAIbGoiADoAACAHQThqIQcgAkEBdCECDAELAAsACwALIANBlw
    NBkKXAABA8AAtBlwNBlwNBoKXAABA8AAsgB0GXA0GwpcAAEDwACyAGQcjEAGogBkGIwABqEH4gBkHIzwBqECogBkHIzwB
    qIAZBuBVqEH4gBkHIzwBqEJwBIAZByMQAaiAGQcjPAGoQCyAGQYjAAGogBkHIxABqIAUQbyAGQbgSaiAGQYjAAGoQfkF/
    IQcgBkG4EmoQiAFFDQogBkG4EmoQOCAGQbgVakG4gMAAEF8gBkGYI2pB8IDAABBfIAZBmDtqIAZBuBVqIAZBmCNqEEkgB
    kGYPGpBOBByGiAGQdA8akE4EHIaIAZBiD1qECogBkHoAWoQhAFFBEAgBkEoahCEAQ0BIAZBiMAAahAqIAZBiMAAaiAGQb
    gSahB+IAZBiMAAahBKIAZBiMMAahBLIAZBiMMAaiAGQegBahB/IAZBiMMAahBHIAZByMQAahAqIAZByMQAaiAGQagDahB
    +IAZByMQAahBKIAZBuCFqEEsgBkG4IWogBkEoahB/IAZBuCFqEEcgBkGYI2ogBkGIwwBqEIUBIAZByMcAaiAGQZgjahCF
    ASAGQZgjaiAGQcjDAGoQhQEgBkGIyABqIAZBmCNqEIUBIAZBmCNqIAZBuCFqEIUBIAZByMgAaiAGQZgjahCFASAGQZgja
    iAGQfghahCFASAGQYjJAGogBkGYI2oQhQEgBkHIyQBqECogBkHIzABqECogBkHQ1QBqEGAgBkHIyQBqIAZBiMAAahB+IA
    ZByMwAaiAGQcjEAGoQfiAGQbAMahAqIAZBsAxqIAZBiMAAahB+IAZBsAxqEJwBIAZByM8AahAqIAZByM8AaiAGQcjEAGo
    QfiAGQcjPAGoQnAEgBkHQPGogBkGYPGoQVEF/aiEHA0AgB0EBTQRAIAZB0NUAahCTASAGQagGaiAGQdDVAGpBiAYQZxoM
    BgsgBkHQ1QBqEBsgBkHY2wBqIAZByMkAaiAGQcjHAGogBkGIyABqEBcgBkG4FWogBkHIzABqIAZByMgAaiAGQYjJAGoQF
    yAGQdjbAGogBkG4FWoQBiAGQdDVAGogBkHY2wBqEAQCQAJAIAZB0DxqIAdBf2oiBxBXIAZBmDxqIAcQV2tBAWoOAwECAA
    ILIAZB2NsAaiAGQcjJAGogBkGIwABqIAZByMcAaiAGQYjIAGoQFiAGQZgjaiAGQcjMAGogBkHIxABqIAZByMgAaiAGQYj
    JAGoQFiAGQdjbAGogBkGYI2oQBiAGQdDVAGogBkHY2wBqEAQMAQsgBkHY2wBqIAZByMkAaiAGQbAMaiAGQcjHAGogBkGI
    yABqEBYgBkGYI2ogBkHIzABqIAZByM8AaiAGQcjIAGogBkGIyQBqEBYgBkHY2wBqIAZBmCNqEAYgBkHQ1QBqIAZB2NsAa
    hAEDAALAAsgBkGoBmogBkGoA2ogBkEoahAQDAMLBSAGQbAMaiAHahBEIAdBOGohBwwBCwsgBkGoBmogBkG4EmogBkHoAW
    oQEAsFIAZBiD1qIAZBuBVqIAdqIgIQfiACQYADaiIEIAZBiD1qEH4gBkGYI2ogBkGIwwBqEF4gBkGYI2oQMiAEEKYBIAJ
    BgARqIgUQpgEgAkGABWoiAhCmASACEKsBIAQgBkGYI2oQDyAFIAZBmCNqEA8gBSAGQYjDAGoQDyAHQYADaiEHDAELCyAG
    QbgVakG4gMAAEF8gBkGYI2pB8IDAABBfIAZByMQAaiAGQbgVaiAGQZgjahBJIAZBiMAAakGAgMAAEF8gBkGwDGogBkGoB
    moQaiAGQcjPAGogBkGwDGoQaiAGQdDVAGogBkHIzwBqEI4BIAZB2NsAaiAGQcjRAGoiARCOASAGQbgVaiAGQcjPAGoQjg
    EgBkGYI2oQLyAGQcjPAGoQmQEgBkHQ1QBqECIgBkHY2wBqIAZByNMAaiIAEBkgBkHY2wBqEGYgBkHQ1QBqIAZB2NsAahC
    BASAGQdDVAGoQrAEgBkHY2wBqIAAQkgEgBkHY2wBqECIgBkHY2wBqEGYgBkG4FWogARAZIAZB2NsAaiAGQbgVahCBASAG
    QdjbAGoQrAEgBkG4FWogARCSASAGQbgVahAiIAZBmCNqIAZByM8AahCSASAGQZgjaiAAEBkgBkG4FWogBkGYI2oQgQEgB
    kG4FWoQrAEgBkGYI2ogARCSASAGQZgjaiAGQbgVahAZIAZBmCNqEGYgBkHIzwBqIAZB0NUAahAZIAZBmCNqIAZByM8Aah
    CWASAAIAZB2NsAahAZIAAQZiAGQZgjaiAAEJYBIAZBmCNqEKwBIAZByMkAaiAGQZgjahBeIAZByMwAaiAGQZgkaiICEF4
    gBkHIyQBqEDIgBkHIzABqEDIgBkHIzABqEFUgBkHIzABqEKgBIAZByMkAaiAGQcjMAGoQfSAGQcjJAGoQQCAGQZgjaiAG
    QcjJAGoQDyAGQcjJAGoQOiAGQcjJAGoQqAEgAiAGQcjJAGoQDyAGQcjPAGogBkHQ1QBqEJIBIAZByM8AaiAGQZgjahAZI
    AEgBkHY2wBqEJIBIAEgBkGYI2oQGSAAIAZBuBVqEJIBIAAgBkGYI2oQGSAGQQU2AshVIAZBsAxqEJMBIAZBsAxqIAZByM
    8AahAOIAZByM8AaiAGQbAMahBsIAZBsAxqIAZByMQAahA3IAZBsAxqIAZByMQAahA3IAZBsAxqIAZByM8AahAOIAZB0NU
    AaiAGQbAMahBqIAZB0NUAahAaIAZB0NUAaiAGQbAMahAOIAZBmCNqIAZBsAxqIAZBiMAAahAdIAZB2NsAaiAGQZgjahBq
    IAZB2NsAahCTASAGQbgVaiAGQbAMahBqIAZBuBVqEJMBIAZBsAxqIAZB2NsAahBsIAZBsAxqIAZBuBVqEA4gBkGYI2ogB
    kGwDGogBkGIwABqEB0gBkHY2wBqIAZBmCNqEGwgBkHY2wBqEJMBIAZBuBVqIAZBsAxqEGwgBkG4FWoQkwEgBkGwDGogBk
    HY2wBqEGwgBkGwDGogBkG4FWoQDiAGQZgjaiAGQbAMaiAGQYjAAGoQHSAGQdjbAGogBkGYI2oQbCAGQdjbAGoQkwEgBkG
    4FWogBkGwDGoQbCAGQbgVaiAGQcjEAGoQNyAGQbAMaiAGQdjbAGoQbCAGQbAMaiAGQbgVahAOIAZBmCNqIAZBsAxqIAZB
    iMAAahAdIAZB2NsAaiAGQZgjahBsIAZBmCNqIAZB2NsAaiAGQYjAAGoQHSAGQdjbAGogBkGYI2oQbCAGQbgVaiAGQbAMa
    hBsIAZBuBVqIAZByMQAahA3IAZBuBVqIAZByMQAahA3IAZB2NsAaiAGQbgVahAOIAZBuBVqIAZBsAxqEGwgBkG4FWoQkw
    EgBkGwDGogBkHY2wBqEGwgBkGwDGogBkG4FWoQDiAGQbAMaiAGQdDVAGoQDiAGQbAMahCaASAGQagGaiAGQbAMakGIBhB
    nGiAGQZgjahBuIAZBqAZqIAZBmCNqEHtFDQMgBkGoB2ogAhB7RQ0DIAZBqAhqEIYBRQ0DQQAhByAGQagKahCGAUUNAwwE
    CyAFIAdHBEAgBkHIzwBqIAdqIAQgB2otAAA6AAAgB0EBaiEHDAELCyAFIAVBoKTAABA8AAtBAEEAQZCkwAAQPAALQX8hB
    wsgBkHg4QBqJAAgBw8LQQAhByAGQbAMakE4EHIaA0AgB0E4RwRAIAZBsAxqIAdqIAZByM8AaiAHaikDADcDACAHQQhqIQ
    cMAQsLIAZBmCNqIAZBsAxqEIsBIAZBqANqIAlBBnRqIAZBmCNqQcAAEGcaIAMgCmohAyALIQkMAAsACyAHIAlqIQkgAiE
    DDAALAAtBK0EBQaS5wQAoAgAiAEEBIAAbEQAAAAvBKgIIfwF+AkACQAJAAkAgAEH1AU8EQCAAQc3/e08NAiAAQQtqIgBB
    eHEhBkHYtcEAKAIAIgdFDQFBHyEIQQAgBmshBQJAAkAgBkH///8HTQRAIAZBBiAAQQh2ZyIAa0EfcXZBAXEgAEEBdGtBP
    mohCAsgCEECdEHkt8EAaigCACIABEAgBkEAQRkgCEEBdmtBH3EgCEEfRht0IQMDQAJAIABBBGooAgBBeHEiBCAGSQ0AIA
    QgBmsiBCAFTw0AIAAhAiAEIgUNAEEAIQUMAwsgAEEUaigCACIEIAEgBCAAIANBHXZBBHFqQRBqKAIAIgBHGyABIAQbIQE
    gA0EBdCEDIAANAAsgAQRAIAEhAAwCCyACDQILQQAhAkECIAhBH3F0IgBBACAAa3IgB3EiAEUNAyAAQQAgAGtxaEECdEHk
    t8EAaigCACIARQ0DCwNAIAAgAiAAQQRqKAIAQXhxIgEgBk8gASAGayIDIAVJcSIEGyECIAMgBSAEGyEFIAAoAhAiAQR/I
    AEFIABBFGooAgALIgANAAsgAkUNAgtB5LjBACgCACIAIAZPQQAgBSAAIAZrTxsNASACKAIYIQcCQAJAIAIgAigCDCIBRg
    RAIAJBFEEQIAJBFGoiAygCACIBG2ooAgAiAA0BQQAhAQwCCyACKAIIIgAgATYCDCABIAA2AggMAQsgAyACQRBqIAEbIQM
    DQCADIQQgACIBQRRqIgMoAgAiAEUEQCABQRBqIQMgASgCECEACyAADQALIARBADYCAAsCQCAHRQ0AAkAgAiACKAIcQQJ0
    QeS3wQBqIgAoAgBHBEAgB0EQQRQgBygCECACRhtqIAE2AgAgAUUNAgwBCyAAIAE2AgAgAQ0AQdi1wQBB2LXBACgCAEF+I
    AIoAhx3cTYCAAwBCyABIAc2AhggAigCECIABEAgASAANgIQIAAgATYCGAsgAkEUaigCACIARQ0AIAFBFGogADYCACAAIA
    E2AhgLAkAgBUEQTwRAIAIgBkEDcjYCBCACIAZqIgcgBUEBcjYCBCAFIAdqIAU2AgAgBUGAAk8EQEEfIQAgB0IANwIQIAV
    B////B00EQCAFQQYgBUEIdmciAGtBH3F2QQFxIABBAXRrQT5qIQALIAcgADYCHCAAQQJ0QeS3wQBqIQQCQAJAAkACQEHY
    tcEAKAIAIgNBASAAQR9xdCIBcQRAIAQoAgAiA0EEaigCAEF4cSAFRw0BIAMhAAwCC0HYtcEAIAEgA3I2AgAgBCAHNgIAI
    AcgBDYCGAwDCyAFQQBBGSAAQQF2a0EfcSAAQR9GG3QhAQNAIAMgAUEddkEEcWpBEGoiBCgCACIARQ0CIAFBAXQhASAAIQ
    MgAEEEaigCAEF4cSAFRw0ACwsgACgCCCIBIAc2AgwgACAHNgIIIAdBADYCGCAHIAA2AgwgByABNgIIDAQLIAQgBzYCACA
    HIAM2AhgLIAcgBzYCDCAHIAc2AggMAgsgBUEDdiIBQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgNBASABdCIBcQRAIAAoAggM
    AQtB1LXBACABIANyNgIAIAALIQUgACAHNgIIIAUgBzYCDCAHIAA2AgwgByAFNgIIDAELIAIgBSAGaiIAQQNyNgIEIAAgA
    moiACAAKAIEQQFyNgIECyACQQhqDwsCQAJAQdS1wQAoAgAiB0EQIABBC2pBeHEgAEELSRsiBkEDdiIBdiICQQNxRQRAIA
    ZB5LjBACgCAE0NAyACDQFB2LXBACgCACIARQ0DIABBACAAa3FoQQJ0QeS3wQBqKAIAIgFBBGooAgBBeHEgBmshBSABIQM
    DQCABKAIQIgBFBEAgAUEUaigCACIARQ0ECyAAQQRqKAIAQXhxIAZrIgIgBSACIAVJIgIbIQUgACADIAIbIQMgACEBDAAL
    AAsCQCACQX9zQQFxIAFqIgVBA3QiAEHktcEAaigCACIDQQhqIgIoAgAiASAAQdy1wQBqIgBHBEAgASAANgIMIAAgATYCC
    AwBC0HUtcEAIAdBfiAFd3E2AgALIAMgBUEDdCIAQQNyNgIEIAAgA2oiACAAKAIEQQFyNgIEIAIPCwJAQQIgAXQiAEEAIA
    BrciACIAF0cSIAQQAgAGtxaCIBQQN0IgBB5LXBAGooAgAiA0EIaiIEKAIAIgIgAEHctcEAaiIARwRAIAIgADYCDCAAIAI
    2AggMAQtB1LXBACAHQX4gAXdxNgIACyADIAZBA3I2AgQgAyAGaiIFIAFBA3QiACAGayIHQQFyNgIEIAAgA2ogBzYCAEHk
    uMEAKAIAIgAEQCAAQQN2IgJBA3RB3LXBAGohAEHsuMEAKAIAIQgCf0HUtcEAKAIAIgFBASACQR9xdCICcQRAIAAoAggMA
    QtB1LXBACABIAJyNgIAIAALIQMgACAINgIIIAMgCDYCDCAIIAA2AgwgCCADNgIIC0HsuMEAIAU2AgBB5LjBACAHNgIAIA
    QPCyADKAIYIQcCQAJAIAMgAygCDCIBRgRAIANBFEEQIANBFGoiASgCACICG2ooAgAiAA0BQQAhAQwCCyADKAIIIgAgATY
    CDCABIAA2AggMAQsgASADQRBqIAIbIQIDQCACIQQgACIBQRRqIgIoAgAiAEUEQCABQRBqIQIgASgCECEACyAADQALIARB
    ADYCAAsgB0UNAyADIAMoAhxBAnRB5LfBAGoiACgCAEcEQCAHQRBBFCAHKAIQIANGG2ogATYCACABRQ0EDAMLIAAgATYCA
    CABDQJB2LXBAEHYtcEAKAIAQX4gAygCHHdxNgIADAMLAkACQAJAAkACQEHkuMEAKAIAIgEgBkkEQEHouMEAKAIAIgAgBk
    sNA0EAIQUgBkGvgARqIgJBEHZAACIAQX9GDQYgAEEQdCIDRQ0GQfS4wQAgAkGAgHxxIgVB9LjBACgCAGoiAjYCAEH4uME
    AQfi4wQAoAgAiACACIAAgAksbNgIAQfC4wQAoAgAiBEUNAUH8uMEAIQADQCAAKAIAIgEgACgCBCICaiADRg0DIAAoAggi
    AA0ACwwEC0HsuMEAKAIAIQMCfyABIAZrIgJBD00EQEHsuMEAQQA2AgBB5LjBAEEANgIAIAMgAUEDcjYCBCABIANqIgJBB
    GohACACKAIEQQFyDAELQeS4wQAgAjYCAEHsuMEAIAMgBmoiADYCACAAIAJBAXI2AgQgASADaiACNgIAIANBBGohACAGQQ
    NyCyEGIAAgBjYCACADQQhqDwtBkLnBACgCACIAQQAgACADTRtFBEBBkLnBACADNgIAC0GUucEAQf8fNgIAQYC5wQAgBTY
    CAEH8uMEAIAM2AgBB6LXBAEHctcEANgIAQfC1wQBB5LXBADYCAEHktcEAQdy1wQA2AgBB+LXBAEHstcEANgIAQey1wQBB
    5LXBADYCAEGAtsEAQfS1wQA2AgBB9LXBAEHstcEANgIAQYi2wQBB/LXBADYCAEH8tcEAQfS1wQA2AgBBkLbBAEGEtsEAN
    gIAQYS2wQBB/LXBADYCAEGYtsEAQYy2wQA2AgBBjLbBAEGEtsEANgIAQaC2wQBBlLbBADYCAEGUtsEAQYy2wQA2AgBBiL
    nBAEEANgIAQai2wQBBnLbBADYCAEGctsEAQZS2wQA2AgBBpLbBAEGctsEANgIAQbC2wQBBpLbBADYCAEGstsEAQaS2wQA
    2AgBBuLbBAEGstsEANgIAQbS2wQBBrLbBADYCAEHAtsEAQbS2wQA2AgBBvLbBAEG0tsEANgIAQci2wQBBvLbBADYCAEHE
    tsEAQby2wQA2AgBB0LbBAEHEtsEANgIAQcy2wQBBxLbBADYCAEHYtsEAQcy2wQA2AgBB1LbBAEHMtsEANgIAQeC2wQBB1
    LbBADYCAEHctsEAQdS2wQA2AgBB6LbBAEHctsEANgIAQfC2wQBB5LbBADYCAEHktsEAQdy2wQA2AgBB+LbBAEHstsEANg
    IAQey2wQBB5LbBADYCAEGAt8EAQfS2wQA2AgBB9LbBAEHstsEANgIAQYi3wQBB/LbBADYCAEH8tsEAQfS2wQA2AgBBkLf
    BAEGEt8EANgIAQYS3wQBB/LbBADYCAEGYt8EAQYy3wQA2AgBBjLfBAEGEt8EANgIAQaC3wQBBlLfBADYCAEGUt8EAQYy3
    wQA2AgBBqLfBAEGct8EANgIAQZy3wQBBlLfBADYCAEGwt8EAQaS3wQA2AgBBpLfBAEGct8EANgIAQbi3wQBBrLfBADYCA
    EGst8EAQaS3wQA2AgBBwLfBAEG0t8EANgIAQbS3wQBBrLfBADYCAEHIt8EAQby3wQA2AgBBvLfBAEG0t8EANgIAQdC3wQ
    BBxLfBADYCAEHEt8EAQby3wQA2AgBB2LfBAEHMt8EANgIAQcy3wQBBxLfBADYCAEHgt8EAQdS3wQA2AgBB1LfBAEHMt8E
    ANgIAQfC4wQAgAzYCAEHct8EAQdS3wQA2AgBB6LjBACAFQVhqIgA2AgAgAyAAQQFyNgIEIAAgA2pBKDYCBEGMucEAQYCA
    gAE2AgAMAwsgAEEMaigCACADIARNciABIARLcg0BIAAgAiAFajYCBEHwuMEAQfC4wQAoAgAiA0EPakF4cSIBQXhqNgIAQ
    ei4wQBB6LjBACgCACAFaiICIAMgAWtqQQhqIgA2AgAgAUF8aiAAQQFyNgIAIAIgA2pBKDYCBEGMucEAQYCAgAE2AgAMAg
    tB6LjBACAAIAZrIgI2AgBB8LjBAEHwuMEAKAIAIgEgBmoiADYCACAAIAJBAXI2AgQgASAGQQNyNgIEIAFBCGohBQwCC0G
    QucEAQZC5wQAoAgAiACADIAAgA0kbNgIAIAMgBWohAUH8uMEAIQACQANAIAEgACgCAEcEQCAAKAIIIgANAQwCCwsgAEEM
    aigCAA0AIAAgAzYCACAAIAAoAgQgBWo2AgQgAyAGQQNyNgIEIAMgBmohBCABIANrIAZrIQYCQAJAIAFB8LjBACgCAEcEQ
    EHsuMEAKAIAIAFGDQEgAUEEaigCACIAQQNxQQFGBEAgASAAQXhxIgAQFSAAIAZqIQYgACABaiEBCyABIAEoAgRBfnE2Ag
    QgBCAGQQFyNgIEIAQgBmogBjYCACAGQYACTwRAQR8hBSAEQgA3AhAgBkH///8HTQRAIAZBBiAGQQh2ZyIAa0EfcXZBAXE
    gAEEBdGtBPmohBQsgBCAFNgIcIAVBAnRB5LfBAGohAQJAAkACQAJAQdi1wQAoAgAiAkEBIAVBH3F0IgBxBEAgASgCACIC
    QQRqKAIAQXhxIAZHDQEgAiEFDAILQdi1wQAgACACcjYCACABIAQ2AgAgBCABNgIYDAMLIAZBAEEZIAVBAXZrQR9xIAVBH
    0YbdCEBA0AgAiABQR12QQRxakEQaiIAKAIAIgVFDQIgAUEBdCEBIAUiAkEEaigCAEF4cSAGRw0ACwsgBSgCCCIAIAQ2Ag
    wgBSAENgIIIARBADYCGCAEIAU2AgwgBCAANgIIDAULIAAgBDYCACAEIAI2AhgLIAQgBDYCDCAEIAQ2AggMAwsgBkEDdiI
    CQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgFBASACdCICcQRAIAAoAggMAQtB1LXBACABIAJyNgIAIAALIQUgACAENgIIIAUg
    BDYCDCAEIAA2AgwgBCAFNgIIDAILQfC4wQAgBDYCAEHouMEAQei4wQAoAgAgBmoiADYCACAEIABBAXI2AgQMAQtB7LjBA
    CAENgIAQeS4wQBB5LjBACgCACAGaiIANgIAIAQgAEEBcjYCBCAAIARqIAA2AgALIANBCGoPC0H8uMEAIQADQAJAIAAoAg
    AiAiAETQRAIAIgACgCBGoiAiAESw0BCyAAKAIIIQAMAQsLQfC4wQAgAzYCAEHouMEAIAVBWGoiADYCACADIABBAXI2AgQ
    gACADakEoNgIEQYy5wQBBgICAATYCACAEIAJBYGpBeHFBeGoiACAAIARBEGpJGyIBQRs2AgRB/LjBACkCACEJIAFBEGpB
    hLnBACkCADcCACABIAk3AghBgLnBACAFNgIAQfy4wQAgAzYCAEGEucEAIAFBCGo2AgBBiLnBAEEANgIAIAFBHGohAANAI
    ABBBzYCACACIABBBGoiAEsNAAsgASAERg0AIAEgASgCBEF+cTYCBCAEIAEgBGsiBUEBcjYCBCABIAU2AgAgBUGAAk8EQE
    EfIQAgBEIANwIQIAVB////B00EQCAFQQYgBUEIdmciAGtBH3F2QQFxIABBAXRrQT5qIQALIARBHGogADYCACAAQQJ0QeS
    3wQBqIQMCQAJAAkACQEHYtcEAKAIAIgFBASAAQR9xdCICcQRAIAMoAgAiAkEEaigCAEF4cSAFRw0BIAIhAAwCC0HYtcEA
    IAEgAnI2AgAgAyAENgIAIARBGGogAzYCAAwDCyAFQQBBGSAAQQF2a0EfcSAAQR9GG3QhAQNAIAIgAUEddkEEcWpBEGoiA
    ygCACIARQ0CIAFBAXQhASAAIQIgAEEEaigCAEF4cSAFRw0ACwsgACgCCCICIAQ2AgwgACAENgIIIARBGGpBADYCACAEIA
    A2AgwgBCACNgIIDAMLIAMgBDYCACAEQRhqIAI2AgALIAQgBDYCDCAEIAQ2AggMAQsgBUEDdiICQQN0Qdy1wQBqIQACf0H
    UtcEAKAIAIgFBASACdCICcQRAIAAoAggMAQtB1LXBACABIAJyNgIAIAALIQEgACAENgIIIAEgBDYCDCAEIAA2AgwgBCAB
    NgIIC0EAIQVB6LjBACgCACIAIAZNDQBB6LjBACAAIAZrIgI2AgBB8LjBAEHwuMEAKAIAIgEgBmoiADYCACAAIAJBAXI2A
    gQgASAGQQNyNgIEIAFBCGoPCyAFDwsgASAHNgIYIAMoAhAiAARAIAEgADYCECAAIAE2AhgLIANBFGooAgAiAEUNACABQR
    RqIAA2AgAgACABNgIYCwJAIAVBEE8EQCADIAZBA3I2AgQgAyAGaiIEIAVBAXI2AgQgBCAFaiAFNgIAQeS4wQAoAgAiAAR
    AIABBA3YiAkEDdEHctcEAaiEAQey4wQAoAgAhBwJ/QdS1wQAoAgAiAUEBIAJBH3F0IgJxBEAgACgCCAwBC0HUtcEAIAEg
    AnI2AgAgAAshAiAAIAc2AgggAiAHNgIMIAcgADYCDCAHIAI2AggLQey4wQAgBDYCAEHkuMEAIAU2AgAMAQsgAyAFIAZqI
    gBBA3I2AgQgACADaiIAIAAoAgRBAXI2AgQLIANBCGoLtA8BA38jAEGAC2siAiQAIAJBCGoQSyACQcgBakE4EHIaIAJBAT
    YCgAIgAkGIAmpBOBByGiACQQE2AsACIAJByAJqQTgQchogAkEBNgKAAyACQYgDakE4EHIaIAJBATYCwAMgAkHIA2pBOBB
    yGiACQQE2AoAEIAJBiARqQQEQigEgAkHIBGpBOBByGiACQQE2AoAFIAJBiAVqQTgQchogAkEBNgLABSACQcgFaiABEIUB
    IAJBiAZqQTgQchogAkEBNgLABiACQcgGakE4EHIaIAJBATYCgAcgAkGIB2pBOBByGiACQQE2AsAHIAJByAdqQTgQchogA
    kEBNgKACCACQcgFahBYIQMgAkHICWpB4ITAABBfIAJBiApqIAJByAlqEIsBIAJByAFqIAJBiApqEKUBIAJByAlqQZiFwA
    AQXyACQYgKaiACQcgJahCLASACQYgCaiACQYgKahClASACQcgFahADIAJByAVqQQsQUiACQYgGaiACQcgFahClASACQYg
    GaiACQYgEahB4IAJBiAZqEEQgAkGIBmogAkHIBWoQSCACQYgFaiACQcgBahClASACQYgFaiACQYgGahBIIAJBiAZqIAJB
    iARqEHggAkGIBmoQRCACQYgGaiACQYgCahBIIAJBiAZqEEEgAkGIBmoQRCACQYgDaiACQYgGahClASACQcgDaiACQcgFa
    hClASACQcgDaiACQYgDahBIIAJByAdqIAJBiANqEKUBIAJByAdqEAMgAkHIBmogAkGIBWoQpQEgAkHIBmoQAyACQYgGai
    ACQcgBahClASACQYgGaiACQcgGahBIIAJByAdqIAJBiAZqEHggAkHIB2oQRCACQcgHaiACQYgDahBIIAJByAZqIAJBiAV
    qEEggAkGIBmogAkGIAmoQpQEgAkGIBmogAkHIBmoQSCACQcgHaiACQYgGahB4IAJByAdqEEQgAkGIBmogAkHIB2oQpQEg
    AkGIBmogAkGIBWoQSCACQYgGaiACQYgHahBcIQQgAkGIBWogAkGIBmoQpQEgAkGIBWogAkGIB2oQNCACQYgFaiACQcgHa
    hBIIAJBiANqIAJBiAVqEEggAkHIA2ogAkGIBWoQSCACQcgFaiABEEggAkHIBmogAkGIBWoQpQEgAkHIBmoQAyACQYgFai
    ACQcgGahClASACQYgFaiACQcgFahBIIAJByAVqIAJBiAZqEKUBIAJByAVqQQsQUiACQcgJakHQhcAAEF8gAkGICmogAkH
    ICWoQiwEgAkHIAmogAkGICmoQpQEgAkHIAmogAkGIB2oQSCACQYgDaiACQcgDakEBIARrIgEQeSACQcgGaiACQYgFaiAB
    EHkgAkGIBmogAkHIBWogARB5IAJBiAdqIAJByAJqIAEQeSACQYgKaiACQYgGaiACQYgHahAjIAJByARqIAJBiApqEKUBI
    AJByARqIAJByAZqEEggAkHIBGoQWCEBIAJBiAZqIAJByARqEKUBIAJBiAZqEEEgAkGIBmoQRCACQcgEaiACQYgGaiABIA
    NzEHkgAkGICmpBiIbAABBfIAJBiAhqIAJBiApqEIsBQTghAQNAIAFBoAVGRQRAIAJBiAhqIAJBiANqEEggAkHICWogAUG
    IhsAAahBfIAFBOGohASACQYgKaiACQcgJahCLASACQYgGaiACQYgKahClASACQYgIaiACQYgGahB4IAJBiAhqEEQMAQsL
    IAJByAhqIAJBiANqEIUBIAJByAlqQaiLwAAQXyACQYgKaiACQcgJahCLASACQYgGaiACQYgKahClASACQcgIaiACQYgGa
    hB4IAJByAhqEERBACEBA0AgAUH4A0ZFBEAgAkHICGogAkGIA2oQSCACQcgJaiABQeCLwABqEF8gAUE4aiEBIAJBiApqIA
    JByAlqEIsBIAJBiAZqIAJBiApqEKUBIAJByAhqIAJBiAZqEHggAkHICGoQRAwBCwsgAkGICmpB2I/AABBfIAJBiAlqIAJ
    BiApqEIsBQQAhAQNAIAFByAZGBEACQCACQcgJaiACQYgDahCFASACQcgKakHYlsAAEF8gAkGICmogAkHICmoQiwEgAkGI
    BmogAkGICmoQpQEgAkHICWogAkGIBmoQeCACQcgJahBEQQAhAQNAIAFBkAZGDQEgAkHICWogAkGIA2oQSCACQcgKaiABQ
    ZCXwABqEF8gAUE4aiEBIAJBiApqIAJByApqEIsBIAJBiAZqIAJBiApqEKUBIAJByAlqIAJBiAZqEHggAkHICWoQRAwACw
    ALBSACQYgJaiACQYgDahBIIAJByAlqIAFBkJDAAGoQXyABQThqIQEgAkGICmogAkHICWoQiwEgAkGIBmogAkGICmoQpQE
    gAkGICWogAkGIBmoQeCACQYgJahBEDAELCyACQYgJaiACQcgEahBIIAJBiAZqIAJBiAhqEKUBIAJBiAZqIAJByAlqEEgg
    AkEIaiACQYgGahClASACQYgGaiACQYgJahClASACQYgGaiACQcgIahBIIAJByABqIAJBiAZqEKUBIAJBiAZqIAJByAhqE
    KUBIAJBiAZqIAJByAlqEEggAkGIAWogAkGIBmoQpQEgACACQQhqQcABEGcaIAJBgAtqJAALzQ0CE38IfiMAQYADayIBJA
    AgADQCOCIUIBR+QoCAgBBaBEAgABASCyABQeABakHoABByGiABQcgBaiAAKQMAIhggGEI/hyIZIBggGRAxIAEgASkDyAE
    iFEL//////////wODNwPYASABQdABaikDACIXQgaGIBRCOoiEIRUgF0I6iCEaIABBCGoiCyEFIAAhBkEBIQcDQCAHQQZP
    BEAgAEEYaiEMIABBKGohCyAAQRBqIQcgACkDMCEYQQQhBkEAIQkgAUGgAWohDUEDIQpBAiEIQQchBQJAAkADQCAFQQpLD
    QIgBiAIIAYgCEsbIQ4gBiAKIAYgCksbQQN0QWhqIQ8gAUGYAWogBUEDdCIQIABqQVBqKQMAIhQgFEI/hyAYIBhCP4ciGR
    AxIAVBAWoiEUEBdiESIA0pAwAhFyABKQOYASEUIAshAyAHIQQgBUF7aiITIQICQANAIAIgDkcEQCACQQdGDQIgAUGIAWo
    gBCkDACIWIBZCP4cgAykDACIWIBZCP4cQMSABKQOIASIWIBR8IhQgFlStIAFBkAFqKQMAIBd8fCEXIANBeGohAyAEQQhq
    IQQgAkEBaiECDAELCyABQdgBaiAQaiAUQgGGIhYgFXwiFUL//////////wODNwMAIAFB+ABqIAAgE0EDdGopAwAiGyAbQ
    j+HIBggGRAxIBUgFlStIBdCAYYgFEI/iIQgGnx8IhRCOochGiAUQgaGIBVCOoiEIRkgBUECaiEFIAFBgAFqKQMAIRcgAS
    kDeCEUIAshAyAJIQIDQCACIA9GBEAgAUHYAGogACASQQN0aikDACIVIBVCP4ciFiAVIBYQMSABQdgBaiARQQN0aiAUQgG
    GIhYgGXwiFSABKQNYfCIZQv//////////A4M3AwAgGSAVVK0gAUHgAGopAwAgFSAWVK0gF0IBhiAUQj+IhCAafHx8fCIU
    QjqHIRogFEIGhiAZQjqIhCEVIApBAmohCiAJQRBqIQkgCEECaiEIIAZBAWohBiAHQRBqIQcMAwsgAkEgRg0DIAFB6ABqI
    AIgDGopAwAiFSAVQj+HIAMpAwAiFSAVQj+HEDEgASkDaCIVIBR8IhQgFVStIAFB8ABqKQMAIBd8fCEXIANBeGohAyACQQ
    hqIQIMAAsACwtBB0EHQbSewAAQPAALQQdBB0HEnsAAEDwACyABQagBaiAAKQMoIhQgFEI/hyAYIBhCP4ciFBAxIAEgFSA
    BKQOoASIVQgGGIhl8IhdC//////////8DgzcDsAIgAUG4AWogGCAUIBggFBAxIAEgFyAZVK0gAUGwAWopAwBCAYYgFUI/
    iIQgGnx8IhhCBoYgF0I6iIQiFyABKQO4AXwiFEL//////////wODNwO4AiABIBQgF1StIAFBwAFqKQMAIBhCOod8fEIGh
    iAUQjqIhDcDwAIgAUHIAmogAUHYAWoQBSAAIAFByAJqEGsgAEECNgI4IAFBgANqJAAPCyABQcgAaiAAIAdBA3QiDGopAw
    AiFCAUQj+HIBggGRAxIAdBAWoiDUEBdiEOIAFB0ABqKQMAIRcgASkDSCEUIAghAiAGIQMgCiEEIAshCQNAIAJFBEAgAUH
    YAWogDGogFEIBhiIWIBV8IhVC//////////8DgzcDACABQShqIAAgDUEDdCIMaikDACIbIBtCP4cgGCAZEDEgFSAWVK0g
    F0IBhiAUQj+IhCAafHwiFEI6hyEaIBRCBoYgFUI6iIQhFiAHQQJqIQkgAUEwaikDACEXQQAhAiABKQMoIRQgBSEDIAshB
    ANAIAIgCGpFBEAgAUEIaiAAIA5BA3RqKQMAIhUgFUI/hyIbIBUgGxAxIAFB2AFqIAxqIBRCAYYiGyAWfCIVIAEpAwh8Ih
    ZC//////////8DgzcDACAWIBVUrSABQRBqKQMAIBUgG1StIBdCAYYgFEI/iIQgGnx8fHwiFEI6hyEaIBRCBoYgFkI6iIQ
    hFSAFQRBqIQUgCEEBaiEIIAZBEGohBiAKQQJqIQogCSEHDAQLIAIgB2oiDUEGTQRAIAFBGGogBCkDACIVIBVCP4cgAykD
    ACIVIBVCP4cQMSABKQMYIhUgFHwiFCAVVK0gAUEgaikDACAXfHwhFyADQXhqIQMgAkF/aiECIARBCGohBAwBCwsgDUEHQ
    aSewAAQPAALIARBBk0EQCABQThqIAkpAwAiFiAWQj+HIAMpAwAiFiAWQj+HEDEgASkDOCIWIBR8IhQgFlStIAFBQGspAw
    AgF3x8IRcgAkF/aiECIANBeGohAyAEQX9qIQQgCUEIaiEJDAELCwsgBEEHQZSewAAQPAAL7wwBBH8jAEHADWsiAiQAAkA
    gACgCgAYiA0EBRwRAIAEoAoAGIgRBAUYNAQJAAkACQAJAIARBA00EQCADQX5xQQJGDQEgAiAAEI4BIAJBgAJqEC8gAkGA
    BGoQLyACQYAGahAvIAJBgAhqIAAQjgEgAkGACmoQLyACIAEQGSACQYAIaiAAQYACaiIFEJYBIAJBgAhqEKwBIAJBgAJqI
    AJBgAhqEJIBIAJBgAJqIAEQGSACQYAIaiAFEJIBIAJBgAhqIABBgARqIgMQlgEgAkGACGoQrAEgAkGABmogAkGACGoQkg
    EgBEECRg0CIAJBwAxqIAFBgAVqEF4gAkGABmogAkHADGoQogEMAwsgAiAAEI4BIAJBgAJqEC8gAkGABGoQLyACQYAGahA
    vIAIgARAZAkACQCAEQQRGIgQNACAAKAKABkEERg0AIAJBgARqIABBgAJqEJIBIAJBgARqIAFBgAJqEBkMAQsgAkHADGpB
    OBByGiACQQE2AvgMIAJBgA1qQTgQchogAkG4DWpBATYCACACQYAIakE4EHIaIAJBATYCuAggAkHACGpBOBByGiACQfgIa
    kEBNgIAIAJBgApqIABBgANqIgMQXiACQYAIaiACQYAKahCQASACQYAKaiABQYADaiIFEF4gAkGACGogAkGACmoQDyACQc
    AMahCpASAERQRAIAJBgApqIAMQXiACQcAMaiACQYAKahCQASACQYAKaiABQYACahBeIAJBwAxqIAJBgApqEA8LIAAoAoA
    GQQRHBEAgAkGACmogAEGAAmoQXiACQcAMaiACQYAKahCQASACQYAKaiAFEF4gAkHADGogAkGACmoQDwsgAkGABGogAkHA
    DGogAkGACGoQoQEgAkGABGoQZgsgAkGACGogABCOASACQYAKaiABEI4BIAJBgAhqIABBgAJqIgQQlgEgAkGACGoQrAEgA
    kGACmogAUGAAmoiBRCWASACQYAKahCsASACQYACaiACQYAIahCSASACQYACaiACQYAKahAZIAJBgAhqIAQQkgEgAkGACG
    ogAEGABGoiAxCWASACQYAIahCsASACQYAKaiAFEJIBIAJBgApqIAFBgARqIgUQlgEgAkGACmoQrAEgAkGABmogAkGACGo
    QkgEgAkGABmogAkGACmoQGSACQYAIaiACEJIBIAJBgAhqECsgAkGACmogAkGABGoQkgEgAkGACmoQKyACQYACaiACQYAI
    ahCWASAEIAJBgAJqEJIBIAQgAkGACmoQlgEgAkGABmogAkGACmoQlgEgAkGABGogAkGACGoQlgEgAkGACGogABCSASACQ
    YAIaiADEJYBIAJBgAhqEKwBIAJBgApqIAEQkgEgAkGACmogBRCWASACQYAKahCsASACQYAIaiACQYAKahAZIAJBgARqIA
    JBgAhqEJYBIAJBgAhqIAMQkgEgAkGACGogBRAZIAJBgApqIAJBgAhqEJIBIAJBgApqECsgAyACQYAEahCSASADIAJBgAp
    qEJYBIAJBgAZqIAJBgApqEJYBIAJBgAhqEGYgBCACQYAIahCWAQwDCyAAIAEQBgwECyACQcAMaiABQYAFahBeIAJBgAxq
    IAJBwAxqQcAAEGcaIAJBgAZqIAJBgAxqEKMBCyACQYAGahBmIAJBgAhqIAIQkgEgAkGACGoQKyACQYACaiACQYAIahCWA
    SAFIAJBgAJqEJIBIAJBgARqIAJBgAhqEJIBIAJBgAhqIAAQkgEgAkGACGogAxCWASACQYAIahCsASACQYAKaiABEJIBIA
    JBgApqIAFBgARqEJYBIAJBgApqEKwBIAJBgAhqIAJBgApqEBkgAkGABGogAkGACGoQlgEgAkGACGogAxCSAQJAIARBAkc
    EQCACQcAMaiABQYAFahBeIAJBgAhqIAJBwAxqEKIBDAELIAJBwAxqIAFBgAVqEF4gAkGADGogAkHADGpBwAAQZxogAkGA
    CGogAkGADGoQowELIAJBgAhqEGYgAkGACmogAkGACGoQkgEgAkGACmoQKyADIAJBgARqEJIBIAMgAkGACmoQlgEgAkGAB
    mogAkGACmoQlgEgAkGACGoQZiAFIAJBgAhqEJYBCyACQYAGahCsASACQYAGahBmIAAgAhCSASAAIAJBgAZqEJYBIABBBT
    YCgAYgABCZAQwBCyAAIAEQbAsgAkHADWokAAuaCQIPfwt+IwBBwAJrIgIkACACQeAAakGgp8AAEF8gAEE4EHIhDCACQZg
    BakHwABByGiACQZACakEwEHIaIAwQdCACIAEpAwAiFEL9//P/z///+QF+Qv//////////A4MiETcDiAIgAkHQAGogEUIA
    IAIpA2AiGCAYQj+HIhoQMSAUIAIpA1AiEXwiFiARVK0gAkHYAGopAwAgFEI/h3x8IhRCOocgASkDCCIRQj+HfCARIBRCB
    oYgFkI6iIQiEXwiEiARVK18IRNBASEDAkADQAJAIANBB0YEQCACQZACaiEJIAJB6ABqIQpBByEEIAJB4ABqIQ0gAkGIAm
    ohDkEGIQ8MAQsgA0EBdiIAQQFqIQUgCiAAayEGIAkgAEEDdCIHayEAIAdBCGohCCACQUBrIANBA3QiBCACQeAAamopAwA
    iFiAWQj+HIhQgAikDiAIiESARQj+HEDEgAkHIAGopAwAgEiAVfCIRIBJUrSATIBd8fHwgESACKQNAfCITIBFUrXwhEiAD
    QQFqIQcDQCADIAVNBEAgAkGIAmogBGogE0L9//P/z///+QF+Qv//////////A4MiETcDACACQTBqIBFCACAYIBoQMSACQ
    SBqIBFCACAWIBQQMSACQZgBaiADQQR0aiIAIAJBKGopAwAiGzcDCCAAIAIpAyAiGTcDACACKQMwIhEgE3wiFiARVK0gAk
    E4aikDACASfHwiFEI6hyABIAdBA3RqKQMAIhFCP4d8IBEgFEIGhiAWQjqIhCIRfCISIBFUrXwhEyAVIBl8IhUgGVStIBc
    gG3x8IRcgCUEIaiEJIApBAWohCiAHIQMMAwsgBkEGSw0DIAJBEGogAkHgAGogCGopAwAgAkHgAGogAGopAwB9IhEgEUI/
    hyACQYgCaiAAaikDACACQYgCaiAIaikDAH0iESARQj+HEDEgAikDECIRIBN8IhMgEVStIAJBGGopAwAgEnx8IRIgBUEBa
    iEFIABBeGohACAGQX9qIQYgCEEIaiEIDAALAAsLA0ACQCAEQQ1HBEAgDyAEQQF2IgBrIQUgDiAAQQN0IgtrIRAgDSALay
    EIIBMgF3wgEiAVfCITIBJUrXwhEiAEQQFqIQdBMCEAIAkhBiAKIQMDQCAAIAtGDQIgBUEGTQRAIAIgAyALaikDACAAIAh
    qKQMAfSIRIBFCP4cgACAQaikDACAGIAtqKQMAfSIRIBFCP4cQMSACKQMAIhEgE3wiEyARVK0gAkEIaikDACASfHwhEiAF
    QX9qIQUgBkEIaiEGIANBCGohAyAAQXhqIQAMAQsLIAVBB0HknsAAEDwACyAMIBJC//////////8DgzcDMCACQcACaiQAD
    wsgBEEDdCAMakFIaiATQv//////////A4M3AwAgEkI6hyABIAdBA3RqKQMAIhFCP4d8IBEgEkIGhiATQjqIhCIRfCISIB
    FUrXwhEyAXIARBBHQgAmpBOGoiAEEIaikDAH0gFSAAKQMAIhFUrX0hFyAOQQhqIQ4gDUEIaiENIA9BAWohDyAVIBF9IRU
    gByEEDAALAAsgBkEHQdSewAAQPAAL+QkBBH8jAEGACWsiAiQAIAJBgAhqIAAQXiACIAJBgAhqEF4gAkGACGogAEGAAWoi
    BBBeIAJBgAFqIAJBgAhqEF4gAkGACGogARBeIAIgAkGACGoQDyACQYAIaiABQYABaiIFEF4gAkGAAWogAkGACGoQDyAAK
    AKABiEDAkACQCABKAKABkECRwRAIANBAkYNASACQYAIaiAAQYAFahBeIAJBgAJqIAJBgAhqEF4gAkGACGogAUGABWoQXi
    ACQYACaiACQYAIahAPDAILIANBAkYEQCACQYAIaiAAQYAFahBeIAJBgAdqIAJBgAhqQcAAEGcaIAJBgAZqIAJBgAdqEIU
    BIAJBgAhqIAFBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGABmogAkGAB2oQSCACQYAIakE4EHIaIAJBATYCuAggAkHA
    CGpBOBByIAJB+AhqQQE2AgAgAkGACGogAkGABmoQpQEQsgEgAkGAAmogAkGACGpBgAEQZxoMAgsgAkGACGogAEGABWoQX
    iACQYACaiACQYAIahBeIAJBgAhqIAFBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGAAmogAkGAB2oQoAEMAQsgAkGACG
    ogAUGABWoQXiACQYACaiACQYAIahBeIAJBgAhqIABBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGAAmogAkGAB2oQoAE
    LIAJBgAhqIAAQXiACQYADaiACQYAIahBeIAJBgAhqIAEQXiACQYAEaiACQYAIahBeIAJBgAhqIAQQXiACQYADaiACQYAI
    ahCVASACQYADahCoASACQYAIaiAFEF4gAkGABGogAkGACGoQlQEgAkGABGoQqAEgAkGABWogAkGAA2oQXiACQYAFaiACQ
    YAEahAPIAJBgAZqIAIQXiACQYAGaiACQYABahCVASACQYAGahA6IAJBgAVqIAJBgAZqEJUBIAJBgAhqIAAQXiACQYADai
    ACQYAIahCQASACQYAIaiAAQYAFaiIDEF4gAkGAA2ogAkGACGoQlQEgAkGAA2oQqAEgAkGACGogARBeIAJBgARqIAJBgAh
    qEJABIAJBgAhqIAFBgAVqIgEQXiACQYAEaiACQYAIahCVASACQYAEahCoASACQYAHaiACQYADahBeIAJBgAdqIAJBgARq
    EA8gAkGABmogAhCQASACQYAGaiACQYACahCVASACQYAGahA6IAJBgAdqIAJBgAZqEJUBIAJBgAhqIAQQXiACQYADaiACQ
    YAIahCQASACQYAIaiADEF4gAkGAA2ogAkGACGoQlQEgAkGAA2oQqAEgAkGACGogBRBeIAJBgARqIAJBgAhqEJABIAJBgA
    hqIAEQXiACQYAEaiACQYAIahCVASACQYAEahCoASACQYAIaiACQYADahBeIAJBgAhqIAJBgARqEA8gAkGABmogAkGAAWo
    QkAEgAkGABmogAkGAAmoQlQEgAkGABmoQOiACQYAIaiACQYAGahCVASACQYABahBVIAIgAkGAAWoQlQEgACACIAJBgAVq
    EKEBIAJBgAJqEFUgAkGAAmoQqAEgAEGAA2ogAkGAAmoQkAEgAEGAAmoQqQEgAkGACGoQqAEgAkGACGoQVSAAQYAEaiIBI
    AJBgAhqIAJBgAdqEKEBIAAQrAEgARCsASAAQQQ2AoAGIAJBgAlqJAALnwgBB38jAEGgC2siASQAIAFBCGpBoKfAABBfIA
    FBCGpBARCeAQNAIAJBMEYEQCABIAEpAzhCAYc3AzggAUEIakEBEJ4BIAFBCGpBARA7QQAhAiABQYABakE4EHIaIAFB4Ap
    qQTgQchogAUGACWpBOBByGiABQQE2ArgBIAFBwAFqQTgQciEEIAFB+AFqQQE2AgAgAUGAAmpBOBByGiABQbgCakEBNgIA
    IAFBwAJqQTgQchogAUH4AmpBATYCACABQYADakE4EHIaIAFBuANqQQE2AgAgAUHAA2pBOBByGiABQfgDakEBNgIAIAFBg
    ARqQTgQchogAUG4BGpBATYCACABQcAEakE4EHIaIAFB+ARqQQE2AgAgAUGABWpBOBByGiABQbgFakEBNgIAIAFBwAVqQT
    gQchogAUH4BWpBATYCACABQYAGakE4EHIaIAFBuAZqQQE2AgAgAUHABmpBOBByGiABQfgGakEBNgIAIAFBgAdqQTgQcho
    gAUG4B2pBATYCACABQcAHakE4EHIaIAFB+AdqQQE2AgAgAUGACGogAUHgCmpBOBBnGiABQbgIakEBNgIAIAFBwAhqIAFB
    gAlqQTgQZxogAUH4CGpBATYCACABQYAJakHnABByGiABQegJaiAAEIUBIAFB6AlqEEQgAUGoCmogAUEIahBfIAFBqApqE
    EQgAUGoCmoQKUEDaiIFQQJ2IgNBAWohBgJAAkACQAJAAkACQANAAkAgAiAGRgRAIAFBgAFqEGkgBCABQegJahClASABQe
    AKakE4EHIaIAFBATYCmAtBgHkhAgwBCyABQagKaiABQagKakEEEIwBIgcQngEgAUGoCmoQRCACQecARg0CIAFBgAlqIAJ
    qIAc6AAAgAUGoCmpBBBA7IAJBAWohAgwBCwsDQCACBEAgAUHgCmogAUGAAWogAmoiBEHAB2oQpQEgBEGACGoiBCABQeAK
    ahClASAEIAFB6AlqEEggAkFAayECDAELCyAFQZwDTw0BIAFBgAlqIANqLAAAIgJBD0sNAiABQUBrIAFBgAFqIAJBBnRqE
    IUBIANBf2ohAgNAIAJBf0YNBiABQUBrEAMgAUFAaxADIAFBQGsQAyABQUBrEAMgAkHmAEsNBCABQYAJaiACai0AACIDQQ
    9LDQUgAUFAayABQYABaiADQQZ0ahBIIAJBf2ohAgwACwALQecAQecAQYSjwAAQPAALIANB5wBBlKPAABA8AAsgAkEQQaS
    jwAAQPAALIAJB5wBBtKPAABA8AAsgA0EYdEEYdUEQQcSjwAAQPAALIAFBQGsQEiAAIAFBQGsQpQEgAUGgC2okAAUgAUEI
    aiACaiIDIANBCGopAwBCOYZCgICAgICAgIACgyADKQMAQgGHhDcDACACQQhqIQIMAQsLC8EHAhJ/BX4jAEGQAmsiBCQAI
    ABB8AAQciEPIARBMGpB4AEQchogBEEwaiEAAkADQCADQThGBEACQCAPIAQpAzAiGEL//////////wODNwMAIAFBCGohCS
    ACQQhqIQogAiEMIAEhDUF4IRBBASEGIBghFSAEQThqKQMAIhkhFwNAAkAgF0IGhiAVQjqIhCEWIBdCOochFyAGQQdGBEA
    gAUEIaiEMIAJBCGohDUEHIQBBBiEKDAELIAsgBkEBdiIFayEAIAwgBUEDdCIIayERIA0gCGshEiAEQTBqIAZBBHRqIgVB
    CGopAwAgGXwgBSkDACIVIBh8IhggFVStfCIZIBd8IBYgGHwiFSAYVK18IRcgCEFQaiETIAggEGohFCAGQQFqIQ5BACEDI
    AkhByAKIQUDQCADIBRGBEAgDyAGQQN0aiAVQv//////////A4M3AwAgDEEIaiEMIA1BCGohDSALQQFqIQsgEEF4aiEQIA
    4hBgwDCyADIBNGDQYgAEEGSw0DIARBEGogAyARaikDACAFIAhqKQMAfSIWIBZCP4cgByAIaikDACADIBJqKQMAfSIWIBZ
    CP4cQMSAEKQMQIhYgFXwiFSAWVK0gBEEYaikDACAXfHwhFyAAQX9qIQAgB0EIaiEHIAVBCGohBSADQXhqIQMMAAsACwsD
    QAJAIABBDUcEQCAKIABBAXYiBWshByACIAVBA3QiCWshCCABIAlrIQsgGSAAQQR0IARqQUBqIgVBCGopAwB9IBggBSkDA
    CIVVK19IhkgF3wgGCAVfSIYIBZ8IhcgGFStfCEVIABBAWohBkEwIQMgDCEFIA0hDgNAIAMgCUYNAiAHQQZNBEAgBCADIA
    hqKQMAIAkgDmopAwB9IhYgFkI/hyAFIAlqKQMAIAMgC2opAwB9IhYgFkI/hxAxIAQpAwAiFiAXfCIXIBZUrSAEQQhqKQM
    AIBV8fCEVIAdBf2ohByAFQQhqIQUgDkEIaiEOIANBeGohAwwBCwsgB0EHQYSewAAQPAALIA8gFjcDaCAEQZACaiQADwsg
    DyAAQQN0aiAXQv//////////A4M3AwAgFUIGhiAXQjqIhCEWIAJBCGohAiABQQhqIQEgCkEBaiEKIBVCOochFyAGIQAMA
    AsACwUgBEEgaiACIANqKQMAIhUgFUI/hyABIANqKQMAIhUgFUI/hxAxIAAgBEEoaikDADcDCCAAIAQpAyA3AwAgAEEQai
    EAIANBCGohAwwBCwsgAEEHQfSdwAAQPAALQQdBB0HkncAAEDwAC8sIAQV/IABBeGoiASAAQXxqKAIAIgNBeHEiAGohAgJ
    AAkAgA0EBcQ0AIANBA3FFDQEgASgCACIDIABqIQAgASADayIBQey4wQAoAgBGBEAgAigCBEEDcUEDRw0BQeS4wQAgADYC
    ACACIAIoAgRBfnE2AgQgASAAQQFyNgIEIAAgAWogADYCAA8LIAEgAxAVCwJAIAJBBGoiBCgCACIDQQJxBEAgBCADQX5xN
    gIAIAEgAEEBcjYCBCAAIAFqIAA2AgAMAQsCQCACQfC4wQAoAgBHBEBB7LjBACgCACACRg0BIAIgA0F4cSICEBUgASAAIA
    JqIgBBAXI2AgQgACABaiAANgIAIAFB7LjBACgCAEcNAkHkuMEAIAA2AgAPC0HwuMEAIAE2AgBB6LjBAEHouMEAKAIAIAB
    qIgA2AgAgASAAQQFyNgIEQey4wQAoAgAgAUYEQEHkuMEAQQA2AgBB7LjBAEEANgIAC0GMucEAKAIAIgIgAE8NAkHwuMEA
    KAIAIgBFDQICQEHouMEAKAIAIgNBKUkNAEH8uMEAIQEDQCABKAIAIgQgAE0EQCAEIAEoAgRqIABLDQILIAEoAggiAQ0AC
    wtBlLnBAAJ/Qf8fQYS5wQAoAgAiAEUNABpBACEBA0AgAUEBaiEBIAAoAggiAA0ACyABQf8fIAFB/x9LGws2AgAgAyACTQ
    0CQYy5wQBBfzYCAA8LQey4wQAgATYCAEHkuMEAQeS4wQAoAgAgAGoiADYCACABIABBAXI2AgQgACABaiAANgIADwtBlLn
    BAAJ/AkAgAEGAAk8EQEEfIQIgAUIANwIQIABB////B00EQCAAQQYgAEEIdmciAmtBH3F2QQFxIAJBAXRrQT5qIQILIAFB
    HGogAjYCACACQQJ0QeS3wQBqIQMCQAJAAkACQAJAQdi1wQAoAgAiBEEBIAJBH3F0IgVxBEAgAygCACIDQQRqKAIAQXhxI
    ABHDQEgAyECDAILQdi1wQAgBCAFcjYCACADIAE2AgAMAwsgAEEAQRkgAkEBdmtBH3EgAkEfRht0IQQDQCADIARBHXZBBH
    FqQRBqIgUoAgAiAkUNAiAEQQF0IQQgAiEDIAJBBGooAgBBeHEgAEcNAAsLIAIoAggiACABNgIMIAIgATYCCCABQRhqQQA
    2AgAgASACNgIMIAEgADYCCAwCCyAFIAE2AgALIAFBGGogAzYCACABIAE2AgwgASABNgIIC0GUucEAQZS5wQAoAgBBf2oi
    ADYCACAADQNBhLnBACgCACIADQFB/x8MAgsgAEEDdiICQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgNBASACdCICcQRAIAAoA
    ggMAQtB1LXBACACIANyNgIAIAALIQIgACABNgIIIAIgATYCDCABIAA2AgwgASACNgIIDwtBACEBA0AgAUEBaiEBIAAoAg
    giAA0ACyABQf8fIAFB/x9LGws2AgALC9AHAgp/An4jAEEwayIIJABBJyECAkAgADUCACIMQpDOAFQEQCAMIQ0MAQsDQCA
    IQQlqIAJqIgBBfGogDEKQzgCAIg1C8LF/fiAMfKciA0H//wNxQeQAbiIEQQF0QeaowABqLwAAOwAAIABBfmogBEGcf2wg
    A2pB//8DcUEBdEHmqMAAai8AADsAACACQXxqIQIgDEL/wdcvViANIQwNAAsLIA2nIgBB4wBKBEAgAkF+aiICIAhBCWpqI
    A2nIgNB//8DcUHkAG4iAEGcf2wgA2pB//8DcUEBdEHmqMAAai8AADsAAAsCQCAAQQpOBEAgAkF+aiIFIAhBCWpqIABBAX
    RB5qjAAGovAAA7AAAMAQsgAkF/aiIFIAhBCWpqIABBMGo6AAALQScgBWshA0EBIQJBK0GAgMQAIAEoAgAiAEEBcSIGGyE
    EIABBHXRBH3VB9KrAAHEhByAIQQlqIAVqIQUCQCABKAIIQQFHBEAgASAEIAcQUw0BIAEoAhggBSADIAFBHGooAgAoAgwR
    BQAhAgwBCyABQQxqKAIAIgkgAyAGaiIGTQRAIAEgBCAHEFMNASABKAIYIAUgAyABQRxqKAIAKAIMEQUAIQIMAQsCQAJAA
    kACQCAAQQhxBEAgASgCBCEKIAFBMDYCBCABLQAgIQsgAUEBOgAgIAEgBCAHEFMNBUEAIQIgCSAGayIAIQRBASABLQAgIg
    cgB0EDRhtBA3FBAWsOAwIBAgMLQQAhAiAJIAZrIgAhCQJAAkACQEEBIAEtACAiBiAGQQNGG0EDcUEBaw4DAQABAgsgAEE
    BdiECIABBAWpBAXYhCQwBC0EAIQkgACECCyACQQFqIQIDQCACQX9qIgJFDQQgASgCGCABKAIEIAEoAhwoAhARAwBFDQAL
    QQEhAgwECyAAQQF2IQIgAEEBakEBdiEEDAELQQAhBCAAIQILIAJBAWohAgJAA0AgAkF/aiICRQ0BIAEoAhggASgCBCABK
    AIcKAIQEQMARQ0AC0EBIQIMAgsgASgCBCEHQQEhAiABKAIYIAUgAyABKAIcKAIMEQUADQEgBEEBaiEAIAEoAhwhAyABKA
    IYIQQDQCAAQX9qIgAEQCAEIAcgAygCEBEDAEUNAQwDCwsgASALOgAgIAEgCjYCBEEAIQIMAQsgASgCBCEGQQEhAiABIAQ
    gBxBTDQAgASgCGCAFIAMgASgCHCgCDBEFAA0AIAlBAWohACABKAIcIQMgASgCGCEBA0AgAEF/aiIARQRAQQAhAgwCCyAB
    IAYgAygCEBEDAEUNAAsLIAhBMGokACACC7gGAQV/IwBBgAhrIgIkACACIAAQXiACIAEQDyACQYABaiAAQYABaiIDEF4gA
    kGAAWogAUGAAWoiBRAPIAJBgAJqIABBgAJqIgQQXiACQYACaiABQYACaiIGEA8gAkGAA2ogABBeIAJBgANqIAMQlQEgAk
    GAA2oQqAEgAkGABGogARBeIAJBgARqIAUQlQEgAkGABGoQqAEgAkGAA2ogAkGABGoQDyACQYAEaiACEJABIAJBgARqIAJ
    BgAFqEJUBIAJBgANqIAJBgARqEH0gAkGAA2oQqAEgAkGABGogAxCQASACQYAEaiAEEJUBIAJBgARqEKgBIAJBgAVqIAUQ
    XiACQYAFaiAGEJUBIAJBgAVqEKgBIAJBgARqIAJBgAVqEA8gAkGABWogAkGAAWoQkAEgAkGABWogAkGAAmoQlQEgAkGAB
    GogAkGABWoQfSACQYAEahCoASACQYAFaiAAEJABIAJBgAVqIAQQlQEgAkGABWoQqAEgAkGABmogARBeIAJBgAZqIAYQlQ
    EgAkGABmoQqAEgAkGABWogAkGABmoQDyACQYAGaiACEJABIAJBgAZqIAJBgAJqEJUBIAJBgAZqIAJBgAVqELUBIAJBgAZ
    qEKgBIAJBgAVqIAIQkAEgAkGABWogAhCVASACIAJBgAVqEJUBIAIQqAEgAkGAAmpBDBCfASACQYACahBVIAJBgAJqEKgB
    IAJBgAdqIAJBgAFqEF4gAkGAB2ogAkGAAmoQlQEgAkGAB2oQqAEgAkGAAWogAkGAAmoQfSACQYABahCoASACQYAGakEME
    J8BIAJBgAZqEFUgAkGABmoQqAEgAkGABWogAkGABmoQkAEgAkGABWogAkGABGoQDyACQYACaiACQYADahCQASACQYACai
    ACQYABahAPIAJBgAVqIAJBgAJqELUBIAJBgAZqIAIQDyACQYABaiACQYAHahAPIAJBgAZqIAJBgAFqEJUBIAIgAkGAA2o
    QDyACQYAHaiACQYAEahAPIAJBgAdqIAIQlQEgACACQYAFahCQASAAEKgBIAMgAkGABmoQkAEgAxCoASAEIAJBgAdqEJAB
    IAQQqAEgAkGACGokAAv2BQEFfyMAQYAEayICJAAgAiAAEIUBIAIgARBIIAJBQGsgAEFAayIDEIUBIAJBQGsgAUFAayIFE
    EggAkGAAWogAEGAAWoiBBCFASACQYABaiABQYABaiIGEEggAkHAAWogABCFASACQcABaiADEHggAkHAAWoQRCACQYACai
    ABEIUBIAJBgAJqIAUQeCACQYACahBEIAJBwAFqIAJBgAJqEEggAkGAAmogAhClASACQYACaiACQUBrEHggAkHAAWogAkG
    AAmoQgAEgAkHAAWoQRCACQYACaiADEKUBIAJBgAJqIAQQeCACQYACahBEIAJBwAJqIAUQhQEgAkHAAmogBhB4IAJBwAJq
    EEQgAkGAAmogAkHAAmoQSCACQcACaiACQUBrEKUBIAJBwAJqIAJBgAFqEHggAkGAAmogAkHAAmoQgAEgAkGAAmoQRCACQ
    cACaiAAEKUBIAJBwAJqIAQQeCACQcACahBEIAJBgANqIAEQhQEgAkGAA2ogBhB4IAJBgANqEEQgAkHAAmogAkGAA2oQSC
    ACQYADaiACEKUBIAJBgANqIAJBgAFqEHggAkGAA2ogAkHAAmoQswEgAkGAA2oQRCACQcACaiACEKUBIAJBwAJqIAIQeCA
    CIAJBwAJqEHggAhBEIAJBgAFqQQwQUiACQcADaiACQUBrEIUBIAJBwANqIAJBgAFqEHggAkHAA2oQRCACQUBrIAJBgAFq
    EIABIAJBQGsQRCACQYADakEMEFIgAkHAAmogAkGAA2oQpQEgAkHAAmogAkGAAmoQSCACQYABaiACQcABahClASACQYABa
    iACQUBrEEggAkHAAmogAkGAAWoQswEgAkGAA2ogAhBIIAJBQGsgAkHAA2oQSCACQYADaiACQUBrEHggAiACQcABahBIIA
    JBwANqIAJBgAJqEEggAkHAA2ogAhB4IAAgAkHAAmoQpQEgABBEIAMgAkGAA2oQpQEgAxBEIAQgAkHAA2oQpQEgBBBEIAJ
    BgARqJAALxQUBBH8jAEHwEmsiACQAIAAQOEF/IQEgABCIAUUEQCAAQYADakE4EHIaIABBuANqQTgQchogAEG4A2ogAEGA
    A2oQVCAAQfAKakG4gMAAEF8gAEHwDWpB8IDAABBfIABB8ANqIABB8ApqIABB8A1qEEkgAEHwBGpBOBByGiAAQQE2AqgFI
    ABBsAVqQTgQchogAEHoBWpBATYCACAAQfAFakE4EHIaIABBATYCqAYgAEGwBmpBOBByGiAAQegGakEBNgIAIABB8AZqQT
    gQchogAEEBNgKoByAAQbAHakE4EHIaIABB6AdqQQE2AgBBf2ohAyAAQfAHahAqIABB8AdqIAAQfiAAQfAKahAqIABB8Ap
    qIABB8AdqEH4gAEHwDWoQKiAAQfANaiAAQfAHahB+IABB8A1qEJwBAkACQAJAA0AgAiEBIANBAkkNAyAAQfAKaiAAQfAE
    aiAAQfAFaiAAQfAGahAlIAFBxABNBEAgAEHwEGogAEHwBGogAEHwBWogAEHwBmoQRiABQQh0QdCrwABqIABB8BBqEJIBI
    AFBAWohAgJAAkAgAEG4A2ogA0F/aiIDEFcgAEGAA2ogAxBXa0EBag4DAQMAAwsgAEHwCmogAEHwB2ogAEHwBGogAEHwBW
    ogAEHwBmoQHiABQcMASw0DIABB8BBqIABB8ARqIABB8AVqIABB8AZqEEYgAkEIdEHQq8AAaiAAQfAQahCSASABQQJqIQI
    MAgsgAEHwCmogAEHwDWogAEHwBGogAEHwBWogAEHwBmoQHiABQcMASw0DIABB8BBqIABB8ARqIABB8AVqIABB8AZqEEYg
    AkEIdEHQq8AAaiAAQfAQahCSASABQQJqIQIMAQsLIAFBxQBBvIHAABA8AAtBxQBBxQBBzIHAABA8AAtBxQBBxQBB3IHAA
    BA8AAtBACEBCyAAQfASaiQAIAEL8gQBBH8jAEGADGsiAiQAIAIgABCOASACQYACahAvIAJBgARqIABBgAJqIgMQjgEgAk
    GABmoQLyACQYAIaiAAEI4BIAJBgApqIAEQjgEgAiABEBkgAkGABGogAUGAAmoiBBAZIAJBgAhqIAMQlgEgAkGACmogBBC
    WASACQYAIahCsASACQYAKahCsASACQYACaiACQYAIahCSASACQYACaiACQYAKahAZIAJBgAhqIAMQkgEgAkGACGogAEGA
    BGoiBRCWASACQYAKaiAEEJIBIAJBgApqIAFBgARqIgQQlgEgAkGACGoQrAEgAkGACmoQrAEgAkGABmogAkGACGoQkgEgA
    kGABmogAkGACmoQGSACQYAIaiACEJIBIAJBgAhqECsgAkGACmogAkGABGoQkgEgAkGACmoQKyACQYACaiACQYAIahCWAS
    ADIAJBgAJqEJIBIAMgAkGACmoQlgEgAkGABmogAkGACmoQlgEgAkGABGogAkGACGoQlgEgAkGACGogABCSASACQYAIaiA
    FEJYBIAJBgAhqEKwBIAJBgApqIAEQkgEgAkGACmogBBCWASACQYAKahCsASACQYAIaiACQYAKahAZIAJBgARqIAJBgAhq
    EJYBIAJBgAhqIAUQkgEgAkGACGogBBAZIAJBgApqIAJBgAhqEJIBIAJBgApqECsgBSACQYAEahCSASAFIAJBgApqEJYBI
    AJBgAZqIAJBgApqEJYBIAJBgAhqEGYgAyACQYAIahCWASACQYAGahCsASACQYAGahBmIAAgAhCSASAAIAJBgAZqEJYBIA
    BBBTYCgAYgABCZASACQYAMaiQAC68EAQV/IwBBkAZrIgIkACAAQUBrIQQCQCABQfgAaigCACABKAI4aqwgAEH4AGooAgA
    iAyAAKAI4IgVqrH5CgICAEFMNACAFQQJOBH8gABASIAAoAngFIAMLQQJIDQAgBBASCyACQaCnwAAQX0EAIQMgAkE4akHw
    ABByGiABQUBrIQUDQCADQThGBEAgAkHwAGohBkEAIQMDQCADQThGRQRAIAMgBmogAiADaikDADcDACADQQhqIQMMAQsLI
    AJBqAFqIAAQXyACQeABaiABEF8gAkGYAmogACABEAggAkGIA2ogBCAFEAggAkGoAWogBBBhIAJBqAFqEEQgAkHgAWogBR
    BhIAJB4AFqEEQgAkH4A2ogAkGoAWogAkHgAWoQCEEAIQMgAkHoBGpB8AAQchoDQCADQfAARkUEQCACQegEaiADaiACQZg
    CaiADaikDADcDACADQQhqIQMMAQsLIAJB6ARqIAJBiANqEGVBACEDA0AgA0HwAEZFBEAgAkGIA2ogA2oiASACQThqIANq
    KQMAIAEpAwB9NwMAIANBCGohAwwBCwsgAkGYAmogAkGIA2oQZSACQZgCahBFIAJB+ANqIAJB6ARqEGQgAkH4A2oQRSACQ
    dgFaiACQZgCahAFIAAgAkHYBWoQayAAQQM2AjggAkHYBWogAkH4A2oQBSAEIAJB2AVqEGsgAEECNgJ4IAJBkAZqJAAFIA
    JBOGogA2pCADcDACADQQhqIQMMAQsLC5QEAQF/IwBB0CJrIgMkACADQcAWakG4gMAAEF8gA0HIHGpB8IDAABBfIANBCGo
    gA0HAFmogA0HIHGoQSSADQYgBakE4EHIaIANBwAFqQTgQchogA0H4AWoQKgJAIAIQhAFFBEAgA0H4BGoQKiADQfgEaiAB
    EH4gA0H4BGoQSiADQfgHahBLIANB+AdqIAIQfyADQfgHahBHIANByBxqIANB+AdqEIUBIANBuAlqIANByBxqEIUBIANBy
    BxqIANBuAhqEIUBIANB+AlqIANByBxqEIUBIANBuApqECogA0G4DWoQYCADQbgKaiADQfgEahB+IANBwBNqECogA0HAE2
    ogA0H4BGoQfiADQcATahCcASADQcABaiADQYgBahBUQX9qIQIDQCACQQFNBEAgA0G4DWoQkwEgACADQbgNakGIBhBnGgw
    DBSADQbgNahAbIANBwBZqIANBuApqIANBuAlqIANB+AlqEBcCQAJAAkAgA0HAAWogAkF/aiICEFcgA0GIAWogAhBXa0EB
    ag4DAQIAAgsgA0HIHGogA0G4CmogA0H4BGogA0G4CWogA0H4CWoQFiADQcAWaiADQcgcahAGDAELIANByBxqIANBuApqI
    ANBwBNqIANBuAlqIANB+AlqEBYgA0HAFmogA0HIHGoQBgsgA0G4DWogA0HAFmoQBAwBCwALAAsgABBgCyADQdAiaiQAC8
    MDARV/A0AgAUHAAUYEQAJAIABBKGohCyAAQRRqKAIAIgwhCCAAQRBqKAIAIg0hAyAAQQxqKAIAIg4hAiAAKAIIIg8hASA
    AQRhqKAIAIhAhCiAAQRxqKAIAIhEhBCAAQSBqKAIAIhIhByAAQSRqKAIAIhMhBgNAIAchCSAEIQcgCiEEIAVBgAJGDQEg
    AiADcSEUIAIgA3MhFSAFIAtqKAIAIAVB9J7AAGooAgAgBEEadyAEQRV3cyAEQQd3cyAGaiAJIARBf3NxIAQgB3FyampqI
    gYgCGohCiAFQQRqIQUgAyEIIAIhAyABIQIgAUEedyABQRN3cyABQQp3cyAUIAEgFXFzaiAGaiEBIAkhBgwACwALBSAAIA
    FqIgNB6ABqIANBzABqKAIAIANBKGooAgAgA0EsaigCACICQRl3IAJBDndzIAJBA3ZzIANB4ABqKAIAIgJBD3cgAkENd3M
    gAkEKdnNqamo2AgAgAUEEaiEBDAELCyAAIAYgE2o2AiQgACAJIBJqNgIgIAAgByARajYCHCAAIAQgEGo2AhggACAIIAxq
    NgIUIAAgAyANajYCECAAIAIgDmo2AgwgACABIA9qNgIIC9YDAgZ/An4jAEHwAGsiASQAIAFBoKfAABBfIAFBOGogARBfI
    AAQRAJAAkACQCABAn8gACgCOCICQRBMBEAgAkF/ahA5DAELIAEpAzAiCEIBfCIHIAhUDQEgACkDMCIIQoCAgICAgICAgH
    9RQQAgB0J/URsNAiABQThqIAggB3+nECghByABIAEpA2ggB0I6hnw3A2ggACABQThqEGIgABBEQQILIgMQLSAAQQhqIQQ
    DQCADRQ0DIAEgASkDCEI5hkKAgICAgICAgAKDIAEpAwBCAYeEIgc3AwAgASAAKQMAIAd9IgdC//////////8DgzcDOEEA
    IQIDQCAHQjqHIQcgAkEoRkUEQCABIAJqIgVBCGoiBiAFQRBqKQMAQjmGQoCAgICAgICAAoMgBikDAEIBh4QiCDcDACABI
    AJqQUBrIAIgBGopAwAgCH0gB3wiB0L//////////wODNwMAIAJBCGohAgwBCwsgASABKQMwQgGHIgg3AzAgASAAKQMwIA
    h9IAd8Igc3A2ggACABQThqIAdCP4enQQFqEE8gA0F/aiEDDAALAAtBoKLAAEEZQbyiwAAQWwALQdCiwABBH0G8osAAEFs
    ACyAAQQE2AjggAUHwAGokAAuhAwEBfyMAQZADayIGJAAgBkEIakHAABByGiAGQcgAakGoAhByGiAGQcgAahBDA0AgAQRA
    IAZByABqQQAQPiABQX9qIQEMAQUCQCACBEAgBkHIAGogAiADEHoLIAQEQCAGQcgAaiAEIAUQegsgBkGIA2pCADcDACAGQ
    YADakIANwMAIAZB+AJqQgA3AwAgBkIANwPwAiAGKAJIIQEgBigCTCECIAZByABqQYABED4DQCAGKAJIQf8DcUHAA0ZFBE
    AgBkHIAGpBABA+DAELCyAGQawBaiABNgIAIAZBqAFqIAI2AgAgBkHIAGoQEUEAIQJBACEBA0AgAUEgRkUEQCAGQfACaiA
    BaiABQXxxIAZqQdAAaigCACACQX9zQRhxdjoAACACQQhqIQIgAUEBaiEBDAELCyAGQcgAahBDQQAhAQNAIAFBIEZFBEAg
    BkEIaiABaiAGQfACaiABai0AADoAACABQQFqIQEMAQsLQQAhAQNAIAFBIEYNASAAIAFqIAZBCGogAWotAAA6AAAgAUEBa
    iEBDAALAAsLCyAGQZADaiQAC6EDAQN/IwBBgAZrIgEkACABIABBgAFqIgMQXiABQYABaiADEF4gAUGAAWoQMiABQYACai
    ABEF4gAUGAAmogAEGAAmoiAhAPIAFBgANqIAIQXiABQYADahAyIAIgAUGAAWoQkAEgAiABQYABahCVASACEKgBIAIQpwE
    gAhCnASACEKgBIAFBgANqQQwQnwEgAUGAA2oQVSABQYADahCoASABQYAEaiABQYADahBeIAFBgARqIAIQDyABQYAFaiAB
    QYABahBeIAFBgAVqIAFBgANqEJUBIAFBgAVqEKgBIAIgAUGAAmoQDyABQYACaiABQYADahCQASABQYACaiABQYADahCVA
    SABQYADaiABQYACahCVASABQYADahCoASABQYABaiABQYADahB9IAFBgAFqEKgBIAFBgAVqIAFBgAFqEA8gAUGABWogAU
    GABGoQlQEgAUGAAmogABCQASABQYACaiABEA8gACABQYABahCQASAAEKgBIAAgAUGAAmoQDyAAEKcBIAAQqAEgAyABQYA
    FahCQASADEKgBIAFBgAZqJAALhQMBBH8CQAJAIAFBgAJPBEAgAEEYaigCACEEAkACQCAAIAAoAgwiAkYEQCAAQRRBECAA
    QRRqIgIoAgAiAxtqKAIAIgENAUEAIQIMAgsgACgCCCIBIAI2AgwgAiABNgIIDAELIAIgAEEQaiADGyEDA0AgAyEFIAEiA
    kEUaiIDKAIAIgFFBEAgAkEQaiEDIAIoAhAhAQsgAQ0ACyAFQQA2AgALIARFDQIgACAAQRxqKAIAQQJ0QeS3wQBqIgEoAg
    BHBEAgBEEQQRQgBCgCECAARhtqIAI2AgAgAkUNAwwCCyABIAI2AgAgAg0BQdi1wQBB2LXBACgCAEF+IAAoAhx3cTYCAA8
    LIABBDGooAgAiAiAAQQhqKAIAIgBHBEAgACACNgIMIAIgADYCCA8LQdS1wQBB1LXBACgCAEF+IAFBA3Z3cTYCAAwBCyAC
    IAQ2AhggACgCECIBBEAgAiABNgIQIAEgAjYCGAsgAEEUaigCACIARQ0AIAJBFGogADYCACAAIAI2AhgLC7MCAQF/IwBBg
    AtrIgUkACAFEC8gBUGAAmoQLyAFQYAEahAvIAVBgAZqQTgQchogBUEBNgK4BiAFQcAGakE4EHIaIAVB+AZqQQE2AgAgBU
    GAB2pBOBByGiAFQQE2ArgHIAVBwAdqQTgQchogBUH4B2pBATYCACAFQYAIakE4EHIaIAVBATYCuAggBUHACGpBOBByGiA
    FQfgIakEBNgIAIAEgAiAFQYAGaiAFQYAHaiAFQYAIahAeIAVBgAhqIAMQoAEgBUGABmogBBCgASAFQYAJaiAFQYAGaiAF
    QYAHahCRASAFIAVBgAlqEJIBIAVBgAlqIAVBgAhqEJsBIAVBgARqIAVBgAlqEJIBIAVBgARqEGYgACAFIAVBgAJqIAVBg
    ARqEHYgAEEDNgKABiAFQYALaiQAC7ECAQF/IwBBgAtrIgQkACAEEC8gBEGAAmoQLyAEQYAEahAvIARBgAZqQTgQchogBE
    EBNgK4BiAEQcAGakE4EHIaIARB+AZqQQE2AgAgBEGAB2pBOBByGiAEQQE2ArgHIARBwAdqQTgQchogBEH4B2pBATYCACA
    EQYAIakE4EHIaIARBATYCuAggBEHACGpBOBByGiAEQfgIakEBNgIAIAEgBEGABmogBEGAB2ogBEGACGoQJSAEQYAIaiAC
    EKABIARBgAZqIAMQoAEgBEGACWogBEGABmogBEGAB2oQkQEgBCAEQYAJahCSASAEQYAJaiAEQYAIahCbASAEQYAEaiAEQ
    YAJahCSASAEQYAEahBmIAAgBCAEQYACaiAEQYAEahB2IABBAzYCgAYgBEGAC2okAAvJAgEDfyMAQcACayIBJAAgASAAQU
    BrIgMQhQEgARADIAFBQGsgAxCFASABQUBrIABBgAFqIgIQSCABQYABaiACEIUBIAFBgAFqEAMgAiABEKUBIAIgARB4IAI
    QRCACEE4gAhBOIAIQRCABQYABakEMEFIgAUHAAWogAUGAAWoQhQEgAUHAAWogAhBIIAFBgAJqIAEQhQEgAUGAAmogAUGA
    AWoQeCABQYACahBEIAIgAUFAaxBIIAFBQGsgAUGAAWoQpQEgAUFAayABQYABahB4IAFBgAFqIAFBQGsQeCABIAFBgAFqE
    IABIAEQRCABQYACaiABEEggAUGAAmogAUHAAWoQeCABQUBrIAAQpQEgAUFAayADEEggACABEKUBIAAQRCAAIAFBQGsQSC
    AAEE4gABBEIAMgAUGAAmoQpQEgAxBEIAFBwAJqJAALrQIBA38jAEGABGsiAiQAIAIgABBeIAJBgAFqIABBgAFqIgMQXiA
    CQYACakE4EHIaIAJBATYCuAIgAkHAAmpBOBByGiACQfgCakEBNgIAIAJBgANqIAMQXiACIAEQDyACQYABaiABQYABaiIE
    EA8gAkGAAmogBBCQASACQYACaiABEJUBIAJBgANqIAAQlQEgAkGAAmoQqAEgAkGAA2oQqAEgAkGAA2ogAkGAAmoQDyACQ
    YACaiACEJABIAJBgAJqEDogAkGAA2ogAkGAAmoQlQEgAkGAA2oQqAEgAkGAAmogAkGAAWoQkAEgAkGAAmoQOiADIAJBgA
    NqEJABIAMgAkGAAmoQlQEgAkGAAWoQVSAAIAJBgAFqEJABIAAgAhCVASAAEKwBIAJBgARqJAALvQIBA38jAEGACGsiASQ
    AIAEgABCOASABQYACaiAAQYAEaiICEI4BIAFBgARqIABBgAJqIgMQjgEgAUGABmoQLyAAECIgAUGABmogABCSASABQYAG
    aiAAEJYBIAAgAUGABmoQlgEgABCsASABELYBIAEQrwEgACABEJYBIAFBgAJqECIgAUGAAmoQZiABQYAGaiABQYACahCSA
    SABQYAGaiABQYACahCWASABQYACaiABQYAGahCWASABQYACahCsASABQYAEahAiIAFBgAZqIAFBgARqEJIBIAFBgAZqIA
    FBgARqEJYBIAFBgARqIAFBgAZqEJYBIAFBgARqEKwBIAMQrgEgAxCvASACELYBIAIQrwEgAyABQYACahCWASACIAFBgAR
    qEJYBIABBBTYCgAYgABCaASABQYAIaiQAC7ICAQN/IwBBgAhrIgEkACAAKAKABkEBRwRAIAEgABCOASABQYACaiAAQYAC
    aiIDEI4BIAFBgARqIABBgARqIgIQjgEgAUGABmogABCOASABECIgAUGAAmogAhAZIAFBgAJqEK8BIAFBgAJqEKwBIAFBg
    ARqECIgAUGABmogAxAZIAFBgAZqEK8BIAIgABCWASACIAMQlgEgAhCsASACECIgACABEJIBIAEgAUGAAmoQlgEgARCsAS
    ABIAFBgARqEJYBIAEgAUGABmoQlgEgARCsASABECsgAUGAAmoQZiABQYAEahBmIAAgAUGAAmoQlgEgAyABQYAEahCSASA
    DIAFBgAZqEJYBIAIgARCWASAAQQRBBSAAKAKABkF+cUECRhs2AoAGIAAQmQELIAFBgAhqJAALigIBAn8jAEHgAWsiAiQA
    IAAQRCACQQhqQTAQchogAkIBNwMAIAJBOGogABBfIAJB8ABqIAEQXyACQagBakE4EHIaIAAQdANAIAJBOGogAkHwAGoQN
    UF/TARAA0ACQCADQQBMDQAgAkHwAGpBARA7IAJBARA7IAJBqAFqIAJBOGoQayACQagBaiACQfAAahBiIAJBqAFqEEQgAk
    E4aiACQagBaiACKQPYAUI/h6dBAWoiARBPIAJBqAFqIAAQayACQagBaiACEGEgAkGoAWoQRCAAIAJBqAFqIAEQTyADQX9
    qIQMMAQsLBSACQQEQLSACQfAAakEBEC0gA0EBaiEDDAELCyACQeABaiQAC54CAQF/IwBBgA1rIgMkACADIAEQaiADEJkB
    IANBiAZqIAIQXyADQYgGahBEIANBwAZqIANBiAZqEF8gA0HABmpBAxAoGiADQcAGahBEIANB+AZqIAMQagJAIANBwAZqE
    FpFBEAgA0HABmoQKUF/aiECA0AgAkEBTQRAIANB+AZqEJoBDAMLIANB+AZqEBoCQAJAIANBwAZqIAJBf2oiAhBXIANBiA
    ZqIAIQV2tBAWoOAwECAAILIANB+AZqIAMQDgwBCyADEJMBIANB+AZqIAMQDiADEJMBDAALAAsgA0H4BmoQsAEgA0H4B2o
    QqQEgA0H4CGoQrQEgA0H4CmoQrQEgA0EBNgL4DAsgACADQfgGakGIBhBnGiADQYANaiQAC5ACAQJ/IwBBgAJrIgUkACAF
    QYABaiAAEF4gAiAFQYABahCQASAFQYABaiAAQYABahBeIAQgBUGAAWoQkAEgBUGAAWogAEGAAmoiBhBeIAUgBUGAAWoQX
    iAFQYABaiAGEF4gAyAFQYABahCQASAFQYABaiABQYABaiIGEF4gBSAFQYABahAPIAVBgAFqIAEQXiADIAVBgAFqEA8gAi
    ADEH0gAhCoASAEIAUQfSAEEKgBIAUgAhCQASACEFUgAhCoASAFQYABaiAGEF4gBSAFQYABahAPIAMgBBCQASAFQYABaiA
    BEF4gAyAFQYABahAPIAMgBRB9IAMQqAEgBBA6IAQQqAEgACABEAsgBUGAAmokAAvkAQECfyMAQcABayIDJAAgAxBLIAAg
    ASACQR91IgQgAnMgBEF/c2pBAm0iAkF/akEfdhBtIAAgAUHAAWogAkEBc0F/akEfdhBtIAAgAUGAA2ogAkECc0F/akEfd
    hBtIAAgAUHABGogAkEDc0F/akEfdhBtIAAgAUGABmogAkEEc0F/akEfdhBtIAAgAUHAB2ogAkEFc0F/akEfdhBtIAAgAU
    GACWogAkEGc0F/akEfdhBtIAAgAUHACmogAkEHc0F/akEfdhBtIAMgABB/IAMQpgEgACADIARBAXEQbSADQcABaiQAC+Q
    BAQJ/IwBBgANrIgMkACADECogACABIAJBH3UiBCACcyAEQX9zakECbSICQX9qQR92EG8gACABQYADaiACQQFzQX9qQR92
    EG8gACABQYAGaiACQQJzQX9qQR92EG8gACABQYAJaiACQQNzQX9qQR92EG8gACABQYAMaiACQQRzQX9qQR92EG8gACABQ
    YAPaiACQQVzQX9qQR92EG8gACABQYASaiACQQZzQX9qQR92EG8gACABQYAVaiACQQdzQX9qQR92EG8gAyAAEH4gAxCcAS
    AAIAMgBEEBcRBvIANBgANqJAALvAEBAn8jAEGwAWsiAiQAIAJBMBByIQIDQCADQTBGBEACQCABQTBqIQEgAkEwaiACEHV
    BACEDA0AgA0EwRg0BIAIgA2ogASADai0AADoAACADQQFqIQMMAAsACwUgAiADaiABIANqLQAAOgAAIANBAWohAwwBCwsg
    AkHwAGogAhB1IABBOBByIgBBATYCOCAAQUBrQTgQciAAQfgAakEBNgIAIAAgAkHwAGoQpQEgAkEwahClASACQbABaiQAC
    9QBAQJ/IwBBgANrIgEkACABIAAQXiABQYABaiAAQYABaiICEF4gAUGAAmogABBeIAFBgAJqIAIQDyABIAIQlQEgAUGAAW
    oQVSABQYABaiAAEJUBIAEQqAEgAUGAAWoQqAEgACABEJABIAAgAUGAAWoQDyABQYABaiABQYACahCQASABQYABahBVIAF
    BgAFqIAFBgAJqEJUBIAFBgAFqEKgBIAFBgAFqEDogACABQYABahCVASABQYACahCnASACIAFBgAJqEJABIAAQrAEgAUGA
    A2okAAvEAQEBfyMAQYADayIDJAAgA0EIaiABEIUBAkAgAkUEQCADQQhqEAcMAQsgA0EIaiACEKUBCyADQcgAakHYo8AAE
    F8gA0GAAWogA0HIAGoQiwEgA0HAAWogA0EIahCFASADQcABahADIANBwAFqIAEQSCAAIAEQhQEgACADQQhqEEggA0GAAm
    ogA0HAAWoQhQEgABBYIQEgA0HAAmogABCFASADQcACahBBIANBwAJqEEQgACADQcACaiABEHkgA0GAA2okAAufAQEBfyM
    AQfAAayICJAAgAiABEF9BACEBIAJBOGpBOBByGiAAEEQCQCAAIAIQNUEASA0AA0AgAkEBEC0gAUEBaiEBIAAgAhA1QX9K
    DQALA0AgAUEATA0BIAJBARA7IAJBOGogABBrIAJBOGogAhBiIAJBOGoQRCAAIAJBOGogAikDaEI/h6dBAWoQTyABQX9qI
    QEMAAsACyACQfAAaiQAC7IBAQF/IwBBgAJrIgQkACAEQYABaiAAEF4gAyAEQYABahCQASAEQYABaiAAQYABahBeIAQgBE
    GAAWoQXiAEQYABaiAAQYACahBeIAIgBEGAAWoQkAEgASAEEJABIAEgAhAPIAMQMiAEEDIgAhAyIAEQpwEgARA6IAEQqAE
    gARBVIAEQqAEgAkEMEJ8BIANBAxCfASACEFUgAhCoASACIAQQfSACEKgBIAAQFCAEQYACaiQAC58BAQJ/IwBBgAJrIgIk
    ACAAIAEQXiAAEDIgAkGIAWpB2KTAABBfIAJBCGpBOBByGiACQQE2AkAgAkHIAGpBOBByIAJBgAFqQQE2AgAgAkHAAWogA
    kGIAWoQiwEgAkEIaiACQcABahClARCyASACQQhqEKgBIAJBCGoQVSACQQhqEKgBIAAgARAPIAAgAkEIahCVASAAEKsBIA
    JBgAJqJAALowEBAX8jAEEwayIGJAAgBkEQaiAAIAEQsQEgBiAGKAIUIgA2AhwgBiAGKAIQIgE2AhggBkEIaiACIAMQsQE
    gBiAGKAIMIgI2AiQgBiAGKAIIIgM2AiAgBiAEIAUQsQEgBiAGKAIEIgQ2AiwgBiAGKAIAIgU2AiggASAAIAMgAiAFIAQQ
    ACAGQShqEKQBIAZBIGoQpAEgBkEYahCkASAGQTBqJAALiAECA38DfiMAQRBrIgIkAAN+IANBOEYEfiACQRBqJAAgBgUgA
    iAAIANqIgQpAwAiBSAFQj+HIAGsIgUgBUI/hxAxIAQgAikDACIHIAZ8IgVC//////////8DgzcDACAFIAdUrSACQQhqKQ
    MAIAZCP4d8fEIGhiAFQjqIhCEGIANBCGohAwwBCwsLhAECA38BfiMAQUBqIgEkACABQQhqIAAQXyABQQhqEEQgAUE4aiE
    CQQYhA0HcAiEAAn8DQEEAIANBAEgNARogAikDACIEUARAIAJBeGohAiAAQUZqIQAgA0F/aiEDDAELCwN/IARQBH8gAAUg
    AEEBaiEAIARCAn8hBAwBCwsLIAFBQGskAAuHAQEBfyMAQcABayIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByGiAAQfgAa
    kEBNgIAIAEQUCABQYgBakE4EHIaIABBgAFqIAFBgAEQZxogAEGAAmpBOBByGiAAQbgCakEBNgIAIABBvAJqIAFBhAFqQT
    wQZxogAEH4AmpBATYCACABQcABaiQAC48BAQJ/IwBBgAJrIgEkACAAEKwBIAEgABBeIAFBgAFqQTgQchogAUEBNgK4ASA
    BQcABakE4EHIaIAFB+AFqQQE2AgAgASAAQYABaiICEJUBIAEQOiABQYABaiABEJABIAFBgAFqIAIQlQEgAiABEJABIAIg
    ABCVASAAIAFBgAFqEJABIAAQrAEgAUGAAmokAAt9AgF/An4jAEGAAWsiASQAIAFBCGogABCFASABQQhqEBIgAUHIAGogA
    UEIahCDAUEIIQADQCAAQThGRQRAIAFByABqIABqKQMAIAKEIQIgAEEIaiEADAELCyABKQNIIQMgAUGAAWokACACQn98IA
    NCAYVCf3yDQjqIp0EBcQuJAQIBfwJ+IAAgACkDMCABQT9xrSIDhiAAKQMoQTogAWtBP3GtIgSHhDcDMCAAQShqIQFBBiE
    CA0AgAkEBTQRAIAAgACkDACADhkL//////////wODNwMABSABIAEpAwAgA4ZC//////////8DgyABQXhqIgEpAwAgBIeE
    NwMAIAJBf2ohAgwBCwsLiQECAX8CfiAAIAApA2BBOiABQTpwIgFrrSIEhyAAKQNoIAGtIgOGhDcDaCAAQeAAaiEBQQ0hA
    gNAIAJBAU0EQCAAIAApAwAgA4ZC//////////8DgzcDAAUgASABKQMAIAOGQv//////////A4MgAUF4aiIBKQMAIASHhD
    cDACACQX9qIQIMAQsLC3EBAX8jAEFAaiIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByGiAAQfgAakEBNgIAIAFBCGpBOBB
    yGiAAQYABakE4EHIaIABBuAFqQQE2AgAgAEG8AWogAUEEakE8EGcaIABB+AFqQQE2AgAgAUFAayQAC4EBAgF/AX4gAEHw
    ABByIQADQCACQThGBEACQCAAIAEpAzAiA0I6hzcDOCAAIANC//////////8DgzcDMCAAQUBrIQBBACECA0AgAkEwRg0BI
    AAgAmpCADcDACACQQhqIQIMAAsACwUgACACaiABIAJqKQMANwMAIAJBCGohAgwBCwsLdQECfiAAIANCIIgiBSABQiCIIg
    Z+IAIgA358IAEgBH58IANC/////w+DIgIgAUL/////D4MiAX4iA0IgiCACIAZ+fCICQiCIfCABIAV+IAJC/////w+DfCI
    BQiCIfDcDCCAAIANC/////w+DIAFCIIaENwMAC3YBAn8jAEHAAWsiASQAIAEgABCFASABQUBrIAAQhQEgAUGAAWogAEFA
    ayICEIUBIAEgAhB4IAFBQGsgABB4IAFBQGsQRCACIAFBQGsQSCABQYABahBBIAAgAUGAAWoQeCABEEQgABBEIAAgARBII
    AFBwAFqJAALkwEBAn9B0LXBAEHQtcEAKAIAQQFqNgIAAkACQEGYucEAKAIAQQFGBEBBnLnBAEGcucEAKAIAQQFqIgA2Ag
    AgAEECSw0CQaC5wQAoAgAiAUF/Sg0BDAILQZi5wQBCgYCAgBA3AwBBoLnBACgCACIAQQBIDQFBoLnBACAANgIAAAtBoLn
    BACABNgIAIABBAUsNAAALAAtnAQJ/IwBBQGoiAiQAIAAQRCACIAAQhQECQCABRQRAIAAQBwwBCyAAIAEQpQELQQAhAQNA
    IAFBAUsgA3JFBEAgABADIAFBAEchAyABIAFFaiEBDAELCyAAIAIQSCAAEBIgAkFAayQAC18CAX8EfkIBIQNBMCECA38gA
    kF4RgR/IARCAYYgA3ynQX9qBSABIAJqKQMAIgUgACACaikDACIGfUI6hyADgyAEhCEEIAJBeGohAiAFIAaFQn98QjqHIA
    ODIQMMAQsLC2ACAX8EfkIBIQNB6AAhAgN/IAJBeEYEfyAEQgGGIAN8p0F/agUgASACaikDACIFIAAgAmopAwAiBn1COoc
    gA4MgBIQhBCACQXhqIQIgBSAGhUJ/fEI6hyADgyEDDAELCwt3AQN/IwBBgAJrIgIkACACIAEQXiACQYABaiABEF4gAhAy
    IAJBgAFqIAIQDyAAIAJBgAFqEJcBIABBgAJqIgMgAkGAAWoQlwEgAEGABGoiBCACQYABahCXASADIAEQogEgBCACEKIBI
    ABBBTYCgAYgAkGAAmokAAt6AQF/IwBB4ANrIgEkACABQYABakHApcAAEF8gAUG4AWpB+KXAABBfIAEgAUGAAWogAUG4AW
    oQSSABQfACakGwpsAAEF8gAUGoA2pB6KbAABBfIAFB8AFqIAFB8AJqIAFBqANqEEkgACABIAFB8AFqED8gAUHgA2okAAt
    nACAAQQF2IAByIgBBAnYgAHIiAEEEdiAAciIAQQh2IAByIgBBEHYgAHIiACAAQQF2QdWq1aoFcWsiAEECdkGz5syZA3Eg
    AEGz5syZA3FqIgBBBHYgAGpBj568+ABxQYGChAhsQRh2C2cBAn8jAEGAAWsiASQAIAEgABCFASABQUBrQTgQchogAUEBN
    gJ4IAEgAEFAayICEHggARBBIAFBQGsgARClASABQUBrIAIQeCACIAEQpQEgAiAAEHggACABQUBrEKUBIAFBgAFqJAALaA
    IBfwJ+IAFBP3GtIQNBOiABa0E/ca0hBEEAIQEDQCABQTBGBEAgACAAKQMwIAOHNwMwBSAAIAFqIgIgAkEIaikDACAEhkL
    //////////wODIAIpAwAgA4eENwMAIAFBCGohAQwBCwsLbAEBfyMAQTBrIgMkACADIAE2AgQgAyAANgIAIANBHGpBAjYC
    ACADQSxqQQI2AgAgA0ICNwIMIANBlKjAADYCCCADQQI2AiQgAyADQSBqNgIYIAMgAzYCKCADIANBBGo2AiAgA0EIaiACE
    HAAC2wBAX8jAEEwayIDJAAgAyABNgIEIAMgADYCACADQRxqQQI2AgAgA0EsakECNgIAIANCAjcCDCADQbCqwAA2AgggA0
    ECNgIkIAMgA0EgajYCGCADIANBBGo2AiggAyADNgIgIANBCGogAhBwAAtlAQJ/IAAgACgCACICQQhqIgM2AgAgACACQQN
    2QTxxakEoaiICIAFB/wFxIAIoAgBBCHRyNgIAAkACQCADRQRAIABBADYCACAAIAAoAgRBAWo2AgQMAQsgA0H/A3ENAQsg
    ABARCwtnAQF/IwBBgAJrIgMkACAAECogACABEJABIABBgAFqIgEgAhCQASAAQYACahCwASAAEKgBIAMgABAmIANBgAFqI
    AEQXiADQYABahAyIANBgAFqIAMQe0UEQCAAEJgBCyADQYACaiQAC18BAn8jAEGAAWsiASQAIAAQqAEgASAAEIUBIAFBQG
    sgAEFAayICEIUBIAEQAyABQUBrEAMgASABQUBrEHggAUEAEDQgACABEEggARBBIAEQRCACIAEQSCABQYABaiQAC10BAn8
    jAEFAaiIBJAAgAUEIakGgp8AAEF8gAUEIaiAAKAI4QX9qEDkiAhAtIAAgAUEIahBjIABBASACQQFqQR9xdCICNgI4IAJB
    gICAEE4EQCAAEBILIAFBQGskAAtfAgF/AX4jAEHwAGsiASQAIAFBoKfAABBfIAApAwAhAiABQThqIAAQXyAAQQEQOyABQ
    ThqIAEQYSABQThqEEQgAUE4akEBEDsgACABQThqIAJCAoGnEE8gAUHwAGokAAt7AQJ/IABBKGohAgNAIAFBgAJGBEAgAE
    LnzKfQ1tDrs7t/NwIIIABCADcCACAAQSBqQquzj/yRo7Pw2wA3AgAgAEEYakL/pLmIxZHagpt/NwIAIABBEGpC8ua746O
    n/aelfzcCAAUgASACakEANgIAIAFBBGohAQwBCwsLaQICfwF+IAAgACkDACIDQv//////////A4M3AwBBCCEBA0AgA0I6
    hyEDIAFBMEYEQCAAIAApAzAgA3w3AzAFIAAgAWoiAiACKQMAIAN8IgNC//////////8DgzcDACABQQhqIQEMAQsLC2oCA
    n8BfiAAIAApAwAiA0L//////////wODNwMAQQghAQNAIANCOochAyABQegARgRAIAAgACkDaCADfDcDaAUgACABaiICIA
    IpAwAgA3wiA0L//////////wODNwMAIAFBCGohAQwBCwsLWQEBfyMAQYADayIEJAAgBCADEF4gBBBAIARBgAFqIAEQXiA
    EQYACaiACEF4gBEGAAWogBBAPIARBgAJqIAQQDyAAIARBgAFqIARBgAJqEJEBIARBgANqJAALWQECfyMAQUBqIgEkAAJA
    IAAQhAENACABQQEQigEgAEGAAWoiAiABEFkNACACQQAQNCAAIAIQSCAAEBIgAEFAayIAIAIQSCAAEBIgAiABEKUBCyABQ
    UBrJAALVwEBfyMAQbABayICJAAgATQCOCAANAI4fkKAgIAQWQRAIAAQEgsgAkEIaiAAIAEQCCACQfgAaiACQQhqEAUgAC
    ACQfgAahBrIABBAjYCOCACQbABaiQAC08BAn8jAEFAaiIDJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByIABB+ABqQQE2AgA
    gAyABEIsBIAAgAxClASADIAIQiwEgAxClASADQUBrJAALWQECfyMAQYABayIBJAACQCAAEIgBDQAgARBQIABBgAJqIgIg
    ARB7DQAgAhBAIAAgAhAPIAAQqwEgAEGAAWoiACACEA8gABCrASACIAEQkAELIAFBgAFqJAALSwEBfyMAQUBqIgEkACAAQ
    TgQciIAQQE2AjggAUEBEIoBIABBQGsgAUHAABBnGiAAQYABakE4EHIaIABBuAFqQQE2AgAgAUFAayQAC0sBAn8jAEHwAG
    siASQAIAAQd0UEQCABQaCnwAAQXyABQThqIAAQgwEgASABQThqEGIgARBEIAFBOGogARA1IQILIAFB8ABqJAAgAgtPAQF
    /IwBBgAFrIgIkACAAIAEQhQEgABADIAJByABqQdikwAAQXyACQQhqIAJByABqEIsBIAAgARBIIAAgAkEIahB4IAAQEiAC
    QYABaiQAC0kBAn8DQCABQThGRQRAIAAgAWoiAiACKQMAQgGGNwMAIAFBCGohAQwBCwsgACAAKAI4QQF0IgE2AjggAUGAg
    IAQTgRAIAAQEgsLQgIBfwJ+QQAgAmusIQQDQCADQThHBEAgACADaiICIAIpAwAiBSABIANqKQMAhSAEgyAFhTcDACADQQ
    hqIQMMAQsLC0YBAn8jAEFAaiIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByIABB+ABqQQE2AgAgAUEBEIoBIAAgARClARC
    yASABQUBrJAALTgEBfyMAQYAEayIBJAAgABAvIAEQLyABQYACahAvIABBgAJqIAFBgAIQZxogAEGABGogAUGAAmpBgAIQ
    ZxogAEEANgKABiABQYAEaiQAC0sBAX8jAEFAaiICJAACQCAAKAI4IAFsQYCAgBBOBEAgAiABEIoBIAAgAhBIDAELIAAgA
    RAoGiAAIAAoAjggAWw2AjgLIAJBQGskAAtKAAJ/IAFBgIDEAEcEQEEBIAAoAhggASAAQRxqKAIAKAIQEQMADQEaCyACRQ
    RAQQAPCyAAKAIYIAJBACAAQRxqKAIAKAIMEQUACwtCAQF/IwBBQGoiAiQAIAJBCGpBgIDAABBfIAEgAkEIahBrIAEQRCA
    AIAEQayAAQQMQKBogABBEIAAQKSACQUBrJAALSQECfyMAQcABayIBJAAgASAAEF4gAUGAAWogABCFASAAIABBQGsiAhCl
    ASAAEEEgAiABQYABahClASAAIAEQlQEgAUHAAWokAAtIAQF/IwBB4AFrIgEkACABQeihwAAQXyABQThqIAAgARAIIAFBq
    AFqIAFBOGoQBSAAIAFBqAFqEGsgAEECNgI4IAFB4AFqJAALPgEBfyABQTpuIQIgAUGVA00EQCAAIAJBA3RqKQMAQgEgAU
    H//wNxQTpwrYaDQgBVDwsgAkEHQdSdwAAQPAALQAIBfwF+IwBBgAFrIgEkACABQQhqIAAQhQEgAUEIahASIAFByABqIAF
    BCGoQgwEgASkDSCABQYABaiQAQgKBpws8AQF/IwBBgAFrIgIkACACIAAQhQEgAkFAayABEIUBIAIQEiACQUBrEBIgAiAC
    QUBrEDUgAkGAAWokAEULPAIBfwF+A38gAUE4RgR/IAJCf3xCgICAgICAgIAEg0I6iKcFIAAgAWopAwAgAoQhAiABQQhqI
    QEMAQsLC0cBAX8jAEEgayIDJAAgA0EUakEANgIAIANB9KrAADYCECADQgE3AgQgAyABNgIcIAMgADYCGCADIANBGGo2Ag
    AgAyACEHAACzkBAX8jAEFAaiICJAAgAiAAEIUBIAIQByABBEAgASACEKUBCyACEAMgAiAAEEggAhAsIAJBQGskAAs6AQF
    /IABBOBByIQADQCACQTBGRQRAIABBCBAtIAAgACkDACABIAJqMQAAfDcDACACQQFqIQIMAQsLCzQBAX8gAEE4EHIiAEEB
    NgI4IABBQGtBOBByIABB+ABqQQE2AgAgACABEKUBIAFBQGsQpQELMAEBfyAAQTgQciEAA0AgAkE4RwRAIAAgAmogASACa
    ikDADcDACACQQhqIQIMAQsLCz8BAX8jAEGAAmsiASQAIAAQUSABEG4gACABEJIBIABBgAJqEK0BIABBgARqEK0BIABBAT
    YCgAYgAUGAAmokAAswAQJ/A0AgAkE4RwRAIAAgAmoiAyADKQMAIAEgAmopAwB8NwMAIAJBCGohAgwBCwsLMAECfwNAIAJ
    BOEcEQCAAIAJqIgMgAykDACABIAJqKQMAfTcDACACQQhqIQIMAQsLCzABAn8DQCACQThHBEAgACACaiIDIAEgAmopAwAg
    AykDAH03AwAgAkEIaiECDAELCwsxAQJ/A0AgAkHwAEcEQCAAIAJqIgMgAykDACABIAJqKQMAfTcDACACQQhqIQIMAQsLC
    zEBAn8DQCACQfAARwRAIAAgAmoiAyADKQMAIAEgAmopAwB8NwMAIAJBCGohAgwBCwsLOQECfyMAQYABayIBJAAgASAAQY
    ABaiICEF4gAiAAEJABIAEQVSAAIAEQkAEgABCsASABQYABaiQACzMBAX8gAgRAIAAhAwNAIAMgAS0AADoAACABQQFqIQE
    gA0EBaiEDIAJBf2oiAg0ACwsgAAtIAQN/IwBBEGsiASQAIAAoAgwhAyAAKAIIIgJFBEBB9KrAAEErQaCrwAAQWwALIAEg
    AzYCCCABIAA2AgQgASACNgIAIAEQcQALMgEBfyAAQgE3AwBBCCEBA0AgAUE4RkUEQCAAIAFqQgA3AwAgAUEIaiEBDAELC
    yAAEFYLNwAgABBRIAAgARCSASAAQYACaiABQYACahCSASAAQYAEaiABQYAEahCSASAAIAEoAoAGNgKABgsoAQF/A0AgAk
    E4RwRAIAAgAmogASACaikDADcDACACQQhqIQIMAQsLCzMAIAAgARCSASAAQYACaiABQYACahCSASAAQYAEaiABQYAEahC
    SASAAIAEoAoAGNgKABgsoACAAIAEgAhB5IABBQGsgAUFAayACEHkgAEGAAWogAUGAAWogAhB5Cy4BAX8jAEGAAWsiASQA
    IAAQLyABEFAgACABEJABIABBgAFqEKkBIAFBgAFqJAALLQAgACABIAIQjwEgAEGAAWogAUGAAWogAhCPASAAQYACaiABQ
    YACaiACEI8BCzQBAX8jAEEQayICJAAgAiABNgIMIAIgADYCCCACQaSowAA2AgQgAkH0qsAANgIAIAIQaAALPgEBfyMAQR
    BrIgEkACABQQhqIABBCGooAgA2AgAgASAAKQIANwMAIAEoAgAiAEEUaigCABogACgCBBoQMwALKQEBfyABBEAgACECA0A
    gAkEAOgAAIAJBAWohAiABQX9qIgENAAsLIAALKwEBfyMAQcABayICJAAgAhBLIAIgARB/IAIQpgEgACACEAwgAkHAAWok
    AAsiAQF/A0AgAUE4RwRAIAAgAWpCADcDACABQQhqIQEMAQsLCycBAX8jAEFAaiICJAAgAkEIaiABEF0gACACQQhqEIsBI
    AJBQGskAAsrACAAEFEgACABEJIBIABBgAJqIAIQkgEgAEGABGogAxCSASAAQQU2AoAGCyMBAX8jAEFAaiIBJAAgASAAEI
    UBIAEQEiABEFogAUFAayQACykAIAAgARBhIAAgACgCOCABKAI4aiIBNgI4IAFBgICAEE4EQCAAEBILCyUAIAAgASACEE8
    gAEEAIAJrIAAoAjgiACABKAI4c3EgAHM2AjgLIwADQCACBEAgACABLQAAED4gAkF/aiECIAFBAWohAQwBCwsLIgACQCAA
    IAEQWUUNACAAQUBrIAFBQGsQWUUNAEEBDwtBAAskAAJAIABBfE0EQCAARQRAQQQhAAwCCyAAEAEiAA0BCwALIAALJwEBf
    yMAQYABayICJAAgAiABEF4gAhA6IAAgAhCVASACQYABaiQACycAIAAgARCQASAAQYABaiABQYABahCQASAAQYACaiABQY
    ACahCQAQslACAAIAEQpQEgAEFAayABQUBrEKUBIABBgAFqIAFBgAFqEKUBCyUBAX8jAEFAaiICJAAgAiABEIUBIAIQQSA
    AIAIQeCACQUBrJAALKAEBfyMAQYACayICJAAgAiABEI4BIAIQKyAAIAIQlgEgAkGAAmokAAsjAEGEAiACSQRAIAJBhAIg
    AxA9AAsgACACNgIEIAAgATYCAAsiAQF/IwBB8ABrIgIkACACIAEQMCAAIAIQBSACQfAAaiQACxwAAkAgABB3RQ0AIABBg
    AFqEHdFDQBBAQ8LQQALHwAgAEE4EHIiAEEBNgI4IAAgARBrIAAgASgCODYCOAseAAJAIAAQhwFFDQAgAEGAAWoQhwFFDQ
    BBAQ8LQQALGwACQCAAEHdFDQAgAEFAaxB3RQ0AQQEPC0EACx4AAkAgABCHAUUNACAAQYACahCHAUUNAEEBDwtBAAsaAQF
    /IAAQWCIBIABBQGsQWCABcyAAEHdxcwsaACAAQTgQciIAQQE2AjggACABEJ0BIAAQVgsZACAAQTgQciIAQQE2AjggACAB
    EGsgABBWCxcAIAAQRCAAKAIAQX8gAUEfcXRBf3NxCxoAIAAgARBfIAAgAhAkIAAgAhBjIAAgAhAkCxwAIAAQLyAAIAEQk
    AEgAEGAAWogAUGAAWoQkAELGAAgACABIAIQeSAAQUBrIAFBQGsgAhB5CxYAIAAgARClASAAQUBrIAFBQGsQpQELGAAgAB
    AvIAAgARCQASAAQYABaiACEJABCxgAIAAgARCQASAAQYABaiABQYABahCQAQsZACAAEK4BIABBgAJqELYBIABBgARqEK4
    BCxcAIAAQsgEgAEFAaxBpIABBgAFqELIBCxQAIAAgARB4IABBQGsgAUFAaxB4CxgAIAAgARCVASAAQYABaiABQYABahCV
    AQsYACAAEKYBIABBgAFqIgAQpgEgACABEA8LGQAgABCpASAAQYABahCwASAAQYACahCpAQsZACAAEKwBIABBgAJqEKwBI
    ABBgARqEKwBCxkAIAAQqgEgAEGAAmoQqgEgAEGABGoQqgELFgAgABAvIAAgARCQASAAQYABahCpAQsWACAAQYABaiIAEK
    gBIAAQOiAAEKgBCxQAIAAQRCAAIAApAwAgAax8NwMACxQAIAAQRCAAIAApAwAgAax9NwMACxEAIAAgARBSIABBQGsgARB
    SCxEAIAAgARBIIABBQGsgARBICxQAIAAgARCQASAAQYABaiACEJABCxIAIAAgARAPIABBgAFqIAEQDwsUACAAIAEQoAEg
    AEGAAWogARCgAQsRACAAKAIEBEAgACgCABAJCwsSACAAIAEQayAAIAEoAjg2AjgLDwAgAEFAayIAEEEgABBECw0AIAAQT
    iAAQUBrEE4LDQAgABBEIABBQGsQRAsPACAAELIBIABBQGsQsgELEAAgABCrASAAQYABahCrAQsNACAAEBIgAEFAaxASCx
    AAIAAQqAEgAEGAAWoQqAELEAAgABCpASAAQYABahCpAQsPACAAQYABahA6IAAQrAELEAAgABCnASAAQYABahCnAQsOACA
    AEGkgAEFAaxCyAQsQACAAIAI2AgQgACABNgIACw0AIAAQdCAAQQE2AjgLDAAgABBBIAAgARB4CwwAIAAgARBrIAAQVgsN
    ACAAEDogACABEJUBCwsAIAAQOiAAEKwBCwwAQunQotvMouq7RgsDAAELAwABCwv+PZoCAEGCgMAACwcBAAAAAQI0AEG4g
    MAAC9sBuF8jku11BwFjT+D5WE+pA2dPnKtLeD0Akew9ffXy9AMD1g8fDSwgAK1vjPCZwa4A8DtNkAEAAADzStxtEor3AI
    uwH1tTsFYDgvLFYx+X7AAysL/NHtseAkehVLifHyMCQHo6ogw4sQGz4sMPAAAAAHNyYy9ibHMxMjM4MS9wYWlyLnJzqAA
    QABQAAAAHAQAACQAAAKgAEAAUAAAADAEAAA0AAACoABAAFAAAABEBAAANAAAAAAAAAAEAAAD///8Dv/+W/78AaQM7VYAd
    moCAAefMIPV1pkwBp+1zAEGogsAACyz+//7///8BAosAgILYBPYB4Y1oiW++kwLOdqvfPagdAMZpulHOdt8Dy1nGFwBB4
    ILAAAuRAZABEAATAAAA0AEAABgAAACQARAAEwAAANQBAAARAAAAkAEQABMAAADWAQAAHAAAAHNyYy9ibHMxMjM4MS9lY3
    AucnMAkAEQABMAAAAZBQAADQAAAJABEAATAAAAGwUAAAkAAACQARAAEwAAABwFAAARAAAAkAEQABMAAAAfBQAAHAAAAAA
    AAAABAAEAAAABAjQAQaCEwAALuSCQARAAEwAAAGcEAAARAAAAkAEQABMAAABsBAAADQAAAJABEAATAAAAbgQAABUAAACQ
    ARAAEwAAAHAEAAAgAAAAHUxYLQgo9ADXXz44aOPbAInJGoj9roEBomOjmrkPTgGY6rCCSW3JAoBOWs9QOu4AimlEAQAAA
    ADgKxeO6UjMAXSpOluMVsgAolXvNe/8FADngsIBPcnDA8EWIDvuPnUAusRiAAwgWgDRCCkuAQAAALgh6L1iEMUA3/4Vlz
    tIpQGLCDH8A9S9AbsR/Cc0UtIDHfAS2hvXowEqPc423S/bAshidB8AAAAAKdKiiy66yAHqR06TLeDGAiSMtsYkvPEDAo/
    w3iCL+AGd1zE97u2BA4ilRy+cg4kDSMIIbgAAAAB7+wUWP99nAjJ7Fwrjx90CaW+GFDsANgMrVFv+4Zl3A8x9+g1bVtIB
    Aju2nPiBcwIH2iEDAQAAAJ4MOb5nECQDX97JALfLQgIx+rexS69LAYydZXIx6AACyy7dIo8TXQHUDYML8enzAuH4sWkBA
    AAAF+OXhGqYcQFbpdOtpXylAPrkHV2MkmwBFovSVX2eswF1O8QNmb5jAc0s5B7x42kCH8/TgAAAAACOyPDjGFbLAOdrHT
    0yPvIBmzNTJw/vYgALmsY2bZ2sAuVtNVN+EdEAIQ4duvj2agBw54F7AQAAAITtOaEl8tcBt7JLQTBKlADaqLKGnI8hAiN
    AhjM+PJkAhhWxv1LmigOwyY1aShP5A1Nl7dYAAAAAgyllb8bBEwFzRs+5ckvDAQgK+Wh+CbkCTntu5kll9wGxPNu1Sqf3
    AwZIdMD/xFwDUDIMYwEAAADZlYis6UwVARTxnQfMG4oChYnB+oJZtgK7IfzsX0loAZnbmVSOEeQDLK2Q2RB9ZgCjJpfpA
    AAAAGFomx1kiLMB8WQcxDiXuAEzNQgzG58oA8zGl/w2qpUB5PXXElTlBwN0goHTbRvzA2ZxjncBAAAAsNyerJ2fFwD4p1
    yCSo8PA1jJJY7GHlAC46GVD2alzAEkA84bmgrRATESRAc7nl0C2wVA1QAAAAC7g8uz8e40ALrVMMa8qTwCg7SGHg3HMwK
    X1V8Qqr1sAecXfByoRyECrC5iwcvqUAI+7ZRyAQAAALdJRnNiFqwCq1uLuXy1MABhhSxO22y1A4nJfwFciyICPjBrhRWY
    2QEHRAIu0MygA7HyBRoBAAAACt3saNGEYwELQBne0pLTATFZwTGPlzMBfdvdQN9bugO0gvaAZqWzAo9b2xG1SnoCqxP8l
    QAAAABB1qF5Oux2AxHckO6qpJkAOFCDmPNn2gBA0K3ZhMV1AI1/4Myjx68Bz4Kkl+BTaQNqzw6hAAAAAF5azL2b2fcBxL
    R4RCdSbgH6gMUimN8cAltmoKIpbwgDY39umQHPdABs/SyMLCpZA6nCekoBAAAAOkrobkl0JQA7G3jD49TsAKfO6e0qBnM
    AuDglhk69ZgJXD1chZ1ngAxiDz0OGTVoAz6osdwAAAAClBGOfovktAHDEowjxkjQAQPeCiUvyzgMOKTS1cjqnAzVXOenG
    BgUD30NOVe6ZOQGOXzXnAAAAAB6iMjVbOZ0DVAdezQfqpgC9qW0wO4NOAK017oqBhGYBx9//faDnQwNXx5sCKkWKACAWj
    joBAAAA2CzGjZPoDQMEcT27D0m1AZcE/dYovIoCMlNFlcVa/AAkCFtU60B8A/urDrK/uGIBGlglNAAAAAAZPrhcujnCAD
    +3PyWfJfQAas3qrBEL4ACZ8kczxmm9AUGJbx+Z8r8BivlNoJfI6AHlL5ayAAAAAP87K8huJ8gBeboJLBshqgI9cfWLxIg
    lAJsEMADCMygD6EFwNjblmAJEHC3SEGfVAt6lYSUBAAAAHBvSQPr5PAEmfg+Nb6A1AlUrxor8F4YAVnLqIm2NLgHv1QFv
    +tNLA4u5LIZrxj8DSNWojAAAAAAEtshpvla0AMEdB7C/n0ABZisb8FqpTwG3XuVoWRI+Ah0Yy7Uu30IDzkKpk/PAQwLp5
    GteAQAAAEsidVRxHmsC4e1rXtkmQQC6Rs6nltP1AKxmo5WhXwcCPWde/KPESAN9VqhAxDORA0WWElwAAAAAMwGY2/XT2Q
    IQmcoIRyvkA2zMWQbE0zICmU8AVjA1IAA7e3XcFeN7AisAv9ymskcDSjlaJAAAAAD4HpcL8ARMAYN8hGRkcBQCbPAzRnu
    ADgGcADvCmtCoALGnekQ/9QQAWEJVdObkBgDByoKxAAAAAI5NB9CkyAcCs4E10QZ9cwKdJEP2EfnnA6+5GAnDq+ICWTVS
    zO3S/gNQMEaut73NAwipRosBAAAAMsER0BpxEwA6v+6PM5fOAxsDYZ44FuQDYET/JL2yLQPLL82T+0MdA+NCf4NvNN8Ae
    eQTlwEAAAAwHHPK66qvA8qbrlN3FdwDs7lDTR7t5wFhGvjba0WeAgwqxCNKoa0Dea+OSG2vYQChp7vhAAAAAIel23tXDj
    cA2OiB4XGAlAGd5qsM8qHmAi16sAl3nlkAvTqPu6FNHgKIJyP6EpplA4sBxJ8AAAAAKftwGKNMXgFoTfq3P1SRAS9kQsg
    mbNoADvR/YPeO/wIFChd0xqYsAa9Jpvcbrs4AU418mAAAAADy1ulfhfhhAbJX0IORsB4CenTzNNbEEwDFSC0Thq8oA7hb
    5zxreScA9F2yLO8G6wO8ubBKAAAAAPClMzaxOrIBphygVrLJ2AMD4kRVrdPDAUHZ9d62vlID0Kd0oKbwuAFHeISI2tIYA
    KT8A2YBAAAA2/7o8uzatgEQKhBkAjf+Ae7CrVETIv0DDObhQjmP7wM2VRnEKRWiAvjTK9fEP/gD3j/AjAAAAADL9OWwd1
    w1Ail7h7GnrhYA5J3PUTLAPgKSJ3DkrTvkAqcq1FdndNgCRh0mXggHJgJuN4YfAAAAAPbhLcdA4t8A7kgBLIqFVAMmfdo
    AFLnkAxINi3OMYlkD4lIllEk7agAy4Si9mZulArqGxwwAAAAAlsZBLlrnlwD4L+qLZcRZAWxN03q2PjQCQT704DyVsAHp
    IxKDRvt2A7UNRHUEljsBEGqZNAEAAAAzuweXcUWYAq/w6M6mux4D0Dw9VFbJ9gJKrUiloSI5AhOtEfrcgEkBwkdnCbiT6
    AKBfNmQAAAAAI9LYx06RxUAEeAlTTxcvQDKBaLKVmPNAzvJTOHOiZcBD8RxwRl4DQJXCcmaD3C3AYEd+uAAAAAA9wbtJh
    Pc+gE0IDPFYe9FASDkgCSUJ98A0i0Hn6ScUwJbVr/yds1TAUP3otjOk8sCDkBgJgAAAADMRTNXOLGZAkewQu742AEAMGm
    42QCa7wJz9ZkIfCtmA0YzVJYUX7QAUUzY8PifHQMUlWutAAAAAJIQVuIptYQCpfqu3xsmWgJvURN56oyoAT4wSgs5vysC
    /5R/RwzFSAIHS2H9z0AHAnS2y6wAAAAAqGqPupy0+AAAgcHg06dwARqHXGpjbrMBZDmkmIbt5gDQbZwdkdIaACgEPFJvA
    akDniUvTQAAAABVP5G4i/RuAI3XbEr1qBcCc7xPfernkgEhTO0e9oSPAfcWMpCEStkDZYGgOoebwgHaXKVnAQAAAEpdU1
    WdPSMD2iCS5O69+AMshbQ5v8RQAxWvgmS9GpMDDPv5xEzX0QNT+YbGSBjbANOObIYBAAAA2S6BFVpB7gAYuXcAAmw9AJI
    rE1djIP0AzfpfP33oewE3pOVu/6a7An4374D6qY8Di/A+agEAAABcd2oSmRMaAU/ux2JpAKcCXx0FoADEWwJNd73jMzTq
    A/3sXkuC6awAzaHu8Mt2pgIIfABmAQAAAKy3+ap/R8YCgDhz6ndu4wCfRKb18LaHAbMXB2JDVRkDUgG3gjF4rAK6mexny
    7ZhAJdSno0AAAAAHQClESMUOQJ2e7v0A3fFAiBqkeyd/KABu1DB7qY9fAKc0cbcjSL4AkQyAyz50BcBlQcOvgAAAAAWVF
    9EmG3SAGrrpaCwPNkAJxf0anKeSAL2SDhM83ZvA8UV0dG07YkD70iDfOWUYwKHKH1rAQAAAPJnvz21OCUCR+Jbvo01XwF
    nyi7NedJdAtYwxPy5RlUBhcR4V7GObgGfq+rbiTaQAQYz31gAAAAAPaBJLiwQ9gJMjafU2IEJAYr3AT5FbzUAhJJyVhPH
    3ANPyIW4SMNDAFsvg4YHSOAAwnUtlgEAAADBYzawU5JHAUAbCIO9I9oAf6Dncr61MgIMu5svYOKVA20aYOnq0PoAUASGl
    CwmpwLDxBJhAQAAAHNyYy9ibHMxMjM4MS9iaWcucnMAoA4QABMAAADMAQAALQAAAKAOEAATAAAAzAEAADUAAACgDhAAEw
    AAABkCAAANAAAAoA4QABMAAAA4AwAAGAAAAKAOEAATAAAAOAMAACEAAACgDhAAEwAAAEIDAAAhAAAAoA4QABMAAABbAwA
    AFwAAAKAOEAATAAAAZAMAABcAAACgDhAAEwAAAHIDAAAwAAAAoA4QABMAAAB7AwAAMAAAAKAOEAATAAAApwMAABgAAACg
    DhAAEwAAALUDAAAYAAAAmC+KQpFEN3HP+8C1pdu16VvCVjnxEfFZpII/ktVeHKuYqgfYAVuDEr6FMSTDfQxVdF2+cv6x3
    oCnBtybdPGbwcFpm+SGR77vxp3BD8yhDCRvLOktqoR0StypsFzaiPl2UlE+mG3GMajIJwOwx39Zv/ML4MZHkafVUWPKBm
    cpKRSFCrcnOCEbLvxtLE0TDThTVHMKZbsKanYuycKBhSxykqHov6JLZhqocItLwqNRbMcZ6JLRJAaZ1oU1DvRwoGoQFsG
    kGQhsNx5Md0gntbywNLMMHDlKqthOT8qcW/NvLmjugo90b2OleBR4yIQIAseM+v++kOtsUKT3o/m+8nhxxkJMU19TSUdf
    QkxTMTIzODFHMV9YTUQ6U0hBLTI1Nl9TU1dVX1JPX05VTF8A0BAQABMAAAA/AAAALgAAANAQEAATAAAAPQAAABUAAADQE
    BAAEwAAAD0AAAANAAAAc3JjL2JsczEyMzgxL2Jscy5ycwAAAAAArve+1aE5BgLok91iZEwkAdIsbk61CS0C2+VwMbbEEQ
    GZYzb76G2KA7ycH+3PFk8AK2qmngEAAABhdHRlbXB0IHRvIGRpdmlkZSBieSB6ZXJvAAAAbxEQABIAAAB8AQAAFAAAAAA
    AAABhdHRlbXB0IHRvIGRpdmlkZSB3aXRoIG92ZXJmbG93c3JjL2JsczEyMzgxL2ZwLnJzAAAAbxEQABIAAAASAgAADQAA
    AG8REAASAAAAHgIAACYAAABvERAAEgAAAB4CAAAjAAAAbxEQABIAAAAkAgAAFwAAAG8REAASAAAAJAIAABQAAAAAAAAAq
    qr//////gHu//9UrP//AupBYg9rDyoBw5z9ShTOEwJLd2TXrEtDAu3pxpKm+V8Cox4RoAEAAABAEhAAFAAAABUBAAATAA
    AAQBIQABQAAAAeAQAAGAAAAEASEAAUAAAAJAEAABwAAABzcmMvYmxzMTIzODEvZWNwMi5ycwAAAAAEAEGQpcAAC7wGQBI
    QABQAAADmAgAACQAAAEASEAAUAAAA7gIAAA0AAABAEhAAFAAAAP4CAAAhAAAAuL0hwchWgAD1+24BqskAA7pwFz2uR7YA
    RNEK7ADpUwN65MZREMUtA0kBgkmkwiMALyuqJAAAAAB+KwRdBX2sAflVF+WERDwDNJME9ce9GwJp12rYgmRCA9BrWWVPJ
    4gA6DRrH9hnnAAFtgI+AQAAAAEouAiGVJMBeKIo6w5zsgIjyRINFpWmAQq1nU73MqoCm/2tGjUu2gJxczJjhFufAHdSXc
    4AAAAAvnlf8F8HqQJqaAc710nDAfOzmulytSoB0pm8jp0W+gEoPsuZi8IrAKw0qwwzzakDAkpsYAAAAACrqv/////+Ae7
    //1Ss//8C6kFiD2sPKgHDnP1KFM4TAkt3ZNesS0MC7enGkqb5XwKjHhGgAQAAAAgUEAALAAAAjwEAAA8AAAAIFBAACwAA
    AKcBAAATAAAACBQQAAsAAACqAQAADQAAAHNyYy9obWFjLnJzADQUEAAgAAAAVBQQABIAAAADAAAAAAAAAAEAAAAEAAAAa
    W5kZXggb3V0IG9mIGJvdW5kczogdGhlIGxlbiBpcyAgYnV0IHRoZSBpbmRleCBpcyAwMDAxMDIwMzA0MDUwNjA3MDgwOT
    EwMTExMjEzMTQxNTE2MTcxODE5MjAyMTIyMjMyNDI1MjYyNzI4MjkzMDMxMzIzMzM0MzUzNjM3MzgzOTQwNDE0MjQzNDQ
    0NTQ2NDc0ODQ5NTA1MTUyNTM1NDU1NTY1NzU4NTk2MDYxNjI2MzY0NjU2NjY3Njg2OTcwNzE3MjczNzQ3NTc2Nzc3ODc5
    ODA4MTgyODM4NDg1ODY4Nzg4ODk5MDkxOTI5Mzk0OTU5Njk3OTg5OQAAQBUQABAAAABQFRAAIgAAAHJhbmdlIGVuZCBpb
    mRleCAgb3V0IG9mIHJhbmdlIGZvciBzbGljZSBvZiBsZW5ndGggAABjYWxsZWQgYE9wdGlvbjo6dW53cmFwKClgIG9uIG
    EgYE5vbmVgIHZhbHVlALAVEAAcAAAA7gEAAB4AAABsaWJyYXJ5L3N0ZC9zcmMvcGFuaWNraW5nLnJzAEGIrMAACwEBAEH
    IrMAACwEBAEGIrcAACwEBAEHIrcAACwEBAEGIrsAACwEBAEHIrsAACwEBAEGIr8AACwEBAEHIr8AACwEBAEGIsMAACwEB
    AEHIsMAACwEBAEGIscAACwEBAEHIscAACwEBAEGIssAACwEBAEHIssAACwEBAEGIs8AACwEBAEHIs8AACwEBAEGItMAAC
    wEBAEHItMAACwEBAEGItcAACwEBAEHItcAACwEBAEGItsAACwEBAEHItsAACwEBAEGIt8AACwEBAEHIt8AACwEBAEGIuM
    AACwEBAEHIuMAACwEBAEGIucAACwEBAEHIucAACwEBAEGIusAACwEBAEHIusAACwEBAEGIu8AACwEBAEHIu8AACwEBAEG
    IvMAACwEBAEHIvMAACwEBAEGIvcAACwEBAEHIvcAACwEBAEGIvsAACwEBAEHIvsAACwEBAEGIv8AACwEBAEHIv8AACwEB
    AEGIwMAACwEBAEHIwMAACwEBAEGIwcAACwEBAEHIwcAACwEBAEGIwsAACwEBAEHIwsAACwEBAEGIw8AACwEBAEHIw8AAC
    wEBAEGIxMAACwEBAEHIxMAACwEBAEGIxcAACwEBAEHIxcAACwEBAEGIxsAACwEBAEHIxsAACwEBAEGIx8AACwEBAEHIx8
    AACwEBAEGIyMAACwEBAEHIyMAACwEBAEGIycAACwEBAEHIycAACwEBAEGIysAACwEBAEHIysAACwEBAEGIy8AACwEBAEH
    Iy8AACwEBAEGIzMAACwEBAEHIzMAACwEBAEGIzcAACwEBAEHIzcAACwEBAEGIzsAACwEBAEHIzsAACwEBAEGIz8AACwEB
    AEHIz8AACwEBAEGI0MAACwEBAEHI0MAACwEBAEGI0cAACwEBAEHI0cAACwEBAEGI0sAACwEBAEHI0sAACwEBAEGI08AAC
    wEBAEHI08AACwEBAEGI1MAACwEBAEHI1MAACwEBAEGI1cAACwEBAEHI1cAACwEBAEGI1sAACwEBAEHI1sAACwEBAEGI18
    AACwEBAEHI18AACwEBAEGI2MAACwEBAEHI2MAACwEBAEGI2cAACwEBAEHI2cAACwEBAEGI2sAACwEBAEHI2sAACwEBAEG
    I28AACwEBAEHI28AACwEBAEGI3MAACwEBAEHI3MAACwEBAEGI3cAACwEBAEHI3cAACwEBAEGI3sAACwEBAEHI3sAACwEB
    AEGI38AACwEBAEHI38AACwEBAEGI4MAACwEBAEHI4MAACwEBAEGI4cAACwEBAEHI4cAACwEBAEGI4sAACwEBAEHI4sAAC
    wEBAEGI48AACwEBAEHI48AACwEBAEGI5MAACwEBAEHI5MAACwEBAEGI5cAACwEBAEHI5cAACwEBAEGI5sAACwEBAEHI5s
    AACwEBAEGI58AACwEBAEHI58AACwEBAEGI6MAACwEBAEHI6MAACwEBAEGI6cAACwEBAEHI6cAACwEBAEGI6sAACwEBAEH
    I6sAACwEBAEGI68AACwEBAEHI68AACwEBAEGI7MAACwEBAEHI7MAACwEBAEGI7cAACwEBAEHI7cAACwEBAEGI7sAACwEB
    AEHI7sAACwEBAEGI78AACwEBAEHI78AACwEBAEGI8MAACwEBAEHI8MAACwEBAEGI8cAACwEBAEHI8cAACwEBAEGI8sAAC
    wEBAEHI8sAACwEBAEGI88AACwEBAEHI88AACwEBAEGI9MAACwEBAEHI9MAACwEBAEGI9cAACwEBAEHI9cAACwEBAEGI9s
    AACwEBAEHI9sAACwEBAEGI98AACwEBAEHI98AACwEBAEGI+MAACwEBAEHI+MAACwEBAEGI+cAACwEBAEHI+cAACwEBAEG
    I+sAACwEBAEHI+sAACwEBAEGI+8AACwEBAEHI+8AACwEBAEGI/MAACwEBAEHI/MAACwEBAEGI/cAACwEBAEHI/cAACwEB
    AEGI/sAACwEBAEHI/sAACwEBAEGI/8AACwEBAEHI/8AACwEBAEGIgMEACwEBAEHIgMEACwEBAEGIgcEACwEBAEHIgcEAC
    wEBAEGIgsEACwEBAEHIgsEACwEBAEGIg8EACwEBAEHIg8EACwEBAEGIhMEACwEBAEHIhMEACwEBAEGIhcEACwEBAEHIhc
    EACwEBAEGIhsEACwEBAEHIhsEACwEBAEGIh8EACwEBAEHIh8EACwEBAEGIiMEACwEBAEHIiMEACwEBAEGIicEACwEBAEH
    IicEACwEBAEGIisEACwEBAEHIisEACwEBAEGIi8EACwEBAEHIi8EACwEBAEGIjMEACwEBAEHIjMEACwEBAEGIjcEACwEB
    AEHIjcEACwEBAEGIjsEACwEBAEHIjsEACwEBAEGIj8EACwEBAEHIj8EACwEBAEGIkMEACwEBAEHIkMEACwEBAEGIkcEAC
    wEBAEHIkcEACwEBAEGIksEACwEBAEHIksEACwEBAEGIk8EACwEBAEHIk8EACwEBAEGIlMEACwEBAEHIlMEACwEBAEGIlc
    EACwEBAEHIlcEACwEBAEGIlsEACwEBAEHIlsEACwEBAEGIl8EACwEBAEHIl8EACwEBAEGImMEACwEBAEHImMEACwEBAEG
    ImcEACwEBAEHImcEACwEBAEGImsEACwEBAEHImsEACwEBAEGIm8EACwEBAEHIm8EACwEBAEGInMEACwEBAEHInMEACwEB
    AEGIncEACwEBAEHIncEACwEBAEGInsEACwEBAEHInsEACwEBAEGIn8EACwEBAEHIn8EACwEBAEGIoMEACwEBAEHIoMEAC
    wEBAEGIocEACwEBAEHIocEACwEBAEGIosEACwEBAEHIosEACwEBAEGIo8EACwEBAEHIo8EACwEBAEGIpMEACwEBAEHIpM
    EACwEBAEGIpcEACwEBAEHIpcEACwEBAEGIpsEACwEBAEHIpsEACwEBAEGIp8EACwEBAEHIp8EACwEBAEGIqMEACwEBAEH
    IqMEACwEBAEGIqcEACwEBAEHIqcEACwEBAEGIqsEACwEBAEHIqsEACwEBAEGIq8EACwEBAEHIq8EACwEBAEGIrMEACwEB
    AEHIrMEACwEBAEGIrcEACwEBAEHIrcEACwEBAEGIrsEACwEBAEHIrsEACwEBAEGIr8EACwEBAEHIr8EACwEBAEGIsMEAC
    wEBAEHIsMEACwEBAEGIscEACwEBAEHIscEACwEBAEGIssEACwEBAEHIssEACwEBAEGIs8EACwEBAEHIs8EACwEBAEGItM
    EACwEBAEHItMEACwEBAEGItcEACwEBAEHItcEACwEBAHsJcHJvZHVjZXJzAghsYW5ndWFnZQEEUnVzdAAMcHJvY2Vzc2V
    kLWJ5AwVydXN0Yx0xLjQ5LjAgKGUxODg0YThlMyAyMDIwLTEyLTI5KQZ3YWxydXMGMC4xOC4wDHdhc20tYmluZGdlbhIw
    LjIuNzAgKGI2MzU1YzI3MCk=
`.replace(/[^0-9a-zA-Z/+]/g, '');
const wasmBytes = base64_arraybuffer/* decode */.J(wasmBytesBase64);
/**
 * @returns {number}
 */
function bls_bls_init() {
    let ret = wasm.bls_init();
    return ret;
}
let cachegetUint8Memory0 = null;
function getUint8Memory0() {
    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {
        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);
    }
    return cachegetUint8Memory0;
}
function passArray8ToWasm0(arg, malloc) {
    const ptr = malloc(arg.length * 1);
    getUint8Memory0().set(arg, ptr / 1);
    return [ptr, arg.length];
}
/**
 * @param {Uint8Array} sig
 * @param {Uint8Array} m
 * @param {Uint8Array} w
 * @returns {number}
 */
function bls_bls_verify(sig, m, w) {
    const [ptr0, len0] = passArray8ToWasm0(sig, wasm.__wbindgen_malloc);
    const [ptr1, len1] = passArray8ToWasm0(m, wasm.__wbindgen_malloc);
    const [ptr2, len2] = passArray8ToWasm0(w, wasm.__wbindgen_malloc);
    const ret = wasm.bls_verify(ptr0, len0, ptr1, len1, ptr2, len2);
    return ret;
}
async function load(module, imports) {
    if (typeof Response === 'function' && module instanceof Response) {
        const bytes = await module.arrayBuffer();
        return await WebAssembly.instantiate(bytes, imports);
    }
    else {
        const instance = await WebAssembly.instantiate(module, imports);
        if (instance instanceof WebAssembly.Instance) {
            return { instance, module };
        }
        else {
            return instance;
        }
    }
}
async function vendor_bls_bls_init() {
    const imports = {};
    const { instance, module } = await load(wasmBytes, imports);
    wasm = instance.exports;
    vendor_bls_bls_init.__wbindgen_wasm_module = module;
    return wasm;
}
/**
 * If `module_or_path` is {RequestInfo} or {URL}, makes a request and
 * for everything else, calls `WebAssembly.instantiate` directly.
 *
 * @param {InitInput | Promise<InitInput>} module_or_path
 *
 * @returns {Promise<InitOutput>}
 */
/* harmony default export */ const bls = ((/* unused pure expression or super */ null && (vendor_bls_bls_init)));
//# sourceMappingURL=bls.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/utils/bls.js

let verify;
/**
 *
 * @param pk primary key: Uint8Array
 * @param sig signature: Uint8Array
 * @param msg message: Uint8Array
 * @returns Promise resolving a boolean
 */
async function bls_blsVerify(pk, sig, msg) {
    if (!verify) {
        await init();
        if (bls_init() !== 0) {
            throw new Error('Cannot initialize BLS');
        }
        verify = (pk1, sig1, msg1) => {
            // Reorder things from what the WASM expects (sig, m, w).
            return bls_verify(sig1, msg1, pk1) === 0;
        };
    }
    return verify(pk, sig, msg);
}
//# sourceMappingURL=bls.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/certificate.js






/**
 * A certificate needs to be verified (using {@link Certificate.prototype.verify})
 * before it can be used.
 */
class UnverifiedCertificateError extends (/* unused pure expression or super */ null && (AgentError)) {
    constructor() {
        super(`Cannot lookup unverified certificate. Call 'verify()' first.`);
    }
}
/**
 * Make a human readable string out of a hash tree.
 * @param tree
 */
function hashTreeToString(tree) {
    const indent = (s) => s
        .split('\n')
        .map(x => '  ' + x)
        .join('\n');
    function labelToString(label) {
        const decoder = new TextDecoder(undefined, { fatal: true });
        try {
            return JSON.stringify(decoder.decode(label));
        }
        catch (e) {
            return `data(...${label.byteLength} bytes)`;
        }
    }
    switch (tree[0]) {
        case 0 /* Empty */:
            return '()';
        case 1 /* Fork */: {
            const left = hashTreeToString(tree[1]);
            const right = hashTreeToString(tree[2]);
            return `sub(\n left:\n${indent(left)}\n---\n right:\n${indent(right)}\n)`;
        }
        case 2 /* Labeled */: {
            const label = labelToString(tree[1]);
            const sub = hashTreeToString(tree[2]);
            return `label(\n label:\n${indent(label)}\n sub:\n${indent(sub)}\n)`;
        }
        case 3 /* Leaf */: {
            return `leaf(...${tree[1].byteLength} bytes)`;
        }
        case 4 /* Pruned */: {
            return `pruned(${toHex(new Uint8Array(tree[1]))}`;
        }
        default: {
            return `unknown(${JSON.stringify(tree[0])})`;
        }
    }
}
function isBufferEqual(a, b) {
    if (a.byteLength !== b.byteLength) {
        return false;
    }
    const a8 = new Uint8Array(a);
    const b8 = new Uint8Array(b);
    for (let i = 0; i < a8.length; i++) {
        if (a8[i] !== b8[i]) {
            return false;
        }
    }
    return true;
}
class certificate_Certificate {
    constructor(response, _agent = getDefaultAgent()) {
        this._agent = _agent;
        this.verified = false;
        this._rootKey = null;
        this.cert = cbor.decode(new Uint8Array(response.certificate));
    }
    lookup(path) {
        this.checkState();
        return lookup_path(path, this.cert.tree);
    }
    async verify() {
        const rootHash = await reconstruct(this.cert.tree);
        const derKey = await this._checkDelegation(this.cert.delegation);
        const sig = this.cert.signature;
        const key = extractDER(derKey);
        const msg = concat(domain_sep('ic-state-root'), rootHash);
        const res = await blsVerify(new Uint8Array(key), new Uint8Array(sig), new Uint8Array(msg));
        this.verified = res;
        return res;
    }
    checkState() {
        if (!this.verified) {
            throw new UnverifiedCertificateError();
        }
    }
    async _checkDelegation(d) {
        if (!d) {
            if (!this._rootKey) {
                if (this._agent.rootKey) {
                    this._rootKey = this._agent.rootKey;
                    return this._rootKey;
                }
                throw new Error(`Agent does not have a rootKey. Do you need to call 'fetchRootKey'?`);
            }
            return this._rootKey;
        }
        const cert = new certificate_Certificate(d, this._agent);
        if (!(await cert.verify())) {
            throw new Error('fail to verify delegation certificate');
        }
        const lookup = cert.lookup(['subnet', d.subnet_id, 'public_key']);
        if (!lookup) {
            throw new Error(`Could not find subnet key for subnet 0x${toHex(d.subnet_id)}`);
        }
        return lookup;
    }
}
const DER_PREFIX = buffer_fromHex('308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100');
const KEY_LENGTH = 96;
function extractDER(buf) {
    const expectedLength = DER_PREFIX.byteLength + KEY_LENGTH;
    if (buf.byteLength !== expectedLength) {
        throw new TypeError(`BLS DER-encoded public key must be ${expectedLength} bytes long`);
    }
    const prefix = buf.slice(0, DER_PREFIX.byteLength);
    if (!isBufferEqual(prefix, DER_PREFIX)) {
        throw new TypeError(`BLS DER-encoded public key is invalid. Expect the following prefix: ${DER_PREFIX}, but get ${prefix}`);
    }
    return buf.slice(DER_PREFIX.byteLength);
}
/**
 * @param t
 */
async function reconstruct(t) {
    switch (t[0]) {
        case 0 /* Empty */:
            return hash(domain_sep('ic-hashtree-empty'));
        case 4 /* Pruned */:
            return t[1];
        case 3 /* Leaf */:
            return hash(concat(domain_sep('ic-hashtree-leaf'), t[1]));
        case 2 /* Labeled */:
            return hash(concat(domain_sep('ic-hashtree-labeled'), t[1], await reconstruct(t[2])));
        case 1 /* Fork */:
            return hash(concat(domain_sep('ic-hashtree-fork'), await reconstruct(t[1]), await reconstruct(t[2])));
        default:
            throw new Error('unreachable');
    }
}
function domain_sep(s) {
    const len = new Uint8Array([s.length]);
    const str = new TextEncoder().encode(s);
    return concat(len, str);
}
/**
 * @param path
 * @param tree
 */
function lookup_path(path, tree) {
    if (path.length === 0) {
        switch (tree[0]) {
            case 3 /* Leaf */: {
                return new Uint8Array(tree[1]).buffer;
            }
            default: {
                return undefined;
            }
        }
    }
    const label = typeof path[0] === 'string' ? new TextEncoder().encode(path[0]) : path[0];
    const t = find_label(label, flatten_forks(tree));
    if (t) {
        return lookup_path(path.slice(1), t);
    }
}
function flatten_forks(t) {
    switch (t[0]) {
        case 0 /* Empty */:
            return [];
        case 1 /* Fork */:
            return flatten_forks(t[1]).concat(flatten_forks(t[2]));
        default:
            return [t];
    }
}
function find_label(l, trees) {
    if (trees.length === 0) {
        return undefined;
    }
    for (const t of trees) {
        if (t[0] === 2 /* Labeled */) {
            const p = t[1];
            if (isBufferEqual(l, p)) {
                return t[2];
            }
        }
    }
}
//# sourceMappingURL=certificate.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/polling/strategy.js

const FIVE_MINUTES_IN_MSEC = 5 * 60 * 1000;
/**
 * A best practices polling strategy: wait 2 seconds before the first poll, then 1 second
 * with an exponential backoff factor of 1.2. Timeout after 5 minutes.
 */
function defaultStrategy() {
    return chain(conditionalDelay(once(), 1000), backoff(1000, 1.2), timeout(FIVE_MINUTES_IN_MSEC));
}
/**
 * Predicate that returns true once.
 */
function once() {
    let first = true;
    return async () => {
        if (first) {
            first = false;
            return true;
        }
        return false;
    };
}
/**
 * Delay the polling once.
 * @param condition A predicate that indicates when to delay.
 * @param timeInMsec The amount of time to delay.
 */
function conditionalDelay(condition, timeInMsec) {
    return async (canisterId, requestId, status) => {
        if (await condition(canisterId, requestId, status)) {
            return new Promise(resolve => setTimeout(resolve, timeInMsec));
        }
    };
}
/**
 * Error out after a maximum number of polling has been done.
 * @param count The maximum attempts to poll.
 */
function maxAttempts(count) {
    let attempts = count;
    return async (canisterId, requestId, status) => {
        if (--attempts <= 0) {
            throw new Error(`Failed to retrieve a reply for request after ${count} attempts:\n` +
                `  Request ID: ${toHex(requestId)}\n` +
                `  Request status: ${status}\n`);
        }
    };
}
/**
 * Throttle polling.
 * @param throttleInMsec Amount in millisecond to wait between each polling.
 */
function throttle(throttleInMsec) {
    return () => new Promise(resolve => setTimeout(resolve, throttleInMsec));
}
/**
 * Reject a call after a certain amount of time.
 * @param timeInMsec Time in milliseconds before the polling should be rejected.
 */
function timeout(timeInMsec) {
    const end = Date.now() + timeInMsec;
    return async (canisterId, requestId, status) => {
        if (Date.now() > end) {
            throw new Error(`Request timed out after ${timeInMsec} msec:\n` +
                `  Request ID: ${buffer_toHex(requestId)}\n` +
                `  Request status: ${status}\n`);
        }
    };
}
/**
 * A strategy that throttle, but using an exponential backoff strategy.
 * @param startingThrottleInMsec The throttle in milliseconds to start with.
 * @param backoffFactor The factor to multiple the throttle time between every poll. For
 *   example if using 2, the throttle will double between every run.
 */
function backoff(startingThrottleInMsec, backoffFactor) {
    let currentThrottling = startingThrottleInMsec;
    return () => new Promise(resolve => setTimeout(() => {
        currentThrottling *= backoffFactor;
        resolve();
    }, currentThrottling));
}
/**
 * Chain multiple polling strategy. This _chains_ the strategies, so if you pass in,
 * say, two throttling strategy of 1 second, it will result in a throttle of 2 seconds.
 * @param strategies A strategy list to chain.
 */
function chain(...strategies) {
    return async (canisterId, requestId, status) => {
        for (const a of strategies) {
            await a(canisterId, requestId, status);
        }
    };
}
//# sourceMappingURL=strategy.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/polling/index.js





/**
 * Polls the IC to check the status of the given request then
 * returns the response bytes once the request has been processed.
 * @param agent The agent to use to poll read_state.
 * @param canisterId The effective canister ID.
 * @param requestId The Request ID to poll status for.
 * @param strategy A polling strategy.
 */
async function polling_pollForResponse(agent, canisterId, requestId, strategy) {
    const path = [new TextEncoder().encode('request_status'), requestId];
    const state = await agent.readState(canisterId, { paths: [path] });
    const cert = new Certificate(state, agent);
    const verified = await cert.verify();
    if (!verified) {
        throw new Error('Fail to verify certificate');
    }
    const maybeBuf = cert.lookup([...path, new TextEncoder().encode('status')]);
    let status;
    if (typeof maybeBuf === 'undefined') {
        // Missing requestId means we need to wait
        status = RequestStatusResponseStatus.Unknown;
    }
    else {
        status = new TextDecoder().decode(maybeBuf);
    }
    switch (status) {
        case RequestStatusResponseStatus.Replied: {
            return cert.lookup([...path, 'reply']);
        }
        case RequestStatusResponseStatus.Received:
        case RequestStatusResponseStatus.Unknown:
        case RequestStatusResponseStatus.Processing:
            // Execute the polling strategy, then retry.
            await strategy(canisterId, requestId, status);
            return polling_pollForResponse(agent, canisterId, requestId, strategy);
        case RequestStatusResponseStatus.Rejected: {
            const rejectCode = new Uint8Array(cert.lookup([...path, 'reject_code']))[0];
            const rejectMessage = new TextDecoder().decode(cert.lookup([...path, 'reject_message']));
            throw new Error(`Call was rejected:\n` +
                `  Request ID: ${toHex(requestId)}\n` +
                `  Reject code: ${rejectCode}\n` +
                `  Reject text: ${rejectMessage}\n`);
        }
        case RequestStatusResponseStatus.Done:
            // This is _technically_ not an error, but we still didn't see the `Replied` status so
            // we don't know the result and cannot decode it.
            throw new Error(`Call was marked as done but we never saw the reply:\n` +
                `  Request ID: ${toHex(requestId)}\n`);
    }
    throw new Error('unreachable');
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/actor.js








class ActorCallError extends (/* unused pure expression or super */ null && (AgentError)) {
    constructor(canisterId, methodName, type, props) {
        super([
            `Call failed:`,
            `  Canister: ${canisterId.toText()}`,
            `  Method: ${methodName} (${type})`,
            ...Object.getOwnPropertyNames(props).map(n => `  "${n}": ${JSON.stringify(props[n])}`),
        ].join('\n'));
        this.canisterId = canisterId;
        this.methodName = methodName;
        this.type = type;
        this.props = props;
    }
}
class QueryCallRejectedError extends (/* unused pure expression or super */ null && (ActorCallError)) {
    constructor(canisterId, methodName, result) {
        var _a;
        super(canisterId, methodName, 'query', {
            Status: result.status,
            Code: (_a = ReplicaRejectCode[result.reject_code]) !== null && _a !== void 0 ? _a : `Unknown Code "${result.reject_code}"`,
            Message: result.reject_message,
        });
        this.result = result;
    }
}
class UpdateCallRejectedError extends (/* unused pure expression or super */ null && (ActorCallError)) {
    constructor(canisterId, methodName, requestId, response) {
        super(canisterId, methodName, 'update', {
            'Request ID': toHex(requestId),
            'HTTP status code': response.status.toString(),
            'HTTP status text': response.statusText,
        });
        this.requestId = requestId;
        this.response = response;
    }
}
/**
 * The mode used when installing a canister.
 */
var CanisterInstallMode;
(function (CanisterInstallMode) {
    CanisterInstallMode["Install"] = "install";
    CanisterInstallMode["Reinstall"] = "reinstall";
    CanisterInstallMode["Upgrade"] = "upgrade";
})(CanisterInstallMode || (CanisterInstallMode = {}));
const metadataSymbol = Symbol.for('ic-agent-metadata');
/**
 * An actor base class. An actor is an object containing only functions that will
 * return a promise. These functions are derived from the IDL definition.
 */
class actor_Actor {
    constructor(metadata) {
        this[metadataSymbol] = Object.freeze(metadata);
    }
    /**
     * Get the Agent class this Actor would call, or undefined if the Actor would use
     * the default agent (global.ic.agent).
     * @param actor The actor to get the agent of.
     */
    static agentOf(actor) {
        return actor[metadataSymbol].config.agent;
    }
    /**
     * Get the interface of an actor, in the form of an instance of a Service.
     * @param actor The actor to get the interface of.
     */
    static interfaceOf(actor) {
        return actor[metadataSymbol].service;
    }
    static canisterIdOf(actor) {
        return Principal.from(actor[metadataSymbol].config.canisterId);
    }
    static async install(fields, config) {
        const mode = fields.mode === undefined ? CanisterInstallMode.Install : fields.mode;
        // Need to transform the arg into a number array.
        const arg = fields.arg ? [...new Uint8Array(fields.arg)] : [];
        // Same for module.
        const wasmModule = [...new Uint8Array(fields.module)];
        const canisterId = typeof config.canisterId === 'string'
            ? Principal.fromText(config.canisterId)
            : config.canisterId;
        await getManagementCanister(config).install_code({
            mode: { [mode]: null },
            arg,
            wasm_module: wasmModule,
            canister_id: canisterId,
        });
    }
    static async createCanister(config) {
        const { canister_id: canisterId } = await getManagementCanister(config || {}).provisional_create_canister_with_cycles({ amount: [], settings: [] });
        return canisterId;
    }
    static async createAndInstallCanister(interfaceFactory, fields, config) {
        const canisterId = await this.createCanister(config);
        await this.install(Object.assign({}, fields), Object.assign(Object.assign({}, config), { canisterId }));
        return this.createActor(interfaceFactory, Object.assign(Object.assign({}, config), { canisterId }));
    }
    static createActorClass(interfaceFactory) {
        const service = interfaceFactory({ IDL });
        class CanisterActor extends actor_Actor {
            constructor(config) {
                const canisterId = typeof config.canisterId === 'string'
                    ? Principal.fromText(config.canisterId)
                    : config.canisterId;
                super({
                    config: Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), config), { canisterId }),
                    service,
                });
                for (const [methodName, func] of service._fields) {
                    this[methodName] = _createActorMethod(this, methodName, func);
                }
            }
        }
        return CanisterActor;
    }
    static createActor(interfaceFactory, configuration) {
        return new (this.createActorClass(interfaceFactory))(configuration);
    }
}
// IDL functions can have multiple return values, so decoding always
// produces an array. Ensure that functions with single or zero return
// values behave as expected.
function decodeReturnValue(types, msg) {
    const returnValues = IDL.decode(types, Buffer.from(msg));
    switch (returnValues.length) {
        case 0:
            return undefined;
        case 1:
            return returnValues[0];
        default:
            return returnValues;
    }
}
const DEFAULT_ACTOR_CONFIG = {
    pollingStrategyFactory: defaultStrategy,
};
function _createActorMethod(actor, methodName, func) {
    let caller;
    if (func.annotations.includes('query')) {
        caller = async (options, ...args) => {
            var _a, _b;
            // First, if there's a config transformation, call it.
            options = Object.assign(Object.assign({}, options), (_b = (_a = actor[metadataSymbol].config).queryTransform) === null || _b === void 0 ? void 0 : _b.call(_a, methodName, args, Object.assign(Object.assign({}, actor[metadataSymbol].config), options)));
            const agent = options.agent || actor[metadataSymbol].config.agent || getDefaultAgent();
            const cid = Principal.from(options.canisterId || actor[metadataSymbol].config.canisterId);
            const arg = IDL.encode(func.argTypes, args);
            const result = await agent.query(cid, { methodName, arg });
            switch (result.status) {
                case "rejected" /* Rejected */:
                    throw new QueryCallRejectedError(cid, methodName, result);
                case "replied" /* Replied */:
                    return decodeReturnValue(func.retTypes, result.reply.arg);
            }
        };
    }
    else {
        caller = async (options, ...args) => {
            var _a, _b;
            // First, if there's a config transformation, call it.
            options = Object.assign(Object.assign({}, options), (_b = (_a = actor[metadataSymbol].config).callTransform) === null || _b === void 0 ? void 0 : _b.call(_a, methodName, args, Object.assign(Object.assign({}, actor[metadataSymbol].config), options)));
            const agent = options.agent || actor[metadataSymbol].config.agent || getDefaultAgent();
            const { canisterId, effectiveCanisterId, pollingStrategyFactory } = Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), actor[metadataSymbol].config), options);
            const cid = Principal.from(canisterId);
            const ecid = effectiveCanisterId !== undefined ? Principal.from(effectiveCanisterId) : cid;
            const arg = IDL.encode(func.argTypes, args);
            const { requestId, response } = await agent.call(cid, {
                methodName,
                arg,
                effectiveCanisterId: ecid,
            });
            if (!response.ok) {
                throw new UpdateCallRejectedError(cid, methodName, requestId, response);
            }
            const pollStrategy = pollingStrategyFactory();
            const responseBytes = await pollForResponse(agent, ecid, requestId, pollStrategy);
            if (responseBytes !== undefined) {
                return decodeReturnValue(func.retTypes, responseBytes);
            }
            else if (func.retTypes.length === 0) {
                return undefined;
            }
            else {
                throw new Error(`Call was returned undefined, but type [${func.retTypes.join(',')}].`);
            }
        };
    }
    const handler = (...args) => caller({}, ...args);
    handler.withOptions =
        (options) => (...args) => caller(options, ...args);
    return handler;
}
//# sourceMappingURL=actor.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/canisters/asset.js


/* tslint:enable */
/**
 * Create a management canister actor.
 * @param config
 */
function createAssetCanisterActor(config) {
    return Actor.createActor(assetCanister, config);
}
//# sourceMappingURL=asset.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/agent/lib/esm/index.js












//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: ./node_modules/tweetnacl/nacl-fast.js
var nacl_fast = __webpack_require__(780);
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/identity/lib/esm/identity/der.js
const bufEquals = (b1, b2) => {
    if (b1.byteLength !== b2.byteLength)
        return false;
    const u1 = new Uint8Array(b1);
    const u2 = new Uint8Array(b2);
    for (let i = 0; i < u1.length; i++) {
        if (u1[i] !== u2[i])
            return false;
    }
    return true;
};
const encodeLenBytes = (len) => {
    if (len <= 0x7f) {
        return 1;
    }
    else if (len <= 0xff) {
        return 2;
    }
    else if (len <= 0xffff) {
        return 3;
    }
    else if (len <= 0xffffff) {
        return 4;
    }
    else {
        throw new Error('Length too long (> 4 bytes)');
    }
};
const encodeLen = (buf, offset, len) => {
    if (len <= 0x7f) {
        buf[offset] = len;
        return 1;
    }
    else if (len <= 0xff) {
        buf[offset] = 0x81;
        buf[offset + 1] = len;
        return 2;
    }
    else if (len <= 0xffff) {
        buf[offset] = 0x82;
        buf[offset + 1] = len >> 8;
        buf[offset + 2] = len;
        return 3;
    }
    else if (len <= 0xffffff) {
        buf[offset] = 0x83;
        buf[offset + 1] = len >> 16;
        buf[offset + 2] = len >> 8;
        buf[offset + 3] = len;
        return 4;
    }
    else {
        throw new Error('Length too long (> 4 bytes)');
    }
};
const decodeLenBytes = (buf, offset) => {
    if (buf[offset] < 0x80)
        return 1;
    if (buf[offset] === 0x80)
        throw new Error('Invalid length 0');
    if (buf[offset] === 0x81)
        return 2;
    if (buf[offset] === 0x82)
        return 3;
    if (buf[offset] === 0x83)
        return 4;
    throw new Error('Length too long (> 4 bytes)');
};
const decodeLen = (buf, offset) => {
    const lenBytes = decodeLenBytes(buf, offset);
    if (lenBytes === 1)
        return buf[offset];
    else if (lenBytes === 2)
        return buf[offset + 1];
    else if (lenBytes === 3)
        return (buf[offset + 1] << 8) + buf[offset + 2];
    else if (lenBytes === 4)
        return (buf[offset + 1] << 16) + (buf[offset + 2] << 8) + buf[offset + 3];
    throw new Error('Length too long (> 4 bytes)');
};
/**
 * A DER encoded `SEQUENCE(OID)` for DER-encoded-COSE
 */
const der_DER_COSE_OID = Uint8Array.from([
    ...[0x30, 0x0c],
    ...[0x06, 0x0a],
    ...[0x2b, 0x06, 0x01, 0x04, 0x01, 0x83, 0xb8, 0x43, 0x01, 0x01], // DER encoded COSE
]);
/**
 * A DER encoded `SEQUENCE(OID)` for the Ed25519 algorithm
 */
const ED25519_OID = Uint8Array.from([
    ...[0x30, 0x05],
    ...[0x06, 0x03],
    ...[0x2b, 0x65, 0x70], // id-Ed25519 OID
]);
/**
 * A DER encoded `SEQUENCE(OID)` for secp256k1 with the ECDSA algorithm
 */
const der_SECP256K1_OID = Uint8Array.from([
    ...[0x30, 0x10],
    ...[0x06, 0x07],
    ...[0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01],
    ...[0x06, 0x05],
    ...[0x2b, 0x81, 0x04, 0x00, 0x0a], // OID secp256k1
]);
/**
 * Wraps the given `payload` in a DER encoding tagged with the given encoded `oid` like so:
 * `SEQUENCE(oid, BITSTRING(payload))`
 *
 * @param payload The payload to encode as the bit string
 * @param oid The DER encoded (and SEQUENCE wrapped!) OID to tag the payload with
 */
function der_wrapDER(payload, oid) {
    // The Bit String header needs to include the unused bit count byte in its length
    const bitStringHeaderLength = 2 + encodeLenBytes(payload.byteLength + 1);
    const len = oid.byteLength + bitStringHeaderLength + payload.byteLength;
    let offset = 0;
    const buf = new Uint8Array(1 + encodeLenBytes(len) + len);
    // Sequence
    buf[offset++] = 0x30;
    // Sequence Length
    offset += encodeLen(buf, offset, len);
    // OID
    buf.set(oid, offset);
    offset += oid.byteLength;
    // Bit String Header
    buf[offset++] = 0x03;
    offset += encodeLen(buf, offset, payload.byteLength + 1);
    // 0 padding
    buf[offset++] = 0x00;
    buf.set(new Uint8Array(payload), offset);
    return buf;
}
/**
 * Extracts a payload from the given `derEncoded` data, and checks that it was tagged with the given `oid`.
 *
 * `derEncoded = SEQUENCE(oid, BITSTRING(payload))`
 *
 * @param derEncoded The DER encoded and tagged data
 * @param oid The DER encoded (and SEQUENCE wrapped!) expected OID
 * @returns The unwrapped payload
 */
const der_unwrapDER = (derEncoded, oid) => {
    let offset = 0;
    const expect = (n, msg) => {
        if (buf[offset++] !== n) {
            throw new Error('Expected: ' + msg);
        }
    };
    const buf = new Uint8Array(derEncoded);
    expect(0x30, 'sequence');
    offset += decodeLenBytes(buf, offset);
    if (!bufEquals(buf.slice(offset, offset + oid.byteLength), oid)) {
        throw new Error('Not the expected OID.');
    }
    offset += oid.byteLength;
    expect(0x03, 'bit string');
    const payloadLen = decodeLen(buf, offset) - 1; // Subtracting 1 to account for the 0 padding
    offset += decodeLenBytes(buf, offset);
    expect(0x00, '0 padding');
    const result = buf.slice(offset);
    if (payloadLen !== result.length) {
        throw new Error(`DER payload mismatch: Expected length ${payloadLen} actual length ${result.length}`);
    }
    return result;
};
//# sourceMappingURL=der.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/identity/lib/esm/identity/ed25519.js




class Ed25519PublicKey {
    // `fromRaw` and `fromDer` should be used for instantiation, not this constructor.
    constructor(key) {
        this.rawKey = key;
        this.derKey = Ed25519PublicKey.derEncode(key);
    }
    static from(key) {
        return this.fromDer(key.toDer());
    }
    static fromRaw(rawKey) {
        return new Ed25519PublicKey(rawKey);
    }
    static fromDer(derKey) {
        return new Ed25519PublicKey(this.derDecode(derKey));
    }
    static derEncode(publicKey) {
        return der_wrapDER(publicKey, ED25519_OID).buffer;
    }
    static derDecode(key) {
        const unwrapped = der_unwrapDER(key, ED25519_OID);
        if (unwrapped.length !== this.RAW_KEY_LENGTH) {
            throw new Error('An Ed25519 public key must be exactly 32bytes long');
        }
        return unwrapped;
    }
    toDer() {
        return this.derKey;
    }
    toRaw() {
        return this.rawKey;
    }
}
// The length of Ed25519 public keys is always 32 bytes.
Ed25519PublicKey.RAW_KEY_LENGTH = 32;
class Ed25519KeyIdentity extends (/* unused pure expression or super */ null && (SignIdentity)) {
    // `fromRaw` and `fromDer` should be used for instantiation, not this constructor.
    constructor(publicKey, _privateKey) {
        super();
        this._privateKey = _privateKey;
        this._publicKey = Ed25519PublicKey.from(publicKey);
    }
    static generate(seed) {
        if (seed && seed.length !== 32) {
            throw new Error('Ed25519 Seed needs to be 32 bytes long.');
        }
        const { publicKey, secretKey } = seed === undefined ? tweetnacl.sign.keyPair() : tweetnacl.sign.keyPair.fromSeed(seed);
        return new this(Ed25519PublicKey.fromRaw(publicKey), secretKey);
    }
    static fromParsedJson(obj) {
        const [publicKeyDer, privateKeyRaw] = obj;
        return new Ed25519KeyIdentity(Ed25519PublicKey.fromDer(fromHexString(publicKeyDer)), fromHexString(privateKeyRaw));
    }
    static fromJSON(json) {
        const parsed = JSON.parse(json);
        if (Array.isArray(parsed)) {
            if (typeof parsed[0] === 'string' && typeof parsed[1] === 'string') {
                return this.fromParsedJson([parsed[0], parsed[1]]);
            }
            else {
                throw new Error('Deserialization error: JSON must have at least 2 items.');
            }
        }
        throw new Error(`Deserialization error: Invalid JSON type for string: ${JSON.stringify(json)}`);
    }
    static fromKeyPair(publicKey, privateKey) {
        return new Ed25519KeyIdentity(Ed25519PublicKey.fromRaw(publicKey), privateKey);
    }
    static fromSecretKey(secretKey) {
        const keyPair = tweetnacl.sign.keyPair.fromSecretKey(new Uint8Array(secretKey));
        return Ed25519KeyIdentity.fromKeyPair(keyPair.publicKey, keyPair.secretKey);
    }
    /**
     * Serialize this key to JSON.
     */
    toJSON() {
        return [toHexString(this._publicKey.toDer()), toHexString(this._privateKey)];
    }
    /**
     * Return a copy of the key pair.
     */
    getKeyPair() {
        return {
            secretKey: this._privateKey,
            publicKey: this._publicKey,
        };
    }
    /**
     * Return the public key.
     */
    getPublicKey() {
        return this._publicKey;
    }
    /**
     * Signs a blob of data, with this identity's private key.
     * @param challenge - challenge to sign with this identity's secretKey, producing a signature
     */
    async sign(challenge) {
        const blob = new Uint8Array(challenge);
        const signature = tweetnacl.sign.detached(blob, new Uint8Array(this._privateKey)).buffer;
        return signature;
    }
}
//# sourceMappingURL=ed25519.js.map
// EXTERNAL MODULE: ./node_modules/secp256k1/elliptic.js
var elliptic = __webpack_require__(7221);
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/identity/lib/esm/identity/secp256k1.js






class Secp256k1PublicKey {
    // `fromRaw` and `fromDer` should be used for instantiation, not this constructor.
    constructor(key) {
        key.byteLength;
        this.rawKey = key;
        this.derKey = Secp256k1PublicKey.derEncode(key);
    }
    /**
     * Construct Secp256k1PublicKey from an existing PublicKey
     * @param {PublicKey} key
     * @returns {Secp256k1PublicKey} Instance of Secp256k1PublicKey
     */
    static from(key) {
        return this.fromDer(key.toDer());
    }
    static fromRaw(rawKey) {
        return new Secp256k1PublicKey(rawKey);
    }
    static fromDer(derKey) {
        return new Secp256k1PublicKey(this.derDecode(derKey));
    }
    static derEncode(publicKey) {
        return wrapDER(publicKey, SECP256K1_OID).buffer;
    }
    static derDecode(key) {
        return unwrapDER(key, SECP256K1_OID);
    }
    toDer() {
        return this.derKey;
    }
    toRaw() {
        return this.rawKey;
    }
}
class Secp256k1KeyIdentity extends (/* unused pure expression or super */ null && (SignIdentity)) {
    constructor(publicKey, _privateKey) {
        super();
        this._privateKey = _privateKey;
        this._publicKey = publicKey;
    }
    /**
     * Generates an identity. If a seed is provided, the keys are generated from the
     * seed according to BIP 0032. Otherwise, the key pair is randomly generated.
     * This method throws an error in case the seed is not 32 bytes long or invalid
     * for use as a private key.
     * @param {Uint8Array} seed the optional seed
     * @returns {Secp256k1KeyIdentity}
     */
    static generate(seed) {
        if (seed && seed.byteLength !== 32) {
            throw new Error('Secp256k1 Seed needs to be 32 bytes long.');
        }
        let privateKey;
        if (seed) {
            // private key from seed according to https://en.bitcoin.it/wiki/BIP_0032
            // master key generation:
            privateKey = seed;
            if (!Secp256k1.privateKeyVerify(privateKey)) {
                throw new Error('The seed is invalid.');
            }
        }
        else {
            privateKey = new Uint8Array(randomBytes(32));
            while (!Secp256k1.privateKeyVerify(privateKey)) {
                privateKey = new Uint8Array(randomBytes(32));
            }
        }
        const publicKeyRaw = Secp256k1.publicKeyCreate(privateKey, false);
        const publicKey = Secp256k1PublicKey.fromRaw(publicKeyRaw);
        return new this(publicKey, privateKey);
    }
    static fromParsedJson(obj) {
        const [publicKeyRaw, privateKeyRaw] = obj;
        return new Secp256k1KeyIdentity(Secp256k1PublicKey.fromRaw(fromHexString(publicKeyRaw)), fromHexString(privateKeyRaw));
    }
    static fromJSON(json) {
        const parsed = JSON.parse(json);
        if (Array.isArray(parsed)) {
            if (typeof parsed[0] === 'string' && typeof parsed[1] === 'string') {
                return this.fromParsedJson([parsed[0], parsed[1]]);
            }
            throw new Error('Deserialization error: JSON must have at least 2 items.');
        }
        throw new Error(`Deserialization error: Invalid JSON type for string: ${JSON.stringify(json)}`);
    }
    /**
     * generates an identity from a public and private key. Please ensure that you are generating these keys securely and protect the user's private key
     * @param {ArrayBuffer} publicKey
     * @param {ArrayBuffer} privateKey
     * @returns {Secp256k1KeyIdentity}
     */
    static fromKeyPair(publicKey, privateKey) {
        return new Secp256k1KeyIdentity(Secp256k1PublicKey.fromRaw(publicKey), privateKey);
    }
    /**
     * generates an identity from an existing secret key, and is the correct method to generate an identity from a seed phrase. Please ensure you protect the user's private key.
     * @param {ArrayBuffer} secretKey
     * @returns {Secp256k1KeyIdentity}
     */
    static fromSecretKey(secretKey) {
        const publicKey = Secp256k1.publicKeyCreate(new Uint8Array(secretKey), false);
        const identity = Secp256k1KeyIdentity.fromKeyPair(publicKey, new Uint8Array(secretKey));
        return identity;
    }
    /**
     * Serialize this key to JSON-serializable object.
     * @returns {JsonableSecp256k1Identity}
     */
    toJSON() {
        return [toHexString(this._publicKey.toRaw()), toHexString(this._privateKey)];
    }
    /**
     * Return a copy of the key pair.
     * @returns {KeyPair}
     */
    getKeyPair() {
        return {
            secretKey: this._privateKey,
            publicKey: this._publicKey,
        };
    }
    /**
     * Return the public key.
     * @returns {Secp256k1PublicKey}
     */
    getPublicKey() {
        return this._publicKey;
    }
    /**
     * Signs a blob of data, with this identity's private key.
     * @param {ArrayBuffer} challenge - challenge to sign with this identity's secretKey, producing a signature
     * @returns {Promise<Signature>} signature
     */
    async sign(challenge) {
        const hash = sha256.create();
        hash.update(challenge);
        const signature = Secp256k1.ecdsaSign(new Uint8Array(hash.digest()), new Uint8Array(this._privateKey)).signature.buffer;
        return signature;
    }
}
/* harmony default export */ const secp256k1 = ((/* unused pure expression or super */ null && (Secp256k1KeyIdentity)));
//# sourceMappingURL=secp256k1.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/identity/lib/esm/buffer.js
/**
 * Return an array buffer from its hexadecimal representation.
 * @param hexString The hexadecimal string.
 */
function esm_buffer_fromHexString(hexString) {
    var _a;
    return new Uint8Array(((_a = hexString.match(/.{1,2}/g)) !== null && _a !== void 0 ? _a : []).map(byte => parseInt(byte, 16))).buffer;
}
/**
 * Returns an hexadecimal representation of an array buffer.
 * @param bytes The array buffer.
 */
function esm_buffer_toHexString(bytes) {
    return new Uint8Array(bytes).reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');
}
//# sourceMappingURL=buffer.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/identity/lib/esm/identity/delegation.js
var delegation_rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};




const delegation_domainSeparator = new TextEncoder().encode('\x1Aic-request-auth-delegation');
const requestDomainSeparator = new TextEncoder().encode('\x0Aic-request');
function _parseBlob(value) {
    if (typeof value !== 'string' || value.length < 64) {
        throw new Error('Invalid public key.');
    }
    return esm_buffer_fromHexString(value);
}
/**
 * A single delegation object that is signed by a private key. This is constructed by
 * `DelegationChain.create()`.
 *
 * {@see DelegationChain}
 */
class Delegation {
    constructor(pubkey, expiration, targets) {
        this.pubkey = pubkey;
        this.expiration = expiration;
        this.targets = targets;
    }
    toCBOR() {
        // Expiration field needs to be encoded as a u64 specifically.
        return simple_cbor_src.value.map(Object.assign({ pubkey: simple_cbor_src.value.bytes(this.pubkey), expiration: simple_cbor_src.value.u64(this.expiration.toString(16), 16) }, (this.targets && {
            targets: simple_cbor_src.value.array(this.targets.map(t => simple_cbor_src.value.bytes(t.toUint8Array()))),
        })));
    }
    toJSON() {
        // every string should be hex and once-de-hexed,
        // discoverable what it is (e.g. de-hex to get JSON with a 'type' property, or de-hex to DER
        // with an OID). After de-hex, if it's not obvious what it is, it's an ArrayBuffer.
        return Object.assign({ expiration: this.expiration.toString(16), pubkey: esm_buffer_toHexString(this.pubkey) }, (this.targets && { targets: this.targets.map(p => p.toHex()) }));
    }
}
/**
 * Sign a single delegation object for a period of time.
 *
 * @param from The identity that lends its delegation.
 * @param to The identity that receives the delegation.
 * @param expiration An expiration date for this delegation.
 * @param targets Limit this delegation to the target principals.
 */
async function _createSingleDelegation(from, to, expiration, targets) {
    const delegation = new Delegation(to.toDer(), BigInt(+expiration) * BigInt(1000000), // In nanoseconds.
    targets);
    // The signature is calculated by signing the concatenation of the domain separator
    // and the message.
    // Note: To ensure Safari treats this as a user gesture, ensure to not use async methods
    // besides the actualy webauthn functionality (such as `sign`). Safari will de-register
    // a user gesture if you await an async call thats not fetch, xhr, or setTimeout.
    const challenge = new Uint8Array([
        ...delegation_domainSeparator,
        ...new Uint8Array(request_id_requestIdOf(delegation)),
    ]);
    const signature = await from.sign(challenge);
    return {
        delegation,
        signature,
    };
}
/**
 * A chain of delegations. This is JSON Serializable.
 * This is the object to serialize and pass to a DelegationIdentity. It does not keep any
 * private keys.
 */
class DelegationChain {
    constructor(delegations, publicKey) {
        this.delegations = delegations;
        this.publicKey = publicKey;
    }
    /**
     * Create a delegation chain between two (or more) keys. By default, the expiration time
     * will be very short (15 minutes).
     *
     * To build a chain of more than 2 identities, this function needs to be called multiple times,
     * passing the previous delegation chain into the options argument. For example:
     *
     * @example
     * const rootKey = createKey();
     * const middleKey = createKey();
     * const bottomeKey = createKey();
     *
     * const rootToMiddle = await DelegationChain.create(
     *   root, middle.getPublicKey(), Date.parse('2100-01-01'),
     * );
     * const middleToBottom = await DelegationChain.create(
     *   middle, bottom.getPublicKey(), Date.parse('2100-01-01'), { previous: rootToMiddle },
     * );
     *
     * // We can now use a delegation identity that uses the delegation above:
     * const identity = DelegationIdentity.fromDelegation(bottomKey, middleToBottom);
     *
     * @param from The identity that will delegate.
     * @param to The identity that gets delegated. It can now sign messages as if it was the
     *           identity above.
     * @param expiration The length the delegation is valid. By default, 15 minutes from calling
     *                   this function.
     * @param options A set of options for this delegation. expiration and previous
     * @param options.previous - Another DelegationChain that this chain should start with.
     * @param options.targets - targets that scope the delegation (e.g. Canister Principals)
     */
    static async create(from, to, expiration = new Date(Date.now() + 15 * 60 * 1000), options = {}) {
        var _a, _b;
        const delegation = await _createSingleDelegation(from, to, expiration, options.targets);
        return new DelegationChain([...(((_a = options.previous) === null || _a === void 0 ? void 0 : _a.delegations) || []), delegation], ((_b = options.previous) === null || _b === void 0 ? void 0 : _b.publicKey) || from.getPublicKey().toDer());
    }
    /**
     * Creates a DelegationChain object from a JSON string.
     *
     * @param json The JSON string to parse.
     */
    static fromJSON(json) {
        const { publicKey, delegations } = typeof json === 'string' ? JSON.parse(json) : json;
        if (!Array.isArray(delegations)) {
            throw new Error('Invalid delegations.');
        }
        const parsedDelegations = delegations.map(signedDelegation => {
            const { delegation, signature } = signedDelegation;
            const { pubkey, expiration, targets } = delegation;
            if (targets !== undefined && !Array.isArray(targets)) {
                throw new Error('Invalid targets.');
            }
            return {
                delegation: new Delegation(_parseBlob(pubkey), BigInt(`0x${expiration}`), // expiration in JSON is an hexa string (See toJSON() below).
                targets &&
                    targets.map((t) => {
                        if (typeof t !== 'string') {
                            throw new Error('Invalid target.');
                        }
                        return esm_Principal.fromHex(t);
                    })),
                signature: _parseBlob(signature),
            };
        });
        return new this(parsedDelegations, _parseBlob(publicKey));
    }
    /**
     * Creates a DelegationChain object from a list of delegations and a DER-encoded public key.
     *
     * @param delegations The list of delegations.
     * @param publicKey The DER-encoded public key of the key-pair signing the first delegation.
     */
    static fromDelegations(delegations, publicKey) {
        return new this(delegations, publicKey);
    }
    toJSON() {
        return {
            delegations: this.delegations.map(signedDelegation => {
                const { delegation, signature } = signedDelegation;
                const { targets } = delegation;
                return {
                    delegation: Object.assign({ expiration: delegation.expiration.toString(16), pubkey: esm_buffer_toHexString(delegation.pubkey) }, (targets && {
                        targets: targets.map(t => t.toHex()),
                    })),
                    signature: esm_buffer_toHexString(signature),
                };
            }),
            publicKey: esm_buffer_toHexString(this.publicKey),
        };
    }
}
/**
 * An Identity that adds delegation to a request. Everywhere in this class, the name
 * innerKey refers to the SignIdentity that is being used to sign the requests, while
 * originalKey is the identity that is being borrowed. More identities can be used
 * in the middle to delegate.
 */
class DelegationIdentity extends (/* unused pure expression or super */ null && (SignIdentity)) {
    constructor(_inner, _delegation) {
        super();
        this._inner = _inner;
        this._delegation = _delegation;
    }
    /**
     * Create a delegation without having access to delegateKey.
     *
     * @param key The key used to sign the reqyests.
     * @param delegation A delegation object created using `createDelegation`.
     */
    static fromDelegation(key, delegation) {
        return new this(key, delegation);
    }
    getDelegation() {
        return this._delegation;
    }
    getPublicKey() {
        return {
            toDer: () => this._delegation.publicKey,
        };
    }
    sign(blob) {
        return this._inner.sign(blob);
    }
    async transformRequest(request) {
        const { body } = request, fields = delegation_rest(request, ["body"]);
        const requestId = await requestIdOf(body);
        return Object.assign(Object.assign({}, fields), { body: {
                content: body,
                sender_sig: await this.sign(new Uint8Array([...requestDomainSeparator, ...new Uint8Array(requestId)])),
                sender_delegation: this._delegation.delegations,
                sender_pubkey: this._delegation.publicKey,
            } });
    }
}
//# sourceMappingURL=delegation.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/identity/lib/esm/identity/webauthn.js





function _coseToDerEncodedBlob(cose) {
    return wrapDER(cose, DER_COSE_OID).buffer;
}
/**
 * From the documentation;
 * The authData is a byte array described in the spec. Parsing it will involve slicing bytes from
 * the array and converting them into usable objects.
 *
 * See https://webauthn.guide/#registration (subsection "Example: Parsing the authenticator data").
 *
 * @param authData The authData field of the attestation response.
 * @returns The COSE key of the authData.
 */
function _authDataToCose(authData) {
    const dataView = new DataView(new ArrayBuffer(2));
    const idLenBytes = authData.slice(53, 55);
    [...new Uint8Array(idLenBytes)].forEach((v, i) => dataView.setUint8(i, v));
    const credentialIdLength = dataView.getUint16(0);
    // Get the public key object.
    return authData.slice(55 + credentialIdLength);
}
class CosePublicKey {
    constructor(_cose) {
        this._cose = _cose;
        this._encodedKey = _coseToDerEncodedBlob(_cose);
    }
    toDer() {
        return this._encodedKey;
    }
    getCose() {
        return this._cose;
    }
}
/**
 * Create a challenge from a string or array. The default challenge is always the same
 * because we don't need to verify the authenticity of the key on the server (we don't
 * register our keys with the IC). Any challenge would do, even one per key, randomly
 * generated.
 *
 * @param challenge The challenge to transform into a byte array. By default a hard
 *        coded string.
 */
function _createChallengeBuffer(challenge = '<ic0.app>') {
    if (typeof challenge === 'string') {
        return Uint8Array.from(challenge, c => c.charCodeAt(0));
    }
    else {
        return challenge;
    }
}
/**
 * Create a credentials to authenticate with a server. This is necessary in order in
 * WebAuthn to get credentials IDs (which give us the public key and allow us to
 * sign), but in the case of the Internet Computer, we don't actually need to register
 * it, so we don't.
 * @param credentialCreationOptions an optional CredentialCreationOptions object
 */
async function _createCredential(credentialCreationOptions) {
    const creds = (await navigator.credentials.create(credentialCreationOptions !== null && credentialCreationOptions !== void 0 ? credentialCreationOptions : {
        publicKey: {
            authenticatorSelection: {
                userVerification: 'preferred',
            },
            attestation: 'direct',
            challenge: _createChallengeBuffer(),
            pubKeyCredParams: [{ type: 'public-key', alg: PubKeyCoseAlgo.ECDSA_WITH_SHA256 }],
            rp: {
                name: 'Internet Identity Service',
            },
            user: {
                id: tweetnacl.randomBytes(16),
                name: 'Internet Identity',
                displayName: 'Internet Identity',
            },
        },
    }));
    // Validate that it's the correct type at runtime, since WebAuthn does not HAVE to
    // reply with a PublicKeyCredential.
    if (creds.response === undefined || !(creds.rawId instanceof ArrayBuffer)) {
        return null;
    }
    else {
        return creds;
    }
}
// See https://www.iana.org/assignments/cose/cose.xhtml#algorithms for a complete
// list of these algorithms. We only list the ones we support here.
var PubKeyCoseAlgo;
(function (PubKeyCoseAlgo) {
    PubKeyCoseAlgo[PubKeyCoseAlgo["ECDSA_WITH_SHA256"] = -7] = "ECDSA_WITH_SHA256";
})(PubKeyCoseAlgo || (PubKeyCoseAlgo = {}));
/**
 * A SignIdentity that uses `navigator.credentials`. See https://webauthn.guide/ for
 * more information about WebAuthentication.
 */
class WebAuthnIdentity extends (/* unused pure expression or super */ null && (SignIdentity)) {
    constructor(rawId, cose) {
        super();
        this.rawId = rawId;
        this._publicKey = new CosePublicKey(cose);
    }
    /**
     * Create an identity from a JSON serialization.
     * @param json - json to parse
     */
    static fromJSON(json) {
        const { publicKey, rawId } = JSON.parse(json);
        if (typeof publicKey !== 'string' || typeof rawId !== 'string') {
            throw new Error('Invalid JSON string.');
        }
        return new this(fromHexString(rawId), fromHexString(publicKey));
    }
    /**
     * Create an identity.
     * @param credentialCreationOptions an optional CredentialCreationOptions Challenge
     */
    static async create(credentialCreationOptions) {
        const creds = await _createCredential(credentialCreationOptions);
        if (!creds || creds.type !== 'public-key') {
            throw new Error('Could not create credentials.');
        }
        const response = creds.response;
        if (!(response.attestationObject instanceof ArrayBuffer)) {
            throw new Error('Was expecting an attestation response.');
        }
        // Parse the attestationObject as CBOR.
        const attObject = borc.decodeFirst(new Uint8Array(response.attestationObject));
        return new this(creds.rawId, _authDataToCose(attObject.authData));
    }
    getPublicKey() {
        return this._publicKey;
    }
    async sign(blob) {
        const result = (await navigator.credentials.get({
            publicKey: {
                allowCredentials: [
                    {
                        type: 'public-key',
                        id: this.rawId,
                    },
                ],
                challenge: blob,
                userVerification: 'preferred',
            },
        }));
        const response = result.response;
        if (response.signature instanceof ArrayBuffer &&
            response.authenticatorData instanceof ArrayBuffer) {
            const cbor = borc.encode(new borc.Tagged(55799, {
                authenticator_data: new Uint8Array(response.authenticatorData),
                client_data_json: new TextDecoder().decode(response.clientDataJSON),
                signature: new Uint8Array(response.signature),
            }));
            if (!cbor) {
                throw new Error('failed to encode cbor');
            }
            return cbor.buffer;
        }
        else {
            throw new Error('Invalid response from WebAuthn.');
        }
    }
    /**
     * Allow for JSON serialization of all information needed to reuse this identity.
     */
    toJSON() {
        return {
            publicKey: toHexString(this._publicKey.getCose()),
            rawId: toHexString(this.rawId),
        };
    }
}
//# sourceMappingURL=webauthn.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/node_modules/@dfinity/identity/lib/esm/index.js





//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/ic-stoic-identity/src/index.js






window.Buffer = buffer/* Buffer */.lW;
const src_domainSeparator = buffer/* Buffer.from */.lW.from(new TextEncoder().encode('\x0Aic-request'));
var _stoicOrigin = 'https://www.stoicwallet.com';
//Identity
class PublicKey {
  constructor(der, type){
    this._der = der;
    this._type = type;
  };
  getType() {
    return this._type;
  };
  toDer() {
    return this._der;
  };
};
class StoicIdentity extends auth_SignIdentity {
  constructor(principal, pubkey) {
    super();
    this._principal = principal;
    this._publicKey = pubkey;
  };
  
  static disconnect() {
    return _stoicLogout();
  };
  
  static connect(host) {
    return new Promise(async (resolve, reject) => {
      if (host) _stoicOrigin = host;
      _stoicLogin(_stoicOrigin).then(data => {
        resolve(new StoicIdentity(esm_Principal.fromText(data.principal), new PublicKey(data.key, data.type)));
      }).catch(reject);
    });
  };
  
  static load(host) {
    return new Promise(async (resolve, reject) => {
      if (host) _stoicOrigin = host;
      var result = _stoicInit();
      if (result === false) {
        resolve(false);
      } else {
        var id = new StoicIdentity(esm_Principal.fromText(result.principal), new PublicKey(result.key, result.type));
        id.accounts().then(r => {
          resolve(id);          
        }).catch(e => {
          console.log(e);
          resolve(false);
        });
      };
    });
  };
  
  getPublicKey() {
    return this._publicKey;
  };
  
  sign(data) {
    return this._transport(buf2hex(data));
  };
  _transport(data) {
    return _stoicSign("sign", data, this.getPrincipal().toText());
  };
  accounts() {
    return _stoicSign("accounts", "accounts", this.getPrincipal().toText());
  };
  transformRequest(request) {
    return new Promise(async (resolve, reject) => {
      try {
        const { body, ...fields } = request;
        const requestId = await request_id_requestIdOf(body)
        const pubkey = this.getPublicKey();
        var response = {
          ...fields,
          body : {
            content: body,
          }
        };
        const result = JSON.parse(await this.sign(buffer/* Buffer.from */.lW.from(buffer/* Buffer.concat */.lW.concat([src_domainSeparator, new Uint8Array(requestId)]))));
        response.body.sender_sig = hex2buf(result.signed);
        if (pubkey.getType() == "DelegationIdentity") {
          var DIC = DelegationChain.fromJSON(result.chain);
          response.body.sender_pubkey = DIC.publicKey;
          response.body.sender_delegation = DIC.delegations;
        } else {
          response.body.sender_pubkey = new Uint8Array(Object.values(pubkey.toDer()));
        }
        resolve(response);
      } catch (e) {
        reject(e);
      }
    });
  };
};

//Login and sign calls
var _stoicWindow, _stoicWindowCB, _stoicApiKey, _stoicApp, _listenerIndex = 0, _listener = {}, _frames = {};
const _stoicInit = () => {
  _stoicApp = JSON.parse(localStorage.getItem("_scApp"));
  return _stoicApp ? _stoicApp : false;
};
const _stoicLogout = () => {
  localStorage.removeItem("_scApp");
  _stoicApiKey = '';
  _stoicApp = null;
};
const _stoicLogin = (host) => {
  return new Promise(async (resolve, reject) => {
    var app = await _generateKey();
    _stoicApiKey = app.apikey;
    _stoicWindow = window.open(host+'?authorizeApp', 'stoic');
    _stoicWindowCB = [r => {
      app.principal = r.principal;
      app.key = r.key;
      app.type = r.type;
      _stoicApp = app;
      localStorage.setItem("_scApp", JSON.stringify(app));
      resolve(app);
    }, reject];
  });
};
const _stoicSign = (action, payload, principal) => {
  return new Promise(async function(resolve, reject){
    var enc = new TextEncoder();
    var encdata = enc.encode(payload);
    var privk = await window.crypto.subtle.importKey(
      "jwk",
      _stoicApp.secretkey,
      {
        name: "ECDSA",
        namedCurve: "P-384"
      },
      true,
      ["sign"]
    );
    var signed = await window.crypto.subtle.sign(
      {
        name: "ECDSA",
        hash: {name: "SHA-384"},
      },
      privk,
      encdata
    );
    var sig = buf2hex(signed);
    _postToFrame({
      target :  "STOIC-IFRAME",
      action : action,
      payload : payload,
      principal : principal,
      apikey : _stoicApp.apikey,
      sig : sig
    }, resolve, reject);
  });  
}

//Private functions
function _generateKey() {
  return new Promise(async (resolve, reject) => {
    var keypair = await window.crypto.subtle.generateKey({
      name: "ECDSA",
      namedCurve: "P-384"},
      true,
      ["sign", "verify"]);
    var pubk = await window.crypto.subtle.exportKey(
      "spki",
      keypair.publicKey
    );
    var secretkey = await window.crypto.subtle.exportKey(
      "jwk",
      keypair.privateKey
    );
    resolve({
      principal : "",
      key : "",
      type : "",
      secretkey : secretkey,
      apikey : buf2hex(pubk),
    });
  });
}
function _removeFrame(id) {
  _frames[id].parentNode.removeChild(_frames[id]);
};
function _postToFrame(data, resolve, reject) {
    var thisIndex = _listenerIndex;
    _listenerIndex += 1;
    _listener[thisIndex] = [resolve, reject];
    var ii = document.createElement('iframe');
    ii.setAttribute('id', 'connect_iframe'+thisIndex);
    ii.setAttribute('width', '0');
    ii.setAttribute('height', '0');
    ii.setAttribute('border', '0');
    document.body.appendChild(ii);
    _frames[thisIndex] = document.getElementById('connect_iframe'+thisIndex);
    _frames[thisIndex].addEventListener("load", function() {
      data.listener = thisIndex;
      _frames[thisIndex].contentWindow.postMessage(data, "*");      
    });
    ii.setAttribute('src', _stoicOrigin+'/?stoicTunnel');
};
function buf2hex(buffer) {
  return [...new Uint8Array(buffer)]
    .map(x => x.toString(16).padStart(2, '0'))
    .join('');
}
function hex2buf(hex) {
  const view = new Uint8Array(hex.length / 2)
  for (let i = 0; i < hex.length; i += 2) {
    view[i / 2] = parseInt(hex.substring(i, i + 2), 16)
  }
  return view
}
const deserialize = (d) => {
  return Cbor.decode(hex2buf(d));
};
const serialize = (d) => {
  return buf2hex(Cbor.encode(d));
};

//Message handler
window.addEventListener("message", function(e){
  if (e.origin == _stoicOrigin) {
    if (e && e.data && e.data.target === 'STOIC-EXT') {
      if (typeof e.data.success != 'undefined' && e.data.success){
        _listener[e.data.listener][0](e.data.data);      
      } else {
        _listener[e.data.listener][1](e.data.data);      
      }
      _removeFrame(e.data.listener);
    }else if (e.data.action == "initiateStoicConnect") {      
      _stoicWindow.postMessage({action : "requestAuthorization", apikey : _stoicApiKey}, "*");
    } else if (e.data.action == "rejectAuthorization") {      
      _stoicWindowCB[1]("Authorization Rejected");
      _stoicWindowCB = null;
      _stoicWindow.close();
    } else if (e.data.action == "confirmAuthorization") {
      _stoicWindowCB[0](e.data);
      _stoicWindowCB = null;
      _stoicWindow.close();
    } 
  }
  return;
}, false);
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/agent/api.js
/**
 * Codes used by the replica for rejecting a message.
 * See {@link https://sdk.dfinity.org/docs/interface-spec/#reject-codes | the interface spec}.
 */
var agent_api_ReplicaRejectCode;
(function (ReplicaRejectCode) {
    ReplicaRejectCode[ReplicaRejectCode["SysFatal"] = 1] = "SysFatal";
    ReplicaRejectCode[ReplicaRejectCode["SysTransient"] = 2] = "SysTransient";
    ReplicaRejectCode[ReplicaRejectCode["DestinationInvalid"] = 3] = "DestinationInvalid";
    ReplicaRejectCode[ReplicaRejectCode["CanisterReject"] = 4] = "CanisterReject";
    ReplicaRejectCode[ReplicaRejectCode["CanisterError"] = 5] = "CanisterError";
})(agent_api_ReplicaRejectCode || (agent_api_ReplicaRejectCode = {}));
//# sourceMappingURL=api.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/principal/lib/esm/utils/base32.js
// tslint:disable:no-bitwise
const base32_alphabet = 'abcdefghijklmnopqrstuvwxyz234567';
// Build a lookup table for decoding.
const base32_lookupTable = Object.create(null);
for (let i = 0; i < base32_alphabet.length; i++) {
    base32_lookupTable[base32_alphabet[i]] = i;
}
// Add aliases for rfc4648.
base32_lookupTable['0'] = base32_lookupTable.o;
base32_lookupTable['1'] = base32_lookupTable.i;
/**
 * @param input The input array to encode.
 * @returns A Base32 string encoding the input.
 */
function base32_encode(input) {
    // How many bits will we skip from the first byte.
    let skip = 0;
    // 5 high bits, carry from one byte to the next.
    let bits = 0;
    // The output string in base32.
    let output = '';
    function encodeByte(byte) {
        if (skip < 0) {
            // we have a carry from the previous byte
            bits |= byte >> -skip;
        }
        else {
            // no carry
            bits = (byte << skip) & 248;
        }
        if (skip > 3) {
            // Not enough data to produce a character, get us another one
            skip -= 8;
            return 1;
        }
        if (skip < 4) {
            // produce a character
            output += base32_alphabet[bits >> 3];
            skip += 5;
        }
        return 0;
    }
    for (let i = 0; i < input.length;) {
        i += encodeByte(input[i]);
    }
    return output + (skip < 0 ? base32_alphabet[bits >> 3] : '');
}
/**
 * @param input The base32 encoded string to decode.
 */
function base32_decode(input) {
    // how many bits we have from the previous character.
    let skip = 0;
    // current byte we're producing.
    let byte = 0;
    const output = new Uint8Array(((input.length * 4) / 3) | 0);
    let o = 0;
    function decodeChar(char) {
        // Consume a character from the stream, store
        // the output in this.output. As before, better
        // to use update().
        let val = base32_lookupTable[char.toLowerCase()];
        if (val === undefined) {
            throw new Error(`Invalid character: ${JSON.stringify(char)}`);
        }
        // move to the high bits
        val <<= 3;
        byte |= val >>> skip;
        skip += 5;
        if (skip >= 8) {
            // We have enough bytes to produce an output
            output[o++] = byte;
            skip -= 8;
            if (skip > 0) {
                byte = (val << (5 - skip)) & 255;
            }
            else {
                byte = 0;
            }
        }
    }
    for (const c of input) {
        decodeChar(c);
    }
    return output.slice(0, o);
}
//# sourceMappingURL=base32.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/principal/lib/esm/utils/getCrc.js
// tslint:disable:no-bitwise
// This file is translated to JavaScript from
// https://lxp32.github.io/docs/a-simple-example-crc32-calculation/
const getCrc_lookUpTable = new Uint32Array([
    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,
    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,
    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,
    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,
    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,
    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,
    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,
    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,
    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,
    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,
    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,
    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,
    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,
    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,
    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,
    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,
    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,
    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,
    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,
    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,
    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,
    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,
    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,
    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,
    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,
    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,
    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,
    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,
    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,
    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,
    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,
    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,
]);
/**
 * Calculate the CRC32 of an ArrayBufferLike.
 * @param buf The BufferLike to calculate the CRC32 of.
 */
function getCrc_getCrc32(buf) {
    const b = new Uint8Array(buf);
    let crc = -1;
    // tslint:disable-next-line:prefer-for-of
    for (let i = 0; i < b.length; i++) {
        const byte = b[i];
        const t = (byte ^ crc) & 0xff;
        crc = getCrc_lookUpTable[t] ^ (crc >>> 8);
    }
    return (crc ^ -1) >>> 0;
}
//# sourceMappingURL=getCrc.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/principal/lib/esm/utils/sha224.js

/**
 * Returns the SHA224 hash of the buffer.
 * @param data Arraybuffer to encode
 */
function sha224_sha224(data) {
    const shaObj = src_sha256.sha224.create();
    shaObj.update(data);
    return new Uint8Array(shaObj.array());
}
//# sourceMappingURL=sha224.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/principal/lib/esm/index.js



const esm_SELF_AUTHENTICATING_SUFFIX = 2;
const esm_ANONYMOUS_SUFFIX = 4;
const MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR = 'aaaaa-aa';
const lib_esm_fromHexString = (hexString) => { var _a; return new Uint8Array(((_a = hexString.match(/.{1,2}/g)) !== null && _a !== void 0 ? _a : []).map(byte => parseInt(byte, 16))); };
const lib_esm_toHexString = (bytes) => bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');
class lib_esm_Principal {
    constructor(_arr) {
        this._arr = _arr;
        this._isPrincipal = true;
    }
    static anonymous() {
        return new this(new Uint8Array([esm_ANONYMOUS_SUFFIX]));
    }
    /**
     * Utility method, returning the principal representing the management canister, decoded from the hex string `'aaaaa-aa'`
     * @returns {Principal} principal of the management canister
     */
    static managementCanister() {
        return this.fromHex(MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR);
    }
    static selfAuthenticating(publicKey) {
        const sha = sha224_sha224(publicKey);
        return new this(new Uint8Array([...sha, esm_SELF_AUTHENTICATING_SUFFIX]));
    }
    static from(other) {
        if (typeof other === 'string') {
            return lib_esm_Principal.fromText(other);
        }
        else if (typeof other === 'object' &&
            other !== null &&
            other._isPrincipal === true) {
            return new lib_esm_Principal(other._arr);
        }
        throw new Error(`Impossible to convert ${JSON.stringify(other)} to Principal.`);
    }
    static fromHex(hex) {
        return new this(lib_esm_fromHexString(hex));
    }
    static fromText(text) {
        const canisterIdNoDash = text.toLowerCase().replace(/-/g, '');
        let arr = base32_decode(canisterIdNoDash);
        arr = arr.slice(4, arr.length);
        const principal = new this(arr);
        if (principal.toText() !== text) {
            throw new Error(`Principal "${principal.toText()}" does not have a valid checksum (original value "${text}" may not be a valid Principal ID).`);
        }
        return principal;
    }
    static fromUint8Array(arr) {
        return new this(arr);
    }
    isAnonymous() {
        return this._arr.byteLength === 1 && this._arr[0] === esm_ANONYMOUS_SUFFIX;
    }
    toUint8Array() {
        return this._arr;
    }
    toHex() {
        return lib_esm_toHexString(this._arr).toUpperCase();
    }
    toText() {
        const checksumArrayBuf = new ArrayBuffer(4);
        const view = new DataView(checksumArrayBuf);
        view.setUint32(0, getCrc_getCrc32(this._arr));
        const checksum = new Uint8Array(checksumArrayBuf);
        const bytes = Uint8Array.from(this._arr);
        const array = new Uint8Array([...checksum, ...bytes]);
        const result = base32_encode(array);
        const matches = result.match(/.{1,5}/g);
        if (!matches) {
            // This should only happen if there's no character, which is unreachable.
            throw new Error();
        }
        return matches.join('-');
    }
    toString() {
        return this.toText();
    }
    /**
     * Utility method taking a Principal to compare against. Used for determining canister ranges in certificate verification
     * @param {Principal} other - a {@link Principal} to compare
     * @returns {'lt' | 'eq' | 'gt'} `'lt' | 'eq' | 'gt'` a string, representing less than, equal to, or greater than
     */
    compareTo(other) {
        for (let i = 0; i < Math.min(this._arr.length, other._arr.length); i++) {
            if (this._arr[i] < other._arr[i])
                return 'lt';
            else if (this._arr[i] > other._arr[i])
                return 'gt';
        }
        // Here, at least one principal is a prefix of the other principal (they could be the same)
        if (this._arr.length < other._arr.length)
            return 'lt';
        if (this._arr.length > other._arr.length)
            return 'gt';
        return 'eq';
    }
    /**
     * Utility method checking whether a provided Principal is less than or equal to the current one using the {@link Principal.compareTo} method
     * @param other a {@link Principal} to compare
     * @returns {boolean} boolean
     */
    ltEq(other) {
        const cmp = this.compareTo(other);
        return cmp == 'lt' || cmp == 'eq';
    }
    /**
     * Utility method checking whether a provided Principal is greater than or equal to the current one using the {@link Principal.compareTo} method
     * @param other a {@link Principal} to compare
     * @returns {boolean} boolean
     */
    gtEq(other) {
        const cmp = this.compareTo(other);
        return cmp == 'gt' || cmp == 'eq';
    }
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/errors.js
/**
 * An error that happens in the Agent. This is the root of all errors and should be used
 * everywhere in the Agent code (this package).
 *
 * @todo https://github.com/dfinity/agent-js/issues/420
 */
class esm_errors_AgentError extends Error {
    constructor(message) {
        super(message);
        this.message = message;
        Object.setPrototypeOf(this, esm_errors_AgentError.prototype);
    }
}
//# sourceMappingURL=errors.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/candid/lib/esm/utils/buffer.js
/**
 * Concatenate multiple array buffers.
 * @param buffers The buffers to concatenate.
 */
function esm_utils_buffer_concat(...buffers) {
    const result = new Uint8Array(buffers.reduce((acc, curr) => acc + curr.byteLength, 0));
    let index = 0;
    for (const b of buffers) {
        result.set(new Uint8Array(b), index);
        index += b.byteLength;
    }
    return result;
}
/**
 * Returns an hexadecimal representation of an array buffer.
 * @param bytes The array buffer.
 */
function utils_buffer_toHexString(bytes) {
    return new Uint8Array(bytes).reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');
}
/**
 * Return an array buffer from its hexadecimal representation.
 * @param hexString The hexadecimal string.
 */
function utils_buffer_fromHexString(hexString) {
    var _a;
    return new Uint8Array(((_a = hexString.match(/.{1,2}/g)) !== null && _a !== void 0 ? _a : []).map(byte => parseInt(byte, 16)));
}
/**
 * A class that abstracts a pipe-like ArrayBuffer.
 */
class utils_buffer_PipeArrayBuffer {
    /**
     * Creates a new instance of a pipe
     * @param buffer an optional buffer to start with
     * @param length an optional amount of bytes to use for the length.
     */
    constructor(buffer, length = (buffer === null || buffer === void 0 ? void 0 : buffer.byteLength) || 0) {
        this._buffer = buffer || new ArrayBuffer(0);
        this._view = new Uint8Array(this._buffer, 0, length);
    }
    get buffer() {
        // Return a copy of the buffer.
        return this._view.slice();
    }
    get byteLength() {
        return this._view.byteLength;
    }
    /**
     * Read `num` number of bytes from the front of the pipe.
     * @param num The number of bytes to read.
     */
    read(num) {
        const result = this._view.subarray(0, num);
        this._view = this._view.subarray(num);
        return result.slice().buffer;
    }
    readUint8() {
        const result = this._view[0];
        this._view = this._view.subarray(1);
        return result;
    }
    /**
     * Write a buffer to the end of the pipe.
     * @param buf The bytes to write.
     */
    write(buf) {
        const b = new Uint8Array(buf);
        const offset = this._view.byteLength;
        if (this._view.byteOffset + this._view.byteLength + b.byteLength >= this._buffer.byteLength) {
            // Alloc grow the view to include the new bytes.
            this.alloc(b.byteLength);
        }
        else {
            // Update the view to include the new bytes.
            this._view = new Uint8Array(this._buffer, this._view.byteOffset, this._view.byteLength + b.byteLength);
        }
        this._view.set(b, offset);
    }
    /**
     * Whether or not there is more data to read from the buffer
     */
    get end() {
        return this._view.byteLength === 0;
    }
    /**
     * Allocate a fixed amount of memory in the buffer. This does not affect the view.
     * @param amount A number of bytes to add to the buffer.
     */
    alloc(amount) {
        // Add a little bit of exponential growth.
        // tslint:disable-next-line:no-bitwise
        const b = new ArrayBuffer(((this._buffer.byteLength + amount) * 1.2) | 0);
        const v = new Uint8Array(b, 0, this._view.byteLength + amount);
        v.set(this._view);
        this._buffer = b;
        this._view = v;
    }
}
//# sourceMappingURL=buffer.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/candid/lib/esm/utils/hash.js
/**
 * Hashes a string to a number. Algorithm can be found here:
 * https://caml.inria.fr/pub/papers/garrigue-polymorphic_variants-ml98.pdf
 * @param s
 */
function idlHash(s) {
    const utf8encoder = new TextEncoder();
    const array = utf8encoder.encode(s);
    let h = 0;
    for (const c of array) {
        h = (h * 223 + c) % 2 ** 32;
    }
    return h;
}
/**
 *
 * @param label string
 * @returns number representing hashed label
 */
function hash_idlLabelToId(label) {
    if (/^_\d+_$/.test(label) || /^_0x[0-9a-fA-F]+_$/.test(label)) {
        const num = +label.slice(1, -1);
        if (Number.isSafeInteger(num) && num >= 0 && num < 2 ** 32) {
            return num;
        }
    }
    return idlHash(label);
}
//# sourceMappingURL=hash.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/candid/lib/esm/utils/leb128.js
/* eslint-disable no-constant-condition */
// tslint:disable:no-bitwise
// Note: this file uses buffer-pipe, which on Node only, uses the Node Buffer
//       implementation, which isn't compatible with the NPM buffer package
//       which we use everywhere else. This means that we have to transform
//       one into the other, hence why every function that returns a Buffer
//       actually return `new Buffer(pipe.buffer)`.
// TODO: The best solution would be to have our own buffer type around
//       Uint8Array which is standard.

function leb128_eob() {
    throw new Error('unexpected end of buffer');
}
/**
 *
 * @param pipe Pipe from buffer-pipe
 * @param num number
 * @returns Buffer
 */
function utils_leb128_safeRead(pipe, num) {
    if (pipe.byteLength < num) {
        leb128_eob();
    }
    return pipe.read(num);
}
/**
 * @param pipe
 */
function utils_leb128_safeReadUint8(pipe) {
    const byte = pipe.readUint8();
    if (byte === undefined) {
        leb128_eob();
    }
    return byte;
}
/**
 * Encode a positive number (or bigint) into a Buffer. The number will be floored to the
 * nearest integer.
 * @param value The number to encode.
 */
function utils_leb128_lebEncode(value) {
    if (typeof value === 'number') {
        value = BigInt(value);
    }
    if (value < BigInt(0)) {
        throw new Error('Cannot leb encode negative values.');
    }
    const byteLength = (value === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(value)))) + 1;
    const pipe = new utils_buffer_PipeArrayBuffer(new ArrayBuffer(byteLength), 0);
    while (true) {
        const i = Number(value & BigInt(0x7f));
        value /= BigInt(0x80);
        if (value === BigInt(0)) {
            pipe.write(new Uint8Array([i]));
            break;
        }
        else {
            pipe.write(new Uint8Array([i | 0x80]));
        }
    }
    return pipe.buffer;
}
/**
 * Decode a leb encoded buffer into a bigint. The number will always be positive (does not
 * support signed leb encoding).
 * @param pipe A Buffer containing the leb encoded bits.
 */
function utils_leb128_lebDecode(pipe) {
    let weight = BigInt(1);
    let value = BigInt(0);
    let byte;
    do {
        byte = utils_leb128_safeReadUint8(pipe);
        value += BigInt(byte & 0x7f).valueOf() * weight;
        weight *= BigInt(128);
    } while (byte >= 0x80);
    return value;
}
/**
 * Encode a number (or bigint) into a Buffer, with support for negative numbers. The number
 * will be floored to the nearest integer.
 * @param value The number to encode.
 */
function utils_leb128_slebEncode(value) {
    if (typeof value === 'number') {
        value = BigInt(value);
    }
    const isNeg = value < BigInt(0);
    if (isNeg) {
        value = -value - BigInt(1);
    }
    const byteLength = (value === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(value)))) + 1;
    const pipe = new utils_buffer_PipeArrayBuffer(new ArrayBuffer(byteLength), 0);
    while (true) {
        const i = getLowerBytes(value);
        value /= BigInt(0x80);
        // prettier-ignore
        if ((isNeg && value === BigInt(0) && (i & 0x40) !== 0)
            || (!isNeg && value === BigInt(0) && (i & 0x40) === 0)) {
            pipe.write(new Uint8Array([i]));
            break;
        }
        else {
            pipe.write(new Uint8Array([i | 0x80]));
        }
    }
    function getLowerBytes(num) {
        const bytes = num % BigInt(0x80);
        if (isNeg) {
            // We swap the bits here again, and remove 1 to do two's complement.
            return Number(BigInt(0x80) - bytes - BigInt(1));
        }
        else {
            return Number(bytes);
        }
    }
    return pipe.buffer;
}
/**
 * Decode a leb encoded buffer into a bigint. The number is decoded with support for negative
 * signed-leb encoding.
 * @param pipe A Buffer containing the signed leb encoded bits.
 */
function utils_leb128_slebDecode(pipe) {
    // Get the size of the buffer, then cut a buffer of that size.
    const pipeView = new Uint8Array(pipe.buffer);
    let len = 0;
    for (; len < pipeView.byteLength; len++) {
        if (pipeView[len] < 0x80) {
            // If it's a positive number, we reuse lebDecode.
            if ((pipeView[len] & 0x40) === 0) {
                return utils_leb128_lebDecode(pipe);
            }
            break;
        }
    }
    const bytes = new Uint8Array(utils_leb128_safeRead(pipe, len + 1));
    let value = BigInt(0);
    for (let i = bytes.byteLength - 1; i >= 0; i--) {
        value = value * BigInt(0x80) + BigInt(0x80 - (bytes[i] & 0x7f) - 1);
    }
    return -value - BigInt(1);
}
/**
 *
 * @param value bigint or number
 * @param byteLength number
 * @returns Buffer
 */
function leb128_writeUIntLE(value, byteLength) {
    if (BigInt(value) < BigInt(0)) {
        throw new Error('Cannot write negative values.');
    }
    return leb128_writeIntLE(value, byteLength);
}
/**
 *
 * @param value
 * @param byteLength
 */
function leb128_writeIntLE(value, byteLength) {
    value = BigInt(value);
    const pipe = new utils_buffer_PipeArrayBuffer(new ArrayBuffer(Math.min(1, byteLength)), 0);
    let i = 0;
    let mul = BigInt(256);
    let sub = BigInt(0);
    let byte = Number(value % mul);
    pipe.write(new Uint8Array([byte]));
    while (++i < byteLength) {
        if (value < 0 && sub === BigInt(0) && byte !== 0) {
            sub = BigInt(1);
        }
        byte = Number((value / mul - sub) % BigInt(256));
        pipe.write(new Uint8Array([byte]));
        mul *= BigInt(256);
    }
    return pipe.buffer;
}
/**
 *
 * @param pipe Pipe from buffer-pipe
 * @param byteLength number
 * @returns bigint
 */
function leb128_readUIntLE(pipe, byteLength) {
    let val = BigInt(utils_leb128_safeReadUint8(pipe));
    let mul = BigInt(1);
    let i = 0;
    while (++i < byteLength) {
        mul *= BigInt(256);
        const byte = BigInt(utils_leb128_safeReadUint8(pipe));
        val = val + mul * byte;
    }
    return val;
}
/**
 *
 * @param pipe Pipe from buffer-pipe
 * @param byteLength number
 * @returns bigint
 */
function leb128_readIntLE(pipe, byteLength) {
    let val = leb128_readUIntLE(pipe, byteLength);
    const mul = BigInt(2) ** (BigInt(8) * BigInt(byteLength - 1) + BigInt(7));
    if (val >= mul) {
        val -= mul * BigInt(2);
    }
    return val;
}
//# sourceMappingURL=leb128.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/candid/lib/esm/utils/bigint-math.js
/**
 * Equivalent to `Math.log2(n)` with support for `BigInt` values
 *
 * @param n bigint or integer
 * @returns integer
 */
function ilog2(n) {
    const nBig = BigInt(n);
    if (n <= 0) {
        throw new RangeError('Input must be positive');
    }
    return nBig.toString(2).length - 1;
}
/**
 * Equivalent to `2 ** n` with support for `BigInt` values
 * (necessary for browser preprocessors which replace the `**` operator with `Math.pow`)
 *
 * @param n bigint or integer
 * @returns bigint
 */
function iexp2(n) {
    const nBig = BigInt(n);
    if (n < 0) {
        throw new RangeError('Input must be non-negative');
    }
    return BigInt(1) << nBig;
}
//# sourceMappingURL=bigint-math.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/candid/lib/esm/idl.js
// tslint:disable:max-classes-per-file





const idl_magicNumber = 'DIDL';
function idl_zipWith(xs, ys, f) {
    return xs.map((x, i) => f(x, ys[i]));
}
/**
 * An IDL Type Table, which precedes the data in the stream.
 */
class idl_TypeTable {
    constructor() {
        // List of types. Needs to be an array as the index needs to be stable.
        this._typs = [];
        this._idx = new Map();
    }
    has(obj) {
        return this._idx.has(obj.name);
    }
    add(type, buf) {
        const idx = this._typs.length;
        this._idx.set(type.name, idx);
        this._typs.push(buf);
    }
    merge(obj, knot) {
        const idx = this._idx.get(obj.name);
        const knotIdx = this._idx.get(knot);
        if (idx === undefined) {
            throw new Error('Missing type index for ' + obj);
        }
        if (knotIdx === undefined) {
            throw new Error('Missing type index for ' + knot);
        }
        this._typs[idx] = this._typs[knotIdx];
        // Delete the type.
        this._typs.splice(knotIdx, 1);
        this._idx.delete(knot);
    }
    encode() {
        const len = utils_leb128_lebEncode(this._typs.length);
        const buf = esm_utils_buffer_concat(...this._typs);
        return esm_utils_buffer_concat(len, buf);
    }
    indexOf(typeName) {
        if (!this._idx.has(typeName)) {
            throw new Error('Missing type index for ' + typeName);
        }
        return utils_leb128_slebEncode(this._idx.get(typeName) || 0);
    }
}
class idl_Visitor {
    visitType(t, data) {
        throw new Error('Not implemented');
    }
    visitPrimitive(t, data) {
        return this.visitType(t, data);
    }
    visitEmpty(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitBool(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitNull(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitReserved(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitText(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitNumber(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitInt(t, data) {
        return this.visitNumber(t, data);
    }
    visitNat(t, data) {
        return this.visitNumber(t, data);
    }
    visitFloat(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitFixedInt(t, data) {
        return this.visitNumber(t, data);
    }
    visitFixedNat(t, data) {
        return this.visitNumber(t, data);
    }
    visitPrincipal(t, data) {
        return this.visitPrimitive(t, data);
    }
    visitConstruct(t, data) {
        return this.visitType(t, data);
    }
    visitVec(t, ty, data) {
        return this.visitConstruct(t, data);
    }
    visitOpt(t, ty, data) {
        return this.visitConstruct(t, data);
    }
    visitRecord(t, fields, data) {
        return this.visitConstruct(t, data);
    }
    visitTuple(t, components, data) {
        const fields = components.map((ty, i) => [`_${i}_`, ty]);
        return this.visitRecord(t, fields, data);
    }
    visitVariant(t, fields, data) {
        return this.visitConstruct(t, data);
    }
    visitRec(t, ty, data) {
        return this.visitConstruct(ty, data);
    }
    visitFunc(t, data) {
        return this.visitConstruct(t, data);
    }
    visitService(t, data) {
        return this.visitConstruct(t, data);
    }
}
/**
 * Represents an IDL type.
 */
class idl_Type {
    /* Display type name */
    display() {
        return this.name;
    }
    valueToString(x) {
        return idl_toReadableString(x);
    }
    /* Implement `T` in the IDL spec, only needed for non-primitive types */
    buildTypeTable(typeTable) {
        if (!typeTable.has(this)) {
            this._buildTypeTableImpl(typeTable);
        }
    }
}
class idl_PrimitiveType extends idl_Type {
    checkType(t) {
        if (this.name !== t.name) {
            throw new Error(`type mismatch: type on the wire ${t.name}, expect type ${this.name}`);
        }
        return t;
    }
    _buildTypeTableImpl(typeTable) {
        // No type table encoding for Primitive types.
        return;
    }
}
class idl_ConstructType extends idl_Type {
    checkType(t) {
        if (t instanceof idl_RecClass) {
            const ty = t.getType();
            if (typeof ty === 'undefined') {
                throw new Error('type mismatch with uninitialized type');
            }
            return ty;
        }
        throw new Error(`type mismatch: type on the wire ${t.name}, expect type ${this.name}`);
    }
    encodeType(typeTable) {
        return typeTable.indexOf(this.name);
    }
}
/**
 * Represents an IDL Empty, a type which has no inhabitants.
 * Since no values exist for this type, it cannot be serialised or deserialised.
 * Result types like `Result<Text, Empty>` should always succeed.
 */
class idl_EmptyClass extends idl_PrimitiveType {
    accept(v, d) {
        return v.visitEmpty(this, d);
    }
    covariant(x) {
        return false;
    }
    encodeValue() {
        throw new Error('Empty cannot appear as a function argument');
    }
    valueToString() {
        throw new Error('Empty cannot appear as a value');
    }
    encodeType() {
        return utils_leb128_slebEncode(-17 /* IDLTypeIds.Empty */);
    }
    decodeValue() {
        throw new Error('Empty cannot appear as an output');
    }
    get name() {
        return 'empty';
    }
}
/**
 * Represents an IDL Unknown, a placeholder type for deserialization only.
 * When decoding a value as Unknown, all fields will be retained but the names are only available in
 * hashed form.
 * A deserialized unknown will offer it's actual type by calling the `type()` function.
 * Unknown cannot be serialized and attempting to do so will throw an error.
 */
class UnknownClass extends idl_Type {
    checkType(t) {
        throw new Error('Method not implemented for unknown.');
    }
    accept(v, d) {
        throw v.visitType(this, d);
    }
    covariant(x) {
        return false;
    }
    encodeValue() {
        throw new Error('Unknown cannot appear as a function argument');
    }
    valueToString() {
        throw new Error('Unknown cannot appear as a value');
    }
    encodeType() {
        throw new Error('Unknown cannot be serialized');
    }
    decodeValue(b, t) {
        let decodedValue = t.decodeValue(b, t);
        if (Object(decodedValue) !== decodedValue) {
            // decodedValue is primitive. Box it, otherwise we cannot add the type() function.
            // The type() function is important for primitives because otherwise we cannot tell apart the
            // different number types.
            decodedValue = Object(decodedValue);
        }
        let typeFunc;
        if (t instanceof idl_RecClass) {
            typeFunc = () => t.getType();
        }
        else {
            typeFunc = () => t;
        }
        // Do not use 'decodedValue.type = typeFunc' because this would lead to an enumerable property
        // 'type' which means it would be serialized if the value would be candid encoded again.
        // This in turn leads to problems if the decoded value is a variant because these values are
        // only allowed to have a single property.
        Object.defineProperty(decodedValue, 'type', {
            value: typeFunc,
            writable: true,
            enumerable: false,
            configurable: true,
        });
        return decodedValue;
    }
    _buildTypeTableImpl() {
        throw new Error('Unknown cannot be serialized');
    }
    get name() {
        return 'Unknown';
    }
}
/**
 * Represents an IDL Bool
 */
class idl_BoolClass extends idl_PrimitiveType {
    accept(v, d) {
        return v.visitBool(this, d);
    }
    covariant(x) {
        return typeof x === 'boolean';
    }
    encodeValue(x) {
        return new Uint8Array([x ? 1 : 0]);
    }
    encodeType() {
        return utils_leb128_slebEncode(-2 /* IDLTypeIds.Bool */);
    }
    decodeValue(b, t) {
        this.checkType(t);
        switch (utils_leb128_safeReadUint8(b)) {
            case 0:
                return false;
            case 1:
                return true;
            default:
                throw new Error('Boolean value out of range');
        }
    }
    get name() {
        return 'bool';
    }
}
/**
 * Represents an IDL Null
 */
class idl_NullClass extends idl_PrimitiveType {
    accept(v, d) {
        return v.visitNull(this, d);
    }
    covariant(x) {
        return x === null;
    }
    encodeValue() {
        return new ArrayBuffer(0);
    }
    encodeType() {
        return utils_leb128_slebEncode(-1 /* IDLTypeIds.Null */);
    }
    decodeValue(b, t) {
        this.checkType(t);
        return null;
    }
    get name() {
        return 'null';
    }
}
/**
 * Represents an IDL Reserved
 */
class idl_ReservedClass extends idl_PrimitiveType {
    accept(v, d) {
        return v.visitReserved(this, d);
    }
    covariant(x) {
        return true;
    }
    encodeValue() {
        return new ArrayBuffer(0);
    }
    encodeType() {
        return utils_leb128_slebEncode(-16 /* IDLTypeIds.Reserved */);
    }
    decodeValue(b, t) {
        if (t.name !== this.name) {
            t.decodeValue(b, t);
        }
        return null;
    }
    get name() {
        return 'reserved';
    }
}
/**
 * Represents an IDL Text
 */
class idl_TextClass extends idl_PrimitiveType {
    accept(v, d) {
        return v.visitText(this, d);
    }
    covariant(x) {
        return typeof x === 'string';
    }
    encodeValue(x) {
        const buf = new TextEncoder().encode(x);
        const len = utils_leb128_lebEncode(buf.byteLength);
        return esm_utils_buffer_concat(len, buf);
    }
    encodeType() {
        return utils_leb128_slebEncode(-15 /* IDLTypeIds.Text */);
    }
    decodeValue(b, t) {
        this.checkType(t);
        const len = utils_leb128_lebDecode(b);
        const buf = utils_leb128_safeRead(b, Number(len));
        const decoder = new TextDecoder('utf8', { fatal: true });
        return decoder.decode(buf);
    }
    get name() {
        return 'text';
    }
    valueToString(x) {
        return '"' + x + '"';
    }
}
/**
 * Represents an IDL Int
 */
class idl_IntClass extends idl_PrimitiveType {
    accept(v, d) {
        return v.visitInt(this, d);
    }
    covariant(x) {
        // We allow encoding of JavaScript plain numbers.
        // But we will always decode to bigint.
        return typeof x === 'bigint' || Number.isInteger(x);
    }
    encodeValue(x) {
        return utils_leb128_slebEncode(x);
    }
    encodeType() {
        return utils_leb128_slebEncode(-4 /* IDLTypeIds.Int */);
    }
    decodeValue(b, t) {
        this.checkType(t);
        return utils_leb128_slebDecode(b);
    }
    get name() {
        return 'int';
    }
    valueToString(x) {
        return x.toString();
    }
}
/**
 * Represents an IDL Nat
 */
class idl_NatClass extends idl_PrimitiveType {
    accept(v, d) {
        return v.visitNat(this, d);
    }
    covariant(x) {
        // We allow encoding of JavaScript plain numbers.
        // But we will always decode to bigint.
        return (typeof x === 'bigint' && x >= BigInt(0)) || (Number.isInteger(x) && x >= 0);
    }
    encodeValue(x) {
        return utils_leb128_lebEncode(x);
    }
    encodeType() {
        return utils_leb128_slebEncode(-3 /* IDLTypeIds.Nat */);
    }
    decodeValue(b, t) {
        this.checkType(t);
        return utils_leb128_lebDecode(b);
    }
    get name() {
        return 'nat';
    }
    valueToString(x) {
        return x.toString();
    }
}
/**
 * Represents an IDL Float
 */
class idl_FloatClass extends idl_PrimitiveType {
    constructor(_bits) {
        super();
        this._bits = _bits;
        if (_bits !== 32 && _bits !== 64) {
            throw new Error('not a valid float type');
        }
    }
    accept(v, d) {
        return v.visitFloat(this, d);
    }
    covariant(x) {
        return typeof x === 'number' || x instanceof Number;
    }
    encodeValue(x) {
        const buf = new ArrayBuffer(this._bits / 8);
        const view = new DataView(buf);
        if (this._bits === 32) {
            view.setFloat32(0, x, true);
        }
        else {
            view.setFloat64(0, x, true);
        }
        return buf;
    }
    encodeType() {
        const opcode = this._bits === 32 ? -13 /* IDLTypeIds.Float32 */ : -14 /* IDLTypeIds.Float64 */;
        return utils_leb128_slebEncode(opcode);
    }
    decodeValue(b, t) {
        this.checkType(t);
        const bytes = utils_leb128_safeRead(b, this._bits / 8);
        const view = new DataView(bytes);
        if (this._bits === 32) {
            return view.getFloat32(0, true);
        }
        else {
            return view.getFloat64(0, true);
        }
    }
    get name() {
        return 'float' + this._bits;
    }
    valueToString(x) {
        return x.toString();
    }
}
/**
 * Represents an IDL fixed-width Int(n)
 */
class idl_FixedIntClass extends idl_PrimitiveType {
    constructor(_bits) {
        super();
        this._bits = _bits;
    }
    accept(v, d) {
        return v.visitFixedInt(this, d);
    }
    covariant(x) {
        const min = iexp2(this._bits - 1) * BigInt(-1);
        const max = iexp2(this._bits - 1) - BigInt(1);
        if (typeof x === 'bigint') {
            return x >= min && x <= max;
        }
        else if (Number.isInteger(x)) {
            const v = BigInt(x);
            return v >= min && v <= max;
        }
        else {
            return false;
        }
    }
    encodeValue(x) {
        return leb128_writeIntLE(x, this._bits / 8);
    }
    encodeType() {
        const offset = Math.log2(this._bits) - 3;
        return utils_leb128_slebEncode(-9 - offset);
    }
    decodeValue(b, t) {
        this.checkType(t);
        const num = leb128_readIntLE(b, this._bits / 8);
        if (this._bits <= 32) {
            return Number(num);
        }
        else {
            return num;
        }
    }
    get name() {
        return `int${this._bits}`;
    }
    valueToString(x) {
        return x.toString();
    }
}
/**
 * Represents an IDL fixed-width Nat(n)
 */
class idl_FixedNatClass extends idl_PrimitiveType {
    constructor(_bits) {
        super();
        this._bits = _bits;
    }
    accept(v, d) {
        return v.visitFixedNat(this, d);
    }
    covariant(x) {
        const max = iexp2(this._bits);
        if (typeof x === 'bigint' && x >= BigInt(0)) {
            return x < max;
        }
        else if (Number.isInteger(x) && x >= 0) {
            const v = BigInt(x);
            return v < max;
        }
        else {
            return false;
        }
    }
    encodeValue(x) {
        return leb128_writeUIntLE(x, this._bits / 8);
    }
    encodeType() {
        const offset = Math.log2(this._bits) - 3;
        return utils_leb128_slebEncode(-5 - offset);
    }
    decodeValue(b, t) {
        this.checkType(t);
        const num = leb128_readUIntLE(b, this._bits / 8);
        if (this._bits <= 32) {
            return Number(num);
        }
        else {
            return num;
        }
    }
    get name() {
        return `nat${this._bits}`;
    }
    valueToString(x) {
        return x.toString();
    }
}
/**
 * Represents an IDL Array
 *
 * Arrays of fixed-sized nat/int type (e.g. nat8), are encoded from and decoded to TypedArrays (e.g. Uint8Array).
 * Arrays of float or other non-primitive types are encoded/decoded as untyped array in Javascript.
 *
 * @param {Type} t
 */
class idl_VecClass extends idl_ConstructType {
    constructor(_type) {
        super();
        this._type = _type;
        // If true, this vector is really a blob and we can just use memcpy.
        //
        // NOTE:
        // With support of encoding/dencoding of TypedArrays, this optimization is
        // only used when plain array of bytes are passed as encoding input in order
        // to be backward compatible.
        this._blobOptimization = false;
        if (_type instanceof idl_FixedNatClass && _type._bits === 8) {
            this._blobOptimization = true;
        }
    }
    accept(v, d) {
        return v.visitVec(this, this._type, d);
    }
    covariant(x) {
        // Special case for ArrayBuffer
        const bits = this._type instanceof idl_FixedNatClass
            ? this._type._bits
            : this._type instanceof idl_FixedIntClass
                ? this._type._bits
                : 0;
        return ((ArrayBuffer.isView(x) && bits == x.BYTES_PER_ELEMENT * 8) ||
            (Array.isArray(x) && x.every(v => this._type.covariant(v))));
    }
    encodeValue(x) {
        const len = utils_leb128_lebEncode(x.length);
        if (this._blobOptimization) {
            return esm_utils_buffer_concat(len, new Uint8Array(x));
        }
        if (ArrayBuffer.isView(x)) {
            return esm_utils_buffer_concat(len, new Uint8Array(x.buffer));
        }
        const buf = new utils_buffer_PipeArrayBuffer(new ArrayBuffer(len.byteLength + x.length), 0);
        buf.write(len);
        for (const d of x) {
            const encoded = this._type.encodeValue(d);
            buf.write(new Uint8Array(encoded));
        }
        return buf.buffer;
    }
    _buildTypeTableImpl(typeTable) {
        this._type.buildTypeTable(typeTable);
        const opCode = utils_leb128_slebEncode(-19 /* IDLTypeIds.Vector */);
        const buffer = this._type.encodeType(typeTable);
        typeTable.add(this, esm_utils_buffer_concat(opCode, buffer));
    }
    decodeValue(b, t) {
        const vec = this.checkType(t);
        if (!(vec instanceof idl_VecClass)) {
            throw new Error('Not a vector type');
        }
        const len = Number(utils_leb128_lebDecode(b));
        if (this._type instanceof idl_FixedNatClass) {
            if (this._type._bits == 8) {
                return new Uint8Array(b.read(len));
            }
            if (this._type._bits == 16) {
                return new Uint16Array(b.read(len * 2));
            }
            if (this._type._bits == 32) {
                return new Uint32Array(b.read(len * 4));
            }
            if (this._type._bits == 64) {
                return new BigUint64Array(b.read(len * 8));
            }
        }
        if (this._type instanceof idl_FixedIntClass) {
            if (this._type._bits == 8) {
                return new Int8Array(b.read(len));
            }
            if (this._type._bits == 16) {
                return new Int16Array(b.read(len * 2));
            }
            if (this._type._bits == 32) {
                return new Int32Array(b.read(len * 4));
            }
            if (this._type._bits == 64) {
                return new BigInt64Array(b.read(len * 8));
            }
        }
        const rets = [];
        for (let i = 0; i < len; i++) {
            rets.push(this._type.decodeValue(b, vec._type));
        }
        return rets;
    }
    get name() {
        return `vec ${this._type.name}`;
    }
    display() {
        return `vec ${this._type.display()}`;
    }
    valueToString(x) {
        const elements = x.map(e => this._type.valueToString(e));
        return 'vec {' + elements.join('; ') + '}';
    }
}
/**
 * Represents an IDL Option
 * @param {Type} t
 */
class idl_OptClass extends idl_ConstructType {
    constructor(_type) {
        super();
        this._type = _type;
    }
    accept(v, d) {
        return v.visitOpt(this, this._type, d);
    }
    covariant(x) {
        return Array.isArray(x) && (x.length === 0 || (x.length === 1 && this._type.covariant(x[0])));
    }
    encodeValue(x) {
        if (x.length === 0) {
            return new Uint8Array([0]);
        }
        else {
            return esm_utils_buffer_concat(new Uint8Array([1]), this._type.encodeValue(x[0]));
        }
    }
    _buildTypeTableImpl(typeTable) {
        this._type.buildTypeTable(typeTable);
        const opCode = utils_leb128_slebEncode(-18 /* IDLTypeIds.Opt */);
        const buffer = this._type.encodeType(typeTable);
        typeTable.add(this, esm_utils_buffer_concat(opCode, buffer));
    }
    decodeValue(b, t) {
        const opt = this.checkType(t);
        if (!(opt instanceof idl_OptClass)) {
            throw new Error('Not an option type');
        }
        switch (utils_leb128_safeReadUint8(b)) {
            case 0:
                return [];
            case 1:
                return [this._type.decodeValue(b, opt._type)];
            default:
                throw new Error('Not an option value');
        }
    }
    get name() {
        return `opt ${this._type.name}`;
    }
    display() {
        return `opt ${this._type.display()}`;
    }
    valueToString(x) {
        if (x.length === 0) {
            return 'null';
        }
        else {
            return `opt ${this._type.valueToString(x[0])}`;
        }
    }
}
/**
 * Represents an IDL Record
 * @param {Object} [fields] - mapping of function name to Type
 */
class idl_RecordClass extends idl_ConstructType {
    constructor(fields = {}) {
        super();
        this._fields = Object.entries(fields).sort((a, b) => hash_idlLabelToId(a[0]) - hash_idlLabelToId(b[0]));
    }
    accept(v, d) {
        return v.visitRecord(this, this._fields, d);
    }
    tryAsTuple() {
        const res = [];
        for (let i = 0; i < this._fields.length; i++) {
            const [key, type] = this._fields[i];
            if (key !== `_${i}_`) {
                return null;
            }
            res.push(type);
        }
        return res;
    }
    covariant(x) {
        return (typeof x === 'object' &&
            this._fields.every(([k, t]) => {
                // eslint-disable-next-line
                if (!x.hasOwnProperty(k)) {
                    throw new Error(`Record is missing key "${k}".`);
                }
                return t.covariant(x[k]);
            }));
    }
    encodeValue(x) {
        const values = this._fields.map(([key]) => x[key]);
        const bufs = idl_zipWith(this._fields, values, ([, c], d) => c.encodeValue(d));
        return esm_utils_buffer_concat(...bufs);
    }
    _buildTypeTableImpl(T) {
        this._fields.forEach(([_, value]) => value.buildTypeTable(T));
        const opCode = utils_leb128_slebEncode(-20 /* IDLTypeIds.Record */);
        const len = utils_leb128_lebEncode(this._fields.length);
        const fields = this._fields.map(([key, value]) => esm_utils_buffer_concat(utils_leb128_lebEncode(hash_idlLabelToId(key)), value.encodeType(T)));
        T.add(this, esm_utils_buffer_concat(opCode, len, esm_utils_buffer_concat(...fields)));
    }
    decodeValue(b, t) {
        const record = this.checkType(t);
        if (!(record instanceof idl_RecordClass)) {
            throw new Error('Not a record type');
        }
        const x = {};
        let expectedRecordIdx = 0;
        let actualRecordIdx = 0;
        while (actualRecordIdx < record._fields.length) {
            const [hash, type] = record._fields[actualRecordIdx];
            if (expectedRecordIdx >= this._fields.length) {
                // skip unexpected left over fields present on the wire
                type.decodeValue(b, type);
                actualRecordIdx++;
                continue;
            }
            const [expectKey, expectType] = this._fields[expectedRecordIdx];
            if (hash_idlLabelToId(this._fields[expectedRecordIdx][0]) !== hash_idlLabelToId(hash)) {
                // the current field on the wire does not match the expected field
                // skip expected optional fields that are not present on the wire
                if (expectType instanceof idl_OptClass || expectType instanceof idl_ReservedClass) {
                    x[expectKey] = [];
                    expectedRecordIdx++;
                    continue;
                }
                // skip unexpected interspersed fields present on the wire
                type.decodeValue(b, type);
                actualRecordIdx++;
                continue;
            }
            x[expectKey] = expectType.decodeValue(b, type);
            expectedRecordIdx++;
            actualRecordIdx++;
        }
        // initialize left over expected optional fields
        for (const [expectKey, expectType] of this._fields.slice(expectedRecordIdx)) {
            if (expectType instanceof idl_OptClass || expectType instanceof idl_ReservedClass) {
                // TODO this assumes null value in opt is represented as []
                x[expectKey] = [];
            }
            else {
                throw new Error('Cannot find required field ' + expectKey);
            }
        }
        return x;
    }
    get name() {
        const fields = this._fields.map(([key, value]) => key + ':' + value.name);
        return `record {${fields.join('; ')}}`;
    }
    display() {
        const fields = this._fields.map(([key, value]) => key + ':' + value.display());
        return `record {${fields.join('; ')}}`;
    }
    valueToString(x) {
        const values = this._fields.map(([key]) => x[key]);
        const fields = idl_zipWith(this._fields, values, ([k, c], d) => k + '=' + c.valueToString(d));
        return `record {${fields.join('; ')}}`;
    }
}
/**
 * Represents Tuple, a syntactic sugar for Record.
 * @param {Type} components
 */
class idl_TupleClass extends idl_RecordClass {
    constructor(_components) {
        const x = {};
        _components.forEach((e, i) => (x['_' + i + '_'] = e));
        super(x);
        this._components = _components;
    }
    accept(v, d) {
        return v.visitTuple(this, this._components, d);
    }
    covariant(x) {
        // `>=` because tuples can be covariant when encoded.
        return (Array.isArray(x) &&
            x.length >= this._fields.length &&
            this._components.every((t, i) => t.covariant(x[i])));
    }
    encodeValue(x) {
        const bufs = idl_zipWith(this._components, x, (c, d) => c.encodeValue(d));
        return esm_utils_buffer_concat(...bufs);
    }
    decodeValue(b, t) {
        const tuple = this.checkType(t);
        if (!(tuple instanceof idl_TupleClass)) {
            throw new Error('not a tuple type');
        }
        if (tuple._components.length < this._components.length) {
            throw new Error('tuple mismatch');
        }
        const res = [];
        for (const [i, wireType] of tuple._components.entries()) {
            if (i >= this._components.length) {
                // skip value
                wireType.decodeValue(b, wireType);
            }
            else {
                res.push(this._components[i].decodeValue(b, wireType));
            }
        }
        return res;
    }
    display() {
        const fields = this._components.map(value => value.display());
        return `record {${fields.join('; ')}}`;
    }
    valueToString(values) {
        const fields = idl_zipWith(this._components, values, (c, d) => c.valueToString(d));
        return `record {${fields.join('; ')}}`;
    }
}
/**
 * Represents an IDL Variant
 * @param {Object} [fields] - mapping of function name to Type
 */
class idl_VariantClass extends idl_ConstructType {
    constructor(fields = {}) {
        super();
        this._fields = Object.entries(fields).sort((a, b) => hash_idlLabelToId(a[0]) - hash_idlLabelToId(b[0]));
    }
    accept(v, d) {
        return v.visitVariant(this, this._fields, d);
    }
    covariant(x) {
        return (typeof x === 'object' &&
            Object.entries(x).length === 1 &&
            this._fields.every(([k, v]) => {
                // eslint-disable-next-line
                return !x.hasOwnProperty(k) || v.covariant(x[k]);
            }));
    }
    encodeValue(x) {
        for (let i = 0; i < this._fields.length; i++) {
            const [name, type] = this._fields[i];
            // eslint-disable-next-line
            if (x.hasOwnProperty(name)) {
                const idx = utils_leb128_lebEncode(i);
                const buf = type.encodeValue(x[name]);
                return esm_utils_buffer_concat(idx, buf);
            }
        }
        throw Error('Variant has no data: ' + x);
    }
    _buildTypeTableImpl(typeTable) {
        this._fields.forEach(([, type]) => {
            type.buildTypeTable(typeTable);
        });
        const opCode = utils_leb128_slebEncode(-21 /* IDLTypeIds.Variant */);
        const len = utils_leb128_lebEncode(this._fields.length);
        const fields = this._fields.map(([key, value]) => esm_utils_buffer_concat(utils_leb128_lebEncode(hash_idlLabelToId(key)), value.encodeType(typeTable)));
        typeTable.add(this, esm_utils_buffer_concat(opCode, len, ...fields));
    }
    decodeValue(b, t) {
        const variant = this.checkType(t);
        if (!(variant instanceof idl_VariantClass)) {
            throw new Error('Not a variant type');
        }
        const idx = Number(utils_leb128_lebDecode(b));
        if (idx >= variant._fields.length) {
            throw Error('Invalid variant index: ' + idx);
        }
        const [wireHash, wireType] = variant._fields[idx];
        for (const [key, expectType] of this._fields) {
            if (hash_idlLabelToId(wireHash) === hash_idlLabelToId(key)) {
                const value = expectType.decodeValue(b, wireType);
                return { [key]: value };
            }
        }
        throw new Error('Cannot find field hash ' + wireHash);
    }
    get name() {
        const fields = this._fields.map(([key, type]) => key + ':' + type.name);
        return `variant {${fields.join('; ')}}`;
    }
    display() {
        const fields = this._fields.map(([key, type]) => key + (type.name === 'null' ? '' : `:${type.display()}`));
        return `variant {${fields.join('; ')}}`;
    }
    valueToString(x) {
        for (const [name, type] of this._fields) {
            // eslint-disable-next-line
            if (x.hasOwnProperty(name)) {
                const value = type.valueToString(x[name]);
                if (value === 'null') {
                    return `variant {${name}}`;
                }
                else {
                    return `variant {${name}=${value}}`;
                }
            }
        }
        throw new Error('Variant has no data: ' + x);
    }
}
/**
 * Represents a reference to an IDL type, used for defining recursive data
 * types.
 */
class idl_RecClass extends idl_ConstructType {
    constructor() {
        super(...arguments);
        this._id = idl_RecClass._counter++;
        this._type = undefined;
    }
    accept(v, d) {
        if (!this._type) {
            throw Error('Recursive type uninitialized.');
        }
        return v.visitRec(this, this._type, d);
    }
    fill(t) {
        this._type = t;
    }
    getType() {
        return this._type;
    }
    covariant(x) {
        return this._type ? this._type.covariant(x) : false;
    }
    encodeValue(x) {
        if (!this._type) {
            throw Error('Recursive type uninitialized.');
        }
        return this._type.encodeValue(x);
    }
    _buildTypeTableImpl(typeTable) {
        if (!this._type) {
            throw Error('Recursive type uninitialized.');
        }
        typeTable.add(this, new Uint8Array([]));
        this._type.buildTypeTable(typeTable);
        typeTable.merge(this, this._type.name);
    }
    decodeValue(b, t) {
        if (!this._type) {
            throw Error('Recursive type uninitialized.');
        }
        return this._type.decodeValue(b, t);
    }
    get name() {
        return `rec_${this._id}`;
    }
    display() {
        if (!this._type) {
            throw Error('Recursive type uninitialized.');
        }
        return `μ${this.name}.${this._type.name}`;
    }
    valueToString(x) {
        if (!this._type) {
            throw Error('Recursive type uninitialized.');
        }
        return this._type.valueToString(x);
    }
}
idl_RecClass._counter = 0;
function idl_decodePrincipalId(b) {
    const x = utils_leb128_safeReadUint8(b);
    if (x !== 1) {
        throw new Error('Cannot decode principal');
    }
    const len = Number(utils_leb128_lebDecode(b));
    return lib_esm_Principal.fromUint8Array(new Uint8Array(utils_leb128_safeRead(b, len)));
}
/**
 * Represents an IDL principal reference
 */
class idl_PrincipalClass extends idl_PrimitiveType {
    accept(v, d) {
        return v.visitPrincipal(this, d);
    }
    covariant(x) {
        return x && x._isPrincipal;
    }
    encodeValue(x) {
        const buf = x.toUint8Array();
        const len = utils_leb128_lebEncode(buf.byteLength);
        return esm_utils_buffer_concat(new Uint8Array([1]), len, buf);
    }
    encodeType() {
        return utils_leb128_slebEncode(-24 /* IDLTypeIds.Principal */);
    }
    decodeValue(b, t) {
        this.checkType(t);
        return idl_decodePrincipalId(b);
    }
    get name() {
        return 'principal';
    }
    valueToString(x) {
        return `${this.name} "${x.toText()}"`;
    }
}
/**
 * Represents an IDL function reference.
 * @param argTypes Argument types.
 * @param retTypes Return types.
 * @param annotations Function annotations.
 */
class idl_FuncClass extends idl_ConstructType {
    constructor(argTypes, retTypes, annotations = []) {
        super();
        this.argTypes = argTypes;
        this.retTypes = retTypes;
        this.annotations = annotations;
    }
    static argsToString(types, v) {
        if (types.length !== v.length) {
            throw new Error('arity mismatch');
        }
        return '(' + types.map((t, i) => t.valueToString(v[i])).join(', ') + ')';
    }
    accept(v, d) {
        return v.visitFunc(this, d);
    }
    covariant(x) {
        return (Array.isArray(x) && x.length === 2 && x[0] && x[0]._isPrincipal && typeof x[1] === 'string');
    }
    encodeValue([principal, methodName]) {
        const buf = principal.toUint8Array();
        const len = utils_leb128_lebEncode(buf.byteLength);
        const canister = esm_utils_buffer_concat(new Uint8Array([1]), len, buf);
        const method = new TextEncoder().encode(methodName);
        const methodLen = utils_leb128_lebEncode(method.byteLength);
        return esm_utils_buffer_concat(new Uint8Array([1]), canister, methodLen, method);
    }
    _buildTypeTableImpl(T) {
        this.argTypes.forEach(arg => arg.buildTypeTable(T));
        this.retTypes.forEach(arg => arg.buildTypeTable(T));
        const opCode = utils_leb128_slebEncode(-22 /* IDLTypeIds.Func */);
        const argLen = utils_leb128_lebEncode(this.argTypes.length);
        const args = esm_utils_buffer_concat(...this.argTypes.map(arg => arg.encodeType(T)));
        const retLen = utils_leb128_lebEncode(this.retTypes.length);
        const rets = esm_utils_buffer_concat(...this.retTypes.map(arg => arg.encodeType(T)));
        const annLen = utils_leb128_lebEncode(this.annotations.length);
        const anns = esm_utils_buffer_concat(...this.annotations.map(a => this.encodeAnnotation(a)));
        T.add(this, esm_utils_buffer_concat(opCode, argLen, args, retLen, rets, annLen, anns));
    }
    decodeValue(b) {
        const x = utils_leb128_safeReadUint8(b);
        if (x !== 1) {
            throw new Error('Cannot decode function reference');
        }
        const canister = idl_decodePrincipalId(b);
        const mLen = Number(utils_leb128_lebDecode(b));
        const buf = utils_leb128_safeRead(b, mLen);
        const decoder = new TextDecoder('utf8', { fatal: true });
        const method = decoder.decode(buf);
        return [canister, method];
    }
    get name() {
        const args = this.argTypes.map(arg => arg.name).join(', ');
        const rets = this.retTypes.map(arg => arg.name).join(', ');
        const annon = ' ' + this.annotations.join(' ');
        return `(${args}) -> (${rets})${annon}`;
    }
    valueToString([principal, str]) {
        return `func "${principal.toText()}".${str}`;
    }
    display() {
        const args = this.argTypes.map(arg => arg.display()).join(', ');
        const rets = this.retTypes.map(arg => arg.display()).join(', ');
        const annon = ' ' + this.annotations.join(' ');
        return `(${args}) → (${rets})${annon}`;
    }
    encodeAnnotation(ann) {
        if (ann === 'query') {
            return new Uint8Array([1]);
        }
        else if (ann === 'oneway') {
            return new Uint8Array([2]);
        }
        else {
            throw new Error('Illegal function annotation');
        }
    }
}
class idl_ServiceClass extends idl_ConstructType {
    constructor(fields) {
        super();
        this._fields = Object.entries(fields).sort((a, b) => hash_idlLabelToId(a[0]) - hash_idlLabelToId(b[0]));
    }
    accept(v, d) {
        return v.visitService(this, d);
    }
    covariant(x) {
        return x && x._isPrincipal;
    }
    encodeValue(x) {
        const buf = x.toUint8Array();
        const len = utils_leb128_lebEncode(buf.length);
        return esm_utils_buffer_concat(new Uint8Array([1]), len, buf);
    }
    _buildTypeTableImpl(T) {
        this._fields.forEach(([_, func]) => func.buildTypeTable(T));
        const opCode = utils_leb128_slebEncode(-23 /* IDLTypeIds.Service */);
        const len = utils_leb128_lebEncode(this._fields.length);
        const meths = this._fields.map(([label, func]) => {
            const labelBuf = new TextEncoder().encode(label);
            const labelLen = utils_leb128_lebEncode(labelBuf.length);
            return esm_utils_buffer_concat(labelLen, labelBuf, func.encodeType(T));
        });
        T.add(this, esm_utils_buffer_concat(opCode, len, ...meths));
    }
    decodeValue(b) {
        return idl_decodePrincipalId(b);
    }
    get name() {
        const fields = this._fields.map(([key, value]) => key + ':' + value.name);
        return `service {${fields.join('; ')}}`;
    }
    valueToString(x) {
        return `service "${x.toText()}"`;
    }
}
/**
 *
 * @param x
 * @returns {string}
 */
function idl_toReadableString(x) {
    return JSON.stringify(x, (_key, value) => typeof value === 'bigint' ? `BigInt(${value})` : value);
}
/**
 * Encode a array of values
 * @param argTypes
 * @param args
 * @returns {Buffer} serialised value
 */
function esm_idl_encode(argTypes, args) {
    if (args.length < argTypes.length) {
        throw Error('Wrong number of message arguments');
    }
    const typeTable = new idl_TypeTable();
    argTypes.forEach(t => t.buildTypeTable(typeTable));
    const magic = new TextEncoder().encode(idl_magicNumber);
    const table = typeTable.encode();
    const len = utils_leb128_lebEncode(args.length);
    const typs = esm_utils_buffer_concat(...argTypes.map(t => t.encodeType(typeTable)));
    const vals = esm_utils_buffer_concat(...idl_zipWith(argTypes, args, (t, x) => {
        if (!t.covariant(x)) {
            throw new Error(`Invalid ${t.display()} argument: ${idl_toReadableString(x)}`);
        }
        return t.encodeValue(x);
    }));
    return esm_utils_buffer_concat(magic, table, len, typs, vals);
}
/**
 * Decode a binary value
 * @param retTypes - Types expected in the buffer.
 * @param bytes - hex-encoded string, or buffer.
 * @returns Value deserialised to JS type
 */
function esm_idl_decode(retTypes, bytes) {
    const b = new utils_buffer_PipeArrayBuffer(bytes);
    if (bytes.byteLength < idl_magicNumber.length) {
        throw new Error('Message length smaller than magic number');
    }
    const magicBuffer = utils_leb128_safeRead(b, idl_magicNumber.length);
    const magic = new TextDecoder().decode(magicBuffer);
    if (magic !== idl_magicNumber) {
        throw new Error('Wrong magic number: ' + JSON.stringify(magic));
    }
    function readTypeTable(pipe) {
        const typeTable = [];
        const len = Number(utils_leb128_lebDecode(pipe));
        for (let i = 0; i < len; i++) {
            const ty = Number(utils_leb128_slebDecode(pipe));
            switch (ty) {
                case -18 /* IDLTypeIds.Opt */:
                case -19 /* IDLTypeIds.Vector */: {
                    const t = Number(utils_leb128_slebDecode(pipe));
                    typeTable.push([ty, t]);
                    break;
                }
                case -20 /* IDLTypeIds.Record */:
                case -21 /* IDLTypeIds.Variant */: {
                    const fields = [];
                    let objectLength = Number(utils_leb128_lebDecode(pipe));
                    let prevHash;
                    while (objectLength--) {
                        const hash = Number(utils_leb128_lebDecode(pipe));
                        if (hash >= Math.pow(2, 32)) {
                            throw new Error('field id out of 32-bit range');
                        }
                        if (typeof prevHash === 'number' && prevHash >= hash) {
                            throw new Error('field id collision or not sorted');
                        }
                        prevHash = hash;
                        const t = Number(utils_leb128_slebDecode(pipe));
                        fields.push([hash, t]);
                    }
                    typeTable.push([ty, fields]);
                    break;
                }
                case -22 /* IDLTypeIds.Func */: {
                    const args = [];
                    let argLength = Number(utils_leb128_lebDecode(pipe));
                    while (argLength--) {
                        args.push(Number(utils_leb128_slebDecode(pipe)));
                    }
                    const returnValues = [];
                    let returnValuesLength = Number(utils_leb128_lebDecode(pipe));
                    while (returnValuesLength--) {
                        returnValues.push(Number(utils_leb128_slebDecode(pipe)));
                    }
                    const annotations = [];
                    let annotationLength = Number(utils_leb128_lebDecode(pipe));
                    while (annotationLength--) {
                        const annotation = Number(utils_leb128_lebDecode(pipe));
                        switch (annotation) {
                            case 1: {
                                annotations.push('query');
                                break;
                            }
                            case 2: {
                                annotations.push('oneway');
                                break;
                            }
                            default:
                                throw new Error('unknown annotation');
                        }
                    }
                    typeTable.push([ty, [args, returnValues, annotations]]);
                    break;
                }
                case -23 /* IDLTypeIds.Service */: {
                    let servLength = Number(utils_leb128_lebDecode(pipe));
                    const methods = [];
                    while (servLength--) {
                        const nameLength = Number(utils_leb128_lebDecode(pipe));
                        const funcName = new TextDecoder().decode(utils_leb128_safeRead(pipe, nameLength));
                        const funcType = utils_leb128_slebDecode(pipe);
                        methods.push([funcName, funcType]);
                    }
                    typeTable.push([ty, methods]);
                    break;
                }
                default:
                    throw new Error('Illegal op_code: ' + ty);
            }
        }
        const rawList = [];
        const length = Number(utils_leb128_lebDecode(pipe));
        for (let i = 0; i < length; i++) {
            rawList.push(Number(utils_leb128_slebDecode(pipe)));
        }
        return [typeTable, rawList];
    }
    const [rawTable, rawTypes] = readTypeTable(b);
    if (rawTypes.length < retTypes.length) {
        throw new Error('Wrong number of return values');
    }
    const table = rawTable.map(_ => idl_Rec());
    function getType(t) {
        if (t < -24) {
            throw new Error('future value not supported');
        }
        if (t < 0) {
            switch (t) {
                case -1:
                    return idl_Null;
                case -2:
                    return idl_Bool;
                case -3:
                    return idl_Nat;
                case -4:
                    return idl_Int;
                case -5:
                    return idl_Nat8;
                case -6:
                    return idl_Nat16;
                case -7:
                    return idl_Nat32;
                case -8:
                    return idl_Nat64;
                case -9:
                    return idl_Int8;
                case -10:
                    return idl_Int16;
                case -11:
                    return idl_Int32;
                case -12:
                    return idl_Int64;
                case -13:
                    return idl_Float32;
                case -14:
                    return idl_Float64;
                case -15:
                    return idl_Text;
                case -16:
                    return idl_Reserved;
                case -17:
                    return idl_Empty;
                case -24:
                    return esm_idl_Principal;
                default:
                    throw new Error('Illegal op_code: ' + t);
            }
        }
        if (t >= rawTable.length) {
            throw new Error('type index out of range');
        }
        return table[t];
    }
    function buildType(entry) {
        switch (entry[0]) {
            case -19 /* IDLTypeIds.Vector */: {
                const ty = getType(entry[1]);
                return idl_Vec(ty);
            }
            case -18 /* IDLTypeIds.Opt */: {
                const ty = getType(entry[1]);
                return idl_Opt(ty);
            }
            case -20 /* IDLTypeIds.Record */: {
                const fields = {};
                for (const [hash, ty] of entry[1]) {
                    const name = `_${hash}_`;
                    fields[name] = getType(ty);
                }
                const record = idl_Record(fields);
                const tuple = record.tryAsTuple();
                if (Array.isArray(tuple)) {
                    return idl_Tuple(...tuple);
                }
                else {
                    return record;
                }
            }
            case -21 /* IDLTypeIds.Variant */: {
                const fields = {};
                for (const [hash, ty] of entry[1]) {
                    const name = `_${hash}_`;
                    fields[name] = getType(ty);
                }
                return idl_Variant(fields);
            }
            case -22 /* IDLTypeIds.Func */: {
                const [args, returnValues, annotations] = entry[1];
                return idl_Func(args.map((t) => getType(t)), returnValues.map((t) => getType(t)), annotations);
            }
            case -23 /* IDLTypeIds.Service */: {
                const rec = {};
                const methods = entry[1];
                for (const [name, typeRef] of methods) {
                    let type = getType(typeRef);
                    if (type instanceof idl_RecClass) {
                        // unpack reference type
                        type = type.getType();
                    }
                    if (!(type instanceof idl_FuncClass)) {
                        throw new Error('Illegal service definition: services can only contain functions');
                    }
                    rec[name] = type;
                }
                return idl_Service(rec);
            }
            default:
                throw new Error('Illegal op_code: ' + entry[0]);
        }
    }
    rawTable.forEach((entry, i) => {
        const t = buildType(entry);
        table[i].fill(t);
    });
    const types = rawTypes.map(t => getType(t));
    const output = retTypes.map((t, i) => {
        return t.decodeValue(b, types[i]);
    });
    // skip unused values
    for (let ind = retTypes.length; ind < types.length; ind++) {
        types[ind].decodeValue(b, types[ind]);
    }
    if (b.byteLength > 0) {
        throw new Error('decode: Left-over bytes');
    }
    return output;
}
// Export Types instances.
const idl_Empty = new idl_EmptyClass();
const idl_Reserved = new idl_ReservedClass();
/**
 * Client-only type for deserializing unknown data. Not supported by Candid, and its use is discouraged.
 */
const Unknown = new UnknownClass();
const idl_Bool = new idl_BoolClass();
const idl_Null = new idl_NullClass();
const idl_Text = new idl_TextClass();
const idl_Int = new idl_IntClass();
const idl_Nat = new idl_NatClass();
const idl_Float32 = new idl_FloatClass(32);
const idl_Float64 = new idl_FloatClass(64);
const idl_Int8 = new idl_FixedIntClass(8);
const idl_Int16 = new idl_FixedIntClass(16);
const idl_Int32 = new idl_FixedIntClass(32);
const idl_Int64 = new idl_FixedIntClass(64);
const idl_Nat8 = new idl_FixedNatClass(8);
const idl_Nat16 = new idl_FixedNatClass(16);
const idl_Nat32 = new idl_FixedNatClass(32);
const idl_Nat64 = new idl_FixedNatClass(64);
const esm_idl_Principal = new idl_PrincipalClass();
/**
 *
 * @param types array of any types
 * @returns TupleClass from those types
 */
function idl_Tuple(...types) {
    return new idl_TupleClass(types);
}
/**
 *
 * @param t IDL Type
 * @returns VecClass from that type
 */
function idl_Vec(t) {
    return new idl_VecClass(t);
}
/**
 *
 * @param t IDL Type
 * @returns OptClass of Type
 */
function idl_Opt(t) {
    return new idl_OptClass(t);
}
/**
 *
 * @param t Record of string and IDL Type
 * @returns RecordClass of string and Type
 */
function idl_Record(t) {
    return new idl_RecordClass(t);
}
/**
 *
 * @param fields Record of string and IDL Type
 * @returns VariantClass
 */
function idl_Variant(fields) {
    return new idl_VariantClass(fields);
}
/**
 *
 * @returns new RecClass
 */
function idl_Rec() {
    return new idl_RecClass();
}
/**
 *
 * @param args array of IDL Types
 * @param ret array of IDL Types
 * @param annotations array of strings, [] by default
 * @returns new FuncClass
 */
function idl_Func(args, ret, annotations = []) {
    return new idl_FuncClass(args, ret, annotations);
}
/**
 *
 * @param t Record of string and FuncClass
 * @returns ServiceClass
 */
function idl_Service(t) {
    return new idl_ServiceClass(t);
}
//# sourceMappingURL=idl.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/candid/lib/esm/candid-core.js
class candid_core_InputBox {
    constructor(idl, ui) {
        this.idl = idl;
        this.ui = ui;
        this.label = null;
        this.value = undefined;
        const status = document.createElement('span');
        status.className = 'status';
        this.status = status;
        if (ui.input) {
            ui.input.addEventListener('blur', () => {
                if (ui.input.value === '') {
                    return;
                }
                this.parse();
            });
            ui.input.addEventListener('input', () => {
                status.style.display = 'none';
                ui.input.classList.remove('reject');
            });
        }
    }
    isRejected() {
        return this.value === undefined;
    }
    parse(config = {}) {
        if (this.ui.form) {
            const value = this.ui.form.parse(config);
            this.value = value;
            return value;
        }
        if (this.ui.input) {
            const input = this.ui.input;
            try {
                const value = this.ui.parse(this.idl, config, input.value);
                if (!this.idl.covariant(value)) {
                    throw new Error(`${input.value} is not of type ${this.idl.display()}`);
                }
                this.status.style.display = 'none';
                this.value = value;
                return value;
            }
            catch (err) {
                input.classList.add('reject');
                this.status.style.display = 'block';
                this.status.innerHTML = 'InputError: ' + err.message;
                this.value = undefined;
                return undefined;
            }
        }
        return null;
    }
    render(dom) {
        const container = document.createElement('span');
        if (this.label) {
            const label = document.createElement('label');
            label.innerText = this.label;
            container.appendChild(label);
        }
        if (this.ui.input) {
            container.appendChild(this.ui.input);
            container.appendChild(this.status);
        }
        if (this.ui.form) {
            this.ui.form.render(container);
        }
        dom.appendChild(container);
    }
}
class candid_core_InputForm {
    constructor(ui) {
        this.ui = ui;
        this.form = [];
    }
    renderForm(dom) {
        if (this.ui.container) {
            this.form.forEach(e => e.render(this.ui.container));
            dom.appendChild(this.ui.container);
        }
        else {
            this.form.forEach(e => e.render(dom));
        }
    }
    render(dom) {
        if (this.ui.open && this.ui.event) {
            dom.appendChild(this.ui.open);
            const form = this;
            // eslint-disable-next-line
            form.ui.open.addEventListener(form.ui.event, () => {
                // Remove old form
                if (form.ui.container) {
                    form.ui.container.innerHTML = '';
                }
                else {
                    const oldContainer = form.ui.open.nextElementSibling;
                    if (oldContainer) {
                        oldContainer.parentNode.removeChild(oldContainer);
                    }
                }
                // Render form
                form.generateForm();
                form.renderForm(dom);
            });
        }
        else {
            this.generateForm();
            this.renderForm(dom);
        }
    }
}
class candid_core_RecordForm extends candid_core_InputForm {
    constructor(fields, ui) {
        super(ui);
        this.fields = fields;
        this.ui = ui;
    }
    generateForm() {
        this.form = this.fields.map(([key, type]) => {
            const input = this.ui.render(type);
            // eslint-disable-next-line
            if (this.ui.labelMap && this.ui.labelMap.hasOwnProperty(key)) {
                input.label = this.ui.labelMap[key] + ' ';
            }
            else {
                input.label = key + ' ';
            }
            return input;
        });
    }
    parse(config) {
        const v = {};
        this.fields.forEach(([key, _], i) => {
            const value = this.form[i].parse(config);
            v[key] = value;
        });
        if (this.form.some(input => input.isRejected())) {
            return undefined;
        }
        return v;
    }
}
class candid_core_TupleForm extends candid_core_InputForm {
    constructor(components, ui) {
        super(ui);
        this.components = components;
        this.ui = ui;
    }
    generateForm() {
        this.form = this.components.map(type => {
            const input = this.ui.render(type);
            return input;
        });
    }
    parse(config) {
        const v = [];
        this.components.forEach((_, i) => {
            const value = this.form[i].parse(config);
            v.push(value);
        });
        if (this.form.some(input => input.isRejected())) {
            return undefined;
        }
        return v;
    }
}
class candid_core_VariantForm extends candid_core_InputForm {
    constructor(fields, ui) {
        super(ui);
        this.fields = fields;
        this.ui = ui;
    }
    generateForm() {
        const index = this.ui.open.selectedIndex;
        const [_, type] = this.fields[index];
        const variant = this.ui.render(type);
        this.form = [variant];
    }
    parse(config) {
        const select = this.ui.open;
        const selected = select.options[select.selectedIndex].value;
        const value = this.form[0].parse(config);
        if (value === undefined) {
            return undefined;
        }
        const v = {};
        v[selected] = value;
        return v;
    }
}
class candid_core_OptionForm extends candid_core_InputForm {
    constructor(ty, ui) {
        super(ui);
        this.ty = ty;
        this.ui = ui;
    }
    generateForm() {
        if (this.ui.open.checked) {
            const opt = this.ui.render(this.ty);
            this.form = [opt];
        }
        else {
            this.form = [];
        }
    }
    parse(config) {
        if (this.form.length === 0) {
            return [];
        }
        else {
            const value = this.form[0].parse(config);
            if (value === undefined) {
                return undefined;
            }
            return [value];
        }
    }
}
class candid_core_VecForm extends candid_core_InputForm {
    constructor(ty, ui) {
        super(ui);
        this.ty = ty;
        this.ui = ui;
    }
    generateForm() {
        const len = +this.ui.open.value;
        this.form = [];
        for (let i = 0; i < len; i++) {
            const t = this.ui.render(this.ty);
            this.form.push(t);
        }
    }
    parse(config) {
        const value = this.form.map(input => {
            return input.parse(config);
        });
        if (this.form.some(input => input.isRejected())) {
            return undefined;
        }
        return value;
    }
}
//# sourceMappingURL=candid-core.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/candid/lib/esm/candid-ui.js



const candid_ui_InputConfig = { parse: candid_ui_parsePrimitive };
const candid_ui_FormConfig = { render: candid_ui_renderInput };
const candid_ui_inputBox = (t, config) => {
    return new candid_core_InputBox(t, Object.assign(Object.assign({}, candid_ui_InputConfig), config));
};
const candid_ui_recordForm = (fields, config) => {
    return new candid_core_RecordForm(fields, Object.assign(Object.assign({}, candid_ui_FormConfig), config));
};
const candid_ui_tupleForm = (components, config) => {
    return new candid_core_TupleForm(components, Object.assign(Object.assign({}, candid_ui_FormConfig), config));
};
const candid_ui_variantForm = (fields, config) => {
    return new candid_core_VariantForm(fields, Object.assign(Object.assign({}, candid_ui_FormConfig), config));
};
const candid_ui_optForm = (ty, config) => {
    return new candid_core_OptionForm(ty, Object.assign(Object.assign({}, candid_ui_FormConfig), config));
};
const candid_ui_vecForm = (ty, config) => {
    return new candid_core_VecForm(ty, Object.assign(Object.assign({}, candid_ui_FormConfig), config));
};
class candid_ui_Render extends idl_Visitor {
    visitType(t, d) {
        const input = document.createElement('input');
        input.classList.add('argument');
        input.placeholder = t.display();
        return candid_ui_inputBox(t, { input });
    }
    visitNull(t, d) {
        return candid_ui_inputBox(t, {});
    }
    visitRecord(t, fields, d) {
        let config = {};
        if (fields.length > 1) {
            const container = document.createElement('div');
            container.classList.add('popup-form');
            config = { container };
        }
        const form = candid_ui_recordForm(fields, config);
        return candid_ui_inputBox(t, { form });
    }
    visitTuple(t, components, d) {
        let config = {};
        if (components.length > 1) {
            const container = document.createElement('div');
            container.classList.add('popup-form');
            config = { container };
        }
        const form = candid_ui_tupleForm(components, config);
        return candid_ui_inputBox(t, { form });
    }
    visitVariant(t, fields, d) {
        const select = document.createElement('select');
        for (const [key, type] of fields) {
            const option = new Option(key);
            select.add(option);
        }
        select.selectedIndex = -1;
        select.classList.add('open');
        const config = { open: select, event: 'change' };
        const form = candid_ui_variantForm(fields, config);
        return candid_ui_inputBox(t, { form });
    }
    visitOpt(t, ty, d) {
        const checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.classList.add('open');
        const form = candid_ui_optForm(ty, { open: checkbox, event: 'change' });
        return candid_ui_inputBox(t, { form });
    }
    visitVec(t, ty, d) {
        const len = document.createElement('input');
        len.type = 'number';
        len.min = '0';
        len.max = '100';
        len.style.width = '8rem';
        len.placeholder = 'len';
        len.classList.add('open');
        const container = document.createElement('div');
        container.classList.add('popup-form');
        const form = candid_ui_vecForm(ty, { open: len, event: 'change', container });
        return candid_ui_inputBox(t, { form });
    }
    visitRec(t, ty, d) {
        return candid_ui_renderInput(ty);
    }
}
class candid_ui_Parse extends idl_Visitor {
    visitNull(t, v) {
        return null;
    }
    visitBool(t, v) {
        if (v === 'true') {
            return true;
        }
        if (v === 'false') {
            return false;
        }
        throw new Error(`Cannot parse ${v} as boolean`);
    }
    visitText(t, v) {
        return v;
    }
    visitFloat(t, v) {
        return parseFloat(v);
    }
    visitFixedInt(t, v) {
        if (t._bits <= 32) {
            return parseInt(v, 10);
        }
        else {
            return BigInt(v);
        }
    }
    visitFixedNat(t, v) {
        if (t._bits <= 32) {
            return parseInt(v, 10);
        }
        else {
            return BigInt(v);
        }
    }
    visitNumber(t, v) {
        return BigInt(v);
    }
    visitPrincipal(t, v) {
        return lib_esm_Principal.fromText(v);
    }
    visitService(t, v) {
        return lib_esm_Principal.fromText(v);
    }
    visitFunc(t, v) {
        const x = v.split('.', 2);
        return [lib_esm_Principal.fromText(x[0]), x[1]];
    }
}
class candid_ui_Random extends idl_Visitor {
    visitNull(t, v) {
        return null;
    }
    visitBool(t, v) {
        return Math.random() < 0.5;
    }
    visitText(t, v) {
        return Math.random().toString(36).substring(6);
    }
    visitFloat(t, v) {
        return Math.random();
    }
    visitInt(t, v) {
        return BigInt(this.generateNumber(true));
    }
    visitNat(t, v) {
        return BigInt(this.generateNumber(false));
    }
    visitFixedInt(t, v) {
        const x = this.generateNumber(true);
        if (t._bits <= 32) {
            return x;
        }
        else {
            return BigInt(v);
        }
    }
    visitFixedNat(t, v) {
        const x = this.generateNumber(false);
        if (t._bits <= 32) {
            return x;
        }
        else {
            return BigInt(v);
        }
    }
    generateNumber(signed) {
        const num = Math.floor(Math.random() * 100);
        if (signed && Math.random() < 0.5) {
            return -num;
        }
        else {
            return num;
        }
    }
}
function candid_ui_parsePrimitive(t, config, d) {
    if (config.random && d === '') {
        return t.accept(new candid_ui_Random(), d);
    }
    else {
        return t.accept(new candid_ui_Parse(), d);
    }
}
/**
 *
 * @param t an IDL type
 * @returns an input for that type
 */
function candid_ui_renderInput(t) {
    return t.accept(new candid_ui_Render(), null);
}
/**
 *
 * @param t an IDL Type
 * @param input an InputBox
 * @param value any
 * @returns rendering that value to the provided input
 */
function candid_ui_renderValue(t, input, value) {
    return t.accept(new candid_ui_RenderValue(), { input, value });
}
class candid_ui_RenderValue extends idl_Visitor {
    visitType(t, d) {
        d.input.ui.input.value = t.valueToString(d.value);
    }
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    visitNull(t, d) { }
    visitText(t, d) {
        d.input.ui.input.value = d.value;
    }
    visitRec(t, ty, d) {
        candid_ui_renderValue(ty, d.input, d.value);
    }
    visitOpt(t, ty, d) {
        if (d.value.length === 0) {
            return;
        }
        else {
            const form = d.input.ui.form;
            const open = form.ui.open;
            open.checked = true;
            open.dispatchEvent(new Event(form.ui.event));
            candid_ui_renderValue(ty, form.form[0], d.value[0]);
        }
    }
    visitRecord(t, fields, d) {
        const form = d.input.ui.form;
        fields.forEach(([key, type], i) => {
            candid_ui_renderValue(type, form.form[i], d.value[key]);
        });
    }
    visitTuple(t, components, d) {
        const form = d.input.ui.form;
        components.forEach((type, i) => {
            candid_ui_renderValue(type, form.form[i], d.value[i]);
        });
    }
    visitVariant(t, fields, d) {
        const form = d.input.ui.form;
        const selected = Object.entries(d.value)[0];
        fields.forEach(([key, type], i) => {
            if (key === selected[0]) {
                const open = form.ui.open;
                open.selectedIndex = i;
                open.dispatchEvent(new Event(form.ui.event));
                candid_ui_renderValue(type, form.form[0], selected[1]);
            }
        });
    }
    visitVec(t, ty, d) {
        const form = d.input.ui.form;
        const len = d.value.length;
        const open = form.ui.open;
        open.value = len;
        open.dispatchEvent(new Event(form.ui.event));
        d.value.forEach((v, i) => {
            candid_ui_renderValue(ty, form.form[i], v);
        });
    }
}
//# sourceMappingURL=candid-ui.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/candid/lib/esm/index.js







//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/utils/buffer.js
/**
 * Concatenate multiple array buffers.
 * @param buffers The buffers to concatenate.
 */
function lib_esm_utils_buffer_concat(...buffers) {
    const result = new Uint8Array(buffers.reduce((acc, curr) => acc + curr.byteLength, 0));
    let index = 0;
    for (const b of buffers) {
        result.set(new Uint8Array(b), index);
        index += b.byteLength;
    }
    return result.buffer;
}
/**
 * Transforms a buffer to an hexadecimal string. This will use the buffer as an Uint8Array.
 * @param buffer The buffer to return the hexadecimal string of.
 */
function utils_buffer_toHex(buffer) {
    return [...new Uint8Array(buffer)].map(x => x.toString(16).padStart(2, '0')).join('');
}
const buffer_hexRe = new RegExp(/^([0-9A-F]{2})*$/i);
/**
 * Transforms a hexadecimal string into an array buffer.
 * @param hex The hexadecimal string to use.
 */
function utils_buffer_fromHex(hex) {
    if (!buffer_hexRe.test(hex)) {
        throw new Error('Invalid hexadecimal string.');
    }
    const buffer = [...hex]
        .reduce((acc, curr, i) => {
        // tslint:disable-next-line:no-bitwise
        acc[(i / 2) | 0] = (acc[(i / 2) | 0] || '') + curr;
        return acc;
    }, [])
        .map(x => Number.parseInt(x, 16));
    return new Uint8Array(buffer).buffer;
}
function buffer_compare(b1, b2) {
    if (b1.byteLength !== b2.byteLength) {
        return b1.byteLength - b2.byteLength;
    }
    const u1 = new Uint8Array(b1);
    const u2 = new Uint8Array(b2);
    for (let i = 0; i < u1.length; i++) {
        if (u1[i] !== u2[i]) {
            return u1[i] - u2[i];
        }
    }
    return 0;
}
//# sourceMappingURL=buffer.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/request_id.js




/**
 * sha256 hash the provided Buffer
 * @param data - input to hash function
 */
function esm_request_id_hash(data) {
    return src_sha256.sha256.create().update(new Uint8Array(data)).arrayBuffer();
}
/**
 *
 * @param value unknown value
 * @returns ArrayBuffer
 */
function request_id_hashValue(value) {
    if (value instanceof src.Tagged) {
        return request_id_hashValue(value.value);
    }
    else if (typeof value === 'string') {
        return request_id_hashString(value);
    }
    else if (typeof value === 'number') {
        return esm_request_id_hash(utils_leb128_lebEncode(value));
    }
    else if (value instanceof ArrayBuffer || ArrayBuffer.isView(value)) {
        return esm_request_id_hash(value);
    }
    else if (Array.isArray(value)) {
        const vals = value.map(request_id_hashValue);
        return esm_request_id_hash(lib_esm_utils_buffer_concat(...vals));
    }
    else if (value && typeof value === 'object' && value._isPrincipal) {
        return esm_request_id_hash(value.toUint8Array());
    }
    else if (typeof value === 'object' &&
        value !== null &&
        typeof value.toHash === 'function') {
        return request_id_hashValue(value.toHash());
        // TODO This should be move to a specific async method as the webauthn flow required
        // the flow to be synchronous to ensure Safari touch id works.
        // } else if (value instanceof Promise) {
        //   return value.then(x => hashValue(x));
    }
    else if (typeof value === 'bigint') {
        // Do this check much later than the other bigint check because this one is much less
        // type-safe.
        // So we want to try all the high-assurance type guards before this 'probable' one.
        return esm_request_id_hash(utils_leb128_lebEncode(value));
    }
    throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${value}`), {
        // include so logs/callers can understand the confusing value.
        // (when stringified in error message, prototype info is lost)
        value,
    });
}
const request_id_hashString = (value) => {
    const encoded = new TextEncoder().encode(value);
    return esm_request_id_hash(encoded);
};
/**
 * Get the RequestId of the provided ic-ref request.
 * RequestId is the result of the representation-independent-hash function.
 * https://sdk.dfinity.org/docs/interface-spec/index.html#hash-of-map
 * @param request - ic-ref request to hash into RequestId
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function esm_request_id_requestIdOf(request) {
    const hashed = Object.entries(request)
        .filter(([, value]) => value !== undefined)
        .map(([key, value]) => {
        const hashedKey = request_id_hashString(key);
        const hashedValue = request_id_hashValue(value);
        return [hashedKey, hashedValue];
    });
    const traversed = hashed;
    const sorted = traversed.sort(([k1], [k2]) => {
        return buffer_compare(k1, k2);
    });
    const concatenated = lib_esm_utils_buffer_concat(...sorted.map(x => lib_esm_utils_buffer_concat(...x)));
    const requestId = esm_request_id_hash(concatenated);
    return requestId;
}
//# sourceMappingURL=request_id.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/auth.js
var auth_rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};



const auth_domainSeparator = new TextEncoder().encode('\x0Aic-request');
/**
 * An Identity that can sign blobs.
 */
class esm_auth_SignIdentity {
    /**
     * Get the principal represented by this identity. Normally should be a
     * `Principal.selfAuthenticating()`.
     */
    getPrincipal() {
        if (!this._principal) {
            this._principal = Principal.selfAuthenticating(new Uint8Array(this.getPublicKey().toDer()));
        }
        return this._principal;
    }
    /**
     * Transform a request into a signed version of the request. This is done last
     * after the transforms on the body of a request. The returned object can be
     * anything, but must be serializable to CBOR.
     * @param request - internet computer request to transform
     */
    async transformRequest(request) {
        const { body } = request, fields = auth_rest(request, ["body"]);
        const requestId = await requestIdOf(body);
        return Object.assign(Object.assign({}, fields), { body: {
                content: body,
                sender_pubkey: this.getPublicKey().toDer(),
                sender_sig: await this.sign(concat(auth_domainSeparator, requestId)),
            } });
    }
}
class esm_auth_AnonymousIdentity {
    getPrincipal() {
        return lib_esm_Principal.anonymous();
    }
    async transformRequest(request) {
        return Object.assign(Object.assign({}, request), { body: { content: request.body } });
    }
}
/**
 * Create an IdentityDescriptor from a @dfinity/authentication Identity
 * @param identity - identity describe in returned descriptor
 */
function auth_createIdentityDescriptor(identity) {
    const identityIndicator = 'getPublicKey' in identity
        ? { type: 'PublicKeyIdentity', publicKey: toHex(identity.getPublicKey().toDer()) }
        : { type: 'AnonymousIdentity' };
    return identityIndicator;
}
//# sourceMappingURL=auth.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/cbor.js
// tslint:disable:max-classes-per-file
// This file is based on:
// tslint:disable-next-line: max-line-length
// https://github.com/dfinity-lab/dfinity/blob/9bca65f8edd65701ea6bdb00e0752f9186bbc893/docs/spec/public/index.adoc#cbor-encoding-of-requests-and-responses




// We are using hansl/simple-cbor for CBOR serialization, to avoid issues with
// encoding the uint64 values that the HTTP handler of the client expects for
// canister IDs. However, simple-cbor does not yet provide deserialization so
// we are using `Uint8Array` so that we can use the dignifiedquire/borc CBOR
// decoder.
class cbor_PrincipalEncoder {
    get name() {
        return 'Principal';
    }
    get priority() {
        return 0;
    }
    match(value) {
        return value && value._isPrincipal === true;
    }
    encode(v) {
        return simple_cbor_src.value.bytes(v.toUint8Array());
    }
}
class cbor_BufferEncoder {
    get name() {
        return 'Buffer';
    }
    get priority() {
        return 1;
    }
    match(value) {
        return value instanceof ArrayBuffer || ArrayBuffer.isView(value);
    }
    encode(v) {
        return simple_cbor_src.value.bytes(new Uint8Array(v));
    }
}
class cbor_BigIntEncoder {
    get name() {
        return 'BigInt';
    }
    get priority() {
        return 1;
    }
    match(value) {
        return typeof value === `bigint`;
    }
    encode(v) {
        // Always use a bigint encoding.
        if (v > BigInt(0)) {
            return simple_cbor_src.value.tagged(2, simple_cbor_src.value.bytes(utils_buffer_fromHex(v.toString(16))));
        }
        else {
            return simple_cbor_src.value.tagged(3, simple_cbor_src.value.bytes(utils_buffer_fromHex((BigInt('-1') * v).toString(16))));
        }
    }
}
const cbor_serializer = simple_cbor_src.SelfDescribeCborSerializer.withDefaultEncoders(true);
cbor_serializer.addEncoder(new cbor_PrincipalEncoder());
cbor_serializer.addEncoder(new cbor_BufferEncoder());
cbor_serializer.addEncoder(new cbor_BigIntEncoder());
var cbor_CborTag;
(function (CborTag) {
    CborTag[CborTag["Uint64LittleEndian"] = 71] = "Uint64LittleEndian";
    CborTag[CborTag["Semantic"] = 55799] = "Semantic";
})(cbor_CborTag || (cbor_CborTag = {}));
/**
 * Encode a JavaScript value into CBOR.
 */
function esm_cbor_encode(value) {
    return cbor_serializer.serialize(value);
}
function cbor_decodePositiveBigInt(buf) {
    const len = buf.byteLength;
    let res = BigInt(0);
    for (let i = 0; i < len; i++) {
        // tslint:disable-next-line:no-bitwise
        res = res * BigInt(0x100) + BigInt(buf[i]);
    }
    return res;
}
// A BORC subclass that decodes byte strings to ArrayBuffer instead of the Buffer class.
class cbor_Uint8ArrayDecoder extends src.Decoder {
    createByteString(raw) {
        return lib_esm_utils_buffer_concat(...raw);
    }
    createByteStringFromHeap(start, end) {
        if (start === end) {
            return new ArrayBuffer(0);
        }
        return new Uint8Array(this._heap.slice(start, end));
    }
}
function esm_cbor_decode(input) {
    const buffer = new Uint8Array(input);
    const decoder = new cbor_Uint8ArrayDecoder({
        size: buffer.byteLength,
        tags: {
            // Override tags 2 and 3 for BigInt support (borc supports only BigNumber).
            2: val => cbor_decodePositiveBigInt(val),
            3: val => -cbor_decodePositiveBigInt(val),
            [cbor_CborTag.Semantic]: (value) => value,
        },
    });
    return decoder.decodeFirst(buffer);
}
//# sourceMappingURL=cbor.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/agent/http/types.js
// tslint:enable:camel-case
// The types of values allowed in the `request_type` field for submit requests.
var http_types_SubmitRequestType;
(function (SubmitRequestType) {
    SubmitRequestType["Call"] = "call";
})(http_types_SubmitRequestType || (http_types_SubmitRequestType = {}));
/**
 * Create a random Nonce, based on date and a random suffix.
 */
function http_types_makeNonce() {
    // Encode 128 bits.
    const buffer = new ArrayBuffer(16);
    const view = new DataView(buffer);
    const now = BigInt(+Date.now());
    const randHi = Math.floor(Math.random() * 0xffffffff);
    const randLo = Math.floor(Math.random() * 0xffffffff);
    // Fix for IOS < 14.8 setBigUint64 absence
    if (typeof view.setBigUint64 === 'function') {
        view.setBigUint64(0, now);
    }
    else {
        const TWO_TO_THE_32 = BigInt(1) << BigInt(32);
        view.setUint32(0, Number(now >> BigInt(32)));
        view.setUint32(4, Number(now % TWO_TO_THE_32));
    }
    view.setUint32(8, randHi);
    view.setUint32(12, randLo);
    return buffer;
}
//# sourceMappingURL=types.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/agent/http/transforms.js



const transforms_NANOSECONDS_PER_MILLISECONDS = BigInt(1000000);
const transforms_REPLICA_PERMITTED_DRIFT_MILLISECONDS = BigInt(60 * 1000);
class http_transforms_Expiry {
    constructor(deltaInMSec) {
        // Use bigint because it can overflow the maximum number allowed in a double float.
        this._value =
            (BigInt(Date.now()) + BigInt(deltaInMSec) - transforms_REPLICA_PERMITTED_DRIFT_MILLISECONDS) *
                transforms_NANOSECONDS_PER_MILLISECONDS;
    }
    toCBOR() {
        // TODO: change this to take the minimum amount of space (it always takes 8 bytes now).
        return simple_cbor_src.value.u64(this._value.toString(16), 16);
    }
    toHash() {
        return utils_leb128_lebEncode(this._value);
    }
}
/**
 * Create a Nonce transform, which takes a function that returns a Buffer, and adds it
 * as the nonce to every call requests.
 * @param nonceFn A function that returns a buffer. By default uses a semi-random method.
 */
function transforms_makeNonceTransform(nonceFn = http_types_makeNonce) {
    return async (request) => {
        // Nonce are only useful for async calls, to prevent replay attacks. Other types of
        // calls don't need Nonce so we just skip creating one.
        if (request.endpoint === "call" /* Endpoint.Call */) {
            request.body.nonce = nonceFn();
        }
    };
}
/**
 * Create a transform that adds a delay (by default 5 minutes) to the expiry.
 *
 * @param delayInMilliseconds The delay to add to the call time, in milliseconds.
 */
function transforms_makeExpiryTransform(delayInMilliseconds) {
    return async (request) => {
        request.body.ingress_expiry = new http_transforms_Expiry(delayInMilliseconds);
    };
}
//# sourceMappingURL=transforms.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/agent/http/index.js










var agent_http_RequestStatusResponseStatus;
(function (RequestStatusResponseStatus) {
    RequestStatusResponseStatus["Received"] = "received";
    RequestStatusResponseStatus["Processing"] = "processing";
    RequestStatusResponseStatus["Replied"] = "replied";
    RequestStatusResponseStatus["Rejected"] = "rejected";
    RequestStatusResponseStatus["Unknown"] = "unknown";
    RequestStatusResponseStatus["Done"] = "done";
})(agent_http_RequestStatusResponseStatus || (agent_http_RequestStatusResponseStatus = {}));
// Default delta for ingress expiry is 5 minutes.
const http_DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS = 5 * 60 * 1000;
// Root public key for the IC, encoded as hex
const http_IC_ROOT_KEY = '308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814' +
    'c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d968' +
    '5f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484' +
    'b01291091c5f87b98883463f98091a0baaae';
// IC0 domain info
const http_IC0_DOMAIN = 'ic0.app';
const http_IC0_SUB_DOMAIN = '.ic0.app';
class http_HttpDefaultFetchError extends esm_errors_AgentError {
    constructor(message) {
        super(message);
        this.message = message;
    }
}
class http_IdentityInvalidError extends esm_errors_AgentError {
    constructor(message) {
        super(message);
        this.message = message;
    }
}
function http_getDefaultFetch() {
    let defaultFetch;
    if (typeof window !== 'undefined') {
        // Browser context
        if (window.fetch) {
            defaultFetch = window.fetch.bind(window);
        }
        else {
            throw new http_HttpDefaultFetchError('Fetch implementation was not available. You appear to be in a browser context, but window.fetch was not present.');
        }
    }
    else if (typeof __webpack_require__.g !== 'undefined') {
        // Node context
        if (__webpack_require__.g.fetch) {
            defaultFetch = __webpack_require__.g.fetch.bind(__webpack_require__.g);
        }
        else {
            throw new http_HttpDefaultFetchError('Fetch implementation was not available. You appear to be in a Node.js context, but global.fetch was not available.');
        }
    }
    else if (typeof self !== 'undefined') {
        if (self.fetch) {
            defaultFetch = self.fetch.bind(self);
        }
    }
    if (defaultFetch) {
        return defaultFetch;
    }
    throw new http_HttpDefaultFetchError('Fetch implementation was not available. Please provide fetch to the HttpAgent constructor, or ensure it is available in the window or global context.');
}
// A HTTP agent allows users to interact with a client of the internet computer
// using the available methods. It exposes an API that closely follows the
// public view of the internet computer, and is not intended to be exposed
// directly to the majority of users due to its low-level interface.
//
// There is a pipeline to apply transformations to the request before sending
// it to the client. This is to decouple signature, nonce generation and
// other computations so that this class can stay as simple as possible while
// allowing extensions.
class http_HttpAgent {
    constructor(options = {}) {
        this.rootKey = utils_buffer_fromHex(http_IC_ROOT_KEY);
        this._pipeline = [];
        this._rootKeyFetched = false;
        if (options.source) {
            if (!(options.source instanceof http_HttpAgent)) {
                throw new Error("An Agent's source can only be another HttpAgent");
            }
            this._pipeline = [...options.source._pipeline];
            this._identity = options.source._identity;
            this._fetch = options.source._fetch;
            this._host = options.source._host;
            this._credentials = options.source._credentials;
        }
        else {
            this._fetch = options.fetch || http_getDefaultFetch() || fetch.bind(__webpack_require__.g);
        }
        if (options.host !== undefined) {
            if (!options.host.match(/^[a-z]+:/) && typeof window !== 'undefined') {
                this._host = new URL(window.location.protocol + '//' + options.host);
            }
            else {
                this._host = new URL(options.host);
            }
        }
        else if (options.source !== undefined) {
            // Safe to ignore here.
            this._host = options.source._host;
        }
        else {
            const location = typeof window !== 'undefined' ? window.location : undefined;
            if (!location) {
                throw new Error('Must specify a host to connect to.');
            }
            this._host = new URL(location + '');
        }
        // Rewrite to avoid redirects
        if (this._host.hostname.endsWith(http_IC0_SUB_DOMAIN)) {
            this._host.hostname = http_IC0_DOMAIN;
        }
        if (options.credentials) {
            const { name, password } = options.credentials;
            this._credentials = `${name}${password ? ':' + password : ''}`;
        }
        this._identity = Promise.resolve(options.identity || new esm_auth_AnonymousIdentity());
        // Add a nonce transform to ensure calls are unique
        if (!options.disableNonce) {
            this.addTransform(transforms_makeNonceTransform(http_types_makeNonce));
        }
    }
    addTransform(fn, priority = fn.priority || 0) {
        // Keep the pipeline sorted at all time, by priority.
        const i = this._pipeline.findIndex(x => (x.priority || 0) < priority);
        this._pipeline.splice(i >= 0 ? i : this._pipeline.length, 0, Object.assign(fn, { priority }));
    }
    async getPrincipal() {
        if (!this._identity) {
            throw new http_IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
        }
        return (await this._identity).getPrincipal();
    }
    async call(canisterId, options, identity) {
        const id = await (identity !== undefined ? await identity : await this._identity);
        if (!id) {
            throw new http_IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
        }
        const canister = lib_esm_Principal.from(canisterId);
        const ecid = options.effectiveCanisterId
            ? lib_esm_Principal.from(options.effectiveCanisterId)
            : canister;
        const sender = id.getPrincipal() || lib_esm_Principal.anonymous();
        const submit = {
            request_type: http_types_SubmitRequestType.Call,
            canister_id: canister,
            method_name: options.methodName,
            arg: options.arg,
            sender,
            ingress_expiry: new http_transforms_Expiry(http_DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),
        };
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        let transformedRequest = (await this._transform({
            request: {
                body: null,
                method: 'POST',
                headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),
            },
            endpoint: "call" /* Endpoint.Call */,
            body: submit,
        }));
        // Apply transform for identity.
        transformedRequest = await id.transformRequest(transformedRequest);
        const body = esm_cbor_encode(transformedRequest.body);
        // Run both in parallel. The fetch is quite expensive, so we have plenty of time to
        // calculate the requestId locally.
        const [response, requestId] = await Promise.all([
            this._fetch('' + new URL(`/api/v2/canister/${ecid.toText()}/call`, this._host), Object.assign(Object.assign({}, transformedRequest.request), { body })),
            esm_request_id_requestIdOf(submit),
        ]);
        if (!response.ok) {
            throw new Error(`Server returned an error:\n` +
                `  Code: ${response.status} (${response.statusText})\n` +
                `  Body: ${await response.text()}\n`);
        }
        return {
            requestId,
            response: {
                ok: response.ok,
                status: response.status,
                statusText: response.statusText,
            },
        };
    }
    async query(canisterId, fields, identity) {
        const id = await (identity !== undefined ? await identity : await this._identity);
        if (!id) {
            throw new http_IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
        }
        const canister = typeof canisterId === 'string' ? lib_esm_Principal.fromText(canisterId) : canisterId;
        const sender = (id === null || id === void 0 ? void 0 : id.getPrincipal()) || lib_esm_Principal.anonymous();
        const request = {
            request_type: "query" /* ReadRequestType.Query */,
            canister_id: canister,
            method_name: fields.methodName,
            arg: fields.arg,
            sender,
            ingress_expiry: new http_transforms_Expiry(http_DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),
        };
        // TODO: remove this any. This can be a Signed or UnSigned request.
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        let transformedRequest = await this._transform({
            request: {
                method: 'POST',
                headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),
            },
            endpoint: "read" /* Endpoint.Query */,
            body: request,
        });
        // Apply transform for identity.
        transformedRequest = await (id === null || id === void 0 ? void 0 : id.transformRequest(transformedRequest));
        const body = esm_cbor_encode(transformedRequest.body);
        const response = await this._fetch('' + new URL(`/api/v2/canister/${canister.toText()}/query`, this._host), Object.assign(Object.assign({}, transformedRequest.request), { body }));
        if (!response.ok) {
            throw new Error(`Server returned an error:\n` +
                `  Code: ${response.status} (${response.statusText})\n` +
                `  Body: ${await response.text()}\n`);
        }
        return esm_cbor_decode(await response.arrayBuffer());
    }
    async createReadStateRequest(fields, identity) {
        const id = await (identity !== undefined ? await identity : await this._identity);
        if (!id) {
            throw new http_IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
        }
        const sender = (id === null || id === void 0 ? void 0 : id.getPrincipal()) || lib_esm_Principal.anonymous();
        // TODO: remove this any. This can be a Signed or UnSigned request.
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        const transformedRequest = await this._transform({
            request: {
                method: 'POST',
                headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),
            },
            endpoint: "read_state" /* Endpoint.ReadState */,
            body: {
                request_type: "read_state" /* ReadRequestType.ReadState */,
                paths: fields.paths,
                sender,
                ingress_expiry: new http_transforms_Expiry(http_DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),
            },
        });
        // Apply transform for identity.
        return id === null || id === void 0 ? void 0 : id.transformRequest(transformedRequest);
    }
    async readState(canisterId, fields, identity, 
    // eslint-disable-next-line
    request) {
        const canister = typeof canisterId === 'string' ? lib_esm_Principal.fromText(canisterId) : canisterId;
        const transformedRequest = request !== null && request !== void 0 ? request : (await this.createReadStateRequest(fields, identity));
        const body = esm_cbor_encode(transformedRequest.body);
        const response = await this._fetch('' + new URL(`/api/v2/canister/${canister}/read_state`, this._host), Object.assign(Object.assign({}, transformedRequest.request), { body }));
        if (!response.ok) {
            throw new Error(`Server returned an error:\n` +
                `  Code: ${response.status} (${response.statusText})\n` +
                `  Body: ${await response.text()}\n`);
        }
        return esm_cbor_decode(await response.arrayBuffer());
    }
    async status() {
        const headers = this._credentials
            ? {
                Authorization: 'Basic ' + btoa(this._credentials),
            }
            : {};
        const response = await this._fetch('' + new URL(`/api/v2/status`, this._host), { headers });
        if (!response.ok) {
            throw new Error(`Server returned an error:\n` +
                `  Code: ${response.status} (${response.statusText})\n` +
                `  Body: ${await response.text()}\n`);
        }
        return esm_cbor_decode(await response.arrayBuffer());
    }
    async fetchRootKey() {
        if (!this._rootKeyFetched) {
            // Hex-encoded version of the replica root key
            this.rootKey = (await this.status()).root_key;
            this._rootKeyFetched = true;
        }
        return this.rootKey;
    }
    invalidateIdentity() {
        this._identity = null;
    }
    replaceIdentity(identity) {
        this._identity = Promise.resolve(identity);
    }
    _transform(request) {
        let p = Promise.resolve(request);
        for (const fn of this._pipeline) {
            p = p.then(r => fn(r).then(r2 => r2 || r));
        }
        return p;
    }
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/agent/proxy.js

var proxy_ProxyMessageKind;
(function (ProxyMessageKind) {
    ProxyMessageKind["Error"] = "err";
    ProxyMessageKind["GetPrincipal"] = "gp";
    ProxyMessageKind["GetPrincipalResponse"] = "gpr";
    ProxyMessageKind["Query"] = "q";
    ProxyMessageKind["QueryResponse"] = "qr";
    ProxyMessageKind["Call"] = "c";
    ProxyMessageKind["CallResponse"] = "cr";
    ProxyMessageKind["ReadState"] = "rs";
    ProxyMessageKind["ReadStateResponse"] = "rsr";
    ProxyMessageKind["Status"] = "s";
    ProxyMessageKind["StatusResponse"] = "sr";
})(proxy_ProxyMessageKind || (proxy_ProxyMessageKind = {}));
// A Stub Agent that forwards calls to another Agent implementation.
class proxy_ProxyStubAgent {
    constructor(_frontend, _agent) {
        this._frontend = _frontend;
        this._agent = _agent;
    }
    onmessage(msg) {
        switch (msg.type) {
            case proxy_ProxyMessageKind.GetPrincipal:
                this._agent.getPrincipal().then(response => {
                    this._frontend({
                        id: msg.id,
                        type: proxy_ProxyMessageKind.GetPrincipalResponse,
                        response: response.toText(),
                    });
                });
                break;
            case proxy_ProxyMessageKind.Query:
                this._agent.query(...msg.args).then(response => {
                    this._frontend({
                        id: msg.id,
                        type: proxy_ProxyMessageKind.QueryResponse,
                        response,
                    });
                });
                break;
            case proxy_ProxyMessageKind.Call:
                this._agent.call(...msg.args).then(response => {
                    this._frontend({
                        id: msg.id,
                        type: proxy_ProxyMessageKind.CallResponse,
                        response,
                    });
                });
                break;
            case proxy_ProxyMessageKind.ReadState:
                this._agent.readState(...msg.args).then(response => {
                    this._frontend({
                        id: msg.id,
                        type: proxy_ProxyMessageKind.ReadStateResponse,
                        response,
                    });
                });
                break;
            case proxy_ProxyMessageKind.Status:
                this._agent.status().then(response => {
                    this._frontend({
                        id: msg.id,
                        type: proxy_ProxyMessageKind.StatusResponse,
                        response,
                    });
                });
                break;
            default:
                throw new Error(`Invalid message received: ${JSON.stringify(msg)}`);
        }
    }
}
// An Agent that forwards calls to a backend. The calls are serialized
class proxy_ProxyAgent {
    constructor(_backend) {
        this._backend = _backend;
        this._nextId = 0;
        this._pendingCalls = new Map();
        this.rootKey = null;
    }
    onmessage(msg) {
        const id = msg.id;
        const maybePromise = this._pendingCalls.get(id);
        if (!maybePromise) {
            throw new Error('A proxy get the same message twice...');
        }
        this._pendingCalls.delete(id);
        const [resolve, reject] = maybePromise;
        switch (msg.type) {
            case proxy_ProxyMessageKind.Error:
                return reject(msg.error);
            case proxy_ProxyMessageKind.GetPrincipalResponse:
            case proxy_ProxyMessageKind.CallResponse:
            case proxy_ProxyMessageKind.QueryResponse:
            case proxy_ProxyMessageKind.ReadStateResponse:
            case proxy_ProxyMessageKind.StatusResponse:
                return resolve(msg.response);
            default:
                throw new Error(`Invalid message being sent to ProxyAgent: ${JSON.stringify(msg)}`);
        }
    }
    async getPrincipal() {
        return this._sendAndWait({
            id: this._nextId++,
            type: proxy_ProxyMessageKind.GetPrincipal,
        }).then(principal => {
            if (typeof principal !== 'string') {
                throw new Error('Invalid principal received.');
            }
            return Principal.fromText(principal);
        });
    }
    readState(canisterId, fields) {
        return this._sendAndWait({
            id: this._nextId++,
            type: proxy_ProxyMessageKind.ReadState,
            args: [canisterId.toString(), fields],
        });
    }
    call(canisterId, fields) {
        return this._sendAndWait({
            id: this._nextId++,
            type: proxy_ProxyMessageKind.Call,
            args: [canisterId.toString(), fields],
        });
    }
    status() {
        return this._sendAndWait({
            id: this._nextId++,
            type: proxy_ProxyMessageKind.Status,
        });
    }
    query(canisterId, fields) {
        return this._sendAndWait({
            id: this._nextId++,
            type: proxy_ProxyMessageKind.Query,
            args: [canisterId.toString(), fields],
        });
    }
    async _sendAndWait(msg) {
        return new Promise((resolve, reject) => {
            this._pendingCalls.set(msg.id, [resolve, reject]);
            this._backend(msg);
        });
    }
    async fetchRootKey() {
        // Hex-encoded version of the replica root key
        const rootKey = (await this.status()).root_key;
        this.rootKey = rootKey;
        return rootKey;
    }
}
//# sourceMappingURL=proxy.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/agent/index.js



function esm_agent_getDefaultAgent() {
    const agent = typeof window === 'undefined'
        ? typeof __webpack_require__.g === 'undefined'
            ? typeof self === 'undefined'
                ? undefined
                : self.ic.agent
            : __webpack_require__.g.ic.agent
        : window.ic.agent;
    if (!agent) {
        throw new Error('No Agent could be found.');
    }
    return agent;
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/canisters/management_idl.js
/**
 * This file is generated from the candid for asset management.
 */
/* tslint:disable */
// @ts-ignore
/* harmony default export */ const management_idl = (({ IDL }) => {
    const canister_id = IDL.Principal;
    const definite_canister_settings = IDL.Record({
        controllers: IDL.Vec(IDL.Principal),
        freezing_threshold: IDL.Nat,
        memory_allocation: IDL.Nat,
        compute_allocation: IDL.Nat,
    });
    const canister_settings = IDL.Record({
        controllers: IDL.Opt(IDL.Vec(IDL.Principal)),
        freezing_threshold: IDL.Opt(IDL.Nat),
        memory_allocation: IDL.Opt(IDL.Nat),
        compute_allocation: IDL.Opt(IDL.Nat),
    });
    const wasm_module = IDL.Vec(IDL.Nat8);
    return IDL.Service({
        canister_status: IDL.Func([IDL.Record({ canister_id: canister_id })], [
            IDL.Record({
                status: IDL.Variant({
                    stopped: IDL.Null,
                    stopping: IDL.Null,
                    running: IDL.Null,
                }),
                memory_size: IDL.Nat,
                cycles: IDL.Nat,
                settings: definite_canister_settings,
                module_hash: IDL.Opt(IDL.Vec(IDL.Nat8)),
            }),
        ], []),
        create_canister: IDL.Func([IDL.Record({ settings: IDL.Opt(canister_settings) })], [IDL.Record({ canister_id: canister_id })], []),
        delete_canister: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),
        deposit_cycles: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),
        install_code: IDL.Func([
            IDL.Record({
                arg: IDL.Vec(IDL.Nat8),
                wasm_module: wasm_module,
                mode: IDL.Variant({
                    reinstall: IDL.Null,
                    upgrade: IDL.Null,
                    install: IDL.Null,
                }),
                canister_id: canister_id,
            }),
        ], [], []),
        provisional_create_canister_with_cycles: IDL.Func([
            IDL.Record({
                settings: IDL.Opt(canister_settings),
                amount: IDL.Opt(IDL.Nat),
            }),
        ], [IDL.Record({ canister_id: canister_id })], []),
        provisional_top_up_canister: IDL.Func([IDL.Record({ canister_id: canister_id, amount: IDL.Nat })], [], []),
        raw_rand: IDL.Func([], [IDL.Vec(IDL.Nat8)], []),
        start_canister: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),
        stop_canister: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),
        uninstall_code: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),
        update_settings: IDL.Func([
            IDL.Record({
                canister_id: IDL.Principal,
                settings: canister_settings,
            }),
        ], [], []),
    });
});
//# sourceMappingURL=management_idl.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/canisters/management.js



/**
 * Create a management canister actor
 * @param config
 */
function canisters_management_getManagementCanister(config) {
    function transform(_methodName, args, _callConfig) {
        const first = args[0];
        let effectiveCanisterId = lib_esm_Principal.fromHex('');
        if (first && typeof first === 'object' && first.canister_id) {
            effectiveCanisterId = lib_esm_Principal.from(first.canister_id);
        }
        return { effectiveCanisterId };
    }
    return esm_actor_Actor.createActor(management_idl, Object.assign(Object.assign(Object.assign({}, config), { canisterId: lib_esm_Principal.fromHex('') }), {
        callTransform: transform,
        queryTransform: transform,
    }));
}
//# sourceMappingURL=management.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/vendor/bls/wasm.js
const wasm_wasmBytesBase64 = ``;
//# sourceMappingURL=wasm.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/vendor/bls/bls.js

// This WASM is generated from the miracl BLS Rust code (see
// https://github.com/dfinity/miracl_core_bls12381/)

/* tslint:disable */
/* eslint-disable */
let bls_wasm;
const bls_wasmBytes = base64_arraybuffer/* decode */.J(wasm_wasmBytesBase64);
/**
 * @returns {number}
 */
function bls_bls_bls_init() {
    let ret = bls_wasm.bls_init();
    return ret;
}
let bls_cachegetUint8Memory0 = null;
function bls_getUint8Memory0() {
    if (bls_cachegetUint8Memory0 === null || bls_cachegetUint8Memory0.buffer !== bls_wasm.memory.buffer) {
        bls_cachegetUint8Memory0 = new Uint8Array(bls_wasm.memory.buffer);
    }
    return bls_cachegetUint8Memory0;
}
function bls_passArray8ToWasm0(arg, malloc) {
    const ptr = malloc(arg.length * 1);
    bls_getUint8Memory0().set(arg, ptr / 1);
    return [ptr, arg.length];
}
/**
 * @param {Uint8Array} sig
 * @param {Uint8Array} m
 * @param {Uint8Array} w
 * @returns {number}
 */
function bls_bls_bls_verify(sig, m, w) {
    const [ptr0, len0] = bls_passArray8ToWasm0(sig, bls_wasm.__wbindgen_malloc);
    const [ptr1, len1] = bls_passArray8ToWasm0(m, bls_wasm.__wbindgen_malloc);
    const [ptr2, len2] = bls_passArray8ToWasm0(w, bls_wasm.__wbindgen_malloc);
    const ret = bls_wasm.bls_verify(ptr0, len0, ptr1, len1, ptr2, len2);
    return ret;
}
async function bls_load(module, imports) {
    if (typeof Response === 'function' && module instanceof Response) {
        const bytes = await module.arrayBuffer();
        return await WebAssembly.instantiate(bytes, imports);
    }
    else {
        const instance = await WebAssembly.instantiate(module, imports);
        if (instance instanceof WebAssembly.Instance) {
            return { instance, module };
        }
        else {
            return instance;
        }
    }
}
async function esm_vendor_bls_bls_init() {
    const imports = {};
    const { instance, module } = await bls_load(bls_wasmBytes, imports);
    bls_wasm = instance.exports;
    esm_vendor_bls_bls_init.__wbindgen_wasm_module = module;
    return bls_wasm;
}
/**
 * If `module_or_path` is {RequestInfo} or {URL}, makes a request and
 * for everything else, calls `WebAssembly.instantiate` directly.
 *
 * @param {InitInput | Promise<InitInput>} module_or_path
 *
 * @returns {Promise<InitOutput>}
 */
/* harmony default export */ const bls_bls = (esm_vendor_bls_bls_init);
//# sourceMappingURL=bls.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/utils/bls.js

let utils_bls_verify;
/**
 *
 * @param pk primary key: Uint8Array
 * @param sig signature: Uint8Array
 * @param msg message: Uint8Array
 * @returns Promise resolving a boolean
 */
async function utils_bls_blsVerify(pk, sig, msg) {
    if (!utils_bls_verify) {
        await bls_bls();
        if (bls_bls_bls_init() !== 0) {
            throw new Error('Cannot initialize BLS');
        }
        utils_bls_verify = (pk1, sig1, msg1) => {
            // Reorder things from what the WASM expects (sig, m, w).
            return bls_bls_bls_verify(sig1, msg1, pk1) === 0;
        };
    }
    return utils_bls_verify(pk, sig, msg);
}
//# sourceMappingURL=bls.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/certificate.js






/**
 * A certificate may fail verification with respect to the provided public key
 */
class CertificateVerificationError extends esm_errors_AgentError {
    constructor(reason) {
        super(`Invalid certificate: ${reason}`);
    }
}
/**
 * Make a human readable string out of a hash tree.
 * @param tree
 */
function certificate_hashTreeToString(tree) {
    const indent = (s) => s
        .split('\n')
        .map(x => '  ' + x)
        .join('\n');
    function labelToString(label) {
        const decoder = new TextDecoder(undefined, { fatal: true });
        try {
            return JSON.stringify(decoder.decode(label));
        }
        catch (e) {
            return `data(...${label.byteLength} bytes)`;
        }
    }
    switch (tree[0]) {
        case 0 /* NodeId.Empty */:
            return '()';
        case 1 /* NodeId.Fork */: {
            const left = certificate_hashTreeToString(tree[1]);
            const right = certificate_hashTreeToString(tree[2]);
            return `sub(\n left:\n${indent(left)}\n---\n right:\n${indent(right)}\n)`;
        }
        case 2 /* NodeId.Labeled */: {
            const label = labelToString(tree[1]);
            const sub = certificate_hashTreeToString(tree[2]);
            return `label(\n label:\n${indent(label)}\n sub:\n${indent(sub)}\n)`;
        }
        case 3 /* NodeId.Leaf */: {
            return `leaf(...${tree[1].byteLength} bytes)`;
        }
        case 4 /* NodeId.Pruned */: {
            return `pruned(${toHex(new Uint8Array(tree[1]))}`;
        }
        default: {
            return `unknown(${JSON.stringify(tree[0])})`;
        }
    }
}
function certificate_isBufferEqual(a, b) {
    if (a.byteLength !== b.byteLength) {
        return false;
    }
    const a8 = new Uint8Array(a);
    const b8 = new Uint8Array(b);
    for (let i = 0; i < a8.length; i++) {
        if (a8[i] !== b8[i]) {
            return false;
        }
    }
    return true;
}
class esm_certificate_Certificate {
    constructor(certificate, _rootKey, _canisterId) {
        this._rootKey = _rootKey;
        this._canisterId = _canisterId;
        this.cert = esm_cbor_decode(new Uint8Array(certificate));
    }
    /**
     * Create a new instance of a certificate, automatically verifying it. Throws a
     * CertificateVerificationError if the certificate cannot be verified.
     * @constructs {@link AuthClient}
     * @param {CreateCertificateOptions} options
     * @see {@link CreateCertificateOptions}
     * @param {ArrayBuffer} options.certificate The bytes of the certificate
     * @param {ArrayBuffer} options.rootKey The root key to verify against
     * @param {Principal} options.canisterId The effective or signing canister ID
     * @throws {CertificateVerificationError}
     */
    static async create(options) {
        const cert = new esm_certificate_Certificate(options.certificate, options.rootKey, options.canisterId);
        await cert.verify();
        return cert;
    }
    lookup(path) {
        return certificate_lookup_path(path, this.cert.tree);
    }
    async verify() {
        const rootHash = await certificate_reconstruct(this.cert.tree);
        const derKey = await this._checkDelegationAndGetKey(this.cert.delegation);
        const sig = this.cert.signature;
        const key = certificate_extractDER(derKey);
        const msg = lib_esm_utils_buffer_concat(certificate_domain_sep('ic-state-root'), rootHash);
        let sigVer = false;
        try {
            sigVer = await utils_bls_blsVerify(new Uint8Array(key), new Uint8Array(sig), new Uint8Array(msg));
        }
        catch (err) {
            sigVer = false;
        }
        if (!sigVer) {
            throw new CertificateVerificationError('Signature verification failed');
        }
    }
    async _checkDelegationAndGetKey(d) {
        if (!d) {
            return this._rootKey;
        }
        const cert = await esm_certificate_Certificate.create({
            certificate: d.certificate,
            rootKey: this._rootKey,
            canisterId: this._canisterId,
        });
        if (this._canisterId.compareTo(lib_esm_Principal.managementCanister()) !== 'eq') {
            const rangeLookup = cert.lookup(['subnet', d.subnet_id, 'canister_ranges']);
            if (!rangeLookup) {
                throw new CertificateVerificationError(`Could not find canister ranges for subnet 0x${utils_buffer_toHex(d.subnet_id)}`);
            }
            const ranges_arr = esm_cbor_decode(rangeLookup);
            const ranges = ranges_arr.map(v => [
                lib_esm_Principal.fromUint8Array(v[0]),
                lib_esm_Principal.fromUint8Array(v[1]),
            ]);
            const canisterInRange = ranges.some(r => r[0].ltEq(this._canisterId) && r[1].gtEq(this._canisterId));
            if (!canisterInRange) {
                throw new CertificateVerificationError(`Canister ${this._canisterId} not in range of delegations for subnet 0x${utils_buffer_toHex(d.subnet_id)}`);
            }
        }
        const publicKeyLookup = cert.lookup(['subnet', d.subnet_id, 'public_key']);
        if (!publicKeyLookup) {
            throw new Error(`Could not find subnet key for subnet 0x${utils_buffer_toHex(d.subnet_id)}`);
        }
        return publicKeyLookup;
    }
}
const certificate_DER_PREFIX = utils_buffer_fromHex('308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100');
const certificate_KEY_LENGTH = 96;
function certificate_extractDER(buf) {
    const expectedLength = certificate_DER_PREFIX.byteLength + certificate_KEY_LENGTH;
    if (buf.byteLength !== expectedLength) {
        throw new TypeError(`BLS DER-encoded public key must be ${expectedLength} bytes long`);
    }
    const prefix = buf.slice(0, certificate_DER_PREFIX.byteLength);
    if (!certificate_isBufferEqual(prefix, certificate_DER_PREFIX)) {
        throw new TypeError(`BLS DER-encoded public key is invalid. Expect the following prefix: ${certificate_DER_PREFIX}, but get ${prefix}`);
    }
    return buf.slice(certificate_DER_PREFIX.byteLength);
}
/**
 * @param t
 */
async function certificate_reconstruct(t) {
    switch (t[0]) {
        case 0 /* NodeId.Empty */:
            return esm_request_id_hash(certificate_domain_sep('ic-hashtree-empty'));
        case 4 /* NodeId.Pruned */:
            return t[1];
        case 3 /* NodeId.Leaf */:
            return esm_request_id_hash(lib_esm_utils_buffer_concat(certificate_domain_sep('ic-hashtree-leaf'), t[1]));
        case 2 /* NodeId.Labeled */:
            return esm_request_id_hash(lib_esm_utils_buffer_concat(certificate_domain_sep('ic-hashtree-labeled'), t[1], await certificate_reconstruct(t[2])));
        case 1 /* NodeId.Fork */:
            return esm_request_id_hash(lib_esm_utils_buffer_concat(certificate_domain_sep('ic-hashtree-fork'), await certificate_reconstruct(t[1]), await certificate_reconstruct(t[2])));
        default:
            throw new Error('unreachable');
    }
}
function certificate_domain_sep(s) {
    const len = new Uint8Array([s.length]);
    const str = new TextEncoder().encode(s);
    return lib_esm_utils_buffer_concat(len, str);
}
/**
 * @param path
 * @param tree
 */
function certificate_lookup_path(path, tree) {
    if (path.length === 0) {
        switch (tree[0]) {
            case 3 /* NodeId.Leaf */: {
                return new Uint8Array(tree[1]).buffer;
            }
            default: {
                return undefined;
            }
        }
    }
    const label = typeof path[0] === 'string' ? new TextEncoder().encode(path[0]) : path[0];
    const t = certificate_find_label(label, certificate_flatten_forks(tree));
    if (t) {
        return certificate_lookup_path(path.slice(1), t);
    }
}
function certificate_flatten_forks(t) {
    switch (t[0]) {
        case 0 /* NodeId.Empty */:
            return [];
        case 1 /* NodeId.Fork */:
            return certificate_flatten_forks(t[1]).concat(certificate_flatten_forks(t[2]));
        default:
            return [t];
    }
}
function certificate_find_label(l, trees) {
    if (trees.length === 0) {
        return undefined;
    }
    for (const t of trees) {
        if (t[0] === 2 /* NodeId.Labeled */) {
            const p = t[1];
            if (certificate_isBufferEqual(l, p)) {
                return t[2];
            }
        }
    }
}
//# sourceMappingURL=certificate.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/polling/strategy.js

const strategy_FIVE_MINUTES_IN_MSEC = 5 * 60 * 1000;
/**
 * A best practices polling strategy: wait 2 seconds before the first poll, then 1 second
 * with an exponential backoff factor of 1.2. Timeout after 5 minutes.
 */
function strategy_defaultStrategy() {
    return strategy_chain(strategy_conditionalDelay(strategy_once(), 1000), strategy_backoff(1000, 1.2), strategy_timeout(strategy_FIVE_MINUTES_IN_MSEC));
}
/**
 * Predicate that returns true once.
 */
function strategy_once() {
    let first = true;
    return async () => {
        if (first) {
            first = false;
            return true;
        }
        return false;
    };
}
/**
 * Delay the polling once.
 * @param condition A predicate that indicates when to delay.
 * @param timeInMsec The amount of time to delay.
 */
function strategy_conditionalDelay(condition, timeInMsec) {
    return async (canisterId, requestId, status) => {
        if (await condition(canisterId, requestId, status)) {
            return new Promise(resolve => setTimeout(resolve, timeInMsec));
        }
    };
}
/**
 * Error out after a maximum number of polling has been done.
 * @param count The maximum attempts to poll.
 */
function strategy_maxAttempts(count) {
    let attempts = count;
    return async (canisterId, requestId, status) => {
        if (--attempts <= 0) {
            throw new Error(`Failed to retrieve a reply for request after ${count} attempts:\n` +
                `  Request ID: ${toHex(requestId)}\n` +
                `  Request status: ${status}\n`);
        }
    };
}
/**
 * Throttle polling.
 * @param throttleInMsec Amount in millisecond to wait between each polling.
 */
function strategy_throttle(throttleInMsec) {
    return () => new Promise(resolve => setTimeout(resolve, throttleInMsec));
}
/**
 * Reject a call after a certain amount of time.
 * @param timeInMsec Time in milliseconds before the polling should be rejected.
 */
function strategy_timeout(timeInMsec) {
    const end = Date.now() + timeInMsec;
    return async (canisterId, requestId, status) => {
        if (Date.now() > end) {
            throw new Error(`Request timed out after ${timeInMsec} msec:\n` +
                `  Request ID: ${utils_buffer_toHex(requestId)}\n` +
                `  Request status: ${status}\n`);
        }
    };
}
/**
 * A strategy that throttle, but using an exponential backoff strategy.
 * @param startingThrottleInMsec The throttle in milliseconds to start with.
 * @param backoffFactor The factor to multiple the throttle time between every poll. For
 *   example if using 2, the throttle will double between every run.
 */
function strategy_backoff(startingThrottleInMsec, backoffFactor) {
    let currentThrottling = startingThrottleInMsec;
    return () => new Promise(resolve => setTimeout(() => {
        currentThrottling *= backoffFactor;
        resolve();
    }, currentThrottling));
}
/**
 * Chain multiple polling strategy. This _chains_ the strategies, so if you pass in,
 * say, two throttling strategy of 1 second, it will result in a throttle of 2 seconds.
 * @param strategies A strategy list to chain.
 */
function strategy_chain(...strategies) {
    return async (canisterId, requestId, status) => {
        for (const a of strategies) {
            await a(canisterId, requestId, status);
        }
    };
}
//# sourceMappingURL=strategy.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/polling/index.js





/**
 * Polls the IC to check the status of the given request then
 * returns the response bytes once the request has been processed.
 * @param agent The agent to use to poll read_state.
 * @param canisterId The effective canister ID.
 * @param requestId The Request ID to poll status for.
 * @param strategy A polling strategy.
 * @param request Request for the readState call.
 */
async function esm_polling_pollForResponse(agent, canisterId, requestId, strategy, 
// eslint-disable-next-line
request) {
    var _a;
    const path = [new TextEncoder().encode('request_status'), requestId];
    const currentRequest = request !== null && request !== void 0 ? request : (await ((_a = agent.createReadStateRequest) === null || _a === void 0 ? void 0 : _a.call(agent, { paths: [path] })));
    const state = await agent.readState(canisterId, { paths: [path] }, undefined, currentRequest);
    if (agent.rootKey == null)
        throw new Error('Agent root key not initialized before polling');
    const cert = await esm_certificate_Certificate.create({
        certificate: state.certificate,
        rootKey: agent.rootKey,
        canisterId: canisterId,
    });
    const maybeBuf = cert.lookup([...path, new TextEncoder().encode('status')]);
    let status;
    if (typeof maybeBuf === 'undefined') {
        // Missing requestId means we need to wait
        status = agent_http_RequestStatusResponseStatus.Unknown;
    }
    else {
        status = new TextDecoder().decode(maybeBuf);
    }
    switch (status) {
        case agent_http_RequestStatusResponseStatus.Replied: {
            return cert.lookup([...path, 'reply']);
        }
        case agent_http_RequestStatusResponseStatus.Received:
        case agent_http_RequestStatusResponseStatus.Unknown:
        case agent_http_RequestStatusResponseStatus.Processing:
            // Execute the polling strategy, then retry.
            await strategy(canisterId, requestId, status);
            return esm_polling_pollForResponse(agent, canisterId, requestId, strategy, currentRequest);
        case agent_http_RequestStatusResponseStatus.Rejected: {
            const rejectCode = new Uint8Array(cert.lookup([...path, 'reject_code']))[0];
            const rejectMessage = new TextDecoder().decode(cert.lookup([...path, 'reject_message']));
            throw new Error(`Call was rejected:\n` +
                `  Request ID: ${utils_buffer_toHex(requestId)}\n` +
                `  Reject code: ${rejectCode}\n` +
                `  Reject text: ${rejectMessage}\n`);
        }
        case agent_http_RequestStatusResponseStatus.Done:
            // This is _technically_ not an error, but we still didn't see the `Replied` status so
            // we don't know the result and cannot decode it.
            throw new Error(`Call was marked as done but we never saw the reply:\n` +
                `  Request ID: ${utils_buffer_toHex(requestId)}\n`);
    }
    throw new Error('unreachable');
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/actor.js








class actor_ActorCallError extends esm_errors_AgentError {
    constructor(canisterId, methodName, type, props) {
        super([
            `Call failed:`,
            `  Canister: ${canisterId.toText()}`,
            `  Method: ${methodName} (${type})`,
            ...Object.getOwnPropertyNames(props).map(n => `  "${n}": ${JSON.stringify(props[n])}`),
        ].join('\n'));
        this.canisterId = canisterId;
        this.methodName = methodName;
        this.type = type;
        this.props = props;
    }
}
class actor_QueryCallRejectedError extends actor_ActorCallError {
    constructor(canisterId, methodName, result) {
        var _a;
        super(canisterId, methodName, 'query', {
            Status: result.status,
            Code: (_a = agent_api_ReplicaRejectCode[result.reject_code]) !== null && _a !== void 0 ? _a : `Unknown Code "${result.reject_code}"`,
            Message: result.reject_message,
        });
        this.result = result;
    }
}
class actor_UpdateCallRejectedError extends actor_ActorCallError {
    constructor(canisterId, methodName, requestId, response) {
        super(canisterId, methodName, 'update', {
            'Request ID': utils_buffer_toHex(requestId),
            'HTTP status code': response.status.toString(),
            'HTTP status text': response.statusText,
        });
        this.requestId = requestId;
        this.response = response;
    }
}
/**
 * The mode used when installing a canister.
 */
var actor_CanisterInstallMode;
(function (CanisterInstallMode) {
    CanisterInstallMode["Install"] = "install";
    CanisterInstallMode["Reinstall"] = "reinstall";
    CanisterInstallMode["Upgrade"] = "upgrade";
})(actor_CanisterInstallMode || (actor_CanisterInstallMode = {}));
const actor_metadataSymbol = Symbol.for('ic-agent-metadata');
/**
 * An actor base class. An actor is an object containing only functions that will
 * return a promise. These functions are derived from the IDL definition.
 */
class esm_actor_Actor {
    constructor(metadata) {
        this[actor_metadataSymbol] = Object.freeze(metadata);
    }
    /**
     * Get the Agent class this Actor would call, or undefined if the Actor would use
     * the default agent (global.ic.agent).
     * @param actor The actor to get the agent of.
     */
    static agentOf(actor) {
        return actor[actor_metadataSymbol].config.agent;
    }
    /**
     * Get the interface of an actor, in the form of an instance of a Service.
     * @param actor The actor to get the interface of.
     */
    static interfaceOf(actor) {
        return actor[actor_metadataSymbol].service;
    }
    static canisterIdOf(actor) {
        return lib_esm_Principal.from(actor[actor_metadataSymbol].config.canisterId);
    }
    static async install(fields, config) {
        const mode = fields.mode === undefined ? actor_CanisterInstallMode.Install : fields.mode;
        // Need to transform the arg into a number array.
        const arg = fields.arg ? [...new Uint8Array(fields.arg)] : [];
        // Same for module.
        const wasmModule = [...new Uint8Array(fields.module)];
        const canisterId = typeof config.canisterId === 'string'
            ? lib_esm_Principal.fromText(config.canisterId)
            : config.canisterId;
        await canisters_management_getManagementCanister(config).install_code({
            mode: { [mode]: null },
            arg,
            wasm_module: wasmModule,
            canister_id: canisterId,
        });
    }
    static async createCanister(config) {
        const { canister_id: canisterId } = await canisters_management_getManagementCanister(config || {}).provisional_create_canister_with_cycles({ amount: [], settings: [] });
        return canisterId;
    }
    static async createAndInstallCanister(interfaceFactory, fields, config) {
        const canisterId = await this.createCanister(config);
        await this.install(Object.assign({}, fields), Object.assign(Object.assign({}, config), { canisterId }));
        return this.createActor(interfaceFactory, Object.assign(Object.assign({}, config), { canisterId }));
    }
    static createActorClass(interfaceFactory) {
        const service = interfaceFactory({ IDL: esm_idl_namespaceObject });
        class CanisterActor extends esm_actor_Actor {
            constructor(config) {
                const canisterId = typeof config.canisterId === 'string'
                    ? lib_esm_Principal.fromText(config.canisterId)
                    : config.canisterId;
                super({
                    config: Object.assign(Object.assign(Object.assign({}, actor_DEFAULT_ACTOR_CONFIG), config), { canisterId }),
                    service,
                });
                for (const [methodName, func] of service._fields) {
                    this[methodName] = actor_createActorMethod(this, methodName, func);
                }
            }
        }
        return CanisterActor;
    }
    static createActor(interfaceFactory, configuration) {
        return new (this.createActorClass(interfaceFactory))(configuration);
    }
}
// IDL functions can have multiple return values, so decoding always
// produces an array. Ensure that functions with single or zero return
// values behave as expected.
function actor_decodeReturnValue(types, msg) {
    const returnValues = esm_idl_decode(types, buffer/* Buffer.from */.lW.from(msg));
    switch (returnValues.length) {
        case 0:
            return undefined;
        case 1:
            return returnValues[0];
        default:
            return returnValues;
    }
}
const actor_DEFAULT_ACTOR_CONFIG = {
    pollingStrategyFactory: strategy_defaultStrategy,
};
function actor_createActorMethod(actor, methodName, func) {
    let caller;
    if (func.annotations.includes('query')) {
        caller = async (options, ...args) => {
            var _a, _b;
            // First, if there's a config transformation, call it.
            options = Object.assign(Object.assign({}, options), (_b = (_a = actor[actor_metadataSymbol].config).queryTransform) === null || _b === void 0 ? void 0 : _b.call(_a, methodName, args, Object.assign(Object.assign({}, actor[actor_metadataSymbol].config), options)));
            const agent = options.agent || actor[actor_metadataSymbol].config.agent || esm_agent_getDefaultAgent();
            const cid = lib_esm_Principal.from(options.canisterId || actor[actor_metadataSymbol].config.canisterId);
            const arg = esm_idl_encode(func.argTypes, args);
            const result = await agent.query(cid, { methodName, arg });
            switch (result.status) {
                case "rejected" /* QueryResponseStatus.Rejected */:
                    throw new actor_QueryCallRejectedError(cid, methodName, result);
                case "replied" /* QueryResponseStatus.Replied */:
                    return actor_decodeReturnValue(func.retTypes, result.reply.arg);
            }
        };
    }
    else {
        caller = async (options, ...args) => {
            var _a, _b;
            // First, if there's a config transformation, call it.
            options = Object.assign(Object.assign({}, options), (_b = (_a = actor[actor_metadataSymbol].config).callTransform) === null || _b === void 0 ? void 0 : _b.call(_a, methodName, args, Object.assign(Object.assign({}, actor[actor_metadataSymbol].config), options)));
            const agent = options.agent || actor[actor_metadataSymbol].config.agent || esm_agent_getDefaultAgent();
            const { canisterId, effectiveCanisterId, pollingStrategyFactory } = Object.assign(Object.assign(Object.assign({}, actor_DEFAULT_ACTOR_CONFIG), actor[actor_metadataSymbol].config), options);
            const cid = lib_esm_Principal.from(canisterId);
            const ecid = effectiveCanisterId !== undefined ? lib_esm_Principal.from(effectiveCanisterId) : cid;
            const arg = esm_idl_encode(func.argTypes, args);
            const { requestId, response } = await agent.call(cid, {
                methodName,
                arg,
                effectiveCanisterId: ecid,
            });
            if (!response.ok) {
                throw new actor_UpdateCallRejectedError(cid, methodName, requestId, response);
            }
            const pollStrategy = pollingStrategyFactory();
            const responseBytes = await esm_polling_pollForResponse(agent, ecid, requestId, pollStrategy);
            if (responseBytes !== undefined) {
                return actor_decodeReturnValue(func.retTypes, responseBytes);
            }
            else if (func.retTypes.length === 0) {
                return undefined;
            }
            else {
                throw new Error(`Call was returned undefined, but type [${func.retTypes.join(',')}].`);
            }
        };
    }
    const handler = (...args) => caller({}, ...args);
    handler.withOptions =
        (options) => (...args) => caller(options, ...args);
    return handler;
}
//# sourceMappingURL=actor.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/canisters/asset.js


/* tslint:enable */
/**
 * Create a management canister actor.
 * @param config
 */
function asset_createAssetCanisterActor(config) {
    return Actor.createActor(assetCanister, config);
}
//# sourceMappingURL=asset.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/canisterStatus/index.js
/** @module CanisterStatus */




/**
 *
 * @param {CanisterStatusOptions} options {@link CanisterStatusOptions}
 * @param {CanisterStatusOptions['canisterId']} options.canisterId {@link Principal}
 * @param {CanisterStatusOptions['agent']} options.agent {@link HttpAgent} optional authenticated agent to use to make the canister request. Useful for accessing private metadata under icp:private
 * @param {CanisterStatusOptions['paths']} options.paths {@link Path[]}
 * @returns {Status} object populated with data from the requested paths
 * @example
 * const status = await canisterStatus({
 *   paths: ['controllers', 'candid'],
 *   ...options
 * });
 *
 * const controllers = status.get('controllers');
 */
const request = async (options) => {
    const { canisterId, agent, paths } = options;
    const uniquePaths = [...new Set(paths)];
    // Map path options to their correct formats
    const encodedPaths = uniquePaths.map(path => {
        return encodePath(path, canisterId);
    });
    const status = new Map();
    const promises = uniquePaths.map((path, index) => {
        return (async () => {
            var _a;
            try {
                const response = await agent.readState(canisterId, {
                    paths: [encodedPaths[index]],
                });
                const cert = await Certificate.create({
                    certificate: response.certificate,
                    rootKey: agent.rootKey,
                    canisterId: canisterId,
                });
                const data = cert.lookup(encodePath(uniquePaths[index], canisterId));
                if (!data) {
                    // Typically, the cert lookup will throw
                    console.warn(`Expected to find result for path ${path}, but instead found nothing.`);
                    if (typeof path === 'string') {
                        status.set(path, null);
                    }
                    else {
                        status.set(path.key, null);
                    }
                }
                else {
                    switch (path) {
                        case 'time': {
                            status.set(path, decodeTime(data));
                            break;
                        }
                        case 'controllers': {
                            status.set(path, decodeControllers(data));
                            break;
                        }
                        case 'module_hash': {
                            status.set(path, decodeHex(data));
                            break;
                        }
                        case 'candid': {
                            status.set(path, new TextDecoder().decode(data));
                            break;
                        }
                        default: {
                            // Check for CustomPath signature
                            if (typeof path !== 'string' && 'key' in path && 'path' in path) {
                                switch (path.decodeStrategy) {
                                    case 'raw':
                                        status.set(path.key, data);
                                        break;
                                    case 'leb128': {
                                        status.set(path.key, decodeLeb128(data));
                                        break;
                                    }
                                    case 'cbor': {
                                        status.set(path.key, decodeCbor(data));
                                        break;
                                    }
                                    case 'hex': {
                                        status.set(path.key, decodeHex(data));
                                        break;
                                    }
                                    case 'utf-8': {
                                        status.set(path.key, decodeUtf8(data));
                                    }
                                }
                            }
                        }
                    }
                }
            }
            catch (error) {
                // Break on signature verification errors
                if ((_a = error === null || error === void 0 ? void 0 : error.message) === null || _a === void 0 ? void 0 : _a.includes('Invalid certificate')) {
                    throw new AgentError(error.message);
                }
                if (typeof path !== 'string' && 'key' in path && 'path' in path) {
                    status.set(path.key, null);
                }
                else {
                    status.set(path, null);
                }
                console.group();
                console.warn(`Expected to find result for path ${path}, but instead found nothing.`);
                console.warn(error);
                console.groupEnd();
            }
        })();
    });
    // Fetch all values separately, as each option can fail
    await Promise.all(promises);
    return status;
};
const encodePath = (path, canisterId) => {
    const encoder = new TextEncoder();
    const encode = (arg) => {
        return new DataView(encoder.encode(arg).buffer).buffer;
    };
    const canisterBuffer = new DataView(canisterId.toUint8Array().buffer).buffer;
    switch (path) {
        case 'time':
            return [encode('time')];
        case 'controllers':
            return [encode('canister'), canisterBuffer, encode('controllers')];
        case 'module_hash':
            return [encode('canister'), canisterBuffer, encode('module_hash')];
        case 'subnet':
            return [encode('subnet')];
        case 'candid':
            return [encode('canister'), canisterBuffer, encode('metadata'), encode('candid:service')];
        default: {
            // Check for CustomPath signature
            if ('key' in path && 'path' in path) {
                // For simplified metadata queries
                if (typeof path['path'] === 'string' || path['path'] instanceof ArrayBuffer) {
                    const metaPath = path.path;
                    const encoded = typeof metaPath === 'string' ? encode(metaPath) : metaPath;
                    return [encode('canister'), canisterBuffer, encode('metadata'), encoded];
                    // For non-metadata, return the provided custompath
                }
                else {
                    return path['path'];
                }
            }
        }
    }
    throw new Error(`An unexpeected error was encountered while encoding your path for canister status. Please ensure that your path, ${path} was formatted correctly.`);
};
const decodeHex = (buf) => {
    return toHex(buf);
};
const decodeLeb128 = (buf) => {
    return lebDecode(new PipeArrayBuffer(buf));
};
const decodeCbor = (buf) => {
    return Cbor.decode(buf);
};
const decodeUtf8 = (buf) => {
    return new TextDecoder().decode(buf);
};
// time is a LEB128-encoded Nat
const decodeTime = (buf) => {
    const decoded = decodeLeb128(buf);
    return new Date(Number(decoded / BigInt(1000000)));
};
// Controllers are CBOR-encoded buffers, starting with a Tag we don't need
const decodeControllers = (buf) => {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    const [tag, ...controllersRaw] = decodeCbor(buf);
    return controllersRaw.map((buf) => {
        return Principal.fromUint8Array(new Uint8Array(buf));
    });
};
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@dfinity/agent/lib/esm/index.js












/**
 * The CanisterStatus utility is used to request structured data directly from the IC public API. This data can be accessed using agent.readState, but CanisterStatus provides a helpful abstraction with some known paths.
 *
 * You can request a canisters Controllers, ModuleHash, Candid interface, Subnet, or Time, or provide a custom path {@link CanisterStatus.CustomPath} and pass arbitrary buffers for valid paths identified in https://smartcontracts.org/docs/current/references/ic-interface-spec/.
 *
 * The primary method for this namespace is {@link CanisterStatus.request}
 */


//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: ./node_modules/@dfinity/nns/dist/esm/chunk-MGC7CRB4.js
var chunk_MGC7CRB4 = __webpack_require__(4924);
// EXTERNAL MODULE: ./node_modules/@dfinity/nns/dist/esm/chunk-ONAVPXOT.js
var chunk_ONAVPXOT = __webpack_require__(7640);
;// CONCATENATED MODULE: ./node_modules/@dfinity/nns/dist/esm/chunk-NNJFBVJ3.js
var ke=(0,chunk_ONAVPXOT.a)(me=>{"use strict";var Jt=(0,chunk_MGC7CRB4.b)(),ye=(0,chunk_MGC7CRB4.c)(),Jr=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;me.Buffer=G;me.SlowBuffer=lB;me.INSPECT_MAX_BYTES=50;var st=2147483647;me.kMaxLength=st;G.TYPED_ARRAY_SUPPORT=cB();!G.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function cB(){try{var t=new Uint8Array(1),A={foo:function(){return 42}};return Object.setPrototypeOf(A,Uint8Array.prototype),Object.setPrototypeOf(t,A),t.foo()===42}catch{return!1}}Object.defineProperty(G.prototype,"parent",{enumerable:!0,get:function(){if(!!G.isBuffer(this))return this.buffer}});Object.defineProperty(G.prototype,"offset",{enumerable:!0,get:function(){if(!!G.isBuffer(this))return this.byteOffset}});function Ae(t){if(t>st)throw new RangeError('The value "'+t+'" is invalid for option "size"');var A=new Uint8Array(t);return Object.setPrototypeOf(A,G.prototype),A}function G(t,A,e){if(typeof t=="number"){if(typeof A=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return Zt(t)}return vr(t,A,e)}G.poolSize=8192;function vr(t,A,e){if(typeof t=="string")return uB(t,A);if(ArrayBuffer.isView(t))return CB(t);if(t==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(OA(t,ArrayBuffer)||t&&OA(t.buffer,ArrayBuffer)||typeof SharedArrayBuffer<"u"&&(OA(t,SharedArrayBuffer)||t&&OA(t.buffer,SharedArrayBuffer)))return Lt(t,A,e);if(typeof t=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');var r=t.valueOf&&t.valueOf();if(r!=null&&r!==t)return G.from(r,A,e);var i=fB(t);if(i)return i;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof t[Symbol.toPrimitive]=="function")return G.from(t[Symbol.toPrimitive]("string"),A,e);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}G.from=function(t,A,e){return vr(t,A,e)};Object.setPrototypeOf(G.prototype,Uint8Array.prototype);Object.setPrototypeOf(G,Uint8Array);function Zr(t){if(typeof t!="number")throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function hB(t,A,e){return Zr(t),t<=0?Ae(t):A!==void 0?typeof e=="string"?Ae(t).fill(A,e):Ae(t).fill(A):Ae(t)}G.alloc=function(t,A,e){return hB(t,A,e)};function Zt(t){return Zr(t),Ae(t<0?0:Ot(t)|0)}G.allocUnsafe=function(t){return Zt(t)};G.allocUnsafeSlow=function(t){return Zt(t)};function uB(t,A){if((typeof A!="string"||A==="")&&(A="utf8"),!G.isEncoding(A))throw new TypeError("Unknown encoding: "+A);var e=Or(t,A)|0,r=Ae(e),i=r.write(t,A);return i!==e&&(r=r.slice(0,i)),r}function Tt(t){for(var A=t.length<0?0:Ot(t.length)|0,e=Ae(A),r=0;r<A;r+=1)e[r]=t[r]&255;return e}function CB(t){if(OA(t,Uint8Array)){var A=new Uint8Array(t);return Lt(A.buffer,A.byteOffset,A.byteLength)}return Tt(t)}function Lt(t,A,e){if(A<0||t.byteLength<A)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<A+(e||0))throw new RangeError('"length" is outside of buffer bounds');var r;return A===void 0&&e===void 0?r=new Uint8Array(t):e===void 0?r=new Uint8Array(t,A):r=new Uint8Array(t,A,e),Object.setPrototypeOf(r,G.prototype),r}function fB(t){if(G.isBuffer(t)){var A=Ot(t.length)|0,e=Ae(A);return e.length===0||t.copy(e,0,0,A),e}if(t.length!==void 0)return typeof t.length!="number"||Kt(t.length)?Ae(0):Tt(t);if(t.type==="Buffer"&&Array.isArray(t.data))return Tt(t.data)}function Ot(t){if(t>=st)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+st.toString(16)+" bytes");return t|0}function lB(t){return+t!=t&&(t=0),G.alloc(+t)}G.isBuffer=function(A){return A!=null&&A._isBuffer===!0&&A!==G.prototype};G.compare=function(A,e){if(OA(A,Uint8Array)&&(A=G.from(A,A.offset,A.byteLength)),OA(e,Uint8Array)&&(e=G.from(e,e.offset,e.byteLength)),!G.isBuffer(A)||!G.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(A===e)return 0;for(var r=A.length,i=e.length,B=0,s=Math.min(r,i);B<s;++B)if(A[B]!==e[B]){r=A[B],i=e[B];break}return r<i?-1:i<r?1:0};G.isEncoding=function(A){switch(String(A).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}};G.concat=function(A,e){if(!Array.isArray(A))throw new TypeError('"list" argument must be an Array of Buffers');if(A.length===0)return G.alloc(0);var r;if(e===void 0)for(e=0,r=0;r<A.length;++r)e+=A[r].length;var i=G.allocUnsafe(e),B=0;for(r=0;r<A.length;++r){var s=A[r];if(OA(s,Uint8Array))B+s.length>i.length?G.from(s).copy(i,B):Uint8Array.prototype.set.call(i,s,B);else if(G.isBuffer(s))s.copy(i,B);else throw new TypeError('"list" argument must be an Array of Buffers');B+=s.length}return i};function Or(t,A){if(G.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||OA(t,ArrayBuffer))return t.byteLength;if(typeof t!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);var e=t.length,r=arguments.length>2&&arguments[2]===!0;if(!r&&e===0)return 0;for(var i=!1;;)switch(A){case"ascii":case"latin1":case"binary":return e;case"utf8":case"utf-8":return vt(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return e*2;case"hex":return e>>>1;case"base64":return Xr(t).length;default:if(i)return r?-1:vt(t).length;A=(""+A).toLowerCase(),i=!0}}G.byteLength=Or;function wB(t,A,e){var r=!1;if((A===void 0||A<0)&&(A=0),A>this.length||((e===void 0||e>this.length)&&(e=this.length),e<=0)||(e>>>=0,A>>>=0,e<=A))return"";for(t||(t="utf8");;)switch(t){case"hex":return SB(this,A,e);case"utf8":case"utf-8":return jr(this,A,e);case"ascii":return FB(this,A,e);case"latin1":case"binary":return xB(this,A,e);case"base64":return kB(this,A,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return DB(this,A,e);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}G.prototype._isBuffer=!0;function ce(t,A,e){var r=t[A];t[A]=t[e],t[e]=r}G.prototype.swap16=function(){var A=this.length;if(A%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<A;e+=2)ce(this,e,e+1);return this};G.prototype.swap32=function(){var A=this.length;if(A%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<A;e+=4)ce(this,e,e+3),ce(this,e+1,e+2);return this};G.prototype.swap64=function(){var A=this.length;if(A%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<A;e+=8)ce(this,e,e+7),ce(this,e+1,e+6),ce(this,e+2,e+5),ce(this,e+3,e+4);return this};G.prototype.toString=function(){var A=this.length;return A===0?"":arguments.length===0?jr(this,0,A):wB.apply(this,arguments)};G.prototype.toLocaleString=G.prototype.toString;G.prototype.equals=function(A){if(!G.isBuffer(A))throw new TypeError("Argument must be a Buffer");return this===A?!0:G.compare(this,A)===0};G.prototype.inspect=function(){var A="",e=me.INSPECT_MAX_BYTES;return A=this.toString("hex",0,e).replace(/(.{2})/g,"$1 ").trim(),this.length>e&&(A+=" ... "),"<Buffer "+A+">"};Jr&&(G.prototype[Jr]=G.prototype.inspect);G.prototype.compare=function(A,e,r,i,B){if(OA(A,Uint8Array)&&(A=G.from(A,A.offset,A.byteLength)),!G.isBuffer(A))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof A);if(e===void 0&&(e=0),r===void 0&&(r=A?A.length:0),i===void 0&&(i=0),B===void 0&&(B=this.length),e<0||r>A.length||i<0||B>this.length)throw new RangeError("out of range index");if(i>=B&&e>=r)return 0;if(i>=B)return-1;if(e>=r)return 1;if(e>>>=0,r>>>=0,i>>>=0,B>>>=0,this===A)return 0;for(var s=B-i,l=r-e,u=Math.min(s,l),y=this.slice(i,B),b=A.slice(e,r),D=0;D<u;++D)if(y[D]!==b[D]){s=y[D],l=b[D];break}return s<l?-1:l<s?1:0};function Kr(t,A,e,r,i){if(t.length===0)return-1;if(typeof e=="string"?(r=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),e=+e,Kt(e)&&(e=i?0:t.length-1),e<0&&(e=t.length+e),e>=t.length){if(i)return-1;e=t.length-1}else if(e<0)if(i)e=0;else return-1;if(typeof A=="string"&&(A=G.from(A,r)),G.isBuffer(A))return A.length===0?-1:Tr(t,A,e,r,i);if(typeof A=="number")return A=A&255,typeof Uint8Array.prototype.indexOf=="function"?i?Uint8Array.prototype.indexOf.call(t,A,e):Uint8Array.prototype.lastIndexOf.call(t,A,e):Tr(t,[A],e,r,i);throw new TypeError("val must be string, number or Buffer")}function Tr(t,A,e,r,i){var B=1,s=t.length,l=A.length;if(r!==void 0&&(r=String(r).toLowerCase(),r==="ucs2"||r==="ucs-2"||r==="utf16le"||r==="utf-16le")){if(t.length<2||A.length<2)return-1;B=2,s/=2,l/=2,e/=2}function u(F,H){return B===1?F[H]:F.readUInt16BE(H*B)}var y;if(i){var b=-1;for(y=e;y<s;y++)if(u(t,y)===u(A,b===-1?0:y-b)){if(b===-1&&(b=y),y-b+1===l)return b*B}else b!==-1&&(y-=y-b),b=-1}else for(e+l>s&&(e=s-l),y=e;y>=0;y--){for(var D=!0,_=0;_<l;_++)if(u(t,y+_)!==u(A,_)){D=!1;break}if(D)return y}return-1}G.prototype.includes=function(A,e,r){return this.indexOf(A,e,r)!==-1};G.prototype.indexOf=function(A,e,r){return Kr(this,A,e,r,!0)};G.prototype.lastIndexOf=function(A,e,r){return Kr(this,A,e,r,!1)};function pB(t,A,e,r){e=Number(e)||0;var i=t.length-e;r?(r=Number(r),r>i&&(r=i)):r=i;var B=A.length;r>B/2&&(r=B/2);for(var s=0;s<r;++s){var l=parseInt(A.substr(s*2,2),16);if(Kt(l))return s;t[e+s]=l}return s}function GB(t,A,e,r){return ot(vt(A,t.length-e),t,e,r)}function dB(t,A,e,r){return ot(UB(A),t,e,r)}function yB(t,A,e,r){return ot(Xr(A),t,e,r)}function mB(t,A,e,r){return ot(MB(A,t.length-e),t,e,r)}G.prototype.write=function(A,e,r,i){if(e===void 0)i="utf8",r=this.length,e=0;else if(r===void 0&&typeof e=="string")i=e,r=this.length,e=0;else if(isFinite(e))e=e>>>0,isFinite(r)?(r=r>>>0,i===void 0&&(i="utf8")):(i=r,r=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");var B=this.length-e;if((r===void 0||r>B)&&(r=B),A.length>0&&(r<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");i||(i="utf8");for(var s=!1;;)switch(i){case"hex":return pB(this,A,e,r);case"utf8":case"utf-8":return GB(this,A,e,r);case"ascii":case"latin1":case"binary":return dB(this,A,e,r);case"base64":return yB(this,A,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return mB(this,A,e,r);default:if(s)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),s=!0}};G.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function kB(t,A,e){return A===0&&e===t.length?Jt.fromByteArray(t):Jt.fromByteArray(t.slice(A,e))}function jr(t,A,e){e=Math.min(t.length,e);for(var r=[],i=A;i<e;){var B=t[i],s=null,l=B>239?4:B>223?3:B>191?2:1;if(i+l<=e){var u,y,b,D;switch(l){case 1:B<128&&(s=B);break;case 2:u=t[i+1],(u&192)===128&&(D=(B&31)<<6|u&63,D>127&&(s=D));break;case 3:u=t[i+1],y=t[i+2],(u&192)===128&&(y&192)===128&&(D=(B&15)<<12|(u&63)<<6|y&63,D>2047&&(D<55296||D>57343)&&(s=D));break;case 4:u=t[i+1],y=t[i+2],b=t[i+3],(u&192)===128&&(y&192)===128&&(b&192)===128&&(D=(B&15)<<18|(u&63)<<12|(y&63)<<6|b&63,D>65535&&D<1114112&&(s=D))}}s===null?(s=65533,l=1):s>65535&&(s-=65536,r.push(s>>>10&1023|55296),s=56320|s&1023),r.push(s),i+=l}return qB(r)}var Lr=4096;function qB(t){var A=t.length;if(A<=Lr)return String.fromCharCode.apply(String,t);for(var e="",r=0;r<A;)e+=String.fromCharCode.apply(String,t.slice(r,r+=Lr));return e}function FB(t,A,e){var r="";e=Math.min(t.length,e);for(var i=A;i<e;++i)r+=String.fromCharCode(t[i]&127);return r}function xB(t,A,e){var r="";e=Math.min(t.length,e);for(var i=A;i<e;++i)r+=String.fromCharCode(t[i]);return r}function SB(t,A,e){var r=t.length;(!A||A<0)&&(A=0),(!e||e<0||e>r)&&(e=r);for(var i="",B=A;B<e;++B)i+=HB[t[B]];return i}function DB(t,A,e){for(var r=t.slice(A,e),i="",B=0;B<r.length-1;B+=2)i+=String.fromCharCode(r[B]+r[B+1]*256);return i}G.prototype.slice=function(A,e){var r=this.length;A=~~A,e=e===void 0?r:~~e,A<0?(A+=r,A<0&&(A=0)):A>r&&(A=r),e<0?(e+=r,e<0&&(e=0)):e>r&&(e=r),e<A&&(e=A);var i=this.subarray(A,e);return Object.setPrototypeOf(i,G.prototype),i};function wA(t,A,e){if(t%1!==0||t<0)throw new RangeError("offset is not uint");if(t+A>e)throw new RangeError("Trying to access beyond buffer length")}G.prototype.readUintLE=G.prototype.readUIntLE=function(A,e,r){A=A>>>0,e=e>>>0,r||wA(A,e,this.length);for(var i=this[A],B=1,s=0;++s<e&&(B*=256);)i+=this[A+s]*B;return i};G.prototype.readUintBE=G.prototype.readUIntBE=function(A,e,r){A=A>>>0,e=e>>>0,r||wA(A,e,this.length);for(var i=this[A+--e],B=1;e>0&&(B*=256);)i+=this[A+--e]*B;return i};G.prototype.readUint8=G.prototype.readUInt8=function(A,e){return A=A>>>0,e||wA(A,1,this.length),this[A]};G.prototype.readUint16LE=G.prototype.readUInt16LE=function(A,e){return A=A>>>0,e||wA(A,2,this.length),this[A]|this[A+1]<<8};G.prototype.readUint16BE=G.prototype.readUInt16BE=function(A,e){return A=A>>>0,e||wA(A,2,this.length),this[A]<<8|this[A+1]};G.prototype.readUint32LE=G.prototype.readUInt32LE=function(A,e){return A=A>>>0,e||wA(A,4,this.length),(this[A]|this[A+1]<<8|this[A+2]<<16)+this[A+3]*16777216};G.prototype.readUint32BE=G.prototype.readUInt32BE=function(A,e){return A=A>>>0,e||wA(A,4,this.length),this[A]*16777216+(this[A+1]<<16|this[A+2]<<8|this[A+3])};G.prototype.readIntLE=function(A,e,r){A=A>>>0,e=e>>>0,r||wA(A,e,this.length);for(var i=this[A],B=1,s=0;++s<e&&(B*=256);)i+=this[A+s]*B;return B*=128,i>=B&&(i-=Math.pow(2,8*e)),i};G.prototype.readIntBE=function(A,e,r){A=A>>>0,e=e>>>0,r||wA(A,e,this.length);for(var i=e,B=1,s=this[A+--i];i>0&&(B*=256);)s+=this[A+--i]*B;return B*=128,s>=B&&(s-=Math.pow(2,8*e)),s};G.prototype.readInt8=function(A,e){return A=A>>>0,e||wA(A,1,this.length),this[A]&128?(255-this[A]+1)*-1:this[A]};G.prototype.readInt16LE=function(A,e){A=A>>>0,e||wA(A,2,this.length);var r=this[A]|this[A+1]<<8;return r&32768?r|4294901760:r};G.prototype.readInt16BE=function(A,e){A=A>>>0,e||wA(A,2,this.length);var r=this[A+1]|this[A]<<8;return r&32768?r|4294901760:r};G.prototype.readInt32LE=function(A,e){return A=A>>>0,e||wA(A,4,this.length),this[A]|this[A+1]<<8|this[A+2]<<16|this[A+3]<<24};G.prototype.readInt32BE=function(A,e){return A=A>>>0,e||wA(A,4,this.length),this[A]<<24|this[A+1]<<16|this[A+2]<<8|this[A+3]};G.prototype.readFloatLE=function(A,e){return A=A>>>0,e||wA(A,4,this.length),ye.read(this,A,!0,23,4)};G.prototype.readFloatBE=function(A,e){return A=A>>>0,e||wA(A,4,this.length),ye.read(this,A,!1,23,4)};G.prototype.readDoubleLE=function(A,e){return A=A>>>0,e||wA(A,8,this.length),ye.read(this,A,!0,52,8)};G.prototype.readDoubleBE=function(A,e){return A=A>>>0,e||wA(A,8,this.length),ye.read(this,A,!1,52,8)};function qA(t,A,e,r,i,B){if(!G.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(A>i||A<B)throw new RangeError('"value" argument is out of bounds');if(e+r>t.length)throw new RangeError("Index out of range")}G.prototype.writeUintLE=G.prototype.writeUIntLE=function(A,e,r,i){if(A=+A,e=e>>>0,r=r>>>0,!i){var B=Math.pow(2,8*r)-1;qA(this,A,e,r,B,0)}var s=1,l=0;for(this[e]=A&255;++l<r&&(s*=256);)this[e+l]=A/s&255;return e+r};G.prototype.writeUintBE=G.prototype.writeUIntBE=function(A,e,r,i){if(A=+A,e=e>>>0,r=r>>>0,!i){var B=Math.pow(2,8*r)-1;qA(this,A,e,r,B,0)}var s=r-1,l=1;for(this[e+s]=A&255;--s>=0&&(l*=256);)this[e+s]=A/l&255;return e+r};G.prototype.writeUint8=G.prototype.writeUInt8=function(A,e,r){return A=+A,e=e>>>0,r||qA(this,A,e,1,255,0),this[e]=A&255,e+1};G.prototype.writeUint16LE=G.prototype.writeUInt16LE=function(A,e,r){return A=+A,e=e>>>0,r||qA(this,A,e,2,65535,0),this[e]=A&255,this[e+1]=A>>>8,e+2};G.prototype.writeUint16BE=G.prototype.writeUInt16BE=function(A,e,r){return A=+A,e=e>>>0,r||qA(this,A,e,2,65535,0),this[e]=A>>>8,this[e+1]=A&255,e+2};G.prototype.writeUint32LE=G.prototype.writeUInt32LE=function(A,e,r){return A=+A,e=e>>>0,r||qA(this,A,e,4,4294967295,0),this[e+3]=A>>>24,this[e+2]=A>>>16,this[e+1]=A>>>8,this[e]=A&255,e+4};G.prototype.writeUint32BE=G.prototype.writeUInt32BE=function(A,e,r){return A=+A,e=e>>>0,r||qA(this,A,e,4,4294967295,0),this[e]=A>>>24,this[e+1]=A>>>16,this[e+2]=A>>>8,this[e+3]=A&255,e+4};G.prototype.writeIntLE=function(A,e,r,i){if(A=+A,e=e>>>0,!i){var B=Math.pow(2,8*r-1);qA(this,A,e,r,B-1,-B)}var s=0,l=1,u=0;for(this[e]=A&255;++s<r&&(l*=256);)A<0&&u===0&&this[e+s-1]!==0&&(u=1),this[e+s]=(A/l>>0)-u&255;return e+r};G.prototype.writeIntBE=function(A,e,r,i){if(A=+A,e=e>>>0,!i){var B=Math.pow(2,8*r-1);qA(this,A,e,r,B-1,-B)}var s=r-1,l=1,u=0;for(this[e+s]=A&255;--s>=0&&(l*=256);)A<0&&u===0&&this[e+s+1]!==0&&(u=1),this[e+s]=(A/l>>0)-u&255;return e+r};G.prototype.writeInt8=function(A,e,r){return A=+A,e=e>>>0,r||qA(this,A,e,1,127,-128),A<0&&(A=255+A+1),this[e]=A&255,e+1};G.prototype.writeInt16LE=function(A,e,r){return A=+A,e=e>>>0,r||qA(this,A,e,2,32767,-32768),this[e]=A&255,this[e+1]=A>>>8,e+2};G.prototype.writeInt16BE=function(A,e,r){return A=+A,e=e>>>0,r||qA(this,A,e,2,32767,-32768),this[e]=A>>>8,this[e+1]=A&255,e+2};G.prototype.writeInt32LE=function(A,e,r){return A=+A,e=e>>>0,r||qA(this,A,e,4,2147483647,-2147483648),this[e]=A&255,this[e+1]=A>>>8,this[e+2]=A>>>16,this[e+3]=A>>>24,e+4};G.prototype.writeInt32BE=function(A,e,r){return A=+A,e=e>>>0,r||qA(this,A,e,4,2147483647,-2147483648),A<0&&(A=4294967295+A+1),this[e]=A>>>24,this[e+1]=A>>>16,this[e+2]=A>>>8,this[e+3]=A&255,e+4};function Vr(t,A,e,r,i,B){if(e+r>t.length)throw new RangeError("Index out of range");if(e<0)throw new RangeError("Index out of range")}function Pr(t,A,e,r,i){return A=+A,e=e>>>0,i||Vr(t,A,e,4,34028234663852886e22,-34028234663852886e22),ye.write(t,A,e,r,23,4),e+4}G.prototype.writeFloatLE=function(A,e,r){return Pr(this,A,e,!0,r)};G.prototype.writeFloatBE=function(A,e,r){return Pr(this,A,e,!1,r)};function Wr(t,A,e,r,i){return A=+A,e=e>>>0,i||Vr(t,A,e,8,17976931348623157e292,-17976931348623157e292),ye.write(t,A,e,r,52,8),e+8}G.prototype.writeDoubleLE=function(A,e,r){return Wr(this,A,e,!0,r)};G.prototype.writeDoubleBE=function(A,e,r){return Wr(this,A,e,!1,r)};G.prototype.copy=function(A,e,r,i){if(!G.isBuffer(A))throw new TypeError("argument should be a Buffer");if(r||(r=0),!i&&i!==0&&(i=this.length),e>=A.length&&(e=A.length),e||(e=0),i>0&&i<r&&(i=r),i===r||A.length===0||this.length===0)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),A.length-e<i-r&&(i=A.length-e+r);var B=i-r;return this===A&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(e,r,i):Uint8Array.prototype.set.call(A,this.subarray(r,i),e),B};G.prototype.fill=function(A,e,r,i){if(typeof A=="string"){if(typeof e=="string"?(i=e,e=0,r=this.length):typeof r=="string"&&(i=r,r=this.length),i!==void 0&&typeof i!="string")throw new TypeError("encoding must be a string");if(typeof i=="string"&&!G.isEncoding(i))throw new TypeError("Unknown encoding: "+i);if(A.length===1){var B=A.charCodeAt(0);(i==="utf8"&&B<128||i==="latin1")&&(A=B)}}else typeof A=="number"?A=A&255:typeof A=="boolean"&&(A=Number(A));if(e<0||this.length<e||this.length<r)throw new RangeError("Out of range index");if(r<=e)return this;e=e>>>0,r=r===void 0?this.length:r>>>0,A||(A=0);var s;if(typeof A=="number")for(s=e;s<r;++s)this[s]=A;else{var l=G.isBuffer(A)?A:G.from(A,i),u=l.length;if(u===0)throw new TypeError('The value "'+A+'" is invalid for argument "value"');for(s=0;s<r-e;++s)this[s+e]=l[s%u]}return this};var NB=/[^+/0-9A-Za-z-_]/g;function bB(t){if(t=t.split("=")[0],t=t.trim().replace(NB,""),t.length<2)return"";for(;t.length%4!==0;)t=t+"=";return t}function vt(t,A){A=A||1/0;for(var e,r=t.length,i=null,B=[],s=0;s<r;++s){if(e=t.charCodeAt(s),e>55295&&e<57344){if(!i){if(e>56319){(A-=3)>-1&&B.push(239,191,189);continue}else if(s+1===r){(A-=3)>-1&&B.push(239,191,189);continue}i=e;continue}if(e<56320){(A-=3)>-1&&B.push(239,191,189),i=e;continue}e=(i-55296<<10|e-56320)+65536}else i&&(A-=3)>-1&&B.push(239,191,189);if(i=null,e<128){if((A-=1)<0)break;B.push(e)}else if(e<2048){if((A-=2)<0)break;B.push(e>>6|192,e&63|128)}else if(e<65536){if((A-=3)<0)break;B.push(e>>12|224,e>>6&63|128,e&63|128)}else if(e<1114112){if((A-=4)<0)break;B.push(e>>18|240,e>>12&63|128,e>>6&63|128,e&63|128)}else throw new Error("Invalid code point")}return B}function UB(t){for(var A=[],e=0;e<t.length;++e)A.push(t.charCodeAt(e)&255);return A}function MB(t,A){for(var e,r,i,B=[],s=0;s<t.length&&!((A-=2)<0);++s)e=t.charCodeAt(s),r=e>>8,i=e%256,B.push(i),B.push(r);return B}function Xr(t){return Jt.toByteArray(bB(t))}function ot(t,A,e,r){for(var i=0;i<r&&!(i+e>=A.length||i>=t.length);++i)A[i+e]=t[i];return i}function OA(t,A){return t instanceof A||t!=null&&t.constructor!=null&&t.constructor.name!=null&&t.constructor.name===A.name}function Kt(t){return t!==t}var HB=function(){for(var t="0123456789abcdef",A=new Array(256),e=0;e<16;++e)for(var r=e*16,i=0;i<16;++i)A[r+i]=t[e]+t[i];return A}()});var Pe=(0,chunk_ONAVPXOT.a)((Fi,pt)=>{(function(t){"use strict";var A,e=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,r=Math.ceil,i=Math.floor,B="[BigNumber Error] ",s=B+"Number primitive has more than 15 significant digits: ",l=1e14,u=14,y=9007199254740991,b=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],D=1e7,_=1e9;function F(U){var x,v,K,q=m.prototype={constructor:m,toString:null,valueOf:null},eA=new m(1),z=20,tA=4,EA=-7,dA=21,UA=-1e7,SA=1e7,vA=!1,pA=1,ZA=0,Te={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:"\xA0",suffix:""},ne="0123456789abcdefghijklmnopqrstuvwxyz",Le=!0;function m(n,o){var a,f,Q,h,p,I,c,w,C=this;if(!(C instanceof m))return new m(n,o);if(o==null){if(n&&n._isBigNumber===!0){C.s=n.s,!n.c||n.e>SA?C.c=C.e=null:n.e<UA?C.c=[C.e=0]:(C.e=n.e,C.c=n.c.slice());return}if((I=typeof n=="number")&&n*0==0){if(C.s=1/n<0?(n=-n,-1):1,n===~~n){for(h=0,p=n;p>=10;p/=10,h++);h>SA?C.c=C.e=null:(C.e=h,C.c=[n]);return}w=String(n)}else{if(!e.test(w=String(n)))return K(C,w,I);C.s=w.charCodeAt(0)==45?(w=w.slice(1),-1):1}(h=w.indexOf("."))>-1&&(w=w.replace(".","")),(p=w.search(/e/i))>0?(h<0&&(h=p),h+=+w.slice(p+1),w=w.substring(0,p)):h<0&&(h=w.length)}else{if(R(o,2,ne.length,"Base"),o==10&&Le)return C=new m(n),mA(C,z+C.e+1,tA);if(w=String(n),I=typeof n=="number"){if(n*0!=0)return K(C,w,I,o);if(C.s=1/n<0?(w=w.slice(1),-1):1,m.DEBUG&&w.replace(/^0\.0*|\./,"").length>15)throw Error(s+n)}else C.s=w.charCodeAt(0)===45?(w=w.slice(1),-1):1;for(a=ne.slice(0,o),h=p=0,c=w.length;p<c;p++)if(a.indexOf(f=w.charAt(p))<0){if(f=="."){if(p>h){h=c;continue}}else if(!Q&&(w==w.toUpperCase()&&(w=w.toLowerCase())||w==w.toLowerCase()&&(w=w.toUpperCase()))){Q=!0,p=-1,h=0;continue}return K(C,String(n),I,o)}I=!1,w=v(w,o,10,C.s),(h=w.indexOf("."))>-1?w=w.replace(".",""):h=w.length}for(p=0;w.charCodeAt(p)===48;p++);for(c=w.length;w.charCodeAt(--c)===48;);if(w=w.slice(p,++c)){if(c-=p,I&&m.DEBUG&&c>15&&(n>y||n!==i(n)))throw Error(s+C.s*n);if((h=h-p-1)>SA)C.c=C.e=null;else if(h<UA)C.c=[C.e=0];else{if(C.e=h,C.c=[],p=(h+1)%u,h<0&&(p+=u),p<c){for(p&&C.c.push(+w.slice(0,p)),c-=u;p<c;)C.c.push(+w.slice(p,p+=u));p=u-(w=w.slice(p)).length}else p-=c;for(;p--;w+="0");C.c.push(+w)}}else C.c=[C.e=0]}m.clone=F,m.ROUND_UP=0,m.ROUND_DOWN=1,m.ROUND_CEIL=2,m.ROUND_FLOOR=3,m.ROUND_HALF_UP=4,m.ROUND_HALF_DOWN=5,m.ROUND_HALF_EVEN=6,m.ROUND_HALF_CEIL=7,m.ROUND_HALF_FLOOR=8,m.EUCLID=9,m.config=m.set=function(n){var o,a;if(n!=null)if(typeof n=="object"){if(n.hasOwnProperty(o="DECIMAL_PLACES")&&(a=n[o],R(a,0,_,o),z=a),n.hasOwnProperty(o="ROUNDING_MODE")&&(a=n[o],R(a,0,8,o),tA=a),n.hasOwnProperty(o="EXPONENTIAL_AT")&&(a=n[o],a&&a.pop?(R(a[0],-_,0,o),R(a[1],0,_,o),EA=a[0],dA=a[1]):(R(a,-_,_,o),EA=-(dA=a<0?-a:a))),n.hasOwnProperty(o="RANGE"))if(a=n[o],a&&a.pop)R(a[0],-_,-1,o),R(a[1],1,_,o),UA=a[0],SA=a[1];else if(R(a,-_,_,o),a)UA=-(SA=a<0?-a:a);else throw Error(B+o+" cannot be zero: "+a);if(n.hasOwnProperty(o="CRYPTO"))if(a=n[o],a===!!a)if(a)if(typeof crypto<"u"&&crypto&&(crypto.getRandomValues||crypto.randomBytes))vA=a;else throw vA=!a,Error(B+"crypto unavailable");else vA=a;else throw Error(B+o+" not true or false: "+a);if(n.hasOwnProperty(o="MODULO_MODE")&&(a=n[o],R(a,0,9,o),pA=a),n.hasOwnProperty(o="POW_PRECISION")&&(a=n[o],R(a,0,_,o),ZA=a),n.hasOwnProperty(o="FORMAT"))if(a=n[o],typeof a=="object")Te=a;else throw Error(B+o+" not an object: "+a);if(n.hasOwnProperty(o="ALPHABET"))if(a=n[o],typeof a=="string"&&!/^.?$|[+\-.\s]|(.).*\1/.test(a))Le=a.slice(0,10)=="0123456789",ne=a;else throw Error(B+o+" invalid: "+a)}else throw Error(B+"Object expected: "+n);return{DECIMAL_PLACES:z,ROUNDING_MODE:tA,EXPONENTIAL_AT:[EA,dA],RANGE:[UA,SA],CRYPTO:vA,MODULO_MODE:pA,POW_PRECISION:ZA,FORMAT:Te,ALPHABET:ne}},m.isBigNumber=function(n){if(!n||n._isBigNumber!==!0)return!1;if(!m.DEBUG)return!0;var o,a,f=n.c,Q=n.e,h=n.s;A:if({}.toString.call(f)=="[object Array]"){if((h===1||h===-1)&&Q>=-_&&Q<=_&&Q===i(Q)){if(f[0]===0){if(Q===0&&f.length===1)return!0;break A}if(o=(Q+1)%u,o<1&&(o+=u),String(f[0]).length==o){for(o=0;o<f.length;o++)if(a=f[o],a<0||a>=l||a!==i(a))break A;if(a!==0)return!0}}}else if(f===null&&Q===null&&(h===null||h===1||h===-1))return!0;throw Error(B+"Invalid BigNumber: "+n)},m.maximum=m.max=function(){return we(arguments,q.lt)},m.minimum=m.min=function(){return we(arguments,q.gt)},m.random=function(){var n=9007199254740992,o=Math.random()*n&2097151?function(){return i(Math.random()*n)}:function(){return(Math.random()*1073741824|0)*8388608+(Math.random()*8388608|0)};return function(a){var f,Q,h,p,I,c=0,w=[],C=new m(eA);if(a==null?a=z:R(a,0,_),p=r(a/u),vA)if(crypto.getRandomValues){for(f=crypto.getRandomValues(new Uint32Array(p*=2));c<p;)I=f[c]*131072+(f[c+1]>>>11),I>=9e15?(Q=crypto.getRandomValues(new Uint32Array(2)),f[c]=Q[0],f[c+1]=Q[1]):(w.push(I%1e14),c+=2);c=p/2}else if(crypto.randomBytes){for(f=crypto.randomBytes(p*=7);c<p;)I=(f[c]&31)*281474976710656+f[c+1]*1099511627776+f[c+2]*4294967296+f[c+3]*16777216+(f[c+4]<<16)+(f[c+5]<<8)+f[c+6],I>=9e15?crypto.randomBytes(7).copy(f,c):(w.push(I%1e14),c+=7);c=p/7}else throw vA=!1,Error(B+"crypto unavailable");if(!vA)for(;c<p;)I=o(),I<9e15&&(w[c++]=I%1e14);for(p=w[--c],a%=u,p&&a&&(I=b[u-a],w[c]=i(p/I)*I);w[c]===0;w.pop(),c--);if(c<0)w=[h=0];else{for(h=-1;w[0]===0;w.splice(0,1),h-=u);for(c=1,I=w[0];I>=10;I/=10,c++);c<u&&(h-=u-c)}return C.e=h,C.c=w,C}}(),m.sum=function(){for(var n=1,o=arguments,a=new m(o[0]);n<o.length;)a=a.plus(o[n++]);return a},v=function(){var n="0123456789";function o(a,f,Q,h){for(var p,I=[0],c,w=0,C=a.length;w<C;){for(c=I.length;c--;I[c]*=f);for(I[0]+=h.indexOf(a.charAt(w++)),p=0;p<I.length;p++)I[p]>Q-1&&(I[p+1]==null&&(I[p+1]=0),I[p+1]+=I[p]/Q|0,I[p]%=Q)}return I.reverse()}return function(a,f,Q,h,p){var I,c,w,C,d,k,S,Z,rA=a.indexOf("."),aA=z,T=tA;for(rA>=0&&(C=ZA,ZA=0,a=a.replace(".",""),Z=new m(f),k=Z.pow(a.length-rA),ZA=C,Z.c=o(oA(P(k.c),k.e,"0"),10,Q,n),Z.e=Z.c.length),S=o(a,f,Q,p?(I=ne,n):(I=n,ne)),w=C=S.length;S[--C]==0;S.pop());if(!S[0])return I.charAt(0);if(rA<0?--w:(k.c=S,k.e=w,k.s=h,k=x(k,Z,aA,T,Q),S=k.c,d=k.r,w=k.e),c=w+aA+1,rA=S[c],C=Q/2,d=d||c<0||S[c+1]!=null,d=T<4?(rA!=null||d)&&(T==0||T==(k.s<0?3:2)):rA>C||rA==C&&(T==4||d||T==6&&S[c-1]&1||T==(k.s<0?8:7)),c<1||!S[0])a=d?oA(I.charAt(1),-aA,I.charAt(0)):I.charAt(0);else{if(S.length=c,d)for(--Q;++S[--c]>Q;)S[c]=0,c||(++w,S=[1].concat(S));for(C=S.length;!S[--C];);for(rA=0,a="";rA<=C;a+=I.charAt(S[rA++]));a=oA(a,w,I.charAt(0))}return a}}(),x=function(){function n(f,Q,h){var p,I,c,w,C=0,d=f.length,k=Q%D,S=Q/D|0;for(f=f.slice();d--;)c=f[d]%D,w=f[d]/D|0,p=S*c+w*k,I=k*c+p%D*D+C,C=(I/h|0)+(p/D|0)+S*w,f[d]=I%h;return C&&(f=[C].concat(f)),f}function o(f,Q,h,p){var I,c;if(h!=p)c=h>p?1:-1;else for(I=c=0;I<h;I++)if(f[I]!=Q[I]){c=f[I]>Q[I]?1:-1;break}return c}function a(f,Q,h,p){for(var I=0;h--;)f[h]-=I,I=f[h]<Q[h]?1:0,f[h]=I*p+f[h]-Q[h];for(;!f[0]&&f.length>1;f.splice(0,1));}return function(f,Q,h,p,I){var c,w,C,d,k,S,Z,rA,aA,T,N,CA,pe,ve,Ze,MA,j,kA=f.s==Q.s?1:-1,GA=f.c,iA=Q.c;if(!GA||!GA[0]||!iA||!iA[0])return new m(!f.s||!Q.s||(GA?iA&&GA[0]==iA[0]:!iA)?NaN:GA&&GA[0]==0||!iA?kA*0:kA/0);for(rA=new m(kA),aA=rA.c=[],w=f.e-Q.e,kA=h+w+1,I||(I=l,w=H(f.e/u)-H(Q.e/u),kA=kA/u|0),C=0;iA[C]==(GA[C]||0);C++);if(iA[C]>(GA[C]||0)&&w--,kA<0)aA.push(1),d=!0;else{for(ve=GA.length,MA=iA.length,C=0,kA+=2,k=i(I/(iA[0]+1)),k>1&&(iA=n(iA,k,I),GA=n(GA,k,I),MA=iA.length,ve=GA.length),pe=MA,T=GA.slice(0,MA),N=T.length;N<MA;T[N++]=0);j=iA.slice(),j=[0].concat(j),Ze=iA[0],iA[1]>=I/2&&Ze++;do{if(k=0,c=o(iA,T,MA,N),c<0){if(CA=T[0],MA!=N&&(CA=CA*I+(T[1]||0)),k=i(CA/Ze),k>1)for(k>=I&&(k=I-1),S=n(iA,k,I),Z=S.length,N=T.length;o(S,T,Z,N)==1;)k--,a(S,MA<Z?j:iA,Z,I),Z=S.length,c=1;else k==0&&(c=k=1),S=iA.slice(),Z=S.length;if(Z<N&&(S=[0].concat(S)),a(T,S,N,I),N=T.length,c==-1)for(;o(iA,T,MA,N)<1;)k++,a(T,MA<N?j:iA,N,I),N=T.length}else c===0&&(k++,T=[0]);aA[C++]=k,T[0]?T[N++]=GA[pe]||0:(T=[GA[pe]],N=1)}while((pe++<ve||T[0]!=null)&&kA--);d=T[0]!=null,aA[0]||aA.splice(0,1)}if(I==l){for(C=1,kA=aA[0];kA>=10;kA/=10,C++);mA(rA,h+(rA.e=C+w*u-1)+1,p,d)}else rA.e=w,rA.r=+d;return rA}}();function E(n,o,a,f){var Q,h,p,I,c;if(a==null?a=tA:R(a,0,8),!n.c)return n.toString();if(Q=n.c[0],p=n.e,o==null)c=P(n.c),c=f==1||f==2&&(p<=EA||p>=dA)?uA(c,p):oA(c,p,"0");else if(n=mA(new m(n),o,a),h=n.e,c=P(n.c),I=c.length,f==1||f==2&&(o<=h||h<=EA)){for(;I<o;c+="0",I++);c=uA(c,h)}else if(o-=p,c=oA(c,h,"0"),h+1>I){if(--o>0)for(c+=".";o--;c+="0");}else if(o+=h-I,o>0)for(h+1==I&&(c+=".");o--;c+="0");return n.s<0&&Q?"-"+c:c}function we(n,o){for(var a,f=1,Q=new m(n[0]);f<n.length;f++)if(a=new m(n[f]),a.s)o.call(Q,a)&&(Q=a);else{Q=a;break}return Q}function Qe(n,o,a){for(var f=1,Q=o.length;!o[--Q];o.pop());for(Q=o[0];Q>=10;Q/=10,f++);return(a=f+a*u-1)>SA?n.c=n.e=null:a<UA?n.c=[n.e=0]:(n.e=a,n.c=o),n}K=function(){var n=/^(-?)0([xbo])(?=\w[\w.]*$)/i,o=/^([^.]+)\.$/,a=/^\.([^.]+)$/,f=/^-?(Infinity|NaN)$/,Q=/^\s*\+(?=[\w.])|^\s+|\s+$/g;return function(h,p,I,c){var w,C=I?p:p.replace(Q,"");if(f.test(C))h.s=isNaN(C)?null:C<0?-1:1;else{if(!I&&(C=C.replace(n,function(d,k,S){return w=(S=S.toLowerCase())=="x"?16:S=="b"?2:8,!c||c==w?k:d}),c&&(w=c,C=C.replace(o,"$1").replace(a,"0.$1")),p!=C))return new m(C,w);if(m.DEBUG)throw Error(B+"Not a"+(c?" base "+c:"")+" number: "+p);h.s=null}h.c=h.e=null}}();function mA(n,o,a,f){var Q,h,p,I,c,w,C,d=n.c,k=b;if(d){A:{for(Q=1,I=d[0];I>=10;I/=10,Q++);if(h=o-Q,h<0)h+=u,p=o,c=d[w=0],C=c/k[Q-p-1]%10|0;else if(w=r((h+1)/u),w>=d.length)if(f){for(;d.length<=w;d.push(0));c=C=0,Q=1,h%=u,p=h-u+1}else break A;else{for(c=I=d[w],Q=1;I>=10;I/=10,Q++);h%=u,p=h-u+Q,C=p<0?0:c/k[Q-p-1]%10|0}if(f=f||o<0||d[w+1]!=null||(p<0?c:c%k[Q-p-1]),f=a<4?(C||f)&&(a==0||a==(n.s<0?3:2)):C>5||C==5&&(a==4||f||a==6&&(h>0?p>0?c/k[Q-p]:0:d[w-1])%10&1||a==(n.s<0?8:7)),o<1||!d[0])return d.length=0,f?(o-=n.e+1,d[0]=k[(u-o%u)%u],n.e=-o||0):d[0]=n.e=0,n;if(h==0?(d.length=w,I=1,w--):(d.length=w+1,I=k[u-h],d[w]=p>0?i(c/k[Q-p]%k[p])*I:0),f)for(;;)if(w==0){for(h=1,p=d[0];p>=10;p/=10,h++);for(p=d[0]+=I,I=1;p>=10;p/=10,I++);h!=I&&(n.e++,d[0]==l&&(d[0]=1));break}else{if(d[w]+=I,d[w]!=l)break;d[w--]=0,I=1}for(h=d.length;d[--h]===0;d.pop());}n.e>SA?n.c=n.e=null:n.e<UA&&(n.c=[n.e=0])}return n}function M(n){var o,a=n.e;return a===null?n.toString():(o=P(n.c),o=a<=EA||a>=dA?uA(o,a):oA(o,a,"0"),n.s<0?"-"+o:o)}return q.absoluteValue=q.abs=function(){var n=new m(this);return n.s<0&&(n.s=1),n},q.comparedTo=function(n,o){return BA(this,new m(n,o))},q.decimalPlaces=q.dp=function(n,o){var a,f,Q,h=this;if(n!=null)return R(n,0,_),o==null?o=tA:R(o,0,8),mA(new m(h),n+h.e+1,o);if(!(a=h.c))return null;if(f=((Q=a.length-1)-H(this.e/u))*u,Q=a[Q])for(;Q%10==0;Q/=10,f--);return f<0&&(f=0),f},q.dividedBy=q.div=function(n,o){return x(this,new m(n,o),z,tA)},q.dividedToIntegerBy=q.idiv=function(n,o){return x(this,new m(n,o),0,1)},q.exponentiatedBy=q.pow=function(n,o){var a,f,Q,h,p,I,c,w,C,d=this;if(n=new m(n),n.c&&!n.isInteger())throw Error(B+"Exponent not an integer: "+M(n));if(o!=null&&(o=new m(o)),I=n.e>14,!d.c||!d.c[0]||d.c[0]==1&&!d.e&&d.c.length==1||!n.c||!n.c[0])return C=new m(Math.pow(+M(d),I?2-sA(n):+M(n))),o?C.mod(o):C;if(c=n.s<0,o){if(o.c?!o.c[0]:!o.s)return new m(NaN);f=!c&&d.isInteger()&&o.isInteger(),f&&(d=d.mod(o))}else{if(n.e>9&&(d.e>0||d.e<-1||(d.e==0?d.c[0]>1||I&&d.c[1]>=24e7:d.c[0]<8e13||I&&d.c[0]<=9999975e7)))return h=d.s<0&&sA(n)?-0:0,d.e>-1&&(h=1/h),new m(c?1/h:h);ZA&&(h=r(ZA/u+2))}for(I?(a=new m(.5),c&&(n.s=1),w=sA(n)):(Q=Math.abs(+M(n)),w=Q%2),C=new m(eA);;){if(w){if(C=C.times(d),!C.c)break;h?C.c.length>h&&(C.c.length=h):f&&(C=C.mod(o))}if(Q){if(Q=i(Q/2),Q===0)break;w=Q%2}else if(n=n.times(a),mA(n,n.e+1,1),n.e>14)w=sA(n);else{if(Q=+M(n),Q===0)break;w=Q%2}d=d.times(d),h?d.c&&d.c.length>h&&(d.c.length=h):f&&(d=d.mod(o))}return f?C:(c&&(C=eA.div(C)),o?C.mod(o):h?mA(C,ZA,tA,p):C)},q.integerValue=function(n){var o=new m(this);return n==null?n=tA:R(n,0,8),mA(o,o.e+1,n)},q.isEqualTo=q.eq=function(n,o){return BA(this,new m(n,o))===0},q.isFinite=function(){return!!this.c},q.isGreaterThan=q.gt=function(n,o){return BA(this,new m(n,o))>0},q.isGreaterThanOrEqualTo=q.gte=function(n,o){return(o=BA(this,new m(n,o)))===1||o===0},q.isInteger=function(){return!!this.c&&H(this.e/u)>this.c.length-2},q.isLessThan=q.lt=function(n,o){return BA(this,new m(n,o))<0},q.isLessThanOrEqualTo=q.lte=function(n,o){return(o=BA(this,new m(n,o)))===-1||o===0},q.isNaN=function(){return!this.s},q.isNegative=function(){return this.s<0},q.isPositive=function(){return this.s>0},q.isZero=function(){return!!this.c&&this.c[0]==0},q.minus=function(n,o){var a,f,Q,h,p=this,I=p.s;if(n=new m(n,o),o=n.s,!I||!o)return new m(NaN);if(I!=o)return n.s=-o,p.plus(n);var c=p.e/u,w=n.e/u,C=p.c,d=n.c;if(!c||!w){if(!C||!d)return C?(n.s=-o,n):new m(d?p:NaN);if(!C[0]||!d[0])return d[0]?(n.s=-o,n):new m(C[0]?p:tA==3?-0:0)}if(c=H(c),w=H(w),C=C.slice(),I=c-w){for((h=I<0)?(I=-I,Q=C):(w=c,Q=d),Q.reverse(),o=I;o--;Q.push(0));Q.reverse()}else for(f=(h=(I=C.length)<(o=d.length))?I:o,I=o=0;o<f;o++)if(C[o]!=d[o]){h=C[o]<d[o];break}if(h&&(Q=C,C=d,d=Q,n.s=-n.s),o=(f=d.length)-(a=C.length),o>0)for(;o--;C[a++]=0);for(o=l-1;f>I;){if(C[--f]<d[f]){for(a=f;a&&!C[--a];C[a]=o);--C[a],C[f]+=l}C[f]-=d[f]}for(;C[0]==0;C.splice(0,1),--w);return C[0]?Qe(n,C,w):(n.s=tA==3?-1:1,n.c=[n.e=0],n)},q.modulo=q.mod=function(n,o){var a,f,Q=this;return n=new m(n,o),!Q.c||!n.s||n.c&&!n.c[0]?new m(NaN):!n.c||Q.c&&!Q.c[0]?new m(Q):(pA==9?(f=n.s,n.s=1,a=x(Q,n,0,3),n.s=f,a.s*=f):a=x(Q,n,0,pA),n=Q.minus(a.times(n)),!n.c[0]&&pA==1&&(n.s=Q.s),n)},q.multipliedBy=q.times=function(n,o){var a,f,Q,h,p,I,c,w,C,d,k,S,Z,rA,aA,T=this,N=T.c,CA=(n=new m(n,o)).c;if(!N||!CA||!N[0]||!CA[0])return!T.s||!n.s||N&&!N[0]&&!CA||CA&&!CA[0]&&!N?n.c=n.e=n.s=null:(n.s*=T.s,!N||!CA?n.c=n.e=null:(n.c=[0],n.e=0)),n;for(f=H(T.e/u)+H(n.e/u),n.s*=T.s,c=N.length,d=CA.length,c<d&&(Z=N,N=CA,CA=Z,Q=c,c=d,d=Q),Q=c+d,Z=[];Q--;Z.push(0));for(rA=l,aA=D,Q=d;--Q>=0;){for(a=0,k=CA[Q]%aA,S=CA[Q]/aA|0,p=c,h=Q+p;h>Q;)w=N[--p]%aA,C=N[p]/aA|0,I=S*w+C*k,w=k*w+I%aA*aA+Z[h]+a,a=(w/rA|0)+(I/aA|0)+S*C,Z[h--]=w%rA;Z[h]=a}return a?++f:Z.splice(0,1),Qe(n,Z,f)},q.negated=function(){var n=new m(this);return n.s=-n.s||null,n},q.plus=function(n,o){var a,f=this,Q=f.s;if(n=new m(n,o),o=n.s,!Q||!o)return new m(NaN);if(Q!=o)return n.s=-o,f.minus(n);var h=f.e/u,p=n.e/u,I=f.c,c=n.c;if(!h||!p){if(!I||!c)return new m(Q/0);if(!I[0]||!c[0])return c[0]?n:new m(I[0]?f:Q*0)}if(h=H(h),p=H(p),I=I.slice(),Q=h-p){for(Q>0?(p=h,a=c):(Q=-Q,a=I),a.reverse();Q--;a.push(0));a.reverse()}for(Q=I.length,o=c.length,Q-o<0&&(a=c,c=I,I=a,o=Q),Q=0;o;)Q=(I[--o]=I[o]+c[o]+Q)/l|0,I[o]=l===I[o]?0:I[o]%l;return Q&&(I=[Q].concat(I),++p),Qe(n,I,p)},q.precision=q.sd=function(n,o){var a,f,Q,h=this;if(n!=null&&n!==!!n)return R(n,1,_),o==null?o=tA:R(o,0,8),mA(new m(h),n,o);if(!(a=h.c))return null;if(Q=a.length-1,f=Q*u+1,Q=a[Q]){for(;Q%10==0;Q/=10,f--);for(Q=a[0];Q>=10;Q/=10,f++);}return n&&h.e+1>f&&(f=h.e+1),f},q.shiftedBy=function(n){return R(n,-y,y),this.times("1e"+n)},q.squareRoot=q.sqrt=function(){var n,o,a,f,Q,h=this,p=h.c,I=h.s,c=h.e,w=z+4,C=new m("0.5");if(I!==1||!p||!p[0])return new m(!I||I<0&&(!p||p[0])?NaN:p?h:1/0);if(I=Math.sqrt(+M(h)),I==0||I==1/0?(o=P(p),(o.length+c)%2==0&&(o+="0"),I=Math.sqrt(+o),c=H((c+1)/2)-(c<0||c%2),I==1/0?o="5e"+c:(o=I.toExponential(),o=o.slice(0,o.indexOf("e")+1)+c),a=new m(o)):a=new m(I+""),a.c[0]){for(c=a.e,I=c+w,I<3&&(I=0);;)if(Q=a,a=C.times(Q.plus(x(h,Q,w,1))),P(Q.c).slice(0,I)===(o=P(a.c)).slice(0,I))if(a.e<c&&--I,o=o.slice(I-3,I+1),o=="9999"||!f&&o=="4999"){if(!f&&(mA(Q,Q.e+z+2,0),Q.times(Q).eq(h))){a=Q;break}w+=4,I+=4,f=1}else{(!+o||!+o.slice(1)&&o.charAt(0)=="5")&&(mA(a,a.e+z+2,1),n=!a.times(a).eq(h));break}}return mA(a,a.e+z+1,tA,n)},q.toExponential=function(n,o){return n!=null&&(R(n,0,_),n++),E(this,n,o,1)},q.toFixed=function(n,o){return n!=null&&(R(n,0,_),n=n+this.e+1),E(this,n,o)},q.toFormat=function(n,o,a){var f,Q=this;if(a==null)n!=null&&o&&typeof o=="object"?(a=o,o=null):n&&typeof n=="object"?(a=n,n=o=null):a=Te;else if(typeof a!="object")throw Error(B+"Argument not an object: "+a);if(f=Q.toFixed(n,o),Q.c){var h,p=f.split("."),I=+a.groupSize,c=+a.secondaryGroupSize,w=a.groupSeparator||"",C=p[0],d=p[1],k=Q.s<0,S=k?C.slice(1):C,Z=S.length;if(c&&(h=I,I=c,c=h,Z-=h),I>0&&Z>0){for(h=Z%I||I,C=S.substr(0,h);h<Z;h+=I)C+=w+S.substr(h,I);c>0&&(C+=w+S.slice(h)),k&&(C="-"+C)}f=d?C+(a.decimalSeparator||"")+((c=+a.fractionGroupSize)?d.replace(new RegExp("\\d{"+c+"}\\B","g"),"$&"+(a.fractionGroupSeparator||"")):d):C}return(a.prefix||"")+f+(a.suffix||"")},q.toFraction=function(n){var o,a,f,Q,h,p,I,c,w,C,d,k,S=this,Z=S.c;if(n!=null&&(I=new m(n),!I.isInteger()&&(I.c||I.s!==1)||I.lt(eA)))throw Error(B+"Argument "+(I.isInteger()?"out of range: ":"not an integer: ")+M(I));if(!Z)return new m(S);for(o=new m(eA),w=a=new m(eA),f=c=new m(eA),k=P(Z),h=o.e=k.length-S.e-1,o.c[0]=b[(p=h%u)<0?u+p:p],n=!n||I.comparedTo(o)>0?h>0?o:w:I,p=SA,SA=1/0,I=new m(k),c.c[0]=0;C=x(I,o,0,1),Q=a.plus(C.times(f)),Q.comparedTo(n)!=1;)a=f,f=Q,w=c.plus(C.times(Q=w)),c=Q,o=I.minus(C.times(Q=o)),I=Q;return Q=x(n.minus(a),f,0,1),c=c.plus(Q.times(w)),a=a.plus(Q.times(f)),c.s=w.s=S.s,h=h*2,d=x(w,f,h,tA).minus(S).abs().comparedTo(x(c,a,h,tA).minus(S).abs())<1?[w,f]:[c,a],SA=p,d},q.toNumber=function(){return+M(this)},q.toPrecision=function(n,o){return n!=null&&R(n,1,_),E(this,n,o,2)},q.toString=function(n){var o,a=this,f=a.s,Q=a.e;return Q===null?f?(o="Infinity",f<0&&(o="-"+o)):o="NaN":(n==null?o=Q<=EA||Q>=dA?uA(P(a.c),Q):oA(P(a.c),Q,"0"):n===10&&Le?(a=mA(new m(a),z+Q+1,tA),o=oA(P(a.c),a.e,"0")):(R(n,2,ne.length,"Base"),o=v(oA(P(a.c),Q,"0"),10,n,f,!0)),f<0&&a.c[0]&&(o="-"+o)),o},q.valueOf=q.toJSON=function(){return M(this)},q._isBigNumber=!0,U!=null&&m.set(U),m}function H(U){var x=U|0;return U>0||U===x?x:x-1}function P(U){for(var x,v,K=1,q=U.length,eA=U[0]+"";K<q;){for(x=U[K++]+"",v=u-x.length;v--;x="0"+x);eA+=x}for(q=eA.length;eA.charCodeAt(--q)===48;);return eA.slice(0,q+1||1)}function BA(U,x){var v,K,q=U.c,eA=x.c,z=U.s,tA=x.s,EA=U.e,dA=x.e;if(!z||!tA)return null;if(v=q&&!q[0],K=eA&&!eA[0],v||K)return v?K?0:-tA:z;if(z!=tA)return z;if(v=z<0,K=EA==dA,!q||!eA)return K?0:!q^v?1:-1;if(!K)return EA>dA^v?1:-1;for(tA=(EA=q.length)<(dA=eA.length)?EA:dA,z=0;z<tA;z++)if(q[z]!=eA[z])return q[z]>eA[z]^v?1:-1;return EA==dA?0:EA>dA^v?1:-1}function R(U,x,v,K){if(U<x||U>v||U!==i(U))throw Error(B+(K||"Argument")+(typeof U=="number"?U<x||U>v?" out of range: ":" not an integer: ":" not a primitive number: ")+String(U))}function sA(U){var x=U.c.length-1;return H(U.e/u)==x&&U.c[x]%2!=0}function uA(U,x){return(U.length>1?U.charAt(0)+"."+U.slice(1):U)+(x<0?"e":"e+")+x}function oA(U,x,v){var K,q;if(x<0){for(q=v+".";++x;q+=v);U=q+U}else if(K=U.length,++x>K){for(q=v,x-=K;--x;q+=v);U+=q}else x<K&&(U=U.slice(0,x)+"."+U.slice(x));return U}A=F(),A.default=A.BigNumber=A,typeof define=="function"&&__webpack_require__.amdO?define(function(){return A}):typeof pt<"u"&&pt.exports?pt.exports=A:(t||(t=typeof self<"u"&&self?self:window),t.BigNumber=A)})(Fi)});var Si=(0,chunk_ONAVPXOT.a)((Wo,xi)=>{xi.exports=function(A,e,r){var i=new A.Uint8Array(r),B=e.pushInt,s=e.pushInt32,l=e.pushInt32Neg,u=e.pushInt64,y=e.pushInt64Neg,b=e.pushFloat,D=e.pushFloatSingle,_=e.pushFloatDouble,F=e.pushTrue,H=e.pushFalse,P=e.pushUndefined,BA=e.pushNull,R=e.pushInfinity,sA=e.pushInfinityNeg,uA=e.pushNaN,oA=e.pushNaNNeg,U=e.pushArrayStart,x=e.pushArrayStartFixed,v=e.pushArrayStartFixed32,K=e.pushArrayStartFixed64,q=e.pushObjectStart,eA=e.pushObjectStartFixed,z=e.pushObjectStartFixed32,tA=e.pushObjectStartFixed64,EA=e.pushByteString,dA=e.pushByteStringStart,UA=e.pushUtf8String,SA=e.pushUtf8StringStart,vA=e.pushSimpleUnassigned,pA=e.pushTagStart,ZA=e.pushTagStart4,Te=e.pushTagStart8,ne=e.pushTagUnassigned,Le=e.pushBreak,m=A.Math.pow,E=0,we=0,Qe=0;function mA(g){for(g=g|0,E=0,we=g;(E|0)<(we|0)&&(Qe=sB[i[E]&255](i[E]|0)|0,!((Qe|0)>0)););return Qe|0}function M(g){return g=g|0,((E|0)+(g|0)|0)<(we|0)?0:1}function n(g){return g=g|0,i[g|0]<<8|i[g+1|0]|0}function o(g){return g=g|0,i[g|0]<<24|i[g+1|0]<<16|i[g+2|0]<<8|i[g+3|0]|0}function a(g){return g=g|0,B(g|0),E=E+1|0,0}function f(g){return g=g|0,M(1)|0?1:(B(i[E+1|0]|0),E=E+2|0,0)}function Q(g){return g=g|0,M(2)|0?1:(B(n(E+1|0)|0),E=E+3|0,0)}function h(g){return g=g|0,M(4)|0?1:(s(n(E+1|0)|0,n(E+3|0)|0),E=E+5|0,0)}function p(g){return g=g|0,M(8)|0?1:(u(n(E+1|0)|0,n(E+3|0)|0,n(E+5|0)|0,n(E+7|0)|0),E=E+9|0,0)}function I(g){return g=g|0,B(-1-(g-32|0)|0),E=E+1|0,0}function c(g){return g=g|0,M(1)|0?1:(B(-1-(i[E+1|0]|0)|0),E=E+2|0,0)}function w(g){g=g|0;var L=0;return M(2)|0?1:(L=n(E+1|0)|0,B(-1-(L|0)|0),E=E+3|0,0)}function C(g){return g=g|0,M(4)|0?1:(l(n(E+1|0)|0,n(E+3|0)|0),E=E+5|0,0)}function d(g){return g=g|0,M(8)|0?1:(y(n(E+1|0)|0,n(E+3|0)|0,n(E+5|0)|0,n(E+7|0)|0),E=E+9|0,0)}function k(g){g=g|0;var L=0,O=0,J=0;return J=g-64|0,M(J|0)|0?1:(L=E+1|0,O=(E+1|0)+(J|0)|0,EA(L|0,O|0),E=O|0,0)}function S(g){g=g|0;var L=0,O=0,J=0;return M(1)|0||(J=i[E+1|0]|0,L=E+2|0,O=(E+2|0)+(J|0)|0,M(J+1|0)|0)?1:(EA(L|0,O|0),E=O|0,0)}function Z(g){g=g|0;var L=0,O=0,J=0;return M(2)|0||(J=n(E+1|0)|0,L=E+3|0,O=(E+3|0)+(J|0)|0,M(J+2|0)|0)?1:(EA(L|0,O|0),E=O|0,0)}function rA(g){g=g|0;var L=0,O=0,J=0;return M(4)|0||(J=o(E+1|0)|0,L=E+5|0,O=(E+5|0)+(J|0)|0,M(J+4|0)|0)?1:(EA(L|0,O|0),E=O|0,0)}function aA(g){return g=g|0,1}function T(g){return g=g|0,dA(),E=E+1|0,0}function N(g){g=g|0;var L=0,O=0,J=0;return J=g-96|0,M(J|0)|0?1:(L=E+1|0,O=(E+1|0)+(J|0)|0,UA(L|0,O|0),E=O|0,0)}function CA(g){g=g|0;var L=0,O=0,J=0;return M(1)|0||(J=i[E+1|0]|0,L=E+2|0,O=(E+2|0)+(J|0)|0,M(J+1|0)|0)?1:(UA(L|0,O|0),E=O|0,0)}function pe(g){g=g|0;var L=0,O=0,J=0;return M(2)|0||(J=n(E+1|0)|0,L=E+3|0,O=(E+3|0)+(J|0)|0,M(J+2|0)|0)?1:(UA(L|0,O|0),E=O|0,0)}function ve(g){g=g|0;var L=0,O=0,J=0;return M(4)|0||(J=o(E+1|0)|0,L=E+5|0,O=(E+5|0)+(J|0)|0,M(J+4|0)|0)?1:(UA(L|0,O|0),E=O|0,0)}function Ze(g){return g=g|0,1}function MA(g){return g=g|0,SA(),E=E+1|0,0}function j(g){return g=g|0,x(g-128|0),E=E+1|0,0}function kA(g){return g=g|0,M(1)|0?1:(x(i[E+1|0]|0),E=E+2|0,0)}function GA(g){return g=g|0,M(2)|0?1:(x(n(E+1|0)|0),E=E+3|0,0)}function iA(g){return g=g|0,M(4)|0?1:(v(n(E+1|0)|0,n(E+3|0)|0),E=E+5|0,0)}function Tn(g){return g=g|0,M(8)|0?1:(K(n(E+1|0)|0,n(E+3|0)|0,n(E+5|0)|0,n(E+7|0)|0),E=E+9|0,0)}function Ln(g){return g=g|0,U(),E=E+1|0,0}function nA(g){g=g|0;var L=0;return L=g-160|0,M(L|0)|0?1:(eA(L|0),E=E+1|0,0)}function vn(g){return g=g|0,M(1)|0?1:(eA(i[E+1|0]|0),E=E+2|0,0)}function Zn(g){return g=g|0,M(2)|0?1:(eA(n(E+1|0)|0),E=E+3|0,0)}function On(g){return g=g|0,M(4)|0?1:(z(n(E+1|0)|0,n(E+3|0)|0),E=E+5|0,0)}function Kn(g){return g=g|0,M(8)|0?1:(tA(n(E+1|0)|0,n(E+3|0)|0,n(E+5|0)|0,n(E+7|0)|0),E=E+9|0,0)}function jn(g){return g=g|0,q(),E=E+1|0,0}function Ge(g){return g=g|0,pA(g-192|0|0),E=E+1|0,0}function eo(g){return g=g|0,pA(g|0),E=E+1|0,0}function to(g){return g=g|0,pA(g|0),E=E+1|0,0}function ro(g){return g=g|0,pA(g|0),E=E+1|0,0}function io(g){return g=g|0,pA(g|0),E=E+1|0,0}function fA(g){return g=g|0,pA(g-192|0|0),E=E+1|0,0}function no(g){return g=g|0,pA(g|0),E=E+1|0,0}function Bo(g){return g=g|0,pA(g|0),E=E+1|0,0}function so(g){return g=g|0,pA(g|0),E=E+1|0,0}function Vn(g){return g=g|0,M(1)|0?1:(pA(i[E+1|0]|0),E=E+2|0,0)}function Pn(g){return g=g|0,M(2)|0?1:(pA(n(E+1|0)|0),E=E+3|0,0)}function Wn(g){return g=g|0,M(4)|0?1:(ZA(n(E+1|0)|0,n(E+3|0)|0),E=E+5|0,0)}function Xn(g){return g=g|0,M(8)|0?1:(Te(n(E+1|0)|0,n(E+3|0)|0,n(E+5|0)|0,n(E+7|0)|0),E=E+9|0,0)}function gA(g){return g=g|0,vA((g|0)-224|0),E=E+1|0,0}function zn(g){return g=g|0,H(),E=E+1|0,0}function $n(g){return g=g|0,F(),E=E+1|0,0}function AB(g){return g=g|0,BA(),E=E+1|0,0}function eB(g){return g=g|0,P(),E=E+1|0,0}function tB(g){return g=g|0,M(1)|0?1:(vA(i[E+1|0]|0),E=E+2|0,0)}function rB(g){g=g|0;var L=0,O=0,J=1,nt=0,Oe=0,oo=0;return M(2)|0?1:(L=i[E+1|0]|0,O=i[E+2|0]|0,(L|0)&128&&(J=-1),nt=+(((L|0)&124)>>2),Oe=+(((L|0)&3)<<8|O),+nt==0?b(+(+J*5960464477539063e-23*+Oe)):+nt==31?+J==1?+Oe>0?uA():R():+Oe>0?oA():sA():b(+(+J*m(2,+(+nt-25))*+(1024+Oe))),E=E+3|0,0)}function iB(g){return g=g|0,M(4)|0?1:(D(i[E+1|0]|0,i[E+2|0]|0,i[E+3|0]|0,i[E+4|0]|0),E=E+5|0,0)}function nB(g){return g=g|0,M(8)|0?1:(_(i[E+1|0]|0,i[E+2|0]|0,i[E+3|0]|0,i[E+4|0]|0,i[E+5|0]|0,i[E+6|0]|0,i[E+7|0]|0,i[E+8|0]|0),E=E+9|0,0)}function X(g){return g=g|0,1}function BB(g){return g=g|0,Le(),E=E+1|0,0}var sB=[a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,f,Q,h,p,X,X,X,X,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,c,w,C,d,X,X,X,X,k,k,k,k,k,k,k,k,k,k,k,k,k,k,k,k,k,k,k,k,k,k,k,k,S,Z,rA,aA,X,X,X,T,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,CA,pe,ve,Ze,X,X,X,MA,j,j,j,j,j,j,j,j,j,j,j,j,j,j,j,j,j,j,j,j,j,j,j,j,kA,GA,iA,Tn,X,X,X,Ln,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,nA,vn,Zn,On,Kn,X,X,X,jn,Ge,Ge,Ge,Ge,Ge,Ge,fA,fA,fA,fA,fA,fA,fA,fA,fA,fA,fA,fA,fA,fA,fA,fA,fA,fA,Vn,Pn,Wn,Xn,X,X,X,X,gA,gA,gA,gA,gA,gA,gA,gA,gA,gA,gA,gA,gA,gA,gA,gA,gA,gA,gA,gA,zn,$n,AB,eB,tB,rB,iB,nB,X,X,X,BB];return{parse:mA}}});var We=(0,chunk_ONAVPXOT.a)(NA=>{"use strict";var Xt=Pe().BigNumber;NA.MT={POS_INT:0,NEG_INT:1,BYTE_STRING:2,UTF8_STRING:3,ARRAY:4,MAP:5,TAG:6,SIMPLE_FLOAT:7};NA.TAG={DATE_STRING:0,DATE_EPOCH:1,POS_BIGINT:2,NEG_BIGINT:3,DECIMAL_FRAC:4,BIGFLOAT:5,BASE64URL_EXPECTED:21,BASE64_EXPECTED:22,BASE16_EXPECTED:23,CBOR:24,URI:32,BASE64URL:33,BASE64:34,REGEXP:35,MIME:36};NA.NUMBYTES={ZERO:0,ONE:24,TWO:25,FOUR:26,EIGHT:27,INDEFINITE:31};NA.SIMPLE={FALSE:20,TRUE:21,NULL:22,UNDEFINED:23};NA.SYMS={NULL:Symbol("null"),UNDEFINED:Symbol("undef"),PARENT:Symbol("parent"),BREAK:Symbol("break"),STREAM:Symbol("stream")};NA.SHIFT32=Math.pow(2,32);NA.SHIFT16=Math.pow(2,16);NA.MAX_SAFE_HIGH=2097151;NA.NEG_ONE=new Xt(-1);NA.TEN=new Xt(10);NA.TWO=new Xt(2);NA.PARENT={ARRAY:0,OBJECT:1,MAP:2,TAG:3,BYTE_STRING:4,UTF8_STRING:5}});var Gt=(0,chunk_ONAVPXOT.a)(HA=>{"use strict";var{Buffer:LB}=ke(),Ni=Pe().BigNumber,bi=We(),Di=bi.SHIFT32,vB=bi.SHIFT16,ZB=2097151;HA.parseHalf=function(A){var e,r,i;return i=A[0]&128?-1:1,e=(A[0]&124)>>2,r=(A[0]&3)<<8|A[1],e?e===31?i*(r?0/0:1/0):i*Math.pow(2,e-25)*(1024+r):i*5960464477539063e-23*r};function OB(t){return t<16?"0"+t.toString(16):t.toString(16)}HA.arrayBufferToBignumber=function(t){let A=t.byteLength,e="";for(let r=0;r<A;r++)e+=OB(t[r]);return new Ni(e,16)};HA.buildMap=t=>{let A=new Map,e=Object.keys(t),r=e.length;for(let i=0;i<r;i++)A.set(e[i],t[e[i]]);return A};HA.buildInt32=(t,A)=>t*vB+A;HA.buildInt64=(t,A,e,r)=>{let i=HA.buildInt32(t,A),B=HA.buildInt32(e,r);return i>ZB?new Ni(i).times(Di).plus(B):i*Di+B};HA.writeHalf=function(A,e){let r=LB.allocUnsafe(4);r.writeFloatBE(e,0);let i=r.readUInt32BE(0);if((i&8191)!==0)return!1;var B=i>>16&32768;let s=i>>23&255,l=i&8388607;if(s>=113&&s<=142)B+=(s-112<<10)+(l>>13);else if(s>=103&&s<113){if(l&(1<<126-s)-1)return!1;B+=l+8388608>>126-s}else return!1;return A.writeUInt16BE(B,0),!0};HA.keySorter=function(t,A){var e=t[0].byteLength,r=A[0].byteLength;return e>r?1:r>e?-1:t[0].compare(A[0])};HA.isNegativeZero=t=>t===0&&1/t<0;HA.nextPowerOf2=t=>{let A=0;if(t&&!(t&t-1))return t;for(;t!==0;)t>>=1,A+=1;return 1<<A}});var Ar=(0,chunk_ONAVPXOT.a)(($o,Ui)=>{"use strict";var $t=We(),KB=$t.MT,dt=$t.SIMPLE,zt=$t.SYMS,Ne=class{constructor(A){if(typeof A!="number")throw new Error("Invalid Simple type: "+typeof A);if(A<0||A>255||(A|0)!==A)throw new Error("value must be a small positive integer: "+A);this.value=A}toString(){return"simple("+this.value+")"}inspect(){return"simple("+this.value+")"}encodeCBOR(A){return A._pushInt(this.value,KB.SIMPLE_FLOAT)}static isSimple(A){return A instanceof Ne}static decode(A,e){switch(e==null&&(e=!0),A){case dt.FALSE:return!1;case dt.TRUE:return!0;case dt.NULL:return e?null:zt.NULL;case dt.UNDEFINED:return e?void 0:zt.UNDEFINED;case-1:if(!e)throw new Error("Invalid BREAK");return zt.BREAK;default:return new Ne(A)}}};Ui.exports=Ne});var er=(0,chunk_ONAVPXOT.a)((Aa,Mi)=>{"use strict";var be=class{constructor(A,e,r){if(this.tag=A,this.value=e,this.err=r,typeof this.tag!="number")throw new Error("Invalid tag type ("+typeof this.tag+")");if(this.tag<0||(this.tag|0)!==this.tag)throw new Error("Tag must be a positive integer: "+this.tag)}toString(){return`${this.tag}(${JSON.stringify(this.value)})`}encodeCBOR(A){return A._pushTag(this.tag),A.pushAny(this.value)}convert(A){var e,r;if(r=A?.[this.tag],typeof r!="function"&&(r=be["_tag"+this.tag],typeof r!="function"))return this;try{return r.call(be,this.value)}catch(i){return e=i,this.err=e,this}}};Mi.exports=be});var ir=(0,chunk_ONAVPXOT.a)((ea,Yi)=>{"use strict";var Hi=self.location?self.location.protocol+"//"+self.location.host:"",tr=self.URL,rr=class{constructor(A="",e=Hi){this.super=new tr(A,e),this.path=this.pathname+this.search,this.auth=this.username&&this.password?this.username+":"+this.password:null,this.query=this.search&&this.search.startsWith("?")?this.search.slice(1):null}get hash(){return this.super.hash}get host(){return this.super.host}get hostname(){return this.super.hostname}get href(){return this.super.href}get origin(){return this.super.origin}get password(){return this.super.password}get pathname(){return this.super.pathname}get port(){return this.super.port}get protocol(){return this.super.protocol}get search(){return this.super.search}get searchParams(){return this.super.searchParams}get username(){return this.super.username}set hash(A){this.super.hash=A}set host(A){this.super.host=A}set hostname(A){this.super.hostname=A}set href(A){this.super.href=A}set origin(A){this.super.origin=A}set password(A){this.super.password=A}set pathname(A){this.super.pathname=A}set port(A){this.super.port=A}set protocol(A){this.super.protocol=A}set search(A){this.super.search=A}set searchParams(A){this.super.searchParams=A}set username(A){this.super.username=A}createObjectURL(A){return this.super.createObjectURL(A)}revokeObjectURL(A){this.super.revokeObjectURL(A)}toJSON(){return this.super.toJSON()}toString(){return this.super.toString()}format(){return this.toString()}};function jB(t){if(typeof t=="string")return new tr(t).toString();if(!(t instanceof tr)){let A=t.username&&t.password?`${t.username}:${t.password}@`:"",e=t.auth?t.auth+"@":"",r=t.port?":"+t.port:"",i=t.protocol?t.protocol+"//":"",B=t.host||"",s=t.hostname||"",l=t.search||(t.query?"?"+t.query:""),u=t.hash||"",y=t.pathname||"",b=t.path||y+l;return`${i}${A||e}${B||s+r}${b}${u}`}}Yi.exports={URLWithLegacySupport:rr,URLSearchParams:self.URLSearchParams,defaultBase:Hi,format:jB}});var Ji=(0,chunk_ONAVPXOT.a)((ta,_i)=>{"use strict";var{URLWithLegacySupport:Ri,format:VB}=ir();_i.exports=(t,A={},e={},r)=>{let i=A.protocol?A.protocol.replace(":",""):"http";i=(e[i]||r||i)+":";let B;try{B=new Ri(t)}catch{B={}}let s=Object.assign({},A,{protocol:i||B.protocol,host:A.host||B.host});return new Ri(t,VB(s)).toString()}});var nr=(0,chunk_ONAVPXOT.a)((ra,Ti)=>{"use strict";var{URLWithLegacySupport:PB,format:WB,URLSearchParams:XB,defaultBase:zB}=ir(),$B=Ji();Ti.exports={URL:PB,URLSearchParams:XB,format:WB,relative:$B,defaultBase:zB}});var Br=(0,chunk_ONAVPXOT.a)((ia,vi)=>{"use strict";var{Buffer:Ue}=ke(),Li=(0,chunk_MGC7CRB4.c)(),As=Pe().BigNumber,es=Si(),yA=Gt(),W=We(),ts=Ar(),rs=er(),{URL:is}=nr(),ge=class{constructor(A){A=A||{},!A.size||A.size<65536?A.size=65536:A.size=yA.nextPowerOf2(A.size),this._heap=new ArrayBuffer(A.size),this._heap8=new Uint8Array(this._heap),this._buffer=Ue.from(this._heap),this._reset(),this._knownTags=Object.assign({0:e=>new Date(e),1:e=>new Date(e*1e3),2:e=>yA.arrayBufferToBignumber(e),3:e=>W.NEG_ONE.minus(yA.arrayBufferToBignumber(e)),4:e=>W.TEN.pow(e[0]).times(e[1]),5:e=>W.TWO.pow(e[0]).times(e[1]),32:e=>new is(e),35:e=>new RegExp(e)},A.tags),this.parser=es(window,{log:console.log.bind(console),pushInt:this.pushInt.bind(this),pushInt32:this.pushInt32.bind(this),pushInt32Neg:this.pushInt32Neg.bind(this),pushInt64:this.pushInt64.bind(this),pushInt64Neg:this.pushInt64Neg.bind(this),pushFloat:this.pushFloat.bind(this),pushFloatSingle:this.pushFloatSingle.bind(this),pushFloatDouble:this.pushFloatDouble.bind(this),pushTrue:this.pushTrue.bind(this),pushFalse:this.pushFalse.bind(this),pushUndefined:this.pushUndefined.bind(this),pushNull:this.pushNull.bind(this),pushInfinity:this.pushInfinity.bind(this),pushInfinityNeg:this.pushInfinityNeg.bind(this),pushNaN:this.pushNaN.bind(this),pushNaNNeg:this.pushNaNNeg.bind(this),pushArrayStart:this.pushArrayStart.bind(this),pushArrayStartFixed:this.pushArrayStartFixed.bind(this),pushArrayStartFixed32:this.pushArrayStartFixed32.bind(this),pushArrayStartFixed64:this.pushArrayStartFixed64.bind(this),pushObjectStart:this.pushObjectStart.bind(this),pushObjectStartFixed:this.pushObjectStartFixed.bind(this),pushObjectStartFixed32:this.pushObjectStartFixed32.bind(this),pushObjectStartFixed64:this.pushObjectStartFixed64.bind(this),pushByteString:this.pushByteString.bind(this),pushByteStringStart:this.pushByteStringStart.bind(this),pushUtf8String:this.pushUtf8String.bind(this),pushUtf8StringStart:this.pushUtf8StringStart.bind(this),pushSimpleUnassigned:this.pushSimpleUnassigned.bind(this),pushTagUnassigned:this.pushTagUnassigned.bind(this),pushTagStart:this.pushTagStart.bind(this),pushTagStart4:this.pushTagStart4.bind(this),pushTagStart8:this.pushTagStart8.bind(this),pushBreak:this.pushBreak.bind(this)},this._heap)}get _depth(){return this._parents.length}get _currentParent(){return this._parents[this._depth-1]}get _ref(){return this._currentParent.ref}_closeParent(){var A=this._parents.pop();if(A.length>0)throw new Error(`Missing ${A.length} elements`);switch(A.type){case W.PARENT.TAG:this._push(this.createTag(A.ref[0],A.ref[1]));break;case W.PARENT.BYTE_STRING:this._push(this.createByteString(A.ref,A.length));break;case W.PARENT.UTF8_STRING:this._push(this.createUtf8String(A.ref,A.length));break;case W.PARENT.MAP:if(A.values%2>0)throw new Error("Odd number of elements in the map");this._push(this.createMap(A.ref,A.length));break;case W.PARENT.OBJECT:if(A.values%2>0)throw new Error("Odd number of elements in the map");this._push(this.createObject(A.ref,A.length));break;case W.PARENT.ARRAY:this._push(this.createArray(A.ref,A.length));break;default:break}this._currentParent&&this._currentParent.type===W.PARENT.TAG&&this._dec()}_dec(){let A=this._currentParent;A.length<0||(A.length--,A.length===0&&this._closeParent())}_push(A,e){let r=this._currentParent;switch(r.values++,r.type){case W.PARENT.ARRAY:case W.PARENT.BYTE_STRING:case W.PARENT.UTF8_STRING:r.length>-1?this._ref[this._ref.length-r.length]=A:this._ref.push(A),this._dec();break;case W.PARENT.OBJECT:r.tmpKey!=null?(this._ref[r.tmpKey]=A,r.tmpKey=null,this._dec()):(r.tmpKey=A,typeof r.tmpKey!="string"&&(r.type=W.PARENT.MAP,r.ref=yA.buildMap(r.ref)));break;case W.PARENT.MAP:r.tmpKey!=null?(this._ref.set(r.tmpKey,A),r.tmpKey=null,this._dec()):r.tmpKey=A;break;case W.PARENT.TAG:this._ref.push(A),e||this._dec();break;default:throw new Error("Unknown parent type")}}_createParent(A,e,r){this._parents[this._depth]={type:e,length:r,ref:A,values:0,tmpKey:null}}_reset(){this._res=[],this._parents=[{type:W.PARENT.ARRAY,length:-1,ref:this._res,values:0,tmpKey:null}]}createTag(A,e){let r=this._knownTags[A];return r?r(e):new rs(A,e)}createMap(A,e){return A}createObject(A,e){return A}createArray(A,e){return A}createByteString(A,e){return Ue.concat(A)}createByteStringFromHeap(A,e){return A===e?Ue.alloc(0):Ue.from(this._heap.slice(A,e))}createInt(A){return A}createInt32(A,e){return yA.buildInt32(A,e)}createInt64(A,e,r,i){return yA.buildInt64(A,e,r,i)}createFloat(A){return A}createFloatSingle(A,e,r,i){return Li.read([A,e,r,i],0,!1,23,4)}createFloatDouble(A,e,r,i,B,s,l,u){return Li.read([A,e,r,i,B,s,l,u],0,!1,52,8)}createInt32Neg(A,e){return-1-yA.buildInt32(A,e)}createInt64Neg(A,e,r,i){let B=yA.buildInt32(A,e),s=yA.buildInt32(r,i);return B>W.MAX_SAFE_HIGH?W.NEG_ONE.minus(new As(B).times(W.SHIFT32).plus(s)):-1-(B*W.SHIFT32+s)}createTrue(){return!0}createFalse(){return!1}createNull(){return null}createUndefined(){}createInfinity(){return 1/0}createInfinityNeg(){return-1/0}createNaN(){return NaN}createNaNNeg(){return NaN}createUtf8String(A,e){return A.join("")}createUtf8StringFromHeap(A,e){return A===e?"":this._buffer.toString("utf8",A,e)}createSimpleUnassigned(A){return new ts(A)}pushInt(A){this._push(this.createInt(A))}pushInt32(A,e){this._push(this.createInt32(A,e))}pushInt64(A,e,r,i){this._push(this.createInt64(A,e,r,i))}pushFloat(A){this._push(this.createFloat(A))}pushFloatSingle(A,e,r,i){this._push(this.createFloatSingle(A,e,r,i))}pushFloatDouble(A,e,r,i,B,s,l,u){this._push(this.createFloatDouble(A,e,r,i,B,s,l,u))}pushInt32Neg(A,e){this._push(this.createInt32Neg(A,e))}pushInt64Neg(A,e,r,i){this._push(this.createInt64Neg(A,e,r,i))}pushTrue(){this._push(this.createTrue())}pushFalse(){this._push(this.createFalse())}pushNull(){this._push(this.createNull())}pushUndefined(){this._push(this.createUndefined())}pushInfinity(){this._push(this.createInfinity())}pushInfinityNeg(){this._push(this.createInfinityNeg())}pushNaN(){this._push(this.createNaN())}pushNaNNeg(){this._push(this.createNaNNeg())}pushArrayStart(){this._createParent([],W.PARENT.ARRAY,-1)}pushArrayStartFixed(A){this._createArrayStartFixed(A)}pushArrayStartFixed32(A,e){let r=yA.buildInt32(A,e);this._createArrayStartFixed(r)}pushArrayStartFixed64(A,e,r,i){let B=yA.buildInt64(A,e,r,i);this._createArrayStartFixed(B)}pushObjectStart(){this._createObjectStartFixed(-1)}pushObjectStartFixed(A){this._createObjectStartFixed(A)}pushObjectStartFixed32(A,e){let r=yA.buildInt32(A,e);this._createObjectStartFixed(r)}pushObjectStartFixed64(A,e,r,i){let B=yA.buildInt64(A,e,r,i);this._createObjectStartFixed(B)}pushByteStringStart(){this._parents[this._depth]={type:W.PARENT.BYTE_STRING,length:-1,ref:[],values:0,tmpKey:null}}pushByteString(A,e){this._push(this.createByteStringFromHeap(A,e))}pushUtf8StringStart(){this._parents[this._depth]={type:W.PARENT.UTF8_STRING,length:-1,ref:[],values:0,tmpKey:null}}pushUtf8String(A,e){this._push(this.createUtf8StringFromHeap(A,e))}pushSimpleUnassigned(A){this._push(this.createSimpleUnassigned(A))}pushTagStart(A){this._parents[this._depth]={type:W.PARENT.TAG,length:1,ref:[A]}}pushTagStart4(A,e){this.pushTagStart(yA.buildInt32(A,e))}pushTagStart8(A,e,r,i){this.pushTagStart(yA.buildInt64(A,e,r,i))}pushTagUnassigned(A){this._push(this.createTag(A))}pushBreak(){if(this._currentParent.length>-1)throw new Error("Unexpected break");this._closeParent()}_createObjectStartFixed(A){if(A===0){this._push(this.createObject({}));return}this._createParent({},W.PARENT.OBJECT,A)}_createArrayStartFixed(A){if(A===0){this._push(this.createArray([]));return}this._createParent(new Array(A),W.PARENT.ARRAY,A)}_decode(A){if(A.byteLength===0)throw new Error("Input too short");this._reset(),this._heap8.set(A);let e=this.parser.parse(A.byteLength);if(this._depth>1){for(;this._currentParent.length===0;)this._closeParent();if(this._depth>1)throw new Error("Undeterminated nesting")}if(e>0)throw new Error("Failed to parse");if(this._res.length===0)throw new Error("No valid result")}decodeFirst(A){return this._decode(A),this._res[0]}decodeAll(A){return this._decode(A),this._res}static decode(A,e){return typeof A=="string"&&(A=Ue.from(A,e||"hex")),new ge({size:A.length}).decodeFirst(A)}static decodeAll(A,e){return typeof A=="string"&&(A=Ue.from(A,e||"hex")),new ge({size:A.length}).decodeAll(A)}};ge.decodeFirst=ge.decode;vi.exports=ge});var Ki=(0,chunk_ONAVPXOT.a)((na,Oi)=>{"use strict";var{Buffer:sr}=ke(),ns=Br(),Bs=Gt(),Xe=class extends ns{createTag(A,e){return`${A}(${e})`}createInt(A){return super.createInt(A).toString()}createInt32(A,e){return super.createInt32(A,e).toString()}createInt64(A,e,r,i){return super.createInt64(A,e,r,i).toString()}createInt32Neg(A,e){return super.createInt32Neg(A,e).toString()}createInt64Neg(A,e,r,i){return super.createInt64Neg(A,e,r,i).toString()}createTrue(){return"true"}createFalse(){return"false"}createFloat(A){let e=super.createFloat(A);return Bs.isNegativeZero(A)?"-0_1":`${e}_1`}createFloatSingle(A,e,r,i){return`${super.createFloatSingle(A,e,r,i)}_2`}createFloatDouble(A,e,r,i,B,s,l,u){return`${super.createFloatDouble(A,e,r,i,B,s,l,u)}_3`}createByteString(A,e){let r=A.join(", ");return e===-1?`(_ ${r})`:`h'${r}`}createByteStringFromHeap(A,e){return`h'${sr.from(super.createByteStringFromHeap(A,e)).toString("hex")}'`}createInfinity(){return"Infinity_1"}createInfinityNeg(){return"-Infinity_1"}createNaN(){return"NaN_1"}createNaNNeg(){return"-NaN_1"}createNull(){return"null"}createUndefined(){return"undefined"}createSimpleUnassigned(A){return`simple(${A})`}createArray(A,e){let r=super.createArray(A,e);return e===-1?`[_ ${r.join(", ")}]`:`[${r.join(", ")}]`}createMap(A,e){let r=super.createMap(A),i=Array.from(r.keys()).reduce(Zi(r),"");return e===-1?`{_ ${i}}`:`{${i}}`}createObject(A,e){let r=super.createObject(A),i=Object.keys(r).reduce(Zi(r),"");return e===-1?`{_ ${i}}`:`{${i}}`}createUtf8String(A,e){let r=A.join(", ");return e===-1?`(_ ${r})`:`"${r}"`}createUtf8StringFromHeap(A,e){return`"${sr.from(super.createUtf8StringFromHeap(A,e)).toString("utf8")}"`}static diagnose(A,e){return typeof A=="string"&&(A=sr.from(A,e||"hex")),new Xe().decodeFirst(A)}};Oi.exports=Xe;function Zi(t){return(A,e)=>A?`${A}, ${e}: ${t[e]}`:`${e}: ${t[e]}`}});var Xi=(0,chunk_ONAVPXOT.a)((Ba,Wi)=>{"use strict";var{Buffer:WA}=ke(),{URL:ss}=nr(),ar=Pe().BigNumber,or=Gt(),cA=We(),JA=cA.MT,yt=cA.NUMBYTES,ji=cA.SHIFT32,Vi=cA.SYMS,Me=cA.TAG,os=cA.MT.SIMPLE_FLOAT<<5|cA.NUMBYTES.TWO,as=cA.MT.SIMPLE_FLOAT<<5|cA.NUMBYTES.FOUR,gs=cA.MT.SIMPLE_FLOAT<<5|cA.NUMBYTES.EIGHT,Is=cA.MT.SIMPLE_FLOAT<<5|cA.SIMPLE.TRUE,Es=cA.MT.SIMPLE_FLOAT<<5|cA.SIMPLE.FALSE,Qs=cA.MT.SIMPLE_FLOAT<<5|cA.SIMPLE.UNDEFINED,Pi=cA.MT.SIMPLE_FLOAT<<5|cA.SIMPLE.NULL,cs=new ar("0x20000000000000"),hs=WA.from("f97e00","hex"),us=WA.from("f9fc00","hex"),Cs=WA.from("f97c00","hex");function fs(t){return{}.toString.call(t).slice(8,-1)}var He=class{constructor(A){A=A||{},this.streaming=typeof A.stream=="function",this.onData=A.stream,this.semanticTypes=[[ss,this._pushUrl],[ar,this._pushBigNumber]];let e=A.genTypes||[],r=e.length;for(let i=0;i<r;i++)this.addSemanticType(e[i][0],e[i][1]);this._reset()}addSemanticType(A,e){let r=this.semanticTypes.length;for(let i=0;i<r;i++)if(this.semanticTypes[i][0]===A){let s=this.semanticTypes[i][1];return this.semanticTypes[i][1]=e,s}return this.semanticTypes.push([A,e]),null}push(A){return A&&(this.result[this.offset]=A,this.resultMethod[this.offset]=0,this.resultLength[this.offset]=A.length,this.offset++,this.streaming&&this.onData(this.finalize())),!0}pushWrite(A,e,r){return this.result[this.offset]=A,this.resultMethod[this.offset]=e,this.resultLength[this.offset]=r,this.offset++,this.streaming&&this.onData(this.finalize()),!0}_pushUInt8(A){return this.pushWrite(A,1,1)}_pushUInt16BE(A){return this.pushWrite(A,2,2)}_pushUInt32BE(A){return this.pushWrite(A,3,4)}_pushDoubleBE(A){return this.pushWrite(A,4,8)}_pushNaN(){return this.push(hs)}_pushInfinity(A){let e=A<0?us:Cs;return this.push(e)}_pushFloat(A){let e=WA.allocUnsafe(2);if(or.writeHalf(e,A)&&or.parseHalf(e)===A)return this._pushUInt8(os)&&this.push(e);let r=WA.allocUnsafe(4);return r.writeFloatBE(A,0),r.readFloatBE(0)===A?this._pushUInt8(as)&&this.push(r):this._pushUInt8(gs)&&this._pushDoubleBE(A)}_pushInt(A,e,r){let i=e<<5;return A<24?this._pushUInt8(i|A):A<=255?this._pushUInt8(i|yt.ONE)&&this._pushUInt8(A):A<=65535?this._pushUInt8(i|yt.TWO)&&this._pushUInt16BE(A):A<=4294967295?this._pushUInt8(i|yt.FOUR)&&this._pushUInt32BE(A):A<=Number.MAX_SAFE_INTEGER?this._pushUInt8(i|yt.EIGHT)&&this._pushUInt32BE(Math.floor(A/ji))&&this._pushUInt32BE(A%ji):e===JA.NEG_INT?this._pushFloat(r):this._pushFloat(A)}_pushIntNum(A){return A<0?this._pushInt(-A-1,JA.NEG_INT,A):this._pushInt(A,JA.POS_INT)}_pushNumber(A){switch(!1){case A===A:return this._pushNaN(A);case isFinite(A):return this._pushInfinity(A);case A%1!==0:return this._pushIntNum(A);default:return this._pushFloat(A)}}_pushString(A){let e=WA.byteLength(A,"utf8");return this._pushInt(e,JA.UTF8_STRING)&&this.pushWrite(A,5,e)}_pushBoolean(A){return this._pushUInt8(A?Is:Es)}_pushUndefined(A){return this._pushUInt8(Qs)}_pushArray(A,e){let r=e.length;if(!A._pushInt(r,JA.ARRAY))return!1;for(let i=0;i<r;i++)if(!A.pushAny(e[i]))return!1;return!0}_pushTag(A){return this._pushInt(A,JA.TAG)}_pushDate(A,e){return A._pushTag(Me.DATE_EPOCH)&&A.pushAny(Math.round(e/1e3))}_pushBuffer(A,e){return A._pushInt(e.length,JA.BYTE_STRING)&&A.push(e)}_pushNoFilter(A,e){return A._pushBuffer(A,e.slice())}_pushRegexp(A,e){return A._pushTag(Me.REGEXP)&&A.pushAny(e.source)}_pushSet(A,e){if(!A._pushInt(e.size,JA.ARRAY))return!1;for(let r of e)if(!A.pushAny(r))return!1;return!0}_pushUrl(A,e){return A._pushTag(Me.URI)&&A.pushAny(e.format())}_pushBigint(A){let e=Me.POS_BIGINT;A.isNegative()&&(A=A.negated().minus(1),e=Me.NEG_BIGINT);let r=A.toString(16);r.length%2&&(r="0"+r);let i=WA.from(r,"hex");return this._pushTag(e)&&this._pushBuffer(this,i)}_pushBigNumber(A,e){if(e.isNaN())return A._pushNaN();if(!e.isFinite())return A._pushInfinity(e.isNegative()?-1/0:1/0);if(e.isInteger())return A._pushBigint(e);if(!(A._pushTag(Me.DECIMAL_FRAC)&&A._pushInt(2,JA.ARRAY)))return!1;let r=e.decimalPlaces(),i=e.multipliedBy(new ar(10).pow(r));return A._pushIntNum(-r)?i.abs().isLessThan(cs)?A._pushIntNum(i.toNumber()):A._pushBigint(i):!1}_pushMap(A,e){return A._pushInt(e.size,JA.MAP)?this._pushRawMap(e.size,Array.from(e)):!1}_pushObject(A){if(!A)return this._pushUInt8(Pi);for(var e=this.semanticTypes.length,r=0;r<e;r++)if(A instanceof this.semanticTypes[r][0])return this.semanticTypes[r][1].call(A,this,A);var i=A.encodeCBOR;if(typeof i=="function")return i.call(A,this);var B=Object.keys(A),s=B.length;return this._pushInt(s,JA.MAP)?this._pushRawMap(s,B.map(l=>[l,A[l]])):!1}_pushRawMap(A,e){e=e.map(function(i){return i[0]=He.encode(i[0]),i}).sort(or.keySorter);for(var r=0;r<A;r++)if(!this.push(e[r][0])||!this.pushAny(e[r][1]))return!1;return!0}write(A){return this.pushAny(A)}pushAny(A){var e=fs(A);switch(e){case"Number":return this._pushNumber(A);case"String":return this._pushString(A);case"Boolean":return this._pushBoolean(A);case"Object":return this._pushObject(A);case"Array":return this._pushArray(this,A);case"Uint8Array":return this._pushBuffer(this,WA.isBuffer(A)?A:WA.from(A));case"Null":return this._pushUInt8(Pi);case"Undefined":return this._pushUndefined(A);case"Map":return this._pushMap(this,A);case"Set":return this._pushSet(this,A);case"URL":return this._pushUrl(this,A);case"BigNumber":return this._pushBigNumber(this,A);case"Date":return this._pushDate(this,A);case"RegExp":return this._pushRegexp(this,A);case"Symbol":switch(A){case Vi.NULL:return this._pushObject(null);case Vi.UNDEFINED:return this._pushUndefined(void 0);default:throw new Error("Unknown symbol: "+A.toString())}default:throw new Error("Unknown type: "+typeof A+", "+(A?A.toString():""))}}finalize(){if(this.offset===0)return null;for(var A=this.result,e=this.resultLength,r=this.resultMethod,i=this.offset,B=0,s=0;s<i;s++)B+=e[s];var l=WA.allocUnsafe(B),u=0,y=0;for(s=0;s<i;s++){switch(y=e[s],r[s]){case 0:A[s].copy(l,u);break;case 1:l.writeUInt8(A[s],u,!0);break;case 2:l.writeUInt16BE(A[s],u,!0);break;case 3:l.writeUInt32BE(A[s],u,!0);break;case 4:l.writeDoubleBE(A[s],u,!0);break;case 5:l.write(A[s],u,y,"utf8");break;default:throw new Error("unkown method")}u+=y}var b=l;return this._reset(),b}_reset(){this.result=[],this.resultMethod=[],this.resultLength=[],this.offset=0}static encode(A){let e=new He;if(!e.pushAny(A))throw new Error("Failed to encode input");return e.finalize()}};Wi.exports=He});var gr=(0,chunk_ONAVPXOT.a)(hA=>{"use strict";hA.Diagnose=Ki();hA.Decoder=Br();hA.Encoder=Xi();hA.Simple=Ar();hA.Tagged=er();hA.decodeAll=hA.Decoder.decodeAll;hA.decodeFirst=hA.Decoder.decodeFirst;hA.diagnose=hA.Diagnose.diagnose;hA.encode=hA.Encoder.encode;hA.decode=hA.Decoder.decode;hA.leveldb={decode:hA.Decoder.decodeAll,encode:hA.Encoder.encode,buffer:!0,name:"cbor"}});var cr=(0,chunk_ONAVPXOT.a)($=>{"use strict";Object.defineProperty($,"__esModule",{value:!0});var ws=9007199254740992;function re(t,...A){let e=new Uint8Array(t.byteLength+A.reduce((i,B)=>i+B.byteLength,0));e.set(new Uint8Array(t),0);let r=t.byteLength;for(let i of A)e.set(new Uint8Array(i),r),r+=i.byteLength;return e.buffer}function TA(t,A,e){e=e.replace(/[^0-9a-fA-F]/g,"");let r=2**(A-24);e=e.slice(-r*2).padStart(r*2,"0");let i=[(t<<5)+A].concat(e.match(/../g).map(B=>parseInt(B,16)));return new Uint8Array(i).buffer}function kt(t,A){if(A<24)return new Uint8Array([(t<<5)+A]).buffer;{let e=A<=255?24:A<=65535?25:A<=4294967295?26:27;return TA(t,e,A.toString(16))}}function tn(t){let A=[];for(let e=0;e<t.length;e++){let r=t.charCodeAt(e);r<128?A.push(r):r<2048?A.push(192|r>>6,128|r&63):r<55296||r>=57344?A.push(224|r>>12,128|r>>6&63,128|r&63):(e++,r=(r&1023)<<10|t.charCodeAt(e)&1023,A.push(240|r>>18,128|r>>12&63,128|r>>6&63,128|r&63))}return re(new Uint8Array(kt(3,t.length)),new Uint8Array(A))}function ps(t,A){if(t==14277111)return re(new Uint8Array([217,217,247]),A);if(t<24)return re(new Uint8Array([(6<<5)+t]),A);{let e=t<=255?24:t<=65535?25:t<=4294967295?26:27,r=2**(e-24),i=t.toString(16).slice(-r*2).padStart(r*2,"0"),B=[(6<<5)+e].concat(i.match(/../g).map(s=>parseInt(s,16)));return new Uint8Array(B).buffer}}$.tagged=ps;function ze(t){return new Uint8Array(t).buffer}$.raw=ze;function Er(t){if(isNaN(t))throw new RangeError("Invalid number.");t=Math.min(Math.max(0,t),23);let A=[(0<<5)+t];return new Uint8Array(A).buffer}$.uSmall=Er;function rn(t,A){if(t=parseInt(""+t,A),isNaN(t))throw new RangeError("Invalid number.");return t=Math.min(Math.max(0,t),255),t=t.toString(16),TA(0,24,t)}$.u8=rn;function nn(t,A){if(t=parseInt(""+t,A),isNaN(t))throw new RangeError("Invalid number.");return t=Math.min(Math.max(0,t),65535),t=t.toString(16),TA(0,25,t)}$.u16=nn;function Bn(t,A){if(t=parseInt(""+t,A),isNaN(t))throw new RangeError("Invalid number.");return t=Math.min(Math.max(0,t),4294967295),t=t.toString(16),TA(0,26,t)}$.u32=Bn;function Qr(t,A){if(typeof t=="string"&&A==16){if(t.match(/[^0-9a-fA-F]/))throw new RangeError("Invalid number.");return TA(0,27,t)}if(t=parseInt(""+t,A),isNaN(t))throw new RangeError("Invalid number.");return t=Math.min(Math.max(0,t),ws),t=t.toString(16),TA(0,27,t)}$.u64=Qr;function sn(t){if(isNaN(t))throw new RangeError("Invalid number.");if(t===0)return Er(0);t=Math.min(Math.max(0,-t),24)-1;let A=[(1<<5)+t];return new Uint8Array(A).buffer}$.iSmall=sn;function on(t,A){if(t=parseInt(""+t,A),isNaN(t))throw new RangeError("Invalid number.");return t=Math.min(Math.max(0,-t-1),255),t=t.toString(16),TA(1,24,t)}$.i8=on;function an(t,A){if(t=parseInt(""+t,A),isNaN(t))throw new RangeError("Invalid number.");return t=Math.min(Math.max(0,-t-1),65535),t=t.toString(16),TA(1,25,t)}$.i16=an;function gn(t,A){if(t=parseInt(""+t,A),isNaN(t))throw new RangeError("Invalid number.");return t=Math.min(Math.max(0,-t-1),4294967295),t=t.toString(16),TA(1,26,t)}$.i32=gn;function In(t,A){if(typeof t=="string"&&A==16){if(t.startsWith("-")?t=t.slice(1):t="0",t.match(/[^0-9a-fA-F]/)||t.length>16)throw new RangeError("Invalid number.");let e=!1,r=t.split("").reduceRight((i,B)=>{if(e)return B+i;let s=parseInt(B,16)-1;return s>=0?(e=!0,s.toString(16)+i):"f"+i},"");return e?TA(1,27,r):Qr(0)}if(t=parseInt(""+t,A),isNaN(t))throw new RangeError("Invalid number.");return t=Math.min(Math.max(0,-t-1),9007199254740992),t=t.toString(16),TA(1,27,t)}$.i64=In;function Gs(t){return t>=0?t<24?Er(t):t<=255?rn(t):t<=65535?nn(t):t<=4294967295?Bn(t):Qr(t):t>=-24?sn(t):t>=-255?on(t):t>=-65535?an(t):t>=-4294967295?gn(t):In(t)}$.number=Gs;function ds(t){return re(kt(2,t.byteLength),t)}$.bytes=ds;function ys(t){return tn(t)}$.string=ys;function ms(t){return re(kt(4,t.length),...t)}$.array=ms;function ks(t,A=!1){t instanceof Map||(t=new Map(Object.entries(t)));let e=Array.from(t.entries());return A&&(e=e.sort(([r],[i])=>r.localeCompare(i))),re(kt(5,t.size),...e.map(([r,i])=>re(tn(r),i)))}$.map=ks;function qs(t){let A=new Float32Array([t]);return re(new Uint8Array([(7<<5)+26]),new Uint8Array(A.buffer))}$.singleFloat=qs;function Fs(t){let A=new Float64Array([t]);return re(new Uint8Array([(7<<5)+27]),new Uint8Array(A.buffer))}$.doubleFloat=Fs;function xs(t){return t?En():Qn()}$.bool=xs;function En(){return ze(new Uint8Array([(7<<5)+21]))}$.true_=En;function Qn(){return ze(new Uint8Array([(7<<5)+20]))}$.false_=Qn;function Ss(){return ze(new Uint8Array([(7<<5)+22]))}$.null_=Ss;function Ds(){return ze(new Uint8Array([(7<<5)+23]))}$.undefined_=Ds});var cn=(0,chunk_ONAVPXOT.a)(Ie=>{"use strict";var Ns=Ie&&Ie.__importStar||function(t){if(t&&t.__esModule)return t;var A={};if(t!=null)for(var e in t)Object.hasOwnProperty.call(t,e)&&(A[e]=t[e]);return A.default=t,A};Object.defineProperty(Ie,"__esModule",{value:!0});var LA=Ns(cr()),bs=[ArrayBuffer,Uint8Array,Uint16Array,Uint32Array,Int8Array,Int16Array,Int32Array,Float32Array,Float64Array],qt=class{constructor(A,e=!1){this._serializer=A,this._stable=e,this.name="jsonDefault",this.priority=-100}match(A){return["undefined","boolean","number","string","object"].indexOf(typeof A)!=-1}encode(A){switch(typeof A){case"undefined":return LA.undefined_();case"boolean":return LA.bool(A);case"number":return Math.floor(A)===A?LA.number(A):LA.doubleFloat(A);case"string":return LA.string(A);case"object":if(A===null)return LA.null_();if(Array.isArray(A))return LA.array(A.map(e=>this._serializer.serializeValue(e)));if(bs.find(e=>A instanceof e))return LA.bytes(A.buffer);if(Object.getOwnPropertyNames(A).indexOf("toJSON")!==-1)return this.encode(A.toJSON());if(A instanceof Map){let e=new Map;for(let[r,i]of A.entries())e.set(r,this._serializer.serializeValue(i));return LA.map(e,this._stable)}else{let e=new Map;for(let[r,i]of Object.entries(A))e.set(r,this._serializer.serializeValue(i));return LA.map(e,this._stable)}default:throw new Error("Invalid value.")}}};Ie.JsonDefaultCborEncoder=qt;var Ft=class{constructor(){this.name="cborEncoder",this.priority=-90}match(A){return typeof A=="object"&&typeof A.toCBOR=="function"}encode(A){return A.toCBOR()}};Ie.ToCborEncoder=Ft;var xt=class{constructor(){this._encoders=new Set}static withDefaultEncoders(A=!1){let e=new this;return e.addEncoder(new qt(e,A)),e.addEncoder(new Ft),e}removeEncoder(A){for(let e of this._encoders.values())e.name==A&&this._encoders.delete(e)}addEncoder(A){this._encoders.add(A)}getEncoderFor(A){let e=null;for(let r of this._encoders)(!e||r.priority>e.priority)&&r.match(A)&&(e=r);if(e===null)throw new Error("Could not find an encoder for value.");return e}serializeValue(A){return this.getEncoderFor(A).encode(A)}serialize(A){return this.serializeValue(A)}};Ie.CborSerializer=xt;var hr=class extends xt{serialize(A){return LA.raw(new Uint8Array([...new Uint8Array([217,217,247]),...new Uint8Array(super.serializeValue(A))]))}};Ie.SelfDescribeCborSerializer=hr});var St=(0,chunk_ONAVPXOT.a)(Ce=>{"use strict";function Us(t){for(var A in t)Ce.hasOwnProperty(A)||(Ce[A]=t[A])}var Ms=Ce&&Ce.__importStar||function(t){if(t&&t.__esModule)return t;var A={};if(t!=null)for(var e in t)Object.hasOwnProperty.call(t,e)&&(A[e]=t[e]);return A.default=t,A};Object.defineProperty(Ce,"__esModule",{value:!0});Us(cn());var Hs=Ms(cr());Ce.value=Hs});var Gn=(0,chunk_ONAVPXOT.a)(yr=>{(function(){"use strict";for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",A=new Uint8Array(256),e=0;e<t.length;e++)A[t.charCodeAt(e)]=e;yr.encode=function(r){var i=new Uint8Array(r),B,s=i.length,l="";for(B=0;B<s;B+=3)l+=t[i[B]>>2],l+=t[(i[B]&3)<<4|i[B+1]>>4],l+=t[(i[B+1]&15)<<2|i[B+2]>>6],l+=t[i[B+2]&63];return s%3===2?l=l.substring(0,l.length-1)+"=":s%3===1&&(l=l.substring(0,l.length-2)+"=="),l},yr.decode=function(r){var i=r.length*.75,B=r.length,s,l=0,u,y,b,D;r[r.length-1]==="="&&(i--,r[r.length-2]==="="&&i--);var _=new ArrayBuffer(i),F=new Uint8Array(_);for(s=0;s<B;s+=4)u=A[r.charCodeAt(s)],y=A[r.charCodeAt(s+1)],b=A[r.charCodeAt(s+2)],D=A[r.charCodeAt(s+3)],F[l++]=u<<2|y>>4,F[l++]=(y&15)<<4|b>>2,F[l++]=(b&3)<<6|D&63;return _}})()});var Bt="abcdefghijklmnopqrstuvwxyz234567",de=Object.create(null);for(let t=0;t<Bt.length;t++)de[Bt[t]]=t;de[0]=de.o;de[1]=de.i;function Ur(t){let A=0,e=0,r="";function i(B){return A<0?e|=B>>-A:e=B<<A&248,A>3?(A-=8,1):(A<4&&(r+=Bt[e>>3],A+=5),0)}for(let B=0;B<t.length;)B+=i(t[B]);return r+(A<0?Bt[e>>3]:"")}function Mr(t){let A=0,e=0,r=new Uint8Array(t.length*4/3|0),i=0;function B(s){let l=de[s.toLowerCase()];if(l===void 0)throw new Error(`Invalid character: ${JSON.stringify(s)}`);l<<=3,e|=l>>>A,A+=5,A>=8&&(r[i++]=e,A-=8,A>0?e=l<<5-A&255:e=0)}for(let s of t)B(s);return r.slice(0,i)}var aB=new Uint32Array([0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117]);function Hr(t){let A=new Uint8Array(t),e=-1;for(let r=0;r<A.length;r++){let B=(A[r]^e)&255;e=aB[B]^e>>>8}return(e^-1)>>>0}var Yr=(0,chunk_ONAVPXOT.c)((0,chunk_MGC7CRB4.a)());function Rr(t){let A=Yr.sha224.create();return A.update(t),new Uint8Array(A.array())}var gB=2,_r=4,IB="aaaaa-aa",EB=t=>{var A;return new Uint8Array(((A=t.match(/.{1,2}/g))!==null&&A!==void 0?A:[]).map(e=>parseInt(e,16)))},QB=t=>t.reduce((A,e)=>A+e.toString(16).padStart(2,"0"),""),Y=class{constructor(A){this._arr=A,this._isPrincipal=!0}static anonymous(){return new this(new Uint8Array([_r]))}static managementCanister(){return this.fromHex(IB)}static selfAuthenticating(A){let e=Rr(A);return new this(new Uint8Array([...e,gB]))}static from(A){if(typeof A=="string")return Y.fromText(A);if(typeof A=="object"&&A!==null&&A._isPrincipal===!0)return new Y(A._arr);throw new Error(`Impossible to convert ${JSON.stringify(A)} to Principal.`)}static fromHex(A){return new this(EB(A))}static fromText(A){let e=A.toLowerCase().replace(/-/g,""),r=Mr(e);r=r.slice(4,r.length);let i=new this(r);if(i.toText()!==A)throw new Error(`Principal "${i.toText()}" does not have a valid checksum (original value "${A}" may not be a valid Principal ID).`);return i}static fromUint8Array(A){return new this(A)}isAnonymous(){return this._arr.byteLength===1&&this._arr[0]===_r}toUint8Array(){return this._arr}toHex(){return QB(this._arr).toUpperCase()}toText(){let A=new ArrayBuffer(4);new DataView(A).setUint32(0,Hr(this._arr));let r=new Uint8Array(A),i=Uint8Array.from(this._arr),B=new Uint8Array([...r,...i]),l=Ur(B).match(/.{1,5}/g);if(!l)throw new Error;return l.join("-")}toString(){return this.toText()}compareTo(A){for(let e=0;e<Math.min(this._arr.length,A._arr.length);e++){if(this._arr[e]<A._arr[e])return"lt";if(this._arr[e]>A._arr[e])return"gt"}return this._arr.length<A._arr.length?"lt":this._arr.length>A._arr.length?"gt":"eq"}ltEq(A){let e=this.compareTo(A);return e=="lt"||e=="eq"}gtEq(A){let e=this.compareTo(A);return e=="gt"||e=="eq"}};var Co=Y.fromText("rrkah-fqaaa-aaaaa-aaaaq-cai"),fo=Y.fromText("rrkah-fqaaa-aaaaa-aaaaq-cai"),lo=Y.fromText("ryjl3-tyaaa-aaaaa-aaaba-cai"),wo=Y.fromText("renrk-eyaaa-aaaaa-aaada-cai"),po=Y.fromText("r7inp-6aaaa-aaaaa-aaabq-cai");var Rn=(0,chunk_ONAVPXOT.c)(ke());var at;(function(t){t[t.SysFatal=1]="SysFatal",t[t.SysTransient=2]="SysTransient",t[t.DestinationInvalid=3]="DestinationInvalid",t[t.CanisterReject=4]="CanisterReject",t[t.CanisterError=5]="CanisterError"})(at||(at={}));var _A=class extends Error{constructor(A){super(A),this.message=A,Object.setPrototypeOf(this,_A.prototype)}};var chunk_NNJFBVJ3_ae={};(0,chunk_ONAVPXOT.b)(chunk_NNJFBVJ3_ae,{Bool:()=>ii,BoolClass:()=>ct,ConstructType:()=>VA,Empty:()=>ti,EmptyClass:()=>Et,FixedIntClass:()=>chunk_NNJFBVJ3_te,FixedNatClass:()=>jA,Float32:()=>ai,Float64:()=>gi,FloatClass:()=>je,Func:()=>ki,FuncClass:()=>Ve,Int:()=>si,Int16:()=>Ei,Int32:()=>Qi,Int64:()=>ci,Int8:()=>Ii,IntClass:()=>Ct,Nat:()=>oi,Nat16:()=>ui,Nat32:()=>Ci,Nat64:()=>fi,Nat8:()=>hi,NatClass:()=>ft,Null:()=>ni,NullClass:()=>ht,Opt:()=>Gi,OptClass:()=>oe,PrimitiveType:()=>FA,Principal:()=>li,PrincipalClass:()=>lt,Rec:()=>mi,RecClass:()=>PA,Record:()=>di,RecordClass:()=>he,Reserved:()=>ri,ReservedClass:()=>Fe,Service:()=>qi,ServiceClass:()=>wt,Text:()=>Bi,TextClass:()=>ut,Tuple:()=>wi,TupleClass:()=>Se,Type:()=>qe,Unknown:()=>JB,UnknownClass:()=>Qt,Variant:()=>yi,VariantClass:()=>De,Vec:()=>pi,VecClass:()=>xe,Visitor:()=>It,decode:()=>_B,encode:()=>RB});function V(...t){let A=new Uint8Array(t.reduce((r,i)=>r+i.byteLength,0)),e=0;for(let r of t)A.set(new Uint8Array(r),e),e+=r.byteLength;return A}var KA=class{constructor(A,e=A?.byteLength||0){this._buffer=A||new ArrayBuffer(0),this._view=new Uint8Array(this._buffer,0,e)}get buffer(){return this._view.slice()}get byteLength(){return this._view.byteLength}read(A){let e=this._view.subarray(0,A);return this._view=this._view.subarray(A),e.slice().buffer}readUint8(){let A=this._view[0];return this._view=this._view.subarray(1),A}write(A){let e=new Uint8Array(A),r=this._view.byteLength;this._view.byteOffset+this._view.byteLength+e.byteLength>=this._buffer.byteLength?this.alloc(e.byteLength):this._view=new Uint8Array(this._buffer,this._view.byteOffset,this._view.byteLength+e.byteLength),this._view.set(e,r)}get end(){return this._view.byteLength===0}alloc(A){let e=new ArrayBuffer((this._buffer.byteLength+A)*1.2|0),r=new Uint8Array(e,0,this._view.byteLength+A);r.set(this._view),this._buffer=e,this._view=r}};function YB(t){let e=new TextEncoder().encode(t),r=0;for(let i of e)r=(r*223+i)%2**32;return r}function DA(t){if(/^_\d+_$/.test(t)||/^_0x[0-9a-fA-F]+_$/.test(t)){let A=+t.slice(1,-1);if(Number.isSafeInteger(A)&&A>=0&&A<2**32)return A}return YB(t)}function zr(){throw new Error("unexpected end of buffer")}function chunk_NNJFBVJ3_se(t,A){return t.byteLength<A&&zr(),t.read(A)}function Be(t){let A=t.readUint8();return A===void 0&&zr(),A}function AA(t){if(typeof t=="number"&&(t=BigInt(t)),t<BigInt(0))throw new Error("Cannot leb encode negative values.");let A=(t===BigInt(0)?0:Math.ceil(Math.log2(Number(t))))+1,e=new KA(new ArrayBuffer(A),0);for(;;){let r=Number(t&BigInt(127));if(t/=BigInt(128),t===BigInt(0)){e.write(new Uint8Array([r]));break}else e.write(new Uint8Array([r|128]))}return e.buffer}function QA(t){let A=BigInt(1),e=BigInt(0),r;do r=Be(t),e+=BigInt(r&127).valueOf()*A,A*=BigInt(128);while(r>=128);return e}function IA(t){typeof t=="number"&&(t=BigInt(t));let A=t<BigInt(0);A&&(t=-t-BigInt(1));let e=(t===BigInt(0)?0:Math.ceil(Math.log2(Number(t))))+1,r=new KA(new ArrayBuffer(e),0);for(;;){let B=i(t);if(t/=BigInt(128),A&&t===BigInt(0)&&(B&64)!==0||!A&&t===BigInt(0)&&(B&64)===0){r.write(new Uint8Array([B]));break}else r.write(new Uint8Array([B|128]))}function i(B){let s=B%BigInt(128);return Number(A?BigInt(128)-s-BigInt(1):s)}return r.buffer}function ee(t){let A=new Uint8Array(t.buffer),e=0;for(;e<A.byteLength;e++)if(A[e]<128){if((A[e]&64)===0)return QA(t);break}let r=new Uint8Array(chunk_NNJFBVJ3_se(t,e+1)),i=BigInt(0);for(let B=r.byteLength-1;B>=0;B--)i=i*BigInt(128)+BigInt(128-(r[B]&127)-1);return-i-BigInt(1)}function $r(t,A){if(BigInt(t)<BigInt(0))throw new Error("Cannot write negative values.");return jt(t,A)}function jt(t,A){t=BigInt(t);let e=new KA(new ArrayBuffer(Math.min(1,A)),0),r=0,i=BigInt(256),B=BigInt(0),s=Number(t%i);for(e.write(new Uint8Array([s]));++r<A;)t<0&&B===BigInt(0)&&s!==0&&(B=BigInt(1)),s=Number((t/i-B)%BigInt(256)),e.write(new Uint8Array([s])),i*=BigInt(256);return e.buffer}function Vt(t,A){let e=BigInt(Be(t)),r=BigInt(1),i=0;for(;++i<A;){r*=BigInt(256);let B=BigInt(Be(t));e=e+r*B}return e}function Ai(t,A){let e=Vt(t,A),r=BigInt(2)**(BigInt(8)*BigInt(A-1)+BigInt(7));return e>=r&&(e-=r*BigInt(2)),e}var gt="DIDL";function Ke(t,A,e){return t.map((r,i)=>e(r,A[i]))}var Pt=class{constructor(){this._typs=[],this._idx=new Map}has(A){return this._idx.has(A.name)}add(A,e){let r=this._typs.length;this._idx.set(A.name,r),this._typs.push(e)}merge(A,e){let r=this._idx.get(A.name),i=this._idx.get(e);if(r===void 0)throw new Error("Missing type index for "+A);if(i===void 0)throw new Error("Missing type index for "+e);this._typs[r]=this._typs[i],this._typs.splice(i,1),this._idx.delete(e)}encode(){let A=AA(this._typs.length),e=V(...this._typs);return V(A,e)}indexOf(A){if(!this._idx.has(A))throw new Error("Missing type index for "+A);return IA(this._idx.get(A)||0)}},It=class{visitType(A,e){throw new Error("Not implemented")}visitPrimitive(A,e){return this.visitType(A,e)}visitEmpty(A,e){return this.visitPrimitive(A,e)}visitBool(A,e){return this.visitPrimitive(A,e)}visitNull(A,e){return this.visitPrimitive(A,e)}visitReserved(A,e){return this.visitPrimitive(A,e)}visitText(A,e){return this.visitPrimitive(A,e)}visitNumber(A,e){return this.visitPrimitive(A,e)}visitInt(A,e){return this.visitNumber(A,e)}visitNat(A,e){return this.visitNumber(A,e)}visitFloat(A,e){return this.visitPrimitive(A,e)}visitFixedInt(A,e){return this.visitNumber(A,e)}visitFixedNat(A,e){return this.visitNumber(A,e)}visitPrincipal(A,e){return this.visitPrimitive(A,e)}visitConstruct(A,e){return this.visitType(A,e)}visitVec(A,e,r){return this.visitConstruct(A,r)}visitOpt(A,e,r){return this.visitConstruct(A,r)}visitRecord(A,e,r){return this.visitConstruct(A,r)}visitTuple(A,e,r){let i=e.map((B,s)=>[`_${s}_`,B]);return this.visitRecord(A,i,r)}visitVariant(A,e,r){return this.visitConstruct(A,r)}visitRec(A,e,r){return this.visitConstruct(e,r)}visitFunc(A,e){return this.visitConstruct(A,e)}visitService(A,e){return this.visitConstruct(A,e)}},qe=class{display(){return this.name}valueToString(A){return ei(A)}buildTypeTable(A){A.has(this)||this._buildTypeTableImpl(A)}},FA=class extends qe{checkType(A){if(this.name!==A.name)throw new Error(`type mismatch: type on the wire ${A.name}, expect type ${this.name}`);return A}_buildTypeTableImpl(A){}},VA=class extends qe{checkType(A){if(A instanceof PA){let e=A.getType();if(typeof e>"u")throw new Error("type mismatch with uninitialized type");return e}throw new Error(`type mismatch: type on the wire ${A.name}, expect type ${this.name}`)}encodeType(A){return A.indexOf(this.name)}},Et=class extends FA{accept(A,e){return A.visitEmpty(this,e)}covariant(A){return!1}encodeValue(){throw new Error("Empty cannot appear as a function argument")}valueToString(){throw new Error("Empty cannot appear as a value")}encodeType(){return IA(-17)}decodeValue(){throw new Error("Empty cannot appear as an output")}get name(){return"empty"}},Qt=class extends qe{checkType(A){throw new Error("Method not implemented for unknown.")}accept(A,e){throw A.visitType(this,e)}covariant(A){return!1}encodeValue(){throw new Error("Unknown cannot appear as a function argument")}valueToString(){throw new Error("Unknown cannot appear as a value")}encodeType(){throw new Error("Unknown cannot be serialized")}decodeValue(A,e){let r=e.decodeValue(A,e);Object(r)!==r&&(r=Object(r));let i;return e instanceof PA?i=()=>e.getType():i=()=>e,Object.defineProperty(r,"type",{value:i,writable:!0,enumerable:!1,configurable:!0}),r}_buildTypeTableImpl(){throw new Error("Unknown cannot be serialized")}get name(){return"Unknown"}},ct=class extends FA{accept(A,e){return A.visitBool(this,e)}covariant(A){return typeof A=="boolean"}encodeValue(A){return new Uint8Array([A?1:0])}encodeType(){return IA(-2)}decodeValue(A,e){switch(this.checkType(e),Be(A)){case 0:return!1;case 1:return!0;default:throw new Error("Boolean value out of range")}}get name(){return"bool"}},ht=class extends FA{accept(A,e){return A.visitNull(this,e)}covariant(A){return A===null}encodeValue(){return new ArrayBuffer(0)}encodeType(){return IA(-1)}decodeValue(A,e){return this.checkType(e),null}get name(){return"null"}},Fe=class extends FA{accept(A,e){return A.visitReserved(this,e)}covariant(A){return!0}encodeValue(){return new ArrayBuffer(0)}encodeType(){return IA(-16)}decodeValue(A,e){return e.name!==this.name&&e.decodeValue(A,e),null}get name(){return"reserved"}},ut=class extends FA{accept(A,e){return A.visitText(this,e)}covariant(A){return typeof A=="string"}encodeValue(A){let e=new TextEncoder().encode(A),r=AA(e.byteLength);return V(r,e)}encodeType(){return IA(-15)}decodeValue(A,e){this.checkType(e);let r=QA(A),i=chunk_NNJFBVJ3_se(A,Number(r));return new TextDecoder("utf8",{fatal:!0}).decode(i)}get name(){return"text"}valueToString(A){return'"'+A+'"'}},Ct=class extends FA{accept(A,e){return A.visitInt(this,e)}covariant(A){return typeof A=="bigint"||Number.isInteger(A)}encodeValue(A){return IA(A)}encodeType(){return IA(-4)}decodeValue(A,e){return this.checkType(e),ee(A)}get name(){return"int"}valueToString(A){return A.toString()}},ft=class extends FA{accept(A,e){return A.visitNat(this,e)}covariant(A){return typeof A=="bigint"&&A>=BigInt(0)||Number.isInteger(A)&&A>=0}encodeValue(A){return AA(A)}encodeType(){return IA(-3)}decodeValue(A,e){return this.checkType(e),QA(A)}get name(){return"nat"}valueToString(A){return A.toString()}},je=class extends FA{constructor(A){if(super(),this._bits=A,A!==32&&A!==64)throw new Error("not a valid float type")}accept(A,e){return A.visitFloat(this,e)}covariant(A){return typeof A=="number"||A instanceof Number}encodeValue(A){let e=new ArrayBuffer(this._bits/8),r=new DataView(e);return this._bits===32?r.setFloat32(0,A,!0):r.setFloat64(0,A,!0),e}encodeType(){let A=this._bits===32?-13:-14;return IA(A)}decodeValue(A,e){this.checkType(e);let r=chunk_NNJFBVJ3_se(A,this._bits/8),i=new DataView(r);return this._bits===32?i.getFloat32(0,!0):i.getFloat64(0,!0)}get name(){return"float"+this._bits}valueToString(A){return A.toString()}},chunk_NNJFBVJ3_te=class extends FA{constructor(A){super(),this._bits=A}accept(A,e){return A.visitFixedInt(this,e)}covariant(A){let e=BigInt(2)**BigInt(this._bits-1)*BigInt(-1),r=BigInt(2)**BigInt(this._bits-1)-BigInt(1);if(typeof A=="bigint")return A>=e&&A<=r;if(Number.isInteger(A)){let i=BigInt(A);return i>=e&&i<=r}else return!1}encodeValue(A){return jt(A,this._bits/8)}encodeType(){let A=Math.log2(this._bits)-3;return IA(-9-A)}decodeValue(A,e){this.checkType(e);let r=Ai(A,this._bits/8);return this._bits<=32?Number(r):r}get name(){return`int${this._bits}`}valueToString(A){return A.toString()}},jA=class extends FA{constructor(A){super(),this._bits=A}accept(A,e){return A.visitFixedNat(this,e)}covariant(A){let e=BigInt(2)**BigInt(this._bits);return typeof A=="bigint"&&A>=BigInt(0)?A<e:Number.isInteger(A)&&A>=0?BigInt(A)<e:!1}encodeValue(A){return $r(A,this._bits/8)}encodeType(){let A=Math.log2(this._bits)-3;return IA(-5-A)}decodeValue(A,e){this.checkType(e);let r=Vt(A,this._bits/8);return this._bits<=32?Number(r):r}get name(){return`nat${this._bits}`}valueToString(A){return A.toString()}},xe=class extends VA{constructor(A){super(),this._type=A,this._blobOptimization=!1,A instanceof jA&&A._bits===8&&(this._blobOptimization=!0)}accept(A,e){return A.visitVec(this,this._type,e)}covariant(A){let e=this._type instanceof jA?this._type._bits:this._type instanceof chunk_NNJFBVJ3_te?this._type._bits:0;return ArrayBuffer.isView(A)&&e==A.BYTES_PER_ELEMENT*8||Array.isArray(A)&&A.every(r=>this._type.covariant(r))}encodeValue(A){let e=AA(A.length);if(this._blobOptimization)return V(e,new Uint8Array(A));if(ArrayBuffer.isView(A))return V(e,new Uint8Array(A.buffer));let r=new KA(new ArrayBuffer(e.byteLength+A.length),0);r.write(e);for(let i of A){let B=this._type.encodeValue(i);r.write(new Uint8Array(B))}return r.buffer}_buildTypeTableImpl(A){this._type.buildTypeTable(A);let e=IA(-19),r=this._type.encodeType(A);A.add(this,V(e,r))}decodeValue(A,e){let r=this.checkType(e);if(!(r instanceof xe))throw new Error("Not a vector type");let i=Number(QA(A));if(this._type instanceof jA){if(this._type._bits==8)return new Uint8Array(A.read(i));if(this._type._bits==16)return new Uint16Array(A.read(i*2));if(this._type._bits==32)return new Uint32Array(A.read(i*4));if(this._type._bits==64)return new BigUint64Array(A.read(i*8))}if(this._type instanceof chunk_NNJFBVJ3_te){if(this._type._bits==8)return new Int8Array(A.read(i));if(this._type._bits==16)return new Int16Array(A.read(i*2));if(this._type._bits==32)return new Int32Array(A.read(i*4));if(this._type._bits==64)return new BigInt64Array(A.read(i*8))}let B=[];for(let s=0;s<i;s++)B.push(this._type.decodeValue(A,r._type));return B}get name(){return`vec ${this._type.name}`}display(){return`vec ${this._type.display()}`}valueToString(A){let e=A.map(r=>this._type.valueToString(r));return"vec {"+e.join("; ")+"}"}},oe=class extends VA{constructor(A){super(),this._type=A}accept(A,e){return A.visitOpt(this,this._type,e)}covariant(A){return Array.isArray(A)&&(A.length===0||A.length===1&&this._type.covariant(A[0]))}encodeValue(A){return A.length===0?new Uint8Array([0]):V(new Uint8Array([1]),this._type.encodeValue(A[0]))}_buildTypeTableImpl(A){this._type.buildTypeTable(A);let e=IA(-18),r=this._type.encodeType(A);A.add(this,V(e,r))}decodeValue(A,e){let r=this.checkType(e);if(!(r instanceof oe))throw new Error("Not an option type");switch(Be(A)){case 0:return[];case 1:return[this._type.decodeValue(A,r._type)];default:throw new Error("Not an option value")}}get name(){return`opt ${this._type.name}`}display(){return`opt ${this._type.display()}`}valueToString(A){return A.length===0?"null":`opt ${this._type.valueToString(A[0])}`}},he=class extends VA{constructor(A={}){super(),this._fields=Object.entries(A).sort((e,r)=>DA(e[0])-DA(r[0]))}accept(A,e){return A.visitRecord(this,this._fields,e)}tryAsTuple(){let A=[];for(let e=0;e<this._fields.length;e++){let[r,i]=this._fields[e];if(r!==`_${e}_`)return null;A.push(i)}return A}covariant(A){return typeof A=="object"&&this._fields.every(([e,r])=>{if(!A.hasOwnProperty(e))throw new Error(`Record is missing key "${e}".`);return r.covariant(A[e])})}encodeValue(A){let e=this._fields.map(([i])=>A[i]),r=Ke(this._fields,e,([,i],B)=>i.encodeValue(B));return V(...r)}_buildTypeTableImpl(A){this._fields.forEach(([B,s])=>s.buildTypeTable(A));let e=IA(-20),r=AA(this._fields.length),i=this._fields.map(([B,s])=>V(AA(DA(B)),s.encodeType(A)));A.add(this,V(e,r,V(...i)))}decodeValue(A,e){let r=this.checkType(e);if(!(r instanceof he))throw new Error("Not a record type");let i={},B=0,s=0;for(;s<r._fields.length;){let[l,u]=r._fields[s];if(B>=this._fields.length){u.decodeValue(A,u),s++;continue}let[y,b]=this._fields[B];if(DA(this._fields[B][0])!==DA(l)){if(b instanceof oe||b instanceof Fe){i[y]=[],B++;continue}u.decodeValue(A,u),s++;continue}i[y]=b.decodeValue(A,u),B++,s++}for(let[l,u]of this._fields.slice(B))if(u instanceof oe||u instanceof Fe)i[l]=[];else throw new Error("Cannot find required field "+l);return i}get name(){return`record {${this._fields.map(([e,r])=>e+":"+r.name).join("; ")}}`}display(){return`record {${this._fields.map(([e,r])=>e+":"+r.display()).join("; ")}}`}valueToString(A){let e=this._fields.map(([i])=>A[i]);return`record {${Ke(this._fields,e,([i,B],s)=>i+"="+B.valueToString(s)).join("; ")}}`}},Se=class extends he{constructor(A){let e={};A.forEach((r,i)=>e["_"+i+"_"]=r),super(e),this._components=A}accept(A,e){return A.visitTuple(this,this._components,e)}covariant(A){return Array.isArray(A)&&A.length>=this._fields.length&&this._components.every((e,r)=>e.covariant(A[r]))}encodeValue(A){let e=Ke(this._components,A,(r,i)=>r.encodeValue(i));return V(...e)}decodeValue(A,e){let r=this.checkType(e);if(!(r instanceof Se))throw new Error("not a tuple type");if(r._components.length<this._components.length)throw new Error("tuple mismatch");let i=[];for(let[B,s]of r._components.entries())B>=this._components.length?s.decodeValue(A,s):i.push(this._components[B].decodeValue(A,s));return i}display(){return`record {${this._components.map(e=>e.display()).join("; ")}}`}valueToString(A){return`record {${Ke(this._components,A,(r,i)=>r.valueToString(i)).join("; ")}}`}},De=class extends VA{constructor(A={}){super(),this._fields=Object.entries(A).sort((e,r)=>DA(e[0])-DA(r[0]))}accept(A,e){return A.visitVariant(this,this._fields,e)}covariant(A){return typeof A=="object"&&Object.entries(A).length===1&&this._fields.every(([e,r])=>!A.hasOwnProperty(e)||r.covariant(A[e]))}encodeValue(A){for(let e=0;e<this._fields.length;e++){let[r,i]=this._fields[e];if(A.hasOwnProperty(r)){let B=AA(e),s=i.encodeValue(A[r]);return V(B,s)}}throw Error("Variant has no data: "+A)}_buildTypeTableImpl(A){this._fields.forEach(([,B])=>{B.buildTypeTable(A)});let e=IA(-21),r=AA(this._fields.length),i=this._fields.map(([B,s])=>V(AA(DA(B)),s.encodeType(A)));A.add(this,V(e,r,...i))}decodeValue(A,e){let r=this.checkType(e);if(!(r instanceof De))throw new Error("Not a variant type");let i=Number(QA(A));if(i>=r._fields.length)throw Error("Invalid variant index: "+i);let[B,s]=r._fields[i];for(let[l,u]of this._fields)if(DA(B)===DA(l)){let y=u.decodeValue(A,s);return{[l]:y}}throw new Error("Cannot find field hash "+B)}get name(){return`variant {${this._fields.map(([e,r])=>e+":"+r.name).join("; ")}}`}display(){return`variant {${this._fields.map(([e,r])=>e+(r.name==="null"?"":`:${r.display()}`)).join("; ")}}`}valueToString(A){for(let[e,r]of this._fields)if(A.hasOwnProperty(e)){let i=r.valueToString(A[e]);return i==="null"?`variant {${e}}`:`variant {${e}=${i}}`}throw new Error("Variant has no data: "+A)}},PA=class extends VA{constructor(){super(...arguments),this._id=PA._counter++,this._type=void 0}accept(A,e){if(!this._type)throw Error("Recursive type uninitialized.");return A.visitRec(this,this._type,e)}fill(A){this._type=A}getType(){return this._type}covariant(A){return this._type?this._type.covariant(A):!1}encodeValue(A){if(!this._type)throw Error("Recursive type uninitialized.");return this._type.encodeValue(A)}_buildTypeTableImpl(A){if(!this._type)throw Error("Recursive type uninitialized.");A.add(this,new Uint8Array([])),this._type.buildTypeTable(A),A.merge(this,this._type.name)}decodeValue(A,e){if(!this._type)throw Error("Recursive type uninitialized.");return this._type.decodeValue(A,e)}get name(){return`rec_${this._id}`}display(){if(!this._type)throw Error("Recursive type uninitialized.");return`\u03BC${this.name}.${this._type.name}`}valueToString(A){if(!this._type)throw Error("Recursive type uninitialized.");return this._type.valueToString(A)}};PA._counter=0;function Wt(t){if(Be(t)!==1)throw new Error("Cannot decode principal");let e=Number(QA(t));return Y.fromUint8Array(new Uint8Array(chunk_NNJFBVJ3_se(t,e)))}var lt=class extends FA{accept(A,e){return A.visitPrincipal(this,e)}covariant(A){return A&&A._isPrincipal}encodeValue(A){let e=A.toUint8Array(),r=AA(e.byteLength);return V(new Uint8Array([1]),r,e)}encodeType(){return IA(-24)}decodeValue(A,e){return this.checkType(e),Wt(A)}get name(){return"principal"}valueToString(A){return`${this.name} "${A.toText()}"`}},Ve=class extends VA{constructor(A,e,r=[]){super(),this.argTypes=A,this.retTypes=e,this.annotations=r}static argsToString(A,e){if(A.length!==e.length)throw new Error("arity mismatch");return"("+A.map((r,i)=>r.valueToString(e[i])).join(", ")+")"}accept(A,e){return A.visitFunc(this,e)}covariant(A){return Array.isArray(A)&&A.length===2&&A[0]&&A[0]._isPrincipal&&typeof A[1]=="string"}encodeValue([A,e]){let r=A.toUint8Array(),i=AA(r.byteLength),B=V(new Uint8Array([1]),i,r),s=new TextEncoder().encode(e),l=AA(s.byteLength);return V(new Uint8Array([1]),B,l,s)}_buildTypeTableImpl(A){this.argTypes.forEach(y=>y.buildTypeTable(A)),this.retTypes.forEach(y=>y.buildTypeTable(A));let e=IA(-22),r=AA(this.argTypes.length),i=V(...this.argTypes.map(y=>y.encodeType(A))),B=AA(this.retTypes.length),s=V(...this.retTypes.map(y=>y.encodeType(A))),l=AA(this.annotations.length),u=V(...this.annotations.map(y=>this.encodeAnnotation(y)));A.add(this,V(e,r,i,B,s,l,u))}decodeValue(A){if(Be(A)!==1)throw new Error("Cannot decode function reference");let r=Wt(A),i=Number(QA(A)),B=chunk_NNJFBVJ3_se(A,i),l=new TextDecoder("utf8",{fatal:!0}).decode(B);return[r,l]}get name(){let A=this.argTypes.map(i=>i.name).join(", "),e=this.retTypes.map(i=>i.name).join(", "),r=" "+this.annotations.join(" ");return`(${A}) -> (${e})${r}`}valueToString([A,e]){return`func "${A.toText()}".${e}`}display(){let A=this.argTypes.map(i=>i.display()).join(", "),e=this.retTypes.map(i=>i.display()).join(", "),r=" "+this.annotations.join(" ");return`(${A}) \u2192 (${e})${r}`}encodeAnnotation(A){if(A==="query")return new Uint8Array([1]);if(A==="oneway")return new Uint8Array([2]);throw new Error("Illegal function annotation")}},wt=class extends VA{constructor(A){super(),this._fields=Object.entries(A).sort((e,r)=>DA(e[0])-DA(r[0]))}accept(A,e){return A.visitService(this,e)}covariant(A){return A&&A._isPrincipal}encodeValue(A){let e=A.toUint8Array(),r=AA(e.length);return V(new Uint8Array([1]),r,e)}_buildTypeTableImpl(A){this._fields.forEach(([B,s])=>s.buildTypeTable(A));let e=IA(-23),r=AA(this._fields.length),i=this._fields.map(([B,s])=>{let l=new TextEncoder().encode(B),u=AA(l.length);return V(u,l,s.encodeType(A))});A.add(this,V(e,r,...i))}decodeValue(A){return Wt(A)}get name(){return`service {${this._fields.map(([e,r])=>e+":"+r.name).join("; ")}}`}valueToString(A){return`service "${A.toText()}"`}};function ei(t){return JSON.stringify(t,(A,e)=>typeof e=="bigint"?`BigInt(${e})`:e)}function RB(t,A){if(A.length<t.length)throw Error("Wrong number of message arguments");let e=new Pt;t.forEach(u=>u.buildTypeTable(e));let r=new TextEncoder().encode(gt),i=e.encode(),B=AA(A.length),s=V(...t.map(u=>u.encodeType(e))),l=V(...Ke(t,A,(u,y)=>{if(!u.covariant(y))throw new Error(`Invalid ${u.display()} argument: ${ei(y)}`);return u.encodeValue(y)}));return V(r,i,B,s,l)}function _B(t,A){let e=new KA(A);if(A.byteLength<gt.length)throw new Error("Message length smaller than magic number");let r=chunk_NNJFBVJ3_se(e,gt.length),i=new TextDecoder().decode(r);if(i!==gt)throw new Error("Wrong magic number: "+JSON.stringify(i));function B(F){let H=[],P=Number(QA(F));for(let sA=0;sA<P;sA++){let uA=Number(ee(F));switch(uA){case-18:case-19:{let oA=Number(ee(F));H.push([uA,oA]);break}case-20:case-21:{let oA=[],U=Number(QA(F)),x;for(;U--;){let v=Number(QA(F));if(v>=Math.pow(2,32))throw new Error("field id out of 32-bit range");if(typeof x=="number"&&x>=v)throw new Error("field id collision or not sorted");x=v;let K=Number(ee(F));oA.push([v,K])}H.push([uA,oA]);break}case-22:{let oA=[],U=Number(QA(F));for(;U--;)oA.push(Number(ee(F)));let x=[],v=Number(QA(F));for(;v--;)x.push(Number(ee(F)));let K=[],q=Number(QA(F));for(;q--;)switch(Number(QA(F))){case 1:{K.push("query");break}case 2:{K.push("oneway");break}default:throw new Error("unknown annotation")}H.push([uA,[oA,x,K]]);break}case-23:{let oA=Number(QA(F)),U=[];for(;oA--;){let x=Number(QA(F)),v=new TextDecoder().decode(chunk_NNJFBVJ3_se(F,x)),K=ee(F);U.push([v,K])}H.push([uA,U]);break}default:throw new Error("Illegal op_code: "+uA)}}let BA=[],R=Number(QA(F));for(let sA=0;sA<R;sA++)BA.push(Number(ee(F)));return[H,BA]}let[s,l]=B(e);if(l.length<t.length)throw new Error("Wrong number of return values");let u=s.map(F=>mi());function y(F){if(F<-24)throw new Error("future value not supported");if(F<0)switch(F){case-1:return ni;case-2:return ii;case-3:return oi;case-4:return si;case-5:return hi;case-6:return ui;case-7:return Ci;case-8:return fi;case-9:return Ii;case-10:return Ei;case-11:return Qi;case-12:return ci;case-13:return ai;case-14:return gi;case-15:return Bi;case-16:return ri;case-17:return ti;case-24:return li;default:throw new Error("Illegal op_code: "+F)}if(F>=s.length)throw new Error("type index out of range");return u[F]}function b(F){switch(F[0]){case-19:{let H=y(F[1]);return pi(H)}case-18:{let H=y(F[1]);return Gi(H)}case-20:{let H={};for(let[R,sA]of F[1]){let uA=`_${R}_`;H[uA]=y(sA)}let P=di(H),BA=P.tryAsTuple();return Array.isArray(BA)?wi(...BA):P}case-21:{let H={};for(let[P,BA]of F[1]){let R=`_${P}_`;H[R]=y(BA)}return yi(H)}case-22:{let[H,P,BA]=F[1];return ki(H.map(R=>y(R)),P.map(R=>y(R)),BA)}case-23:{let H={},P=F[1];for(let[BA,R]of P){let sA=y(R);if(sA instanceof PA&&(sA=sA.getType()),!(sA instanceof Ve))throw new Error("Illegal service definition: services can only contain functions");H[BA]=sA}return qi(H)}default:throw new Error("Illegal op_code: "+F[0])}}s.forEach((F,H)=>{let P=b(F);u[H].fill(P)});let D=l.map(F=>y(F)),_=t.map((F,H)=>F.decodeValue(e,D[H]));for(let F=t.length;F<D.length;F++)D[F].decodeValue(e,D[F]);if(e.byteLength>0)throw new Error("decode: Left-over bytes");return _}var ti=new Et,ri=new Fe,JB=new Qt,ii=new ct,ni=new ht,Bi=new ut,si=new Ct,oi=new ft,ai=new je(32),gi=new je(64),Ii=new chunk_NNJFBVJ3_te(8),Ei=new chunk_NNJFBVJ3_te(16),Qi=new chunk_NNJFBVJ3_te(32),ci=new chunk_NNJFBVJ3_te(64),hi=new jA(8),ui=new jA(16),Ci=new jA(32),fi=new jA(64),li=new lt;function wi(...t){return new Se(t)}function pi(t){return new xe(t)}function Gi(t){return new oe(t)}function di(t){return new he(t)}function yi(t){return new De(t)}function mi(){return new PA}function ki(t,A,e=[]){return new Ve(t,A,e)}function qi(t){return new wt(t)}var $i=(0,chunk_ONAVPXOT.c)(gr()),An=(0,chunk_ONAVPXOT.c)((0,chunk_MGC7CRB4.a)());function bA(...t){let A=new Uint8Array(t.reduce((r,i)=>r+i.byteLength,0)),e=0;for(let r of t)A.set(new Uint8Array(r),e),e+=r.byteLength;return A.buffer}function xA(t){return[...new Uint8Array(t)].map(A=>A.toString(16).padStart(2,"0")).join("")}var ls=new RegExp(/^([0-9A-F]{2})*$/i);function ue(t){if(!ls.test(t))throw new Error("Invalid hexadecimal string.");let A=[...t].reduce((e,r,i)=>(e[i/2|0]=(e[i/2|0]||"")+r,e),[]).map(e=>Number.parseInt(e,16));return new Uint8Array(A).buffer}function zi(t,A){if(t.byteLength!==A.byteLength)return t.byteLength-A.byteLength;let e=new Uint8Array(t),r=new Uint8Array(A);for(let i=0;i<e.length;i++)if(e[i]!==r[i])return e[i]-r[i];return 0}function YA(t){return An.sha256.create().update(new Uint8Array(t)).arrayBuffer()}function mt(t){if(t instanceof $i.default.Tagged)return mt(t.value);if(typeof t=="string")return en(t);if(typeof t=="number")return YA(AA(t));if(t instanceof ArrayBuffer||ArrayBuffer.isView(t))return YA(t);if(Array.isArray(t)){let A=t.map(mt);return YA(bA(...A))}else{if(t&&typeof t=="object"&&t._isPrincipal)return YA(t.toUint8Array());if(typeof t=="object"&&t!==null&&typeof t.toHash=="function")return mt(t.toHash());if(typeof t=="bigint")return YA(AA(t))}throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${t}`),{value:t})}var en=t=>{let A=new TextEncoder().encode(t);return YA(A)};function Ir(t){let r=Object.entries(t).filter(([,s])=>s!==void 0).map(([s,l])=>{let u=en(s),y=mt(l);return[u,y]}).sort(([s],[l])=>zi(s,l)),i=bA(...r.map(s=>bA(...s)));return YA(i)}var ha=new TextEncoder().encode(`
ic-request`);var Ye=class{getPrincipal(){return Y.anonymous()}async transformRequest(A){return Object.assign(Object.assign({},A),{body:{content:A.body}})}};var un=(0,chunk_ONAVPXOT.c)(gr()),fe=(0,chunk_ONAVPXOT.c)(St()),chunk_NNJFBVJ3_Cn=(0,chunk_ONAVPXOT.c)(St());var ur=class{get name(){return"Principal"}get priority(){return 0}match(A){return A&&A._isPrincipal===!0}encode(A){return fe.value.bytes(A.toUint8Array())}},Cr=class{get name(){return"Buffer"}get priority(){return 1}match(A){return A instanceof ArrayBuffer||ArrayBuffer.isView(A)}encode(A){return fe.value.bytes(new Uint8Array(A))}},fr=class{get name(){return"BigInt"}get priority(){return 1}match(A){return typeof A=="bigint"}encode(A){return A>BigInt(0)?fe.value.tagged(2,fe.value.bytes(ue(A.toString(16)))):fe.value.tagged(3,fe.value.bytes(ue((BigInt("-1")*A).toString(16))))}},Dt=chunk_NNJFBVJ3_Cn.SelfDescribeCborSerializer.withDefaultEncoders(!0);Dt.addEncoder(new ur);Dt.addEncoder(new Cr);Dt.addEncoder(new fr);var lr;(function(t){t[t.Uint64LittleEndian=71]="Uint64LittleEndian",t[t.Semantic=55799]="Semantic"})(lr||(lr={}));function Nt(t){return Dt.serialize(t)}function hn(t){let A=t.byteLength,e=BigInt(0);for(let r=0;r<A;r++)e=e*BigInt(256)+BigInt(t[r]);return e}var wr=class extends un.default.Decoder{createByteString(A){return bA(...A)}createByteStringFromHeap(A,e){return A===e?new ArrayBuffer(0):new Uint8Array(this._heap.slice(A,e))}};function le(t){let A=new Uint8Array(t);return new wr({size:A.byteLength,tags:{2:r=>hn(r),3:r=>-hn(r),[lr.Semantic]:r=>r}}).decodeFirst(A)}var fn=(0,chunk_ONAVPXOT.c)(St());var Ut;(function(t){t.Call="call"})(Ut||(Ut={}));function $e(){let t=new ArrayBuffer(16),A=new DataView(t),e=BigInt(+Date.now()),r=Math.floor(Math.random()*4294967295),i=Math.floor(Math.random()*4294967295);if(typeof A.setBigUint64=="function")A.setBigUint64(0,e);else{let B=BigInt(1)<<BigInt(32);A.setUint32(0,Number(e>>BigInt(32))),A.setUint32(4,Number(e%B))}return A.setUint32(8,r),A.setUint32(12,i),t}var Ys=BigInt(1e6),Rs=BigInt(60*1e3),Re=class{constructor(A){this._value=(BigInt(Date.now())+BigInt(A)-Rs)*Ys}toCBOR(){return fn.value.u64(this._value.toString(16),16)}toHash(){return AA(this._value)}};function ln(t=$e){return async A=>{A.endpoint==="call"&&(A.body.nonce=t())}}var XA;(function(t){t.Received="received",t.Processing="processing",t.Replied="replied",t.Rejected="rejected",t.Unknown="unknown",t.Done="done"})(XA||(XA={}));var pr=5*60*1e3,_s="308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d9685f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484b01291091c5f87b98883463f98091a0baaae",Js="ic0.app",Ts=".ic0.app",At=class extends _A{constructor(A){super(A),this.message=A}},_e=class extends _A{constructor(A){super(A),this.message=A}};function Ls(){let t;if(typeof window<"u")if(window.fetch)t=window.fetch.bind(window);else throw new At("Fetch implementation was not available. You appear to be in a browser context, but window.fetch was not present.");else if(typeof window<"u")if(window.fetch)t=window.fetch.bind(window);else throw new At("Fetch implementation was not available. You appear to be in a Node.js context, but global.fetch was not available.");else typeof self<"u"&&self.fetch&&(t=self.fetch.bind(self));if(t)return t;throw new At("Fetch implementation was not available. Please provide fetch to the HttpAgent constructor, or ensure it is available in the window or global context.")}var Je=class{constructor(A={}){if(this.rootKey=ue(_s),this._pipeline=[],this._rootKeyFetched=!1,A.source){if(!(A.source instanceof Je))throw new Error("An Agent's source can only be another HttpAgent");this._pipeline=[...A.source._pipeline],this._identity=A.source._identity,this._fetch=A.source._fetch,this._host=A.source._host,this._credentials=A.source._credentials}else this._fetch=A.fetch||Ls()||fetch.bind(window);if(A.host!==void 0)!A.host.match(/^[a-z]+:/)&&typeof window<"u"?this._host=new URL(window.location.protocol+"//"+A.host):this._host=new URL(A.host);else if(A.source!==void 0)this._host=A.source._host;else{let e=typeof window<"u"?window.location:void 0;if(!e)throw new Error("Must specify a host to connect to.");this._host=new URL(e+"")}if(this._host.hostname.endsWith(Ts)&&(this._host.hostname=Js),A.credentials){let{name:e,password:r}=A.credentials;this._credentials=`${e}${r?":"+r:""}`}this._identity=Promise.resolve(A.identity||new Ye),A.disableNonce||this.addTransform(ln($e))}addTransform(A,e=A.priority||0){let r=this._pipeline.findIndex(i=>(i.priority||0)<e);this._pipeline.splice(r>=0?r:this._pipeline.length,0,Object.assign(A,{priority:e}))}async getPrincipal(){if(!this._identity)throw new _e("This identity has expired due this application's security policy. Please refresh your authentication.");return(await this._identity).getPrincipal()}async call(A,e,r){let i=await(r!==void 0?await r:await this._identity);if(!i)throw new _e("This identity has expired due this application's security policy. Please refresh your authentication.");let B=Y.from(A),s=e.effectiveCanisterId?Y.from(e.effectiveCanisterId):B,l=i.getPrincipal()||Y.anonymous(),u={request_type:Ut.Call,canister_id:B,method_name:e.methodName,arg:e.arg,sender:l,ingress_expiry:new Re(pr)},y=await this._transform({request:{body:null,method:"POST",headers:Object.assign({"Content-Type":"application/cbor"},this._credentials?{Authorization:"Basic "+btoa(this._credentials)}:{})},endpoint:"call",body:u});y=await i.transformRequest(y);let b=Nt(y.body),[D,_]=await Promise.all([this._fetch(""+new URL(`/api/v2/canister/${s.toText()}/call`,this._host),Object.assign(Object.assign({},y.request),{body:b})),Ir(u)]);if(!D.ok)throw new Error(`Server returned an error:
  Code: ${D.status} (${D.statusText})
  Body: ${await D.text()}
`);return{requestId:_,response:{ok:D.ok,status:D.status,statusText:D.statusText}}}async query(A,e,r){let i=await(r!==void 0?await r:await this._identity);if(!i)throw new _e("This identity has expired due this application's security policy. Please refresh your authentication.");let B=typeof A=="string"?Y.fromText(A):A,s=i?.getPrincipal()||Y.anonymous(),l={request_type:"query",canister_id:B,method_name:e.methodName,arg:e.arg,sender:s,ingress_expiry:new Re(pr)},u=await this._transform({request:{method:"POST",headers:Object.assign({"Content-Type":"application/cbor"},this._credentials?{Authorization:"Basic "+btoa(this._credentials)}:{})},endpoint:"read",body:l});u=await i?.transformRequest(u);let y=Nt(u.body),b=await this._fetch(""+new URL(`/api/v2/canister/${B.toText()}/query`,this._host),Object.assign(Object.assign({},u.request),{body:y}));if(!b.ok)throw new Error(`Server returned an error:
  Code: ${b.status} (${b.statusText})
  Body: ${await b.text()}
`);return le(await b.arrayBuffer())}async readState(A,e,r){let i=typeof A=="string"?Y.fromText(A):A,B=await(r!==void 0?await r:await this._identity);if(!B)throw new _e("This identity has expired due this application's security policy. Please refresh your authentication.");let s=B?.getPrincipal()||Y.anonymous(),l=await this._transform({request:{method:"POST",headers:Object.assign({"Content-Type":"application/cbor"},this._credentials?{Authorization:"Basic "+btoa(this._credentials)}:{})},endpoint:"read_state",body:{request_type:"read_state",paths:e.paths,sender:s,ingress_expiry:new Re(pr)}});l=await B?.transformRequest(l);let u=Nt(l.body),y=await this._fetch(""+new URL(`/api/v2/canister/${i}/read_state`,this._host),Object.assign(Object.assign({},l.request),{body:u}));if(!y.ok)throw new Error(`Server returned an error:
  Code: ${y.status} (${y.statusText})
  Body: ${await y.text()}
`);return le(await y.arrayBuffer())}async status(){let A=this._credentials?{Authorization:"Basic "+btoa(this._credentials)}:{},e=await this._fetch(""+new URL("/api/v2/status",this._host),{headers:A});if(!e.ok)throw new Error(`Server returned an error:
  Code: ${e.status} (${e.statusText})
  Body: ${await e.text()}
`);return le(await e.arrayBuffer())}async fetchRootKey(){return this._rootKeyFetched||(this.rootKey=(await this.status()).root_key,this._rootKeyFetched=!0),this.rootKey}invalidateIdentity(){this._identity=null}replaceIdentity(A){this._identity=Promise.resolve(A)}_transform(A){let e=Promise.resolve(A);for(let r of this._pipeline)e=e.then(i=>r(i).then(B=>B||i));return e}};var wn;(function(t){t.Error="err",t.GetPrincipal="gp",t.GetPrincipalResponse="gpr",t.Query="q",t.QueryResponse="qr",t.Call="c",t.CallResponse="cr",t.ReadState="rs",t.ReadStateResponse="rsr",t.Status="s",t.StatusResponse="sr"})(wn||(wn={}));function Gr(){let t=typeof window>"u"&&typeof window>"u"?typeof self>"u"?void 0:self.ic.agent:window.ic.agent;if(!t)throw new Error("No Agent could be found.");return t}var pn=({IDL:t})=>{let A=t.Principal,e=t.Record({controllers:t.Vec(t.Principal),freezing_threshold:t.Nat,memory_allocation:t.Nat,compute_allocation:t.Nat}),r=t.Record({controllers:t.Opt(t.Vec(t.Principal)),freezing_threshold:t.Opt(t.Nat),memory_allocation:t.Opt(t.Nat),compute_allocation:t.Opt(t.Nat)}),i=t.Vec(t.Nat8);return t.Service({canister_status:t.Func([t.Record({canister_id:A})],[t.Record({status:t.Variant({stopped:t.Null,stopping:t.Null,running:t.Null}),memory_size:t.Nat,cycles:t.Nat,settings:e,module_hash:t.Opt(t.Vec(t.Nat8))})],[]),create_canister:t.Func([t.Record({settings:t.Opt(r)})],[t.Record({canister_id:A})],[]),delete_canister:t.Func([t.Record({canister_id:A})],[],[]),deposit_cycles:t.Func([t.Record({canister_id:A})],[],[]),install_code:t.Func([t.Record({arg:t.Vec(t.Nat8),wasm_module:i,mode:t.Variant({reinstall:t.Null,upgrade:t.Null,install:t.Null}),canister_id:A})],[],[]),provisional_create_canister_with_cycles:t.Func([t.Record({settings:t.Opt(r),amount:t.Opt(t.Nat)})],[t.Record({canister_id:A})],[]),provisional_top_up_canister:t.Func([t.Record({canister_id:A,amount:t.Nat})],[],[]),raw_rand:t.Func([],[t.Vec(t.Nat8)],[]),start_canister:t.Func([t.Record({canister_id:A})],[],[]),stop_canister:t.Func([t.Record({canister_id:A})],[],[]),uninstall_code:t.Func([t.Record({canister_id:A})],[],[]),update_settings:t.Func([t.Record({canister_id:t.Principal,settings:r})],[],[])})};function dr(t){function A(e,r,i){let B=r[0],s=Y.fromHex("");return B&&typeof B=="object"&&B.canister_id&&(s=Y.from(B.canister_id)),{effectiveCanisterId:s}}return zA.createActor(pn,Object.assign(Object.assign(Object.assign({},t),{canisterId:Y.fromHex("")}),{callTransform:A,queryTransform:A}))}var Hn={};(0,chunk_ONAVPXOT.b)(Hn,{defaultStrategy:()=>Fr,pollForResponse:()=>Yt,strategy:()=>it});var dn=(0,chunk_ONAVPXOT.c)(Gn()),chunk_NNJFBVJ3_ie,vs=`
    AGFzbQEAAAABXg9gAn9/AGABfwBgA39/fwBgAn9/AX9gAX8Bf2ADf39/AX9gBH9/f38AYAV/f39/fwBgBn9/f39/fwF/
    YAAAYAZ/f39/f38AYAV/fn5+fgBgAAF/YAF/AX5gAn9/AX4DvAG6AQgEAAEAAAABAgEDAAAMAAACAQEKAQAHBgEAAQEA
    AgcCAgABAgAGAAgOBAEBBAAAAQALAQkAAwMAAQQBAAICAAIBAQEBAQEGAQACAQEEAAECAQEABQMBAQMEAwQCAwAAAAEA
    AAAAAAEFAQEAAAACAQIAAQMAAQAGBAACAgMEAAAAAAAGAAQABAQEBAAAAwIAAgACAAEBAAAAAQEBAAEAAAAAAgAAAQAB
    AQEBAQEBAQEBAQIBAAAAAQ0AAQQFAXABBQUFAwEAEQYJAX8BQYCAwAALBzYEBm1lbW9yeQIACGJsc19pbml0AA0KYmxz
    X3ZlcmlmeQAnEV9fd2JpbmRnZW5fbWFsbG9jAHwJDQEAQQELBLgBCrkBtwEKiO8CugGXVQIQfwV+IwBB4OEAayIGJABB
    KxABIgkEQCAJQfSgwABBKxBnIQwDQCAHQStHBEAgByAMaiIJQV9BfyAJLQAAIglBn39qQf8BcUEaSRsgCXE6AAAgB0EB
    aiEHDAELC0EAIQcgBkGoA2pBOBByGiAGQQE2AuADIAZB6ANqQTgQciEPIAZBoARqQQE2AgAgBkGoBmpBoKfAABBfIAZB
    qAZqECkhCSAGQbgVakGAAhByGiAGQdjbAGpBgAEQchogBkGbI2pBgQIQciENIAZBsAxqQcAAEHIaIAZByM8AakHAABBy
    GiAGQdDVAGpBwAAQchogBkEAOgCaIyAGIAlB/wBqIhBBA3ZBAWoiCkEBdCILOgCZIyAGIApBB3Y6AJgjIAtBf2pBBXYi
    CEEBaiERA0AgB0ErRwRAIAcgDWogByAMai0AADoAACAHQQFqIQcMAQsLIAZBKzoAxiMgBkEgaiAGQZgjakEvQdinwAAQ
    ggEgBkGwDGpBwAAgAiADIAYoAiAgBigCJBATQQAhDUEAIAtrIRIgBkGZI2ohE0EBIQNBACEJA0ACQCANIAMgEUtyRQRA
    IAMgCEshDSADIAMgCE1qIQJBACEHA0AgB0EgRgRAIAYgAzoAmCNBACEHA0AgB0ErRwRAIAcgE2ogByAMai0AADoAACAH
    QQFqIQcMAQsLIAZBKzoAxCMgBkEYaiAGQZgjakEtQeinwAAQggFBACEHIAZByM8AakEAIAZB0NUAakEgIAYoAhggBigC
    HBATIAkgEmohAyAJIAlBgAIgCUGAAksbIg5rIRQgBkG4FWogCWohFQJAA0AgB0EgRg0FIAcgFGpFDQEgByAVaiAGQcjP
    AGogB2otAAA6AAAgAyAHQQFqIgdqDQALIAIhAyALIQkMBQsgDkGAAkH4p8AAEDwABSAGQcjPAGogB2oiDiAOLQAAIAZB
    sAxqIAdqLQAAcyIOOgAAIAZB0NUAaiAHaiAOOgAAIAdBAWohBwwBCwALAAsgEEGACEkhDUEAIQNBACEJA0ACQCAJQQJH
    BEAgCUEBaiELIAZBuBVqIANqIQJBACEHAkADQCAHIApGBEAgDQRAIAZByM8AakHwABByGiAGQdjbAGohCCAKIQcDQCAH
    BEAgBkHIzwBqQQgQLiAGIAYpA8hPIAgxAAB8NwPITyAHQX9qIQcgCEEBaiEIDAELCyAGQcjPAGoQRSAGQdDVAGogBkGo
    BmoQMCAGQZgjakHwABByGiAGQcjPAGogBkHQ1QBqEDZBAEgNBUEAIQIDQCAGQdDVAGpBARAuIAJBAWohAiAGQcjPAGog
    BkHQ1QBqEDZBf0oNAAsDQCACQQFIDQZBACEHA0AgB0HoAEYEQCAGIAYpA7hWQgGHNwO4VkEAIQcDQCAHQfAARwRAIAZB
    mCNqIAdqIAZByM8AaiAHaikDADcDACAHQQhqIQcMAQsLIAZBmCNqIAZB0NUAahBkIAZBmCNqEEUgBikDgCRCP4chF0EA
    IQcDQCAHQfAARwRAIAZByM8AaiAHaiIIIAZBmCNqIAdqKQMAIhYgCCkDAIUgF4MgFoU3AwAgB0EIaiEHDAELCyACQX9q
    IQIMAgUgBkHQ1QBqIAdqIgggCEEIaikDAEI5hkKAgICAgICAgAKDIAgpAwBCAYeENwMAIAdBCGohBwwBCwALAAsACyAK
    QYABQaChwAAQPQALIAMgB2oiCEH/AU0EQCAHQYABRg0CIAZB2NsAaiAHaiACIAdqLQAAOgAAIAdBAWohBwwBCwsgCEGA
    AkGwocAAEDwAC0GAAUGAAUHAocAAEDwACyAGQShqIAZBqANqEAIgBkG4EmogDxACIAZBKGogBkG4EmoQDCAGQegBakHo
    g8AAEF8CQAJAIAZB6AFqEFoNACAGQShqEIQBDQAgBkGIPWoQS0EAIQcgBkGIwwBqQTgQchogBkG4IWpBOBByGiAGQYjA
    AGoQSyAGQcjEAGoQSyAGQcjJAGoQSyAGQcjMAGoQSyAGQagGahBLIAZBsAxqEEsgBkHIzwBqEEsgBkHQ1QBqEEsgBkHY
    2wBqEEsgBkG4FWoQSyAGQZgjaiAGQcjJAGpBwAEQZxogBkHYJGogBkHIzABqQcABEGcaIAZBmCZqIAZBqAZqQcABEGca
    IAZB2CdqIAZBsAxqQcABEGcaIAZBmClqIAZByM8AakHAARBnGiAGQdgqaiAGQdDVAGpBwAEQZxogBkGYLGogBkHY2wBq
    QcABEGcaIAZB2C1qIAZBuBVqQcABEGcaIAZBuBVqQecAEHIaIAZBiMAAaiAGQShqEH8gBkGIwABqEBggBkGYI2ogBkEo
    ahB/A0AgB0HACkYEQCAGQbghaiAGQegBahBrIAYpA7ghIRcgBkG4IWpBARCdASAGQbghahBEIAYpA7ghIRYgBkGIwwBq
    IAZBuCFqEGsgBkGIwwBqQQEQnQEgBkGIwwBqEEQgBkG4IWogBkGIwwBqIBdCAoGnEE8gBkGIwABqIAZBKGogFkICgacQ
    bSAGQcjEAGogBkGIwABqEH8gBkG4IWoQKUEDaiIJQQJ2IgdBAWohAkEAIQgCQAJAAkADQAJAIAZBuCFqQQUQjAEhAyAC
    IAhGBEAgCUGYA0kNASACQecAQbCEwAAQPAALIAhB5wBGDQIgBkG4FWogCGogA0FwaiIDOgAAIAZBuCFqIANBGHRBGHUQ
    ngEgBkG4IWoQRCAGQbghakEEEDsgCEEBaiEIDAELCyAGQbgVaiACaiADOgAAIANBGHRBGHVBf2oiA0EBdiECIANBD0sN
    ASAGQYg9aiAGQZgjaiACQcABbGoQfwNAIAdBf0YEQCAGQYg9aiAGQcjEAGoQcyAGQZgjaiAGQYg9akHAARBnGgwICyAH
    QeYASw0DIAZBiMAAaiAGQZgjaiAGQbgVaiAHaiwAABAfIAdBf2ohByAGQYg9ahAYIAZBiD1qEBggBkGIPWoQGCAGQYg9
    ahAYIAZBiD1qIAZBiMAAahAMDAALAAtB5wBB5wBBoITAABA8AAsgAkEIQcCEwAAQPAALIAdB5wBB0ITAABA8AAUgBkHI
    xABqIAZBmCNqIAdqIgIQfyACQcABaiICIAZByMQAahB/IAIgBkGIwABqEAwgB0HAAWohBwwBCwALAAsgBkGYI2oQSwsgB
    kEoaiAGQZgjahB/IAZBKGoQRyAMEAlBACEHIAZBqAZqQTAQchogBkGwDGpBoKfAABBfAkACQAJAAkACQANAAkAgB0EwRg
    RAIAYgBi0AqAZBH3E6AKgGIAZByM8AaiAGQagGahBdIAENAUEAQQBB8ILAABA8AAsgASAHRg0CIAZBqAZqIAdqIAAgB2o
    tAAA6AAAgB0EBaiEHDAELC0EAIQcCQCAALAAAIgJBAE4EQCAAQTBqIQAgAUEwIAFBMEsbQVBqIQIDQCAHQTBGBEAgBkHY
    2wBqIAZBqAZqEF0gBkHoAWoQSyAGQegBaiAGQcjPAGoQtAEgBkGoAmoiACAGQdjbAGoQtAEgBkHoAmoQaSAGQegBahBEI
    AZBuBVqIAZB6AFqEE0gBkGYI2ogABCFASAGQZgjahADIAZBmCNqIAZBuBVqEFkNAyAGQegBahCUAQwDCyACIAdGDQQgBk
    GoBmogB2ogACAHai0AADoAACAHQQFqIQcMAAsACyAGQZgjahBLIAZB0NUAakE4EHIaIAZBATYCiFYgBkGYI2ogBkHIzwB
    qELQBIAZBmCNqEEQgBkGYJGoQaSAGQdjbAGogBkGYI2oQTQJAIAZB2NsAaiAGQdDVAGoQXEEBRwRAIAZBmCNqEJQBDAEL
    IAZBuBVqIAZB2NsAaiAGQdDVAGoQIyAGQbgVahBYBEAgBkG4FWoQQSAGQbgVahBECyAGQdgjaiAGQbgVahClAQsgAkEgc
    UEFdiAGQdgjahBMQQFGRwRAIAZBmCNqEKYBCyAGQegBaiAGQZgjakHAARBnGgsgBkHQPGpB8IHAABBfIAZB6AFqEIQBRQ
    0CDAMLIAEgAUHggsAAEDwACyAHQTBqIAFBgIPAABA8AAsgBkGoA2oQSyAGQagDaiAGQegBahB/IAZBuBJqEEsgBkG4Emo
    gBkHoAWoQfyAGQbgSahBHIAZByMcAakHwgcAAEF8gBkGYI2pBqILAABBfIAZBiMMAaiAGQZgjahCLAUEAIQAgBkG4IWpB
    OBByGiAGQfAhakE4EHIhCSAGQdjbAGpB8IHAABBfIAZBuBVqQYCAwAAQXyAGQZgjakE4EHIaIAZBkCNqIQsgBkGwFWohC
    gJAAkADQCAAQQdGDQIgAEEBaiEBIAZBuBVqIABBA3RqIQxCACEXQQAhAwNAIANBf2ohByAKIANBA3RqIQIgCyAAIANqQQ
    N0aiEIA0AgB0EGRgRAIAEhAAwDCyAIQQhqIQggAkEIaiECIAAgB0EBaiIHakEGSw0ACyAAQQZNBEAgB0EGSw0DIAdBAWo
    hAyAGQQhqIAIpAwAiFiAWQj+HIAwpAwAiFiAWQj+HEDEgCCAGKQMIIhkgF3wiFiAIKQMAIhp8IhhC//////////8DgzcD
    ACAYIBZUrSAWIBlUrSAGQRBqKQMAIBdCP4d8fCAaQj+HfHxCBoYgGEI6iIQhFwwBCwsLIABBB0G0ncAAEDwACyAHQQdBx
    J3AABA8AAsgBkG4IWogBkHQPGoQayAGQbghaiAGQZgjahAkIAkgBkHQPGoQayAJIAZBmCNqEBwgCSAGQdjbAGoQYyAGQb
    gSaiAGQYjDAGoQSCAGQbghahApIQAgBkGIyABqIAZBuCFqIAZByMcAahCNASAGQYjIAGoQKSAASQRAIAZBuCFqIAZBiMg
    AahBrIAZBqANqEKYBCyAJECkhACAGQYjIAGogCSAGQcjHAGoQjQEgBkGIyABqECkgAEkEQCAJIAZBiMgAahBrIAZBuBJq
    EKYBCyAGQbghahBEIAkQREEAIQcgBkHIyABqQTgQchogBkGIyQBqQTgQchogBkGYO2pBOBByGiAGQYg9ahBLIAZBiMAAa
    hBLIAZByMQAahBLIAZByMkAahBLIAZByMwAahBLIAZBqAZqEEsgBkGwDGoQSyAGQcjPAGoQSyAGQdDVAGoQSyAGQdjbAG
    oQSyAGQbgVahBLIAZBmCNqIAZByMkAakHAARBnGiAGQdgkaiAGQcjMAGpBwAEQZyEAIAZBmCZqIAZBqAZqQcABEGchASA
    GQdgnaiAGQbAMakHAARBnIQsgBkGYKWogBkHIzwBqQcABEGchCiAGQdgqaiAGQdDVAGpBwAEQZyECIAZBmCxqIAZB2NsA
    akHAARBnIQMgBkHYLWogBkG4FWpBwAEQZyEIIAZBuBVqQcwBEHIaIAZByMgAaiAGQbghahBrIAZBiMkAaiAJEGsgACAGQ
    agDahB/IAAgBkG4EmoQcyABIAZBqANqEH8gASAGQbgSahAMIAZBiD1qIAZBuBJqEH8gBkGIPWoQGCAGQcjEAGogABB/IA
    ZBmCNqIAZByMQAahB/IAZBmCNqIAZBiD1qEHMgBkHIxABqIAEQfyALIAZByMQAahB/IAsgBkGIPWoQDCAGQYjAAGogBkG
    oA2oQfyAGQYjAAGoQGCAGQcjEAGogABB/IAIgBkHIxABqEH8gAiAGQYjAAGoQDCAGQcjEAGogARB/IAMgBkHIxABqEH8g
    AyAGQYjAAGoQDCAGQcjEAGogAhB/IAogBkHIxABqEH8gCiAGQYg9ahBzIAZByMQAaiADEH8gCCAGQcjEAGoQfyAIIAZBi
    D1qEAwgBikDyEghFyAGQcjIAGpBARCdASAGQcjIAGoQRCAGKQPISCEWIAZBmDtqIAZByMgAahBrIAZBmDtqQQEQnQEgBk
    GYO2oQRCAGQcjIAGogBkGYO2ogF0ICgacQTyAGQYjAAGogBkGoA2ogFkICgacQbSAGQcjEAGogBkGIwABqEH8gBikDiEk
    hFyAGQYjJAGpBARCdASAGQYjJAGoQRCAGKQOISSEWIAZBmDtqIAZBiMkAahBrIAZBmDtqQQEQnQEgBkGYO2oQRCAGQYjJ
    AGogBkGYO2ogF0ICgacQTyAGQYg9aiAGQbgSaiAWQgKBpxBtIAZByMQAaiAGQYg9ahAMIAZBmDtqIAZByMgAahBrIAZBm
    DtqIAZBiMkAahBhIAZBmDtqEEQgBkGYO2oQKUEBaiICQQF2IghBAWohAAJAAkACQAJAA0ACQCAGQcjIAGpBAxCMASEBIA
    AgB0YEQCAGQYjJAGpBAxCMASEDIAJBlgNJDQEgAEHMAUG0g8AAEDwACyAGQcjIAGogAUF8aiIBEJ4BIAZByMgAahBEIAZ
    ByMgAakECEDsgBkGIyQBqIAZBiMkAakEDEIwBQXxqIgMQngEgBkGIyQBqEEQgBkGIyQBqQQIQOyAHQcwBRg0CIAZBuBVq
    IAdqIAMgAUECdGo6AAAgB0EBaiEHDAELCyAGQbgVaiAAaiADIAFBAnRqIgA6AAAgAEEYdEEYdUF/aiIBQQF2IQAgAUEPS
    w0BIAZBiD1qIAZBmCNqIABBwAFsahB/A0AgCEF/Rg0EIAhBywFLDQMgBkGIwABqIAZBmCNqIAZBuBVqIAhqLAAAEB8gCE
    F/aiEIIAZBiD1qEBggBkGIPWoQGCAGQYg9aiAGQYjAAGoQDAwACwALQcwBQcwBQaSDwAAQPAALIABBCEHEg8AAEDwACyA
    IQcwBQdSDwAAQPAALIAZBiD1qIAZByMQAahBzIAZBqANqIAZBiD1qQcABEGcaQX8hByAGQagDahCEAUUNASAGQegBahCm
    AUEAIQcgBkHIzwBqQeAAEHIaIAUEQANAIAdB4ABGBEAgBiAGLQDIT0EfcToAyE8gBkHQ1QBqIAZByM8AahAhAkACQAJAI
    AQsAAAiA0F/SgRAIARB4ABqIQAgBUHgACAFQeAASxtBoH9qIQFBACEHA0AgB0HgAEYEQCAGQZgjaiAGQcjPAGoQISAGQa
    gDaiAGQdDVAGogBkGYI2oQPwwDCyABIAdGDQMgBkHIzwBqIAdqIAAgB2otAAA6AAAgB0EBaiEHDAALAAsgBkGYI2oQKiA
    GQYjAAGpBOBByGiAGQQE2AsBAIAZBmCNqIAZB0NUAahCQASAGQZgkaiIBELABIAZBmCVqELABIAZBmCNqEKgBIAZB2NsA
    aiAGQZgjahAmIAZBuBVqIAZB2NsAahBeIAZBuBVqEKYBIAZBuBVqIAZB2NsAahAPIAZBsAxqIAZBuBVqQcAAEGcaAkAgB
    kGwDGogBkGIwABqEFxBAUcEQCAGQZgjahCYAQwBCyAGQdjbAGoQhwFFBEAgBkHIxABqIAZBmNwAaiIAEIUBIAZByMkAai
    AGQdjbAGoQhQEgBkHIzABqIAZB2NsAahCFASAGQagGakE4EHIaIAZBATYC4AYgBkGwDGpBOBByGiAGQQE2AugMIAZByMQ
    AahADIAZByMkAahADIAZByMQAaiAGQcjJAGoQeCAGQcjEAGoQRCAGQbgVaiAGQcjEAGogBkGIwABqECMgBkHIyQBqIAZB
    uBVqEKUBIAZByMQAaiAGQcjJAGoQpQEgBkHIyQBqIAZB2NsAahClASAGQcjJAGogBkHIxABqEHggBkHIyQBqEEQgBkHIy
    QBqEEIgBkHIxABqIAAQpQEgBkHIxABqEEIgBkHIyQBqIAZBsAxqEFwhAiAGQcjMAGogBkGwDGoQpQEgBkHIzABqEEEgBk
    HIzABqEEQgBkGoBmogBkHIyQBqEKUBIAZBqAZqEEEgBkGoBmoQRCAGQcjJAGogBkGoBmpBASACayICEHkgBkGwDGogBkH
    IzABqIAIQeSAGQbgVaiAGQcjJAGogBkGwDGoQIyAGQdjbAGogBkG4FWoQpQEgBkHIzABqIAZByMkAahClASAGQcjMAGog
    BkGwDGoQNCAGQcjMAGogBkHY2wBqEEggACAGQcjMAGoQpQEgACAGQcjEAGoQSCAGQagGaiAGQdjbAGoQpQEgBkHY2wBqI
    AAgAhB5IAAgBkGoBmogAhB5IAZB2NsAahCJASEAIAZBuBVqIAZB2NsAahBeIAZBuBVqEDogBkG4FWoQqAEgBkHY2wBqIA
    ZBuBVqIAAQjwELIAZB2NsAahCJAQRAIAZB2NsAahA6CyAGQdjbAGoQqwEgASAGQdjbAGoQkAELQQAhAgJAIAEQhwENACA
    GQdgkahBMIgINACABEEwhAgsgA0EgcUEFdiACQQFGRwRAIAZBmCNqEJwBCyAGQagDaiAGQZgjakGAAxBnGgsgBkHIyABq
    QfCBwAAQXyAGQagDahCIAQ0FIAZBuBJqECogBkG4FWoQKiAGQdDVAGoQKiAGQdjbAGoQKiAGQZgjahAqIAZBuBhqIAZB0
    NUAakGAAxBnIQ0gBkG4G2ogBkHY2wBqQYADEGchCSAGQbgeaiAGQZgjakGAAxBnIQAgBkHY2wBqQbiAwAAQXyAGQZgjak
    HwgMAAEF8gBkGIwwBqIAZB2NsAaiAGQZgjahBJIAZBiMkAakHwgcAAEF9BACEHIAZBuCFqQTgQchogBkHwIWpBqAEQciE
    DIAZBsAxqQfCBwAAQXyAGQcjPAGpBgIDAABBfIAZB4CJqIQEgBkGoImohDyAGQdDVAGogBkHIyABqEF8DQCAHQagBRg0C
    IAZBuCFqIAdqIgIgBkHQ1QBqEGsgAiAGQcjPAGoQJCAHQThqIQcgBkHQ1QBqIAZByM8AahAcDAALAAsgB0HgAGogBUGwp
    MAAEDwACyABIAZB0NUAahBrQQAhByAGQdjbAGpBOBByGiAGQZgjaiADIAZBsAxqEI0BIAZB2NsAaiAGQZgjahBrIAMgBk
    HY2wBqEGsgBkGYI2ogASAGQbAMahCNASAGQdjbAGogBkGYI2oQayABIAZB2NsAahBrIAZBiD1qECogBkGIwwBqEEAgBkG
    IwwBqEKgBIAZBmDtqQTgQchogBkG4FWogBkGoA2oQfgNAIAdBgAlGBEACQCAGQbgVaiECQQAhBwNAIAdB4AFHBEAgBkG4
    IWogB2oiBBApIQUgBkGYI2ogBCAGQYjJAGoQjQEgBkGYO2ogBkGYI2oQayAGQZg7ahApIAVJBEAgBCAGQZg7ahBrIAIQn
    AELIAQQRCAHQThqIQcgAkGAA2ohAgwBCwsgBkHIxABqECogBkGIwABqECogBkGYI2oQKiAGQcjJAGoQKiAGQcjMAGoQKi
    AGQagGahAqIAZBsAxqECogBkHIzwBqECogBkHQ1QBqECogBkHY2wBqECogBkGYJmogBkHIyQBqQYADEGchAiAGQZgpaiA
    GQcjMAGpBgAMQZyEEIAZBmCxqIAZBqAZqQYADEGchBSAGQZgvaiAGQbAMakGAAxBnIQsgBkGYMmogBkHIzwBqQYADEGch
    CiAGQZg1aiAGQdDVAGpBgAMQZyEIIAZBmDhqIAZB2NsAakGAAxBnIQxBACEHIAZBqAZqQTgQchogBkGwDGogBkG4IWoQX
    yAGQcjPAGogAxBfIAZB0NUAaiAPEF8gBkHY2wBqIAEQXyAGQegMaiAGQcjPAGpBOBBnGiAGQaANaiAGQdDVAGpBOBBnGi
    AGQdgNaiAGQdjbAGpBOBBnGiAGQdDVAGpBlwMQchogBkHY2wBqQZcDEHIaA0AgB0HgAUYEQAJAIAZBmCNqIAZBuBVqEH4
    gBkHIxABqIAZBmCNqEH4gAiAGQcjEAGoQfiACIA0QCyAEIAZByMQAahB+IAQgCRALIAZByMQAaiACEH4gBSAGQcjEAGoQ
    fiAFIAkQCyAGQcjEAGogBkGYI2oQfiALIAZByMQAahB+IAsgABALIAZByMQAaiACEH4gCiAGQcjEAGoQfiAKIAAQCyAGQ
    cjEAGogBBB+IAggBkHIxABqEH4gCCAAEAsgBkHIxABqIAUQfiAMIAZByMQAahB+IAwgABALIAZBsAxqQQEgBikDsAxCAo
    GnayIFEJ0BIAZBsAxqEEQgBkGoBmoQdEEAIQAgBkGwDGohAgJAAkACQAJAA38gAEEERgR/IAZBqAZqECkiA0GXA08NAiA
    DQQFqIQkgBkHY2wBqIANqQQE6AAAgBkHY2wBqIQggAwVBACEHA0AgB0E4RwRAIAZBqAZqIAdqIgEgASkDACACIAdqKQMA
    hDcDACAHQQhqIQcMAQsLIAJBOGohAiAAQQFqIQAMAQsLIQcDQCAHBEAgBkGwDGpBARA7IAggBikDsAxCAoGnQQF0QX9qO
    gAAIAdBf2ohByAIQQFqIQgMAQsLQQAhBwNAIAcgCUYEQCAGQYjAAGogBkGYI2ogBkHQ1QBqIANqLQAAQRl0QRh1QQFyEC
    AgA0F/aiEHA0AgB0F/Rg0GIAZBiMAAahAUIAdBlgNLDQUgBkHIxABqIAZBmCNqIAZB2NsAaiAHai0AACAGQdDVAGogB2o
    tAABBAXRqQRh0QRh1ECAgB0F/aiEHIAZBiMAAaiAGQcjEAGoQCwwACwALIAdBlwNGDQIgB0EBaiEBQQAhACAGQdDVAGog
    B2oiC0EAOgAAIAZB2NsAaiAHai0AACEKQQEhAkE4IQcDQCAHQeABRgRAIAEhBwwCBSAGQbAMaiAHaiIEKQMAIRcgBEEBE
    DsgBCAKIBdCAoGnbCIIQRh0QRl1EJ4BIAQQRCALIAAgAiAIbGoiADoAACAHQThqIQcgAkEBdCECDAELAAsACwALIANBlw
    NBkKXAABA8AAtBlwNBlwNBoKXAABA8AAsgB0GXA0GwpcAAEDwACyAGQcjEAGogBkGIwABqEH4gBkHIzwBqECogBkHIzwB
    qIAZBuBVqEH4gBkHIzwBqEJwBIAZByMQAaiAGQcjPAGoQCyAGQYjAAGogBkHIxABqIAUQbyAGQbgSaiAGQYjAAGoQfkF/
    IQcgBkG4EmoQiAFFDQogBkG4EmoQOCAGQbgVakG4gMAAEF8gBkGYI2pB8IDAABBfIAZBmDtqIAZBuBVqIAZBmCNqEEkgB
    kGYPGpBOBByGiAGQdA8akE4EHIaIAZBiD1qECogBkHoAWoQhAFFBEAgBkEoahCEAQ0BIAZBiMAAahAqIAZBiMAAaiAGQb
    gSahB+IAZBiMAAahBKIAZBiMMAahBLIAZBiMMAaiAGQegBahB/IAZBiMMAahBHIAZByMQAahAqIAZByMQAaiAGQagDahB
    +IAZByMQAahBKIAZBuCFqEEsgBkG4IWogBkEoahB/IAZBuCFqEEcgBkGYI2ogBkGIwwBqEIUBIAZByMcAaiAGQZgjahCF
    ASAGQZgjaiAGQcjDAGoQhQEgBkGIyABqIAZBmCNqEIUBIAZBmCNqIAZBuCFqEIUBIAZByMgAaiAGQZgjahCFASAGQZgja
    iAGQfghahCFASAGQYjJAGogBkGYI2oQhQEgBkHIyQBqECogBkHIzABqECogBkHQ1QBqEGAgBkHIyQBqIAZBiMAAahB+IA
    ZByMwAaiAGQcjEAGoQfiAGQbAMahAqIAZBsAxqIAZBiMAAahB+IAZBsAxqEJwBIAZByM8AahAqIAZByM8AaiAGQcjEAGo
    QfiAGQcjPAGoQnAEgBkHQPGogBkGYPGoQVEF/aiEHA0AgB0EBTQRAIAZB0NUAahCTASAGQagGaiAGQdDVAGpBiAYQZxoM
    BgsgBkHQ1QBqEBsgBkHY2wBqIAZByMkAaiAGQcjHAGogBkGIyABqEBcgBkG4FWogBkHIzABqIAZByMgAaiAGQYjJAGoQF
    yAGQdjbAGogBkG4FWoQBiAGQdDVAGogBkHY2wBqEAQCQAJAIAZB0DxqIAdBf2oiBxBXIAZBmDxqIAcQV2tBAWoOAwECAA
    ILIAZB2NsAaiAGQcjJAGogBkGIwABqIAZByMcAaiAGQYjIAGoQFiAGQZgjaiAGQcjMAGogBkHIxABqIAZByMgAaiAGQYj
    JAGoQFiAGQdjbAGogBkGYI2oQBiAGQdDVAGogBkHY2wBqEAQMAQsgBkHY2wBqIAZByMkAaiAGQbAMaiAGQcjHAGogBkGI
    yABqEBYgBkGYI2ogBkHIzABqIAZByM8AaiAGQcjIAGogBkGIyQBqEBYgBkHY2wBqIAZBmCNqEAYgBkHQ1QBqIAZB2NsAa
    hAEDAALAAsgBkGoBmogBkGoA2ogBkEoahAQDAMLBSAGQbAMaiAHahBEIAdBOGohBwwBCwsgBkGoBmogBkG4EmogBkHoAW
    oQEAsFIAZBiD1qIAZBuBVqIAdqIgIQfiACQYADaiIEIAZBiD1qEH4gBkGYI2ogBkGIwwBqEF4gBkGYI2oQMiAEEKYBIAJ
    BgARqIgUQpgEgAkGABWoiAhCmASACEKsBIAQgBkGYI2oQDyAFIAZBmCNqEA8gBSAGQYjDAGoQDyAHQYADaiEHDAELCyAG
    QbgVakG4gMAAEF8gBkGYI2pB8IDAABBfIAZByMQAaiAGQbgVaiAGQZgjahBJIAZBiMAAakGAgMAAEF8gBkGwDGogBkGoB
    moQaiAGQcjPAGogBkGwDGoQaiAGQdDVAGogBkHIzwBqEI4BIAZB2NsAaiAGQcjRAGoiARCOASAGQbgVaiAGQcjPAGoQjg
    EgBkGYI2oQLyAGQcjPAGoQmQEgBkHQ1QBqECIgBkHY2wBqIAZByNMAaiIAEBkgBkHY2wBqEGYgBkHQ1QBqIAZB2NsAahC
    BASAGQdDVAGoQrAEgBkHY2wBqIAAQkgEgBkHY2wBqECIgBkHY2wBqEGYgBkG4FWogARAZIAZB2NsAaiAGQbgVahCBASAG
    QdjbAGoQrAEgBkG4FWogARCSASAGQbgVahAiIAZBmCNqIAZByM8AahCSASAGQZgjaiAAEBkgBkG4FWogBkGYI2oQgQEgB
    kG4FWoQrAEgBkGYI2ogARCSASAGQZgjaiAGQbgVahAZIAZBmCNqEGYgBkHIzwBqIAZB0NUAahAZIAZBmCNqIAZByM8Aah
    CWASAAIAZB2NsAahAZIAAQZiAGQZgjaiAAEJYBIAZBmCNqEKwBIAZByMkAaiAGQZgjahBeIAZByMwAaiAGQZgkaiICEF4
    gBkHIyQBqEDIgBkHIzABqEDIgBkHIzABqEFUgBkHIzABqEKgBIAZByMkAaiAGQcjMAGoQfSAGQcjJAGoQQCAGQZgjaiAG
    QcjJAGoQDyAGQcjJAGoQOiAGQcjJAGoQqAEgAiAGQcjJAGoQDyAGQcjPAGogBkHQ1QBqEJIBIAZByM8AaiAGQZgjahAZI
    AEgBkHY2wBqEJIBIAEgBkGYI2oQGSAAIAZBuBVqEJIBIAAgBkGYI2oQGSAGQQU2AshVIAZBsAxqEJMBIAZBsAxqIAZByM
    8AahAOIAZByM8AaiAGQbAMahBsIAZBsAxqIAZByMQAahA3IAZBsAxqIAZByMQAahA3IAZBsAxqIAZByM8AahAOIAZB0NU
    AaiAGQbAMahBqIAZB0NUAahAaIAZB0NUAaiAGQbAMahAOIAZBmCNqIAZBsAxqIAZBiMAAahAdIAZB2NsAaiAGQZgjahBq
    IAZB2NsAahCTASAGQbgVaiAGQbAMahBqIAZBuBVqEJMBIAZBsAxqIAZB2NsAahBsIAZBsAxqIAZBuBVqEA4gBkGYI2ogB
    kGwDGogBkGIwABqEB0gBkHY2wBqIAZBmCNqEGwgBkHY2wBqEJMBIAZBuBVqIAZBsAxqEGwgBkG4FWoQkwEgBkGwDGogBk
    HY2wBqEGwgBkGwDGogBkG4FWoQDiAGQZgjaiAGQbAMaiAGQYjAAGoQHSAGQdjbAGogBkGYI2oQbCAGQdjbAGoQkwEgBkG
    4FWogBkGwDGoQbCAGQbgVaiAGQcjEAGoQNyAGQbAMaiAGQdjbAGoQbCAGQbAMaiAGQbgVahAOIAZBmCNqIAZBsAxqIAZB
    iMAAahAdIAZB2NsAaiAGQZgjahBsIAZBmCNqIAZB2NsAaiAGQYjAAGoQHSAGQdjbAGogBkGYI2oQbCAGQbgVaiAGQbAMa
    hBsIAZBuBVqIAZByMQAahA3IAZBuBVqIAZByMQAahA3IAZB2NsAaiAGQbgVahAOIAZBuBVqIAZBsAxqEGwgBkG4FWoQkw
    EgBkGwDGogBkHY2wBqEGwgBkGwDGogBkG4FWoQDiAGQbAMaiAGQdDVAGoQDiAGQbAMahCaASAGQagGaiAGQbAMakGIBhB
    nGiAGQZgjahBuIAZBqAZqIAZBmCNqEHtFDQMgBkGoB2ogAhB7RQ0DIAZBqAhqEIYBRQ0DQQAhByAGQagKahCGAUUNAwwE
    CyAFIAdHBEAgBkHIzwBqIAdqIAQgB2otAAA6AAAgB0EBaiEHDAELCyAFIAVBoKTAABA8AAtBAEEAQZCkwAAQPAALQX8hB
    wsgBkHg4QBqJAAgBw8LQQAhByAGQbAMakE4EHIaA0AgB0E4RwRAIAZBsAxqIAdqIAZByM8AaiAHaikDADcDACAHQQhqIQ
    cMAQsLIAZBmCNqIAZBsAxqEIsBIAZBqANqIAlBBnRqIAZBmCNqQcAAEGcaIAMgCmohAyALIQkMAAsACyAHIAlqIQkgAiE
    DDAALAAtBK0EBQaS5wQAoAgAiAEEBIAAbEQAAAAvBKgIIfwF+AkACQAJAAkAgAEH1AU8EQCAAQc3/e08NAiAAQQtqIgBB
    eHEhBkHYtcEAKAIAIgdFDQFBHyEIQQAgBmshBQJAAkAgBkH///8HTQRAIAZBBiAAQQh2ZyIAa0EfcXZBAXEgAEEBdGtBP
    mohCAsgCEECdEHkt8EAaigCACIABEAgBkEAQRkgCEEBdmtBH3EgCEEfRht0IQMDQAJAIABBBGooAgBBeHEiBCAGSQ0AIA
    QgBmsiBCAFTw0AIAAhAiAEIgUNAEEAIQUMAwsgAEEUaigCACIEIAEgBCAAIANBHXZBBHFqQRBqKAIAIgBHGyABIAQbIQE
    gA0EBdCEDIAANAAsgAQRAIAEhAAwCCyACDQILQQAhAkECIAhBH3F0IgBBACAAa3IgB3EiAEUNAyAAQQAgAGtxaEECdEHk
    t8EAaigCACIARQ0DCwNAIAAgAiAAQQRqKAIAQXhxIgEgBk8gASAGayIDIAVJcSIEGyECIAMgBSAEGyEFIAAoAhAiAQR/I
    AEFIABBFGooAgALIgANAAsgAkUNAgtB5LjBACgCACIAIAZPQQAgBSAAIAZrTxsNASACKAIYIQcCQAJAIAIgAigCDCIBRg
    RAIAJBFEEQIAJBFGoiAygCACIBG2ooAgAiAA0BQQAhAQwCCyACKAIIIgAgATYCDCABIAA2AggMAQsgAyACQRBqIAEbIQM
    DQCADIQQgACIBQRRqIgMoAgAiAEUEQCABQRBqIQMgASgCECEACyAADQALIARBADYCAAsCQCAHRQ0AAkAgAiACKAIcQQJ0
    QeS3wQBqIgAoAgBHBEAgB0EQQRQgBygCECACRhtqIAE2AgAgAUUNAgwBCyAAIAE2AgAgAQ0AQdi1wQBB2LXBACgCAEF+I
    AIoAhx3cTYCAAwBCyABIAc2AhggAigCECIABEAgASAANgIQIAAgATYCGAsgAkEUaigCACIARQ0AIAFBFGogADYCACAAIA
    E2AhgLAkAgBUEQTwRAIAIgBkEDcjYCBCACIAZqIgcgBUEBcjYCBCAFIAdqIAU2AgAgBUGAAk8EQEEfIQAgB0IANwIQIAV
    B////B00EQCAFQQYgBUEIdmciAGtBH3F2QQFxIABBAXRrQT5qIQALIAcgADYCHCAAQQJ0QeS3wQBqIQQCQAJAAkACQEHY
    tcEAKAIAIgNBASAAQR9xdCIBcQRAIAQoAgAiA0EEaigCAEF4cSAFRw0BIAMhAAwCC0HYtcEAIAEgA3I2AgAgBCAHNgIAI
    AcgBDYCGAwDCyAFQQBBGSAAQQF2a0EfcSAAQR9GG3QhAQNAIAMgAUEddkEEcWpBEGoiBCgCACIARQ0CIAFBAXQhASAAIQ
    MgAEEEaigCAEF4cSAFRw0ACwsgACgCCCIBIAc2AgwgACAHNgIIIAdBADYCGCAHIAA2AgwgByABNgIIDAQLIAQgBzYCACA
    HIAM2AhgLIAcgBzYCDCAHIAc2AggMAgsgBUEDdiIBQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgNBASABdCIBcQRAIAAoAggM
    AQtB1LXBACABIANyNgIAIAALIQUgACAHNgIIIAUgBzYCDCAHIAA2AgwgByAFNgIIDAELIAIgBSAGaiIAQQNyNgIEIAAgA
    moiACAAKAIEQQFyNgIECyACQQhqDwsCQAJAQdS1wQAoAgAiB0EQIABBC2pBeHEgAEELSRsiBkEDdiIBdiICQQNxRQRAIA
    ZB5LjBACgCAE0NAyACDQFB2LXBACgCACIARQ0DIABBACAAa3FoQQJ0QeS3wQBqKAIAIgFBBGooAgBBeHEgBmshBSABIQM
    DQCABKAIQIgBFBEAgAUEUaigCACIARQ0ECyAAQQRqKAIAQXhxIAZrIgIgBSACIAVJIgIbIQUgACADIAIbIQMgACEBDAAL
    AAsCQCACQX9zQQFxIAFqIgVBA3QiAEHktcEAaigCACIDQQhqIgIoAgAiASAAQdy1wQBqIgBHBEAgASAANgIMIAAgATYCC
    AwBC0HUtcEAIAdBfiAFd3E2AgALIAMgBUEDdCIAQQNyNgIEIAAgA2oiACAAKAIEQQFyNgIEIAIPCwJAQQIgAXQiAEEAIA
    BrciACIAF0cSIAQQAgAGtxaCIBQQN0IgBB5LXBAGooAgAiA0EIaiIEKAIAIgIgAEHctcEAaiIARwRAIAIgADYCDCAAIAI
    2AggMAQtB1LXBACAHQX4gAXdxNgIACyADIAZBA3I2AgQgAyAGaiIFIAFBA3QiACAGayIHQQFyNgIEIAAgA2ogBzYCAEHk
    uMEAKAIAIgAEQCAAQQN2IgJBA3RB3LXBAGohAEHsuMEAKAIAIQgCf0HUtcEAKAIAIgFBASACQR9xdCICcQRAIAAoAggMA
    QtB1LXBACABIAJyNgIAIAALIQMgACAINgIIIAMgCDYCDCAIIAA2AgwgCCADNgIIC0HsuMEAIAU2AgBB5LjBACAHNgIAIA
    QPCyADKAIYIQcCQAJAIAMgAygCDCIBRgRAIANBFEEQIANBFGoiASgCACICG2ooAgAiAA0BQQAhAQwCCyADKAIIIgAgATY
    CDCABIAA2AggMAQsgASADQRBqIAIbIQIDQCACIQQgACIBQRRqIgIoAgAiAEUEQCABQRBqIQIgASgCECEACyAADQALIARB
    ADYCAAsgB0UNAyADIAMoAhxBAnRB5LfBAGoiACgCAEcEQCAHQRBBFCAHKAIQIANGG2ogATYCACABRQ0EDAMLIAAgATYCA
    CABDQJB2LXBAEHYtcEAKAIAQX4gAygCHHdxNgIADAMLAkACQAJAAkACQEHkuMEAKAIAIgEgBkkEQEHouMEAKAIAIgAgBk
    sNA0EAIQUgBkGvgARqIgJBEHZAACIAQX9GDQYgAEEQdCIDRQ0GQfS4wQAgAkGAgHxxIgVB9LjBACgCAGoiAjYCAEH4uME
    AQfi4wQAoAgAiACACIAAgAksbNgIAQfC4wQAoAgAiBEUNAUH8uMEAIQADQCAAKAIAIgEgACgCBCICaiADRg0DIAAoAggi
    AA0ACwwEC0HsuMEAKAIAIQMCfyABIAZrIgJBD00EQEHsuMEAQQA2AgBB5LjBAEEANgIAIAMgAUEDcjYCBCABIANqIgJBB
    GohACACKAIEQQFyDAELQeS4wQAgAjYCAEHsuMEAIAMgBmoiADYCACAAIAJBAXI2AgQgASADaiACNgIAIANBBGohACAGQQ
    NyCyEGIAAgBjYCACADQQhqDwtBkLnBACgCACIAQQAgACADTRtFBEBBkLnBACADNgIAC0GUucEAQf8fNgIAQYC5wQAgBTY
    CAEH8uMEAIAM2AgBB6LXBAEHctcEANgIAQfC1wQBB5LXBADYCAEHktcEAQdy1wQA2AgBB+LXBAEHstcEANgIAQey1wQBB
    5LXBADYCAEGAtsEAQfS1wQA2AgBB9LXBAEHstcEANgIAQYi2wQBB/LXBADYCAEH8tcEAQfS1wQA2AgBBkLbBAEGEtsEAN
    gIAQYS2wQBB/LXBADYCAEGYtsEAQYy2wQA2AgBBjLbBAEGEtsEANgIAQaC2wQBBlLbBADYCAEGUtsEAQYy2wQA2AgBBiL
    nBAEEANgIAQai2wQBBnLbBADYCAEGctsEAQZS2wQA2AgBBpLbBAEGctsEANgIAQbC2wQBBpLbBADYCAEGstsEAQaS2wQA
    2AgBBuLbBAEGstsEANgIAQbS2wQBBrLbBADYCAEHAtsEAQbS2wQA2AgBBvLbBAEG0tsEANgIAQci2wQBBvLbBADYCAEHE
    tsEAQby2wQA2AgBB0LbBAEHEtsEANgIAQcy2wQBBxLbBADYCAEHYtsEAQcy2wQA2AgBB1LbBAEHMtsEANgIAQeC2wQBB1
    LbBADYCAEHctsEAQdS2wQA2AgBB6LbBAEHctsEANgIAQfC2wQBB5LbBADYCAEHktsEAQdy2wQA2AgBB+LbBAEHstsEANg
    IAQey2wQBB5LbBADYCAEGAt8EAQfS2wQA2AgBB9LbBAEHstsEANgIAQYi3wQBB/LbBADYCAEH8tsEAQfS2wQA2AgBBkLf
    BAEGEt8EANgIAQYS3wQBB/LbBADYCAEGYt8EAQYy3wQA2AgBBjLfBAEGEt8EANgIAQaC3wQBBlLfBADYCAEGUt8EAQYy3
    wQA2AgBBqLfBAEGct8EANgIAQZy3wQBBlLfBADYCAEGwt8EAQaS3wQA2AgBBpLfBAEGct8EANgIAQbi3wQBBrLfBADYCA
    EGst8EAQaS3wQA2AgBBwLfBAEG0t8EANgIAQbS3wQBBrLfBADYCAEHIt8EAQby3wQA2AgBBvLfBAEG0t8EANgIAQdC3wQ
    BBxLfBADYCAEHEt8EAQby3wQA2AgBB2LfBAEHMt8EANgIAQcy3wQBBxLfBADYCAEHgt8EAQdS3wQA2AgBB1LfBAEHMt8E
    ANgIAQfC4wQAgAzYCAEHct8EAQdS3wQA2AgBB6LjBACAFQVhqIgA2AgAgAyAAQQFyNgIEIAAgA2pBKDYCBEGMucEAQYCA
    gAE2AgAMAwsgAEEMaigCACADIARNciABIARLcg0BIAAgAiAFajYCBEHwuMEAQfC4wQAoAgAiA0EPakF4cSIBQXhqNgIAQ
    ei4wQBB6LjBACgCACAFaiICIAMgAWtqQQhqIgA2AgAgAUF8aiAAQQFyNgIAIAIgA2pBKDYCBEGMucEAQYCAgAE2AgAMAg
    tB6LjBACAAIAZrIgI2AgBB8LjBAEHwuMEAKAIAIgEgBmoiADYCACAAIAJBAXI2AgQgASAGQQNyNgIEIAFBCGohBQwCC0G
    QucEAQZC5wQAoAgAiACADIAAgA0kbNgIAIAMgBWohAUH8uMEAIQACQANAIAEgACgCAEcEQCAAKAIIIgANAQwCCwsgAEEM
    aigCAA0AIAAgAzYCACAAIAAoAgQgBWo2AgQgAyAGQQNyNgIEIAMgBmohBCABIANrIAZrIQYCQAJAIAFB8LjBACgCAEcEQ
    EHsuMEAKAIAIAFGDQEgAUEEaigCACIAQQNxQQFGBEAgASAAQXhxIgAQFSAAIAZqIQYgACABaiEBCyABIAEoAgRBfnE2Ag
    QgBCAGQQFyNgIEIAQgBmogBjYCACAGQYACTwRAQR8hBSAEQgA3AhAgBkH///8HTQRAIAZBBiAGQQh2ZyIAa0EfcXZBAXE
    gAEEBdGtBPmohBQsgBCAFNgIcIAVBAnRB5LfBAGohAQJAAkACQAJAQdi1wQAoAgAiAkEBIAVBH3F0IgBxBEAgASgCACIC
    QQRqKAIAQXhxIAZHDQEgAiEFDAILQdi1wQAgACACcjYCACABIAQ2AgAgBCABNgIYDAMLIAZBAEEZIAVBAXZrQR9xIAVBH
    0YbdCEBA0AgAiABQR12QQRxakEQaiIAKAIAIgVFDQIgAUEBdCEBIAUiAkEEaigCAEF4cSAGRw0ACwsgBSgCCCIAIAQ2Ag
    wgBSAENgIIIARBADYCGCAEIAU2AgwgBCAANgIIDAULIAAgBDYCACAEIAI2AhgLIAQgBDYCDCAEIAQ2AggMAwsgBkEDdiI
    CQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgFBASACdCICcQRAIAAoAggMAQtB1LXBACABIAJyNgIAIAALIQUgACAENgIIIAUg
    BDYCDCAEIAA2AgwgBCAFNgIIDAILQfC4wQAgBDYCAEHouMEAQei4wQAoAgAgBmoiADYCACAEIABBAXI2AgQMAQtB7LjBA
    CAENgIAQeS4wQBB5LjBACgCACAGaiIANgIAIAQgAEEBcjYCBCAAIARqIAA2AgALIANBCGoPC0H8uMEAIQADQAJAIAAoAg
    AiAiAETQRAIAIgACgCBGoiAiAESw0BCyAAKAIIIQAMAQsLQfC4wQAgAzYCAEHouMEAIAVBWGoiADYCACADIABBAXI2AgQ
    gACADakEoNgIEQYy5wQBBgICAATYCACAEIAJBYGpBeHFBeGoiACAAIARBEGpJGyIBQRs2AgRB/LjBACkCACEJIAFBEGpB
    hLnBACkCADcCACABIAk3AghBgLnBACAFNgIAQfy4wQAgAzYCAEGEucEAIAFBCGo2AgBBiLnBAEEANgIAIAFBHGohAANAI
    ABBBzYCACACIABBBGoiAEsNAAsgASAERg0AIAEgASgCBEF+cTYCBCAEIAEgBGsiBUEBcjYCBCABIAU2AgAgBUGAAk8EQE
    EfIQAgBEIANwIQIAVB////B00EQCAFQQYgBUEIdmciAGtBH3F2QQFxIABBAXRrQT5qIQALIARBHGogADYCACAAQQJ0QeS
    3wQBqIQMCQAJAAkACQEHYtcEAKAIAIgFBASAAQR9xdCICcQRAIAMoAgAiAkEEaigCAEF4cSAFRw0BIAIhAAwCC0HYtcEA
    IAEgAnI2AgAgAyAENgIAIARBGGogAzYCAAwDCyAFQQBBGSAAQQF2a0EfcSAAQR9GG3QhAQNAIAIgAUEddkEEcWpBEGoiA
    ygCACIARQ0CIAFBAXQhASAAIQIgAEEEaigCAEF4cSAFRw0ACwsgACgCCCICIAQ2AgwgACAENgIIIARBGGpBADYCACAEIA
    A2AgwgBCACNgIIDAMLIAMgBDYCACAEQRhqIAI2AgALIAQgBDYCDCAEIAQ2AggMAQsgBUEDdiICQQN0Qdy1wQBqIQACf0H
    UtcEAKAIAIgFBASACdCICcQRAIAAoAggMAQtB1LXBACABIAJyNgIAIAALIQEgACAENgIIIAEgBDYCDCAEIAA2AgwgBCAB
    NgIIC0EAIQVB6LjBACgCACIAIAZNDQBB6LjBACAAIAZrIgI2AgBB8LjBAEHwuMEAKAIAIgEgBmoiADYCACAAIAJBAXI2A
    gQgASAGQQNyNgIEIAFBCGoPCyAFDwsgASAHNgIYIAMoAhAiAARAIAEgADYCECAAIAE2AhgLIANBFGooAgAiAEUNACABQR
    RqIAA2AgAgACABNgIYCwJAIAVBEE8EQCADIAZBA3I2AgQgAyAGaiIEIAVBAXI2AgQgBCAFaiAFNgIAQeS4wQAoAgAiAAR
    AIABBA3YiAkEDdEHctcEAaiEAQey4wQAoAgAhBwJ/QdS1wQAoAgAiAUEBIAJBH3F0IgJxBEAgACgCCAwBC0HUtcEAIAEg
    AnI2AgAgAAshAiAAIAc2AgggAiAHNgIMIAcgADYCDCAHIAI2AggLQey4wQAgBDYCAEHkuMEAIAU2AgAMAQsgAyAFIAZqI
    gBBA3I2AgQgACADaiIAIAAoAgRBAXI2AgQLIANBCGoLtA8BA38jAEGAC2siAiQAIAJBCGoQSyACQcgBakE4EHIaIAJBAT
    YCgAIgAkGIAmpBOBByGiACQQE2AsACIAJByAJqQTgQchogAkEBNgKAAyACQYgDakE4EHIaIAJBATYCwAMgAkHIA2pBOBB
    yGiACQQE2AoAEIAJBiARqQQEQigEgAkHIBGpBOBByGiACQQE2AoAFIAJBiAVqQTgQchogAkEBNgLABSACQcgFaiABEIUB
    IAJBiAZqQTgQchogAkEBNgLABiACQcgGakE4EHIaIAJBATYCgAcgAkGIB2pBOBByGiACQQE2AsAHIAJByAdqQTgQchogA
    kEBNgKACCACQcgFahBYIQMgAkHICWpB4ITAABBfIAJBiApqIAJByAlqEIsBIAJByAFqIAJBiApqEKUBIAJByAlqQZiFwA
    AQXyACQYgKaiACQcgJahCLASACQYgCaiACQYgKahClASACQcgFahADIAJByAVqQQsQUiACQYgGaiACQcgFahClASACQYg
    GaiACQYgEahB4IAJBiAZqEEQgAkGIBmogAkHIBWoQSCACQYgFaiACQcgBahClASACQYgFaiACQYgGahBIIAJBiAZqIAJB
    iARqEHggAkGIBmoQRCACQYgGaiACQYgCahBIIAJBiAZqEEEgAkGIBmoQRCACQYgDaiACQYgGahClASACQcgDaiACQcgFa
    hClASACQcgDaiACQYgDahBIIAJByAdqIAJBiANqEKUBIAJByAdqEAMgAkHIBmogAkGIBWoQpQEgAkHIBmoQAyACQYgGai
    ACQcgBahClASACQYgGaiACQcgGahBIIAJByAdqIAJBiAZqEHggAkHIB2oQRCACQcgHaiACQYgDahBIIAJByAZqIAJBiAV
    qEEggAkGIBmogAkGIAmoQpQEgAkGIBmogAkHIBmoQSCACQcgHaiACQYgGahB4IAJByAdqEEQgAkGIBmogAkHIB2oQpQEg
    AkGIBmogAkGIBWoQSCACQYgGaiACQYgHahBcIQQgAkGIBWogAkGIBmoQpQEgAkGIBWogAkGIB2oQNCACQYgFaiACQcgHa
    hBIIAJBiANqIAJBiAVqEEggAkHIA2ogAkGIBWoQSCACQcgFaiABEEggAkHIBmogAkGIBWoQpQEgAkHIBmoQAyACQYgFai
    ACQcgGahClASACQYgFaiACQcgFahBIIAJByAVqIAJBiAZqEKUBIAJByAVqQQsQUiACQcgJakHQhcAAEF8gAkGICmogAkH
    ICWoQiwEgAkHIAmogAkGICmoQpQEgAkHIAmogAkGIB2oQSCACQYgDaiACQcgDakEBIARrIgEQeSACQcgGaiACQYgFaiAB
    EHkgAkGIBmogAkHIBWogARB5IAJBiAdqIAJByAJqIAEQeSACQYgKaiACQYgGaiACQYgHahAjIAJByARqIAJBiApqEKUBI
    AJByARqIAJByAZqEEggAkHIBGoQWCEBIAJBiAZqIAJByARqEKUBIAJBiAZqEEEgAkGIBmoQRCACQcgEaiACQYgGaiABIA
    NzEHkgAkGICmpBiIbAABBfIAJBiAhqIAJBiApqEIsBQTghAQNAIAFBoAVGRQRAIAJBiAhqIAJBiANqEEggAkHICWogAUG
    IhsAAahBfIAFBOGohASACQYgKaiACQcgJahCLASACQYgGaiACQYgKahClASACQYgIaiACQYgGahB4IAJBiAhqEEQMAQsL
    IAJByAhqIAJBiANqEIUBIAJByAlqQaiLwAAQXyACQYgKaiACQcgJahCLASACQYgGaiACQYgKahClASACQcgIaiACQYgGa
    hB4IAJByAhqEERBACEBA0AgAUH4A0ZFBEAgAkHICGogAkGIA2oQSCACQcgJaiABQeCLwABqEF8gAUE4aiEBIAJBiApqIA
    JByAlqEIsBIAJBiAZqIAJBiApqEKUBIAJByAhqIAJBiAZqEHggAkHICGoQRAwBCwsgAkGICmpB2I/AABBfIAJBiAlqIAJ
    BiApqEIsBQQAhAQNAIAFByAZGBEACQCACQcgJaiACQYgDahCFASACQcgKakHYlsAAEF8gAkGICmogAkHICmoQiwEgAkGI
    BmogAkGICmoQpQEgAkHICWogAkGIBmoQeCACQcgJahBEQQAhAQNAIAFBkAZGDQEgAkHICWogAkGIA2oQSCACQcgKaiABQ
    ZCXwABqEF8gAUE4aiEBIAJBiApqIAJByApqEIsBIAJBiAZqIAJBiApqEKUBIAJByAlqIAJBiAZqEHggAkHICWoQRAwACw
    ALBSACQYgJaiACQYgDahBIIAJByAlqIAFBkJDAAGoQXyABQThqIQEgAkGICmogAkHICWoQiwEgAkGIBmogAkGICmoQpQE
    gAkGICWogAkGIBmoQeCACQYgJahBEDAELCyACQYgJaiACQcgEahBIIAJBiAZqIAJBiAhqEKUBIAJBiAZqIAJByAlqEEgg
    AkEIaiACQYgGahClASACQYgGaiACQYgJahClASACQYgGaiACQcgIahBIIAJByABqIAJBiAZqEKUBIAJBiAZqIAJByAhqE
    KUBIAJBiAZqIAJByAlqEEggAkGIAWogAkGIBmoQpQEgACACQQhqQcABEGcaIAJBgAtqJAALzQ0CE38IfiMAQYADayIBJA
    AgADQCOCIUIBR+QoCAgBBaBEAgABASCyABQeABakHoABByGiABQcgBaiAAKQMAIhggGEI/hyIZIBggGRAxIAEgASkDyAE
    iFEL//////////wODNwPYASABQdABaikDACIXQgaGIBRCOoiEIRUgF0I6iCEaIABBCGoiCyEFIAAhBkEBIQcDQCAHQQZP
    BEAgAEEYaiEMIABBKGohCyAAQRBqIQcgACkDMCEYQQQhBkEAIQkgAUGgAWohDUEDIQpBAiEIQQchBQJAAkADQCAFQQpLD
    QIgBiAIIAYgCEsbIQ4gBiAKIAYgCksbQQN0QWhqIQ8gAUGYAWogBUEDdCIQIABqQVBqKQMAIhQgFEI/hyAYIBhCP4ciGR
    AxIAVBAWoiEUEBdiESIA0pAwAhFyABKQOYASEUIAshAyAHIQQgBUF7aiITIQICQANAIAIgDkcEQCACQQdGDQIgAUGIAWo
    gBCkDACIWIBZCP4cgAykDACIWIBZCP4cQMSABKQOIASIWIBR8IhQgFlStIAFBkAFqKQMAIBd8fCEXIANBeGohAyAEQQhq
    IQQgAkEBaiECDAELCyABQdgBaiAQaiAUQgGGIhYgFXwiFUL//////////wODNwMAIAFB+ABqIAAgE0EDdGopAwAiGyAbQ
    j+HIBggGRAxIBUgFlStIBdCAYYgFEI/iIQgGnx8IhRCOochGiAUQgaGIBVCOoiEIRkgBUECaiEFIAFBgAFqKQMAIRcgAS
    kDeCEUIAshAyAJIQIDQCACIA9GBEAgAUHYAGogACASQQN0aikDACIVIBVCP4ciFiAVIBYQMSABQdgBaiARQQN0aiAUQgG
    GIhYgGXwiFSABKQNYfCIZQv//////////A4M3AwAgGSAVVK0gAUHgAGopAwAgFSAWVK0gF0IBhiAUQj+IhCAafHx8fCIU
    QjqHIRogFEIGhiAZQjqIhCEVIApBAmohCiAJQRBqIQkgCEECaiEIIAZBAWohBiAHQRBqIQcMAwsgAkEgRg0DIAFB6ABqI
    AIgDGopAwAiFSAVQj+HIAMpAwAiFSAVQj+HEDEgASkDaCIVIBR8IhQgFVStIAFB8ABqKQMAIBd8fCEXIANBeGohAyACQQ
    hqIQIMAAsACwtBB0EHQbSewAAQPAALQQdBB0HEnsAAEDwACyABQagBaiAAKQMoIhQgFEI/hyAYIBhCP4ciFBAxIAEgFSA
    BKQOoASIVQgGGIhl8IhdC//////////8DgzcDsAIgAUG4AWogGCAUIBggFBAxIAEgFyAZVK0gAUGwAWopAwBCAYYgFUI/
    iIQgGnx8IhhCBoYgF0I6iIQiFyABKQO4AXwiFEL//////////wODNwO4AiABIBQgF1StIAFBwAFqKQMAIBhCOod8fEIGh
    iAUQjqIhDcDwAIgAUHIAmogAUHYAWoQBSAAIAFByAJqEGsgAEECNgI4IAFBgANqJAAPCyABQcgAaiAAIAdBA3QiDGopAw
    AiFCAUQj+HIBggGRAxIAdBAWoiDUEBdiEOIAFB0ABqKQMAIRcgASkDSCEUIAghAiAGIQMgCiEEIAshCQNAIAJFBEAgAUH
    YAWogDGogFEIBhiIWIBV8IhVC//////////8DgzcDACABQShqIAAgDUEDdCIMaikDACIbIBtCP4cgGCAZEDEgFSAWVK0g
    F0IBhiAUQj+IhCAafHwiFEI6hyEaIBRCBoYgFUI6iIQhFiAHQQJqIQkgAUEwaikDACEXQQAhAiABKQMoIRQgBSEDIAshB
    ANAIAIgCGpFBEAgAUEIaiAAIA5BA3RqKQMAIhUgFUI/hyIbIBUgGxAxIAFB2AFqIAxqIBRCAYYiGyAWfCIVIAEpAwh8Ih
    ZC//////////8DgzcDACAWIBVUrSABQRBqKQMAIBUgG1StIBdCAYYgFEI/iIQgGnx8fHwiFEI6hyEaIBRCBoYgFkI6iIQ
    hFSAFQRBqIQUgCEEBaiEIIAZBEGohBiAKQQJqIQogCSEHDAQLIAIgB2oiDUEGTQRAIAFBGGogBCkDACIVIBVCP4cgAykD
    ACIVIBVCP4cQMSABKQMYIhUgFHwiFCAVVK0gAUEgaikDACAXfHwhFyADQXhqIQMgAkF/aiECIARBCGohBAwBCwsgDUEHQ
    aSewAAQPAALIARBBk0EQCABQThqIAkpAwAiFiAWQj+HIAMpAwAiFiAWQj+HEDEgASkDOCIWIBR8IhQgFlStIAFBQGspAw
    AgF3x8IRcgAkF/aiECIANBeGohAyAEQX9qIQQgCUEIaiEJDAELCwsgBEEHQZSewAAQPAAL7wwBBH8jAEHADWsiAiQAAkA
    gACgCgAYiA0EBRwRAIAEoAoAGIgRBAUYNAQJAAkACQAJAIARBA00EQCADQX5xQQJGDQEgAiAAEI4BIAJBgAJqEC8gAkGA
    BGoQLyACQYAGahAvIAJBgAhqIAAQjgEgAkGACmoQLyACIAEQGSACQYAIaiAAQYACaiIFEJYBIAJBgAhqEKwBIAJBgAJqI
    AJBgAhqEJIBIAJBgAJqIAEQGSACQYAIaiAFEJIBIAJBgAhqIABBgARqIgMQlgEgAkGACGoQrAEgAkGABmogAkGACGoQkg
    EgBEECRg0CIAJBwAxqIAFBgAVqEF4gAkGABmogAkHADGoQogEMAwsgAiAAEI4BIAJBgAJqEC8gAkGABGoQLyACQYAGahA
    vIAIgARAZAkACQCAEQQRGIgQNACAAKAKABkEERg0AIAJBgARqIABBgAJqEJIBIAJBgARqIAFBgAJqEBkMAQsgAkHADGpB
    OBByGiACQQE2AvgMIAJBgA1qQTgQchogAkG4DWpBATYCACACQYAIakE4EHIaIAJBATYCuAggAkHACGpBOBByGiACQfgIa
    kEBNgIAIAJBgApqIABBgANqIgMQXiACQYAIaiACQYAKahCQASACQYAKaiABQYADaiIFEF4gAkGACGogAkGACmoQDyACQc
    AMahCpASAERQRAIAJBgApqIAMQXiACQcAMaiACQYAKahCQASACQYAKaiABQYACahBeIAJBwAxqIAJBgApqEA8LIAAoAoA
    GQQRHBEAgAkGACmogAEGAAmoQXiACQcAMaiACQYAKahCQASACQYAKaiAFEF4gAkHADGogAkGACmoQDwsgAkGABGogAkHA
    DGogAkGACGoQoQEgAkGABGoQZgsgAkGACGogABCOASACQYAKaiABEI4BIAJBgAhqIABBgAJqIgQQlgEgAkGACGoQrAEgA
    kGACmogAUGAAmoiBRCWASACQYAKahCsASACQYACaiACQYAIahCSASACQYACaiACQYAKahAZIAJBgAhqIAQQkgEgAkGACG
    ogAEGABGoiAxCWASACQYAIahCsASACQYAKaiAFEJIBIAJBgApqIAFBgARqIgUQlgEgAkGACmoQrAEgAkGABmogAkGACGo
    QkgEgAkGABmogAkGACmoQGSACQYAIaiACEJIBIAJBgAhqECsgAkGACmogAkGABGoQkgEgAkGACmoQKyACQYACaiACQYAI
    ahCWASAEIAJBgAJqEJIBIAQgAkGACmoQlgEgAkGABmogAkGACmoQlgEgAkGABGogAkGACGoQlgEgAkGACGogABCSASACQ
    YAIaiADEJYBIAJBgAhqEKwBIAJBgApqIAEQkgEgAkGACmogBRCWASACQYAKahCsASACQYAIaiACQYAKahAZIAJBgARqIA
    JBgAhqEJYBIAJBgAhqIAMQkgEgAkGACGogBRAZIAJBgApqIAJBgAhqEJIBIAJBgApqECsgAyACQYAEahCSASADIAJBgAp
    qEJYBIAJBgAZqIAJBgApqEJYBIAJBgAhqEGYgBCACQYAIahCWAQwDCyAAIAEQBgwECyACQcAMaiABQYAFahBeIAJBgAxq
    IAJBwAxqQcAAEGcaIAJBgAZqIAJBgAxqEKMBCyACQYAGahBmIAJBgAhqIAIQkgEgAkGACGoQKyACQYACaiACQYAIahCWA
    SAFIAJBgAJqEJIBIAJBgARqIAJBgAhqEJIBIAJBgAhqIAAQkgEgAkGACGogAxCWASACQYAIahCsASACQYAKaiABEJIBIA
    JBgApqIAFBgARqEJYBIAJBgApqEKwBIAJBgAhqIAJBgApqEBkgAkGABGogAkGACGoQlgEgAkGACGogAxCSAQJAIARBAkc
    EQCACQcAMaiABQYAFahBeIAJBgAhqIAJBwAxqEKIBDAELIAJBwAxqIAFBgAVqEF4gAkGADGogAkHADGpBwAAQZxogAkGA
    CGogAkGADGoQowELIAJBgAhqEGYgAkGACmogAkGACGoQkgEgAkGACmoQKyADIAJBgARqEJIBIAMgAkGACmoQlgEgAkGAB
    mogAkGACmoQlgEgAkGACGoQZiAFIAJBgAhqEJYBCyACQYAGahCsASACQYAGahBmIAAgAhCSASAAIAJBgAZqEJYBIABBBT
    YCgAYgABCZAQwBCyAAIAEQbAsgAkHADWokAAuaCQIPfwt+IwBBwAJrIgIkACACQeAAakGgp8AAEF8gAEE4EHIhDCACQZg
    BakHwABByGiACQZACakEwEHIaIAwQdCACIAEpAwAiFEL9//P/z///+QF+Qv//////////A4MiETcDiAIgAkHQAGogEUIA
    IAIpA2AiGCAYQj+HIhoQMSAUIAIpA1AiEXwiFiARVK0gAkHYAGopAwAgFEI/h3x8IhRCOocgASkDCCIRQj+HfCARIBRCB
    oYgFkI6iIQiEXwiEiARVK18IRNBASEDAkADQAJAIANBB0YEQCACQZACaiEJIAJB6ABqIQpBByEEIAJB4ABqIQ0gAkGIAm
    ohDkEGIQ8MAQsgA0EBdiIAQQFqIQUgCiAAayEGIAkgAEEDdCIHayEAIAdBCGohCCACQUBrIANBA3QiBCACQeAAamopAwA
    iFiAWQj+HIhQgAikDiAIiESARQj+HEDEgAkHIAGopAwAgEiAVfCIRIBJUrSATIBd8fHwgESACKQNAfCITIBFUrXwhEiAD
    QQFqIQcDQCADIAVNBEAgAkGIAmogBGogE0L9//P/z///+QF+Qv//////////A4MiETcDACACQTBqIBFCACAYIBoQMSACQ
    SBqIBFCACAWIBQQMSACQZgBaiADQQR0aiIAIAJBKGopAwAiGzcDCCAAIAIpAyAiGTcDACACKQMwIhEgE3wiFiARVK0gAk
    E4aikDACASfHwiFEI6hyABIAdBA3RqKQMAIhFCP4d8IBEgFEIGhiAWQjqIhCIRfCISIBFUrXwhEyAVIBl8IhUgGVStIBc
    gG3x8IRcgCUEIaiEJIApBAWohCiAHIQMMAwsgBkEGSw0DIAJBEGogAkHgAGogCGopAwAgAkHgAGogAGopAwB9IhEgEUI/
    hyACQYgCaiAAaikDACACQYgCaiAIaikDAH0iESARQj+HEDEgAikDECIRIBN8IhMgEVStIAJBGGopAwAgEnx8IRIgBUEBa
    iEFIABBeGohACAGQX9qIQYgCEEIaiEIDAALAAsLA0ACQCAEQQ1HBEAgDyAEQQF2IgBrIQUgDiAAQQN0IgtrIRAgDSALay
    EIIBMgF3wgEiAVfCITIBJUrXwhEiAEQQFqIQdBMCEAIAkhBiAKIQMDQCAAIAtGDQIgBUEGTQRAIAIgAyALaikDACAAIAh
    qKQMAfSIRIBFCP4cgACAQaikDACAGIAtqKQMAfSIRIBFCP4cQMSACKQMAIhEgE3wiEyARVK0gAkEIaikDACASfHwhEiAF
    QX9qIQUgBkEIaiEGIANBCGohAyAAQXhqIQAMAQsLIAVBB0HknsAAEDwACyAMIBJC//////////8DgzcDMCACQcACaiQAD
    wsgBEEDdCAMakFIaiATQv//////////A4M3AwAgEkI6hyABIAdBA3RqKQMAIhFCP4d8IBEgEkIGhiATQjqIhCIRfCISIB
    FUrXwhEyAXIARBBHQgAmpBOGoiAEEIaikDAH0gFSAAKQMAIhFUrX0hFyAOQQhqIQ4gDUEIaiENIA9BAWohDyAVIBF9IRU
    gByEEDAALAAsgBkEHQdSewAAQPAAL+QkBBH8jAEGACWsiAiQAIAJBgAhqIAAQXiACIAJBgAhqEF4gAkGACGogAEGAAWoi
    BBBeIAJBgAFqIAJBgAhqEF4gAkGACGogARBeIAIgAkGACGoQDyACQYAIaiABQYABaiIFEF4gAkGAAWogAkGACGoQDyAAK
    AKABiEDAkACQCABKAKABkECRwRAIANBAkYNASACQYAIaiAAQYAFahBeIAJBgAJqIAJBgAhqEF4gAkGACGogAUGABWoQXi
    ACQYACaiACQYAIahAPDAILIANBAkYEQCACQYAIaiAAQYAFahBeIAJBgAdqIAJBgAhqQcAAEGcaIAJBgAZqIAJBgAdqEIU
    BIAJBgAhqIAFBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGABmogAkGAB2oQSCACQYAIakE4EHIaIAJBATYCuAggAkHA
    CGpBOBByIAJB+AhqQQE2AgAgAkGACGogAkGABmoQpQEQsgEgAkGAAmogAkGACGpBgAEQZxoMAgsgAkGACGogAEGABWoQX
    iACQYACaiACQYAIahBeIAJBgAhqIAFBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGAAmogAkGAB2oQoAEMAQsgAkGACG
    ogAUGABWoQXiACQYACaiACQYAIahBeIAJBgAhqIABBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGAAmogAkGAB2oQoAE
    LIAJBgAhqIAAQXiACQYADaiACQYAIahBeIAJBgAhqIAEQXiACQYAEaiACQYAIahBeIAJBgAhqIAQQXiACQYADaiACQYAI
    ahCVASACQYADahCoASACQYAIaiAFEF4gAkGABGogAkGACGoQlQEgAkGABGoQqAEgAkGABWogAkGAA2oQXiACQYAFaiACQ
    YAEahAPIAJBgAZqIAIQXiACQYAGaiACQYABahCVASACQYAGahA6IAJBgAVqIAJBgAZqEJUBIAJBgAhqIAAQXiACQYADai
    ACQYAIahCQASACQYAIaiAAQYAFaiIDEF4gAkGAA2ogAkGACGoQlQEgAkGAA2oQqAEgAkGACGogARBeIAJBgARqIAJBgAh
    qEJABIAJBgAhqIAFBgAVqIgEQXiACQYAEaiACQYAIahCVASACQYAEahCoASACQYAHaiACQYADahBeIAJBgAdqIAJBgARq
    EA8gAkGABmogAhCQASACQYAGaiACQYACahCVASACQYAGahA6IAJBgAdqIAJBgAZqEJUBIAJBgAhqIAQQXiACQYADaiACQ
    YAIahCQASACQYAIaiADEF4gAkGAA2ogAkGACGoQlQEgAkGAA2oQqAEgAkGACGogBRBeIAJBgARqIAJBgAhqEJABIAJBgA
    hqIAEQXiACQYAEaiACQYAIahCVASACQYAEahCoASACQYAIaiACQYADahBeIAJBgAhqIAJBgARqEA8gAkGABmogAkGAAWo
    QkAEgAkGABmogAkGAAmoQlQEgAkGABmoQOiACQYAIaiACQYAGahCVASACQYABahBVIAIgAkGAAWoQlQEgACACIAJBgAVq
    EKEBIAJBgAJqEFUgAkGAAmoQqAEgAEGAA2ogAkGAAmoQkAEgAEGAAmoQqQEgAkGACGoQqAEgAkGACGoQVSAAQYAEaiIBI
    AJBgAhqIAJBgAdqEKEBIAAQrAEgARCsASAAQQQ2AoAGIAJBgAlqJAALnwgBB38jAEGgC2siASQAIAFBCGpBoKfAABBfIA
    FBCGpBARCeAQNAIAJBMEYEQCABIAEpAzhCAYc3AzggAUEIakEBEJ4BIAFBCGpBARA7QQAhAiABQYABakE4EHIaIAFB4Ap
    qQTgQchogAUGACWpBOBByGiABQQE2ArgBIAFBwAFqQTgQciEEIAFB+AFqQQE2AgAgAUGAAmpBOBByGiABQbgCakEBNgIA
    IAFBwAJqQTgQchogAUH4AmpBATYCACABQYADakE4EHIaIAFBuANqQQE2AgAgAUHAA2pBOBByGiABQfgDakEBNgIAIAFBg
    ARqQTgQchogAUG4BGpBATYCACABQcAEakE4EHIaIAFB+ARqQQE2AgAgAUGABWpBOBByGiABQbgFakEBNgIAIAFBwAVqQT
    gQchogAUH4BWpBATYCACABQYAGakE4EHIaIAFBuAZqQQE2AgAgAUHABmpBOBByGiABQfgGakEBNgIAIAFBgAdqQTgQcho
    gAUG4B2pBATYCACABQcAHakE4EHIaIAFB+AdqQQE2AgAgAUGACGogAUHgCmpBOBBnGiABQbgIakEBNgIAIAFBwAhqIAFB
    gAlqQTgQZxogAUH4CGpBATYCACABQYAJakHnABByGiABQegJaiAAEIUBIAFB6AlqEEQgAUGoCmogAUEIahBfIAFBqApqE
    EQgAUGoCmoQKUEDaiIFQQJ2IgNBAWohBgJAAkACQAJAAkACQANAAkAgAiAGRgRAIAFBgAFqEGkgBCABQegJahClASABQe
    AKakE4EHIaIAFBATYCmAtBgHkhAgwBCyABQagKaiABQagKakEEEIwBIgcQngEgAUGoCmoQRCACQecARg0CIAFBgAlqIAJ
    qIAc6AAAgAUGoCmpBBBA7IAJBAWohAgwBCwsDQCACBEAgAUHgCmogAUGAAWogAmoiBEHAB2oQpQEgBEGACGoiBCABQeAK
    ahClASAEIAFB6AlqEEggAkFAayECDAELCyAFQZwDTw0BIAFBgAlqIANqLAAAIgJBD0sNAiABQUBrIAFBgAFqIAJBBnRqE
    IUBIANBf2ohAgNAIAJBf0YNBiABQUBrEAMgAUFAaxADIAFBQGsQAyABQUBrEAMgAkHmAEsNBCABQYAJaiACai0AACIDQQ
    9LDQUgAUFAayABQYABaiADQQZ0ahBIIAJBf2ohAgwACwALQecAQecAQYSjwAAQPAALIANB5wBBlKPAABA8AAsgAkEQQaS
    jwAAQPAALIAJB5wBBtKPAABA8AAsgA0EYdEEYdUEQQcSjwAAQPAALIAFBQGsQEiAAIAFBQGsQpQEgAUGgC2okAAUgAUEI
    aiACaiIDIANBCGopAwBCOYZCgICAgICAgIACgyADKQMAQgGHhDcDACACQQhqIQIMAQsLC8EHAhJ/BX4jAEGQAmsiBCQAI
    ABB8AAQciEPIARBMGpB4AEQchogBEEwaiEAAkADQCADQThGBEACQCAPIAQpAzAiGEL//////////wODNwMAIAFBCGohCS
    ACQQhqIQogAiEMIAEhDUF4IRBBASEGIBghFSAEQThqKQMAIhkhFwNAAkAgF0IGhiAVQjqIhCEWIBdCOochFyAGQQdGBEA
    gAUEIaiEMIAJBCGohDUEHIQBBBiEKDAELIAsgBkEBdiIFayEAIAwgBUEDdCIIayERIA0gCGshEiAEQTBqIAZBBHRqIgVB
    CGopAwAgGXwgBSkDACIVIBh8IhggFVStfCIZIBd8IBYgGHwiFSAYVK18IRcgCEFQaiETIAggEGohFCAGQQFqIQ5BACEDI
    AkhByAKIQUDQCADIBRGBEAgDyAGQQN0aiAVQv//////////A4M3AwAgDEEIaiEMIA1BCGohDSALQQFqIQsgEEF4aiEQIA
    4hBgwDCyADIBNGDQYgAEEGSw0DIARBEGogAyARaikDACAFIAhqKQMAfSIWIBZCP4cgByAIaikDACADIBJqKQMAfSIWIBZ
    CP4cQMSAEKQMQIhYgFXwiFSAWVK0gBEEYaikDACAXfHwhFyAAQX9qIQAgB0EIaiEHIAVBCGohBSADQXhqIQMMAAsACwsD
    QAJAIABBDUcEQCAKIABBAXYiBWshByACIAVBA3QiCWshCCABIAlrIQsgGSAAQQR0IARqQUBqIgVBCGopAwB9IBggBSkDA
    CIVVK19IhkgF3wgGCAVfSIYIBZ8IhcgGFStfCEVIABBAWohBkEwIQMgDCEFIA0hDgNAIAMgCUYNAiAHQQZNBEAgBCADIA
    hqKQMAIAkgDmopAwB9IhYgFkI/hyAFIAlqKQMAIAMgC2opAwB9IhYgFkI/hxAxIAQpAwAiFiAXfCIXIBZUrSAEQQhqKQM
    AIBV8fCEVIAdBf2ohByAFQQhqIQUgDkEIaiEOIANBeGohAwwBCwsgB0EHQYSewAAQPAALIA8gFjcDaCAEQZACaiQADwsg
    DyAAQQN0aiAXQv//////////A4M3AwAgFUIGhiAXQjqIhCEWIAJBCGohAiABQQhqIQEgCkEBaiEKIBVCOochFyAGIQAMA
    AsACwUgBEEgaiACIANqKQMAIhUgFUI/hyABIANqKQMAIhUgFUI/hxAxIAAgBEEoaikDADcDCCAAIAQpAyA3AwAgAEEQai
    EAIANBCGohAwwBCwsgAEEHQfSdwAAQPAALQQdBB0HkncAAEDwAC8sIAQV/IABBeGoiASAAQXxqKAIAIgNBeHEiAGohAgJ
    AAkAgA0EBcQ0AIANBA3FFDQEgASgCACIDIABqIQAgASADayIBQey4wQAoAgBGBEAgAigCBEEDcUEDRw0BQeS4wQAgADYC
    ACACIAIoAgRBfnE2AgQgASAAQQFyNgIEIAAgAWogADYCAA8LIAEgAxAVCwJAIAJBBGoiBCgCACIDQQJxBEAgBCADQX5xN
    gIAIAEgAEEBcjYCBCAAIAFqIAA2AgAMAQsCQCACQfC4wQAoAgBHBEBB7LjBACgCACACRg0BIAIgA0F4cSICEBUgASAAIA
    JqIgBBAXI2AgQgACABaiAANgIAIAFB7LjBACgCAEcNAkHkuMEAIAA2AgAPC0HwuMEAIAE2AgBB6LjBAEHouMEAKAIAIAB
    qIgA2AgAgASAAQQFyNgIEQey4wQAoAgAgAUYEQEHkuMEAQQA2AgBB7LjBAEEANgIAC0GMucEAKAIAIgIgAE8NAkHwuMEA
    KAIAIgBFDQICQEHouMEAKAIAIgNBKUkNAEH8uMEAIQEDQCABKAIAIgQgAE0EQCAEIAEoAgRqIABLDQILIAEoAggiAQ0AC
    wtBlLnBAAJ/Qf8fQYS5wQAoAgAiAEUNABpBACEBA0AgAUEBaiEBIAAoAggiAA0ACyABQf8fIAFB/x9LGws2AgAgAyACTQ
    0CQYy5wQBBfzYCAA8LQey4wQAgATYCAEHkuMEAQeS4wQAoAgAgAGoiADYCACABIABBAXI2AgQgACABaiAANgIADwtBlLn
    BAAJ/AkAgAEGAAk8EQEEfIQIgAUIANwIQIABB////B00EQCAAQQYgAEEIdmciAmtBH3F2QQFxIAJBAXRrQT5qIQILIAFB
    HGogAjYCACACQQJ0QeS3wQBqIQMCQAJAAkACQAJAQdi1wQAoAgAiBEEBIAJBH3F0IgVxBEAgAygCACIDQQRqKAIAQXhxI
    ABHDQEgAyECDAILQdi1wQAgBCAFcjYCACADIAE2AgAMAwsgAEEAQRkgAkEBdmtBH3EgAkEfRht0IQQDQCADIARBHXZBBH
    FqQRBqIgUoAgAiAkUNAiAEQQF0IQQgAiEDIAJBBGooAgBBeHEgAEcNAAsLIAIoAggiACABNgIMIAIgATYCCCABQRhqQQA
    2AgAgASACNgIMIAEgADYCCAwCCyAFIAE2AgALIAFBGGogAzYCACABIAE2AgwgASABNgIIC0GUucEAQZS5wQAoAgBBf2oi
    ADYCACAADQNBhLnBACgCACIADQFB/x8MAgsgAEEDdiICQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgNBASACdCICcQRAIAAoA
    ggMAQtB1LXBACACIANyNgIAIAALIQIgACABNgIIIAIgATYCDCABIAA2AgwgASACNgIIDwtBACEBA0AgAUEBaiEBIAAoAg
    giAA0ACyABQf8fIAFB/x9LGws2AgALC9AHAgp/An4jAEEwayIIJABBJyECAkAgADUCACIMQpDOAFQEQCAMIQ0MAQsDQCA
    IQQlqIAJqIgBBfGogDEKQzgCAIg1C8LF/fiAMfKciA0H//wNxQeQAbiIEQQF0QeaowABqLwAAOwAAIABBfmogBEGcf2wg
    A2pB//8DcUEBdEHmqMAAai8AADsAACACQXxqIQIgDEL/wdcvViANIQwNAAsLIA2nIgBB4wBKBEAgAkF+aiICIAhBCWpqI
    A2nIgNB//8DcUHkAG4iAEGcf2wgA2pB//8DcUEBdEHmqMAAai8AADsAAAsCQCAAQQpOBEAgAkF+aiIFIAhBCWpqIABBAX
    RB5qjAAGovAAA7AAAMAQsgAkF/aiIFIAhBCWpqIABBMGo6AAALQScgBWshA0EBIQJBK0GAgMQAIAEoAgAiAEEBcSIGGyE
    EIABBHXRBH3VB9KrAAHEhByAIQQlqIAVqIQUCQCABKAIIQQFHBEAgASAEIAcQUw0BIAEoAhggBSADIAFBHGooAgAoAgwR
    BQAhAgwBCyABQQxqKAIAIgkgAyAGaiIGTQRAIAEgBCAHEFMNASABKAIYIAUgAyABQRxqKAIAKAIMEQUAIQIMAQsCQAJAA
    kACQCAAQQhxBEAgASgCBCEKIAFBMDYCBCABLQAgIQsgAUEBOgAgIAEgBCAHEFMNBUEAIQIgCSAGayIAIQRBASABLQAgIg
    cgB0EDRhtBA3FBAWsOAwIBAgMLQQAhAiAJIAZrIgAhCQJAAkACQEEBIAEtACAiBiAGQQNGG0EDcUEBaw4DAQABAgsgAEE
    BdiECIABBAWpBAXYhCQwBC0EAIQkgACECCyACQQFqIQIDQCACQX9qIgJFDQQgASgCGCABKAIEIAEoAhwoAhARAwBFDQAL
    QQEhAgwECyAAQQF2IQIgAEEBakEBdiEEDAELQQAhBCAAIQILIAJBAWohAgJAA0AgAkF/aiICRQ0BIAEoAhggASgCBCABK
    AIcKAIQEQMARQ0AC0EBIQIMAgsgASgCBCEHQQEhAiABKAIYIAUgAyABKAIcKAIMEQUADQEgBEEBaiEAIAEoAhwhAyABKA
    IYIQQDQCAAQX9qIgAEQCAEIAcgAygCEBEDAEUNAQwDCwsgASALOgAgIAEgCjYCBEEAIQIMAQsgASgCBCEGQQEhAiABIAQ
    gBxBTDQAgASgCGCAFIAMgASgCHCgCDBEFAA0AIAlBAWohACABKAIcIQMgASgCGCEBA0AgAEF/aiIARQRAQQAhAgwCCyAB
    IAYgAygCEBEDAEUNAAsLIAhBMGokACACC7gGAQV/IwBBgAhrIgIkACACIAAQXiACIAEQDyACQYABaiAAQYABaiIDEF4gA
    kGAAWogAUGAAWoiBRAPIAJBgAJqIABBgAJqIgQQXiACQYACaiABQYACaiIGEA8gAkGAA2ogABBeIAJBgANqIAMQlQEgAk
    GAA2oQqAEgAkGABGogARBeIAJBgARqIAUQlQEgAkGABGoQqAEgAkGAA2ogAkGABGoQDyACQYAEaiACEJABIAJBgARqIAJ
    BgAFqEJUBIAJBgANqIAJBgARqEH0gAkGAA2oQqAEgAkGABGogAxCQASACQYAEaiAEEJUBIAJBgARqEKgBIAJBgAVqIAUQ
    XiACQYAFaiAGEJUBIAJBgAVqEKgBIAJBgARqIAJBgAVqEA8gAkGABWogAkGAAWoQkAEgAkGABWogAkGAAmoQlQEgAkGAB
    GogAkGABWoQfSACQYAEahCoASACQYAFaiAAEJABIAJBgAVqIAQQlQEgAkGABWoQqAEgAkGABmogARBeIAJBgAZqIAYQlQ
    EgAkGABmoQqAEgAkGABWogAkGABmoQDyACQYAGaiACEJABIAJBgAZqIAJBgAJqEJUBIAJBgAZqIAJBgAVqELUBIAJBgAZ
    qEKgBIAJBgAVqIAIQkAEgAkGABWogAhCVASACIAJBgAVqEJUBIAIQqAEgAkGAAmpBDBCfASACQYACahBVIAJBgAJqEKgB
    IAJBgAdqIAJBgAFqEF4gAkGAB2ogAkGAAmoQlQEgAkGAB2oQqAEgAkGAAWogAkGAAmoQfSACQYABahCoASACQYAGakEME
    J8BIAJBgAZqEFUgAkGABmoQqAEgAkGABWogAkGABmoQkAEgAkGABWogAkGABGoQDyACQYACaiACQYADahCQASACQYACai
    ACQYABahAPIAJBgAVqIAJBgAJqELUBIAJBgAZqIAIQDyACQYABaiACQYAHahAPIAJBgAZqIAJBgAFqEJUBIAIgAkGAA2o
    QDyACQYAHaiACQYAEahAPIAJBgAdqIAIQlQEgACACQYAFahCQASAAEKgBIAMgAkGABmoQkAEgAxCoASAEIAJBgAdqEJAB
    IAQQqAEgAkGACGokAAv2BQEFfyMAQYAEayICJAAgAiAAEIUBIAIgARBIIAJBQGsgAEFAayIDEIUBIAJBQGsgAUFAayIFE
    EggAkGAAWogAEGAAWoiBBCFASACQYABaiABQYABaiIGEEggAkHAAWogABCFASACQcABaiADEHggAkHAAWoQRCACQYACai
    ABEIUBIAJBgAJqIAUQeCACQYACahBEIAJBwAFqIAJBgAJqEEggAkGAAmogAhClASACQYACaiACQUBrEHggAkHAAWogAkG
    AAmoQgAEgAkHAAWoQRCACQYACaiADEKUBIAJBgAJqIAQQeCACQYACahBEIAJBwAJqIAUQhQEgAkHAAmogBhB4IAJBwAJq
    EEQgAkGAAmogAkHAAmoQSCACQcACaiACQUBrEKUBIAJBwAJqIAJBgAFqEHggAkGAAmogAkHAAmoQgAEgAkGAAmoQRCACQ
    cACaiAAEKUBIAJBwAJqIAQQeCACQcACahBEIAJBgANqIAEQhQEgAkGAA2ogBhB4IAJBgANqEEQgAkHAAmogAkGAA2oQSC
    ACQYADaiACEKUBIAJBgANqIAJBgAFqEHggAkGAA2ogAkHAAmoQswEgAkGAA2oQRCACQcACaiACEKUBIAJBwAJqIAIQeCA
    CIAJBwAJqEHggAhBEIAJBgAFqQQwQUiACQcADaiACQUBrEIUBIAJBwANqIAJBgAFqEHggAkHAA2oQRCACQUBrIAJBgAFq
    EIABIAJBQGsQRCACQYADakEMEFIgAkHAAmogAkGAA2oQpQEgAkHAAmogAkGAAmoQSCACQYABaiACQcABahClASACQYABa
    iACQUBrEEggAkHAAmogAkGAAWoQswEgAkGAA2ogAhBIIAJBQGsgAkHAA2oQSCACQYADaiACQUBrEHggAiACQcABahBIIA
    JBwANqIAJBgAJqEEggAkHAA2ogAhB4IAAgAkHAAmoQpQEgABBEIAMgAkGAA2oQpQEgAxBEIAQgAkHAA2oQpQEgBBBEIAJ
    BgARqJAALxQUBBH8jAEHwEmsiACQAIAAQOEF/IQEgABCIAUUEQCAAQYADakE4EHIaIABBuANqQTgQchogAEG4A2ogAEGA
    A2oQVCAAQfAKakG4gMAAEF8gAEHwDWpB8IDAABBfIABB8ANqIABB8ApqIABB8A1qEEkgAEHwBGpBOBByGiAAQQE2AqgFI
    ABBsAVqQTgQchogAEHoBWpBATYCACAAQfAFakE4EHIaIABBATYCqAYgAEGwBmpBOBByGiAAQegGakEBNgIAIABB8AZqQT
    gQchogAEEBNgKoByAAQbAHakE4EHIaIABB6AdqQQE2AgBBf2ohAyAAQfAHahAqIABB8AdqIAAQfiAAQfAKahAqIABB8Ap
    qIABB8AdqEH4gAEHwDWoQKiAAQfANaiAAQfAHahB+IABB8A1qEJwBAkACQAJAA0AgAiEBIANBAkkNAyAAQfAKaiAAQfAE
    aiAAQfAFaiAAQfAGahAlIAFBxABNBEAgAEHwEGogAEHwBGogAEHwBWogAEHwBmoQRiABQQh0QdCrwABqIABB8BBqEJIBI
    AFBAWohAgJAAkAgAEG4A2ogA0F/aiIDEFcgAEGAA2ogAxBXa0EBag4DAQMAAwsgAEHwCmogAEHwB2ogAEHwBGogAEHwBW
    ogAEHwBmoQHiABQcMASw0DIABB8BBqIABB8ARqIABB8AVqIABB8AZqEEYgAkEIdEHQq8AAaiAAQfAQahCSASABQQJqIQI
    MAgsgAEHwCmogAEHwDWogAEHwBGogAEHwBWogAEHwBmoQHiABQcMASw0DIABB8BBqIABB8ARqIABB8AVqIABB8AZqEEYg
    AkEIdEHQq8AAaiAAQfAQahCSASABQQJqIQIMAQsLIAFBxQBBvIHAABA8AAtBxQBBxQBBzIHAABA8AAtBxQBBxQBB3IHAA
    BA8AAtBACEBCyAAQfASaiQAIAEL8gQBBH8jAEGADGsiAiQAIAIgABCOASACQYACahAvIAJBgARqIABBgAJqIgMQjgEgAk
    GABmoQLyACQYAIaiAAEI4BIAJBgApqIAEQjgEgAiABEBkgAkGABGogAUGAAmoiBBAZIAJBgAhqIAMQlgEgAkGACmogBBC
    WASACQYAIahCsASACQYAKahCsASACQYACaiACQYAIahCSASACQYACaiACQYAKahAZIAJBgAhqIAMQkgEgAkGACGogAEGA
    BGoiBRCWASACQYAKaiAEEJIBIAJBgApqIAFBgARqIgQQlgEgAkGACGoQrAEgAkGACmoQrAEgAkGABmogAkGACGoQkgEgA
    kGABmogAkGACmoQGSACQYAIaiACEJIBIAJBgAhqECsgAkGACmogAkGABGoQkgEgAkGACmoQKyACQYACaiACQYAIahCWAS
    ADIAJBgAJqEJIBIAMgAkGACmoQlgEgAkGABmogAkGACmoQlgEgAkGABGogAkGACGoQlgEgAkGACGogABCSASACQYAIaiA
    FEJYBIAJBgAhqEKwBIAJBgApqIAEQkgEgAkGACmogBBCWASACQYAKahCsASACQYAIaiACQYAKahAZIAJBgARqIAJBgAhq
    EJYBIAJBgAhqIAUQkgEgAkGACGogBBAZIAJBgApqIAJBgAhqEJIBIAJBgApqECsgBSACQYAEahCSASAFIAJBgApqEJYBI
    AJBgAZqIAJBgApqEJYBIAJBgAhqEGYgAyACQYAIahCWASACQYAGahCsASACQYAGahBmIAAgAhCSASAAIAJBgAZqEJYBIA
    BBBTYCgAYgABCZASACQYAMaiQAC68EAQV/IwBBkAZrIgIkACAAQUBrIQQCQCABQfgAaigCACABKAI4aqwgAEH4AGooAgA
    iAyAAKAI4IgVqrH5CgICAEFMNACAFQQJOBH8gABASIAAoAngFIAMLQQJIDQAgBBASCyACQaCnwAAQX0EAIQMgAkE4akHw
    ABByGiABQUBrIQUDQCADQThGBEAgAkHwAGohBkEAIQMDQCADQThGRQRAIAMgBmogAiADaikDADcDACADQQhqIQMMAQsLI
    AJBqAFqIAAQXyACQeABaiABEF8gAkGYAmogACABEAggAkGIA2ogBCAFEAggAkGoAWogBBBhIAJBqAFqEEQgAkHgAWogBR
    BhIAJB4AFqEEQgAkH4A2ogAkGoAWogAkHgAWoQCEEAIQMgAkHoBGpB8AAQchoDQCADQfAARkUEQCACQegEaiADaiACQZg
    CaiADaikDADcDACADQQhqIQMMAQsLIAJB6ARqIAJBiANqEGVBACEDA0AgA0HwAEZFBEAgAkGIA2ogA2oiASACQThqIANq
    KQMAIAEpAwB9NwMAIANBCGohAwwBCwsgAkGYAmogAkGIA2oQZSACQZgCahBFIAJB+ANqIAJB6ARqEGQgAkH4A2oQRSACQ
    dgFaiACQZgCahAFIAAgAkHYBWoQayAAQQM2AjggAkHYBWogAkH4A2oQBSAEIAJB2AVqEGsgAEECNgJ4IAJBkAZqJAAFIA
    JBOGogA2pCADcDACADQQhqIQMMAQsLC5QEAQF/IwBB0CJrIgMkACADQcAWakG4gMAAEF8gA0HIHGpB8IDAABBfIANBCGo
    gA0HAFmogA0HIHGoQSSADQYgBakE4EHIaIANBwAFqQTgQchogA0H4AWoQKgJAIAIQhAFFBEAgA0H4BGoQKiADQfgEaiAB
    EH4gA0H4BGoQSiADQfgHahBLIANB+AdqIAIQfyADQfgHahBHIANByBxqIANB+AdqEIUBIANBuAlqIANByBxqEIUBIANBy
    BxqIANBuAhqEIUBIANB+AlqIANByBxqEIUBIANBuApqECogA0G4DWoQYCADQbgKaiADQfgEahB+IANBwBNqECogA0HAE2
    ogA0H4BGoQfiADQcATahCcASADQcABaiADQYgBahBUQX9qIQIDQCACQQFNBEAgA0G4DWoQkwEgACADQbgNakGIBhBnGgw
    DBSADQbgNahAbIANBwBZqIANBuApqIANBuAlqIANB+AlqEBcCQAJAAkAgA0HAAWogAkF/aiICEFcgA0GIAWogAhBXa0EB
    ag4DAQIAAgsgA0HIHGogA0G4CmogA0H4BGogA0G4CWogA0H4CWoQFiADQcAWaiADQcgcahAGDAELIANByBxqIANBuApqI
    ANBwBNqIANBuAlqIANB+AlqEBYgA0HAFmogA0HIHGoQBgsgA0G4DWogA0HAFmoQBAwBCwALAAsgABBgCyADQdAiaiQAC8
    MDARV/A0AgAUHAAUYEQAJAIABBKGohCyAAQRRqKAIAIgwhCCAAQRBqKAIAIg0hAyAAQQxqKAIAIg4hAiAAKAIIIg8hASA
    AQRhqKAIAIhAhCiAAQRxqKAIAIhEhBCAAQSBqKAIAIhIhByAAQSRqKAIAIhMhBgNAIAchCSAEIQcgCiEEIAVBgAJGDQEg
    AiADcSEUIAIgA3MhFSAFIAtqKAIAIAVB9J7AAGooAgAgBEEadyAEQRV3cyAEQQd3cyAGaiAJIARBf3NxIAQgB3FyampqI
    gYgCGohCiAFQQRqIQUgAyEIIAIhAyABIQIgAUEedyABQRN3cyABQQp3cyAUIAEgFXFzaiAGaiEBIAkhBgwACwALBSAAIA
    FqIgNB6ABqIANBzABqKAIAIANBKGooAgAgA0EsaigCACICQRl3IAJBDndzIAJBA3ZzIANB4ABqKAIAIgJBD3cgAkENd3M
    gAkEKdnNqamo2AgAgAUEEaiEBDAELCyAAIAYgE2o2AiQgACAJIBJqNgIgIAAgByARajYCHCAAIAQgEGo2AhggACAIIAxq
    NgIUIAAgAyANajYCECAAIAIgDmo2AgwgACABIA9qNgIIC9YDAgZ/An4jAEHwAGsiASQAIAFBoKfAABBfIAFBOGogARBfI
    AAQRAJAAkACQCABAn8gACgCOCICQRBMBEAgAkF/ahA5DAELIAEpAzAiCEIBfCIHIAhUDQEgACkDMCIIQoCAgICAgICAgH
    9RQQAgB0J/URsNAiABQThqIAggB3+nECghByABIAEpA2ggB0I6hnw3A2ggACABQThqEGIgABBEQQILIgMQLSAAQQhqIQQ
    DQCADRQ0DIAEgASkDCEI5hkKAgICAgICAgAKDIAEpAwBCAYeEIgc3AwAgASAAKQMAIAd9IgdC//////////8DgzcDOEEA
    IQIDQCAHQjqHIQcgAkEoRkUEQCABIAJqIgVBCGoiBiAFQRBqKQMAQjmGQoCAgICAgICAAoMgBikDAEIBh4QiCDcDACABI
    AJqQUBrIAIgBGopAwAgCH0gB3wiB0L//////////wODNwMAIAJBCGohAgwBCwsgASABKQMwQgGHIgg3AzAgASAAKQMwIA
    h9IAd8Igc3A2ggACABQThqIAdCP4enQQFqEE8gA0F/aiEDDAALAAtBoKLAAEEZQbyiwAAQWwALQdCiwABBH0G8osAAEFs
    ACyAAQQE2AjggAUHwAGokAAuhAwEBfyMAQZADayIGJAAgBkEIakHAABByGiAGQcgAakGoAhByGiAGQcgAahBDA0AgAQRA
    IAZByABqQQAQPiABQX9qIQEMAQUCQCACBEAgBkHIAGogAiADEHoLIAQEQCAGQcgAaiAEIAUQegsgBkGIA2pCADcDACAGQ
    YADakIANwMAIAZB+AJqQgA3AwAgBkIANwPwAiAGKAJIIQEgBigCTCECIAZByABqQYABED4DQCAGKAJIQf8DcUHAA0ZFBE
    AgBkHIAGpBABA+DAELCyAGQawBaiABNgIAIAZBqAFqIAI2AgAgBkHIAGoQEUEAIQJBACEBA0AgAUEgRkUEQCAGQfACaiA
    BaiABQXxxIAZqQdAAaigCACACQX9zQRhxdjoAACACQQhqIQIgAUEBaiEBDAELCyAGQcgAahBDQQAhAQNAIAFBIEZFBEAg
    BkEIaiABaiAGQfACaiABai0AADoAACABQQFqIQEMAQsLQQAhAQNAIAFBIEYNASAAIAFqIAZBCGogAWotAAA6AAAgAUEBa
    iEBDAALAAsLCyAGQZADaiQAC6EDAQN/IwBBgAZrIgEkACABIABBgAFqIgMQXiABQYABaiADEF4gAUGAAWoQMiABQYACai
    ABEF4gAUGAAmogAEGAAmoiAhAPIAFBgANqIAIQXiABQYADahAyIAIgAUGAAWoQkAEgAiABQYABahCVASACEKgBIAIQpwE
    gAhCnASACEKgBIAFBgANqQQwQnwEgAUGAA2oQVSABQYADahCoASABQYAEaiABQYADahBeIAFBgARqIAIQDyABQYAFaiAB
    QYABahBeIAFBgAVqIAFBgANqEJUBIAFBgAVqEKgBIAIgAUGAAmoQDyABQYACaiABQYADahCQASABQYACaiABQYADahCVA
    SABQYADaiABQYACahCVASABQYADahCoASABQYABaiABQYADahB9IAFBgAFqEKgBIAFBgAVqIAFBgAFqEA8gAUGABWogAU
    GABGoQlQEgAUGAAmogABCQASABQYACaiABEA8gACABQYABahCQASAAEKgBIAAgAUGAAmoQDyAAEKcBIAAQqAEgAyABQYA
    FahCQASADEKgBIAFBgAZqJAALhQMBBH8CQAJAIAFBgAJPBEAgAEEYaigCACEEAkACQCAAIAAoAgwiAkYEQCAAQRRBECAA
    QRRqIgIoAgAiAxtqKAIAIgENAUEAIQIMAgsgACgCCCIBIAI2AgwgAiABNgIIDAELIAIgAEEQaiADGyEDA0AgAyEFIAEiA
    kEUaiIDKAIAIgFFBEAgAkEQaiEDIAIoAhAhAQsgAQ0ACyAFQQA2AgALIARFDQIgACAAQRxqKAIAQQJ0QeS3wQBqIgEoAg
    BHBEAgBEEQQRQgBCgCECAARhtqIAI2AgAgAkUNAwwCCyABIAI2AgAgAg0BQdi1wQBB2LXBACgCAEF+IAAoAhx3cTYCAA8
    LIABBDGooAgAiAiAAQQhqKAIAIgBHBEAgACACNgIMIAIgADYCCA8LQdS1wQBB1LXBACgCAEF+IAFBA3Z3cTYCAAwBCyAC
    IAQ2AhggACgCECIBBEAgAiABNgIQIAEgAjYCGAsgAEEUaigCACIARQ0AIAJBFGogADYCACAAIAI2AhgLC7MCAQF/IwBBg
    AtrIgUkACAFEC8gBUGAAmoQLyAFQYAEahAvIAVBgAZqQTgQchogBUEBNgK4BiAFQcAGakE4EHIaIAVB+AZqQQE2AgAgBU
    GAB2pBOBByGiAFQQE2ArgHIAVBwAdqQTgQchogBUH4B2pBATYCACAFQYAIakE4EHIaIAVBATYCuAggBUHACGpBOBByGiA
    FQfgIakEBNgIAIAEgAiAFQYAGaiAFQYAHaiAFQYAIahAeIAVBgAhqIAMQoAEgBUGABmogBBCgASAFQYAJaiAFQYAGaiAF
    QYAHahCRASAFIAVBgAlqEJIBIAVBgAlqIAVBgAhqEJsBIAVBgARqIAVBgAlqEJIBIAVBgARqEGYgACAFIAVBgAJqIAVBg
    ARqEHYgAEEDNgKABiAFQYALaiQAC7ECAQF/IwBBgAtrIgQkACAEEC8gBEGAAmoQLyAEQYAEahAvIARBgAZqQTgQchogBE
    EBNgK4BiAEQcAGakE4EHIaIARB+AZqQQE2AgAgBEGAB2pBOBByGiAEQQE2ArgHIARBwAdqQTgQchogBEH4B2pBATYCACA
    EQYAIakE4EHIaIARBATYCuAggBEHACGpBOBByGiAEQfgIakEBNgIAIAEgBEGABmogBEGAB2ogBEGACGoQJSAEQYAIaiAC
    EKABIARBgAZqIAMQoAEgBEGACWogBEGABmogBEGAB2oQkQEgBCAEQYAJahCSASAEQYAJaiAEQYAIahCbASAEQYAEaiAEQ
    YAJahCSASAEQYAEahBmIAAgBCAEQYACaiAEQYAEahB2IABBAzYCgAYgBEGAC2okAAvJAgEDfyMAQcACayIBJAAgASAAQU
    BrIgMQhQEgARADIAFBQGsgAxCFASABQUBrIABBgAFqIgIQSCABQYABaiACEIUBIAFBgAFqEAMgAiABEKUBIAIgARB4IAI
    QRCACEE4gAhBOIAIQRCABQYABakEMEFIgAUHAAWogAUGAAWoQhQEgAUHAAWogAhBIIAFBgAJqIAEQhQEgAUGAAmogAUGA
    AWoQeCABQYACahBEIAIgAUFAaxBIIAFBQGsgAUGAAWoQpQEgAUFAayABQYABahB4IAFBgAFqIAFBQGsQeCABIAFBgAFqE
    IABIAEQRCABQYACaiABEEggAUGAAmogAUHAAWoQeCABQUBrIAAQpQEgAUFAayADEEggACABEKUBIAAQRCAAIAFBQGsQSC
    AAEE4gABBEIAMgAUGAAmoQpQEgAxBEIAFBwAJqJAALrQIBA38jAEGABGsiAiQAIAIgABBeIAJBgAFqIABBgAFqIgMQXiA
    CQYACakE4EHIaIAJBATYCuAIgAkHAAmpBOBByGiACQfgCakEBNgIAIAJBgANqIAMQXiACIAEQDyACQYABaiABQYABaiIE
    EA8gAkGAAmogBBCQASACQYACaiABEJUBIAJBgANqIAAQlQEgAkGAAmoQqAEgAkGAA2oQqAEgAkGAA2ogAkGAAmoQDyACQ
    YACaiACEJABIAJBgAJqEDogAkGAA2ogAkGAAmoQlQEgAkGAA2oQqAEgAkGAAmogAkGAAWoQkAEgAkGAAmoQOiADIAJBgA
    NqEJABIAMgAkGAAmoQlQEgAkGAAWoQVSAAIAJBgAFqEJABIAAgAhCVASAAEKwBIAJBgARqJAALvQIBA38jAEGACGsiASQ
    AIAEgABCOASABQYACaiAAQYAEaiICEI4BIAFBgARqIABBgAJqIgMQjgEgAUGABmoQLyAAECIgAUGABmogABCSASABQYAG
    aiAAEJYBIAAgAUGABmoQlgEgABCsASABELYBIAEQrwEgACABEJYBIAFBgAJqECIgAUGAAmoQZiABQYAGaiABQYACahCSA
    SABQYAGaiABQYACahCWASABQYACaiABQYAGahCWASABQYACahCsASABQYAEahAiIAFBgAZqIAFBgARqEJIBIAFBgAZqIA
    FBgARqEJYBIAFBgARqIAFBgAZqEJYBIAFBgARqEKwBIAMQrgEgAxCvASACELYBIAIQrwEgAyABQYACahCWASACIAFBgAR
    qEJYBIABBBTYCgAYgABCaASABQYAIaiQAC7ICAQN/IwBBgAhrIgEkACAAKAKABkEBRwRAIAEgABCOASABQYACaiAAQYAC
    aiIDEI4BIAFBgARqIABBgARqIgIQjgEgAUGABmogABCOASABECIgAUGAAmogAhAZIAFBgAJqEK8BIAFBgAJqEKwBIAFBg
    ARqECIgAUGABmogAxAZIAFBgAZqEK8BIAIgABCWASACIAMQlgEgAhCsASACECIgACABEJIBIAEgAUGAAmoQlgEgARCsAS
    ABIAFBgARqEJYBIAEgAUGABmoQlgEgARCsASABECsgAUGAAmoQZiABQYAEahBmIAAgAUGAAmoQlgEgAyABQYAEahCSASA
    DIAFBgAZqEJYBIAIgARCWASAAQQRBBSAAKAKABkF+cUECRhs2AoAGIAAQmQELIAFBgAhqJAALigIBAn8jAEHgAWsiAiQA
    IAAQRCACQQhqQTAQchogAkIBNwMAIAJBOGogABBfIAJB8ABqIAEQXyACQagBakE4EHIaIAAQdANAIAJBOGogAkHwAGoQN
    UF/TARAA0ACQCADQQBMDQAgAkHwAGpBARA7IAJBARA7IAJBqAFqIAJBOGoQayACQagBaiACQfAAahBiIAJBqAFqEEQgAk
    E4aiACQagBaiACKQPYAUI/h6dBAWoiARBPIAJBqAFqIAAQayACQagBaiACEGEgAkGoAWoQRCAAIAJBqAFqIAEQTyADQX9
    qIQMMAQsLBSACQQEQLSACQfAAakEBEC0gA0EBaiEDDAELCyACQeABaiQAC54CAQF/IwBBgA1rIgMkACADIAEQaiADEJkB
    IANBiAZqIAIQXyADQYgGahBEIANBwAZqIANBiAZqEF8gA0HABmpBAxAoGiADQcAGahBEIANB+AZqIAMQagJAIANBwAZqE
    FpFBEAgA0HABmoQKUF/aiECA0AgAkEBTQRAIANB+AZqEJoBDAMLIANB+AZqEBoCQAJAIANBwAZqIAJBf2oiAhBXIANBiA
    ZqIAIQV2tBAWoOAwECAAILIANB+AZqIAMQDgwBCyADEJMBIANB+AZqIAMQDiADEJMBDAALAAsgA0H4BmoQsAEgA0H4B2o
    QqQEgA0H4CGoQrQEgA0H4CmoQrQEgA0EBNgL4DAsgACADQfgGakGIBhBnGiADQYANaiQAC5ACAQJ/IwBBgAJrIgUkACAF
    QYABaiAAEF4gAiAFQYABahCQASAFQYABaiAAQYABahBeIAQgBUGAAWoQkAEgBUGAAWogAEGAAmoiBhBeIAUgBUGAAWoQX
    iAFQYABaiAGEF4gAyAFQYABahCQASAFQYABaiABQYABaiIGEF4gBSAFQYABahAPIAVBgAFqIAEQXiADIAVBgAFqEA8gAi
    ADEH0gAhCoASAEIAUQfSAEEKgBIAUgAhCQASACEFUgAhCoASAFQYABaiAGEF4gBSAFQYABahAPIAMgBBCQASAFQYABaiA
    BEF4gAyAFQYABahAPIAMgBRB9IAMQqAEgBBA6IAQQqAEgACABEAsgBUGAAmokAAvkAQECfyMAQcABayIDJAAgAxBLIAAg
    ASACQR91IgQgAnMgBEF/c2pBAm0iAkF/akEfdhBtIAAgAUHAAWogAkEBc0F/akEfdhBtIAAgAUGAA2ogAkECc0F/akEfd
    hBtIAAgAUHABGogAkEDc0F/akEfdhBtIAAgAUGABmogAkEEc0F/akEfdhBtIAAgAUHAB2ogAkEFc0F/akEfdhBtIAAgAU
    GACWogAkEGc0F/akEfdhBtIAAgAUHACmogAkEHc0F/akEfdhBtIAMgABB/IAMQpgEgACADIARBAXEQbSADQcABaiQAC+Q
    BAQJ/IwBBgANrIgMkACADECogACABIAJBH3UiBCACcyAEQX9zakECbSICQX9qQR92EG8gACABQYADaiACQQFzQX9qQR92
    EG8gACABQYAGaiACQQJzQX9qQR92EG8gACABQYAJaiACQQNzQX9qQR92EG8gACABQYAMaiACQQRzQX9qQR92EG8gACABQ
    YAPaiACQQVzQX9qQR92EG8gACABQYASaiACQQZzQX9qQR92EG8gACABQYAVaiACQQdzQX9qQR92EG8gAyAAEH4gAxCcAS
    AAIAMgBEEBcRBvIANBgANqJAALvAEBAn8jAEGwAWsiAiQAIAJBMBByIQIDQCADQTBGBEACQCABQTBqIQEgAkEwaiACEHV
    BACEDA0AgA0EwRg0BIAIgA2ogASADai0AADoAACADQQFqIQMMAAsACwUgAiADaiABIANqLQAAOgAAIANBAWohAwwBCwsg
    AkHwAGogAhB1IABBOBByIgBBATYCOCAAQUBrQTgQciAAQfgAakEBNgIAIAAgAkHwAGoQpQEgAkEwahClASACQbABaiQAC
    9QBAQJ/IwBBgANrIgEkACABIAAQXiABQYABaiAAQYABaiICEF4gAUGAAmogABBeIAFBgAJqIAIQDyABIAIQlQEgAUGAAW
    oQVSABQYABaiAAEJUBIAEQqAEgAUGAAWoQqAEgACABEJABIAAgAUGAAWoQDyABQYABaiABQYACahCQASABQYABahBVIAF
    BgAFqIAFBgAJqEJUBIAFBgAFqEKgBIAFBgAFqEDogACABQYABahCVASABQYACahCnASACIAFBgAJqEJABIAAQrAEgAUGA
    A2okAAvEAQEBfyMAQYADayIDJAAgA0EIaiABEIUBAkAgAkUEQCADQQhqEAcMAQsgA0EIaiACEKUBCyADQcgAakHYo8AAE
    F8gA0GAAWogA0HIAGoQiwEgA0HAAWogA0EIahCFASADQcABahADIANBwAFqIAEQSCAAIAEQhQEgACADQQhqEEggA0GAAm
    ogA0HAAWoQhQEgABBYIQEgA0HAAmogABCFASADQcACahBBIANBwAJqEEQgACADQcACaiABEHkgA0GAA2okAAufAQEBfyM
    AQfAAayICJAAgAiABEF9BACEBIAJBOGpBOBByGiAAEEQCQCAAIAIQNUEASA0AA0AgAkEBEC0gAUEBaiEBIAAgAhA1QX9K
    DQALA0AgAUEATA0BIAJBARA7IAJBOGogABBrIAJBOGogAhBiIAJBOGoQRCAAIAJBOGogAikDaEI/h6dBAWoQTyABQX9qI
    QEMAAsACyACQfAAaiQAC7IBAQF/IwBBgAJrIgQkACAEQYABaiAAEF4gAyAEQYABahCQASAEQYABaiAAQYABahBeIAQgBE
    GAAWoQXiAEQYABaiAAQYACahBeIAIgBEGAAWoQkAEgASAEEJABIAEgAhAPIAMQMiAEEDIgAhAyIAEQpwEgARA6IAEQqAE
    gARBVIAEQqAEgAkEMEJ8BIANBAxCfASACEFUgAhCoASACIAQQfSACEKgBIAAQFCAEQYACaiQAC58BAQJ/IwBBgAJrIgIk
    ACAAIAEQXiAAEDIgAkGIAWpB2KTAABBfIAJBCGpBOBByGiACQQE2AkAgAkHIAGpBOBByIAJBgAFqQQE2AgAgAkHAAWogA
    kGIAWoQiwEgAkEIaiACQcABahClARCyASACQQhqEKgBIAJBCGoQVSACQQhqEKgBIAAgARAPIAAgAkEIahCVASAAEKsBIA
    JBgAJqJAALowEBAX8jAEEwayIGJAAgBkEQaiAAIAEQsQEgBiAGKAIUIgA2AhwgBiAGKAIQIgE2AhggBkEIaiACIAMQsQE
    gBiAGKAIMIgI2AiQgBiAGKAIIIgM2AiAgBiAEIAUQsQEgBiAGKAIEIgQ2AiwgBiAGKAIAIgU2AiggASAAIAMgAiAFIAQQ
    ACAGQShqEKQBIAZBIGoQpAEgBkEYahCkASAGQTBqJAALiAECA38DfiMAQRBrIgIkAAN+IANBOEYEfiACQRBqJAAgBgUgA
    iAAIANqIgQpAwAiBSAFQj+HIAGsIgUgBUI/hxAxIAQgAikDACIHIAZ8IgVC//////////8DgzcDACAFIAdUrSACQQhqKQ
    MAIAZCP4d8fEIGhiAFQjqIhCEGIANBCGohAwwBCwsLhAECA38BfiMAQUBqIgEkACABQQhqIAAQXyABQQhqEEQgAUE4aiE
    CQQYhA0HcAiEAAn8DQEEAIANBAEgNARogAikDACIEUARAIAJBeGohAiAAQUZqIQAgA0F/aiEDDAELCwN/IARQBH8gAAUg
    AEEBaiEAIARCAn8hBAwBCwsLIAFBQGskAAuHAQEBfyMAQcABayIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByGiAAQfgAa
    kEBNgIAIAEQUCABQYgBakE4EHIaIABBgAFqIAFBgAEQZxogAEGAAmpBOBByGiAAQbgCakEBNgIAIABBvAJqIAFBhAFqQT
    wQZxogAEH4AmpBATYCACABQcABaiQAC48BAQJ/IwBBgAJrIgEkACAAEKwBIAEgABBeIAFBgAFqQTgQchogAUEBNgK4ASA
    BQcABakE4EHIaIAFB+AFqQQE2AgAgASAAQYABaiICEJUBIAEQOiABQYABaiABEJABIAFBgAFqIAIQlQEgAiABEJABIAIg
    ABCVASAAIAFBgAFqEJABIAAQrAEgAUGAAmokAAt9AgF/An4jAEGAAWsiASQAIAFBCGogABCFASABQQhqEBIgAUHIAGogA
    UEIahCDAUEIIQADQCAAQThGRQRAIAFByABqIABqKQMAIAKEIQIgAEEIaiEADAELCyABKQNIIQMgAUGAAWokACACQn98IA
    NCAYVCf3yDQjqIp0EBcQuJAQIBfwJ+IAAgACkDMCABQT9xrSIDhiAAKQMoQTogAWtBP3GtIgSHhDcDMCAAQShqIQFBBiE
    CA0AgAkEBTQRAIAAgACkDACADhkL//////////wODNwMABSABIAEpAwAgA4ZC//////////8DgyABQXhqIgEpAwAgBIeE
    NwMAIAJBf2ohAgwBCwsLiQECAX8CfiAAIAApA2BBOiABQTpwIgFrrSIEhyAAKQNoIAGtIgOGhDcDaCAAQeAAaiEBQQ0hA
    gNAIAJBAU0EQCAAIAApAwAgA4ZC//////////8DgzcDAAUgASABKQMAIAOGQv//////////A4MgAUF4aiIBKQMAIASHhD
    cDACACQX9qIQIMAQsLC3EBAX8jAEFAaiIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByGiAAQfgAakEBNgIAIAFBCGpBOBB
    yGiAAQYABakE4EHIaIABBuAFqQQE2AgAgAEG8AWogAUEEakE8EGcaIABB+AFqQQE2AgAgAUFAayQAC4EBAgF/AX4gAEHw
    ABByIQADQCACQThGBEACQCAAIAEpAzAiA0I6hzcDOCAAIANC//////////8DgzcDMCAAQUBrIQBBACECA0AgAkEwRg0BI
    AAgAmpCADcDACACQQhqIQIMAAsACwUgACACaiABIAJqKQMANwMAIAJBCGohAgwBCwsLdQECfiAAIANCIIgiBSABQiCIIg
    Z+IAIgA358IAEgBH58IANC/////w+DIgIgAUL/////D4MiAX4iA0IgiCACIAZ+fCICQiCIfCABIAV+IAJC/////w+DfCI
    BQiCIfDcDCCAAIANC/////w+DIAFCIIaENwMAC3YBAn8jAEHAAWsiASQAIAEgABCFASABQUBrIAAQhQEgAUGAAWogAEFA
    ayICEIUBIAEgAhB4IAFBQGsgABB4IAFBQGsQRCACIAFBQGsQSCABQYABahBBIAAgAUGAAWoQeCABEEQgABBEIAAgARBII
    AFBwAFqJAALkwEBAn9B0LXBAEHQtcEAKAIAQQFqNgIAAkACQEGYucEAKAIAQQFGBEBBnLnBAEGcucEAKAIAQQFqIgA2Ag
    AgAEECSw0CQaC5wQAoAgAiAUF/Sg0BDAILQZi5wQBCgYCAgBA3AwBBoLnBACgCACIAQQBIDQFBoLnBACAANgIAAAtBoLn
    BACABNgIAIABBAUsNAAALAAtnAQJ/IwBBQGoiAiQAIAAQRCACIAAQhQECQCABRQRAIAAQBwwBCyAAIAEQpQELQQAhAQNA
    IAFBAUsgA3JFBEAgABADIAFBAEchAyABIAFFaiEBDAELCyAAIAIQSCAAEBIgAkFAayQAC18CAX8EfkIBIQNBMCECA38gA
    kF4RgR/IARCAYYgA3ynQX9qBSABIAJqKQMAIgUgACACaikDACIGfUI6hyADgyAEhCEEIAJBeGohAiAFIAaFQn98QjqHIA
    ODIQMMAQsLC2ACAX8EfkIBIQNB6AAhAgN/IAJBeEYEfyAEQgGGIAN8p0F/agUgASACaikDACIFIAAgAmopAwAiBn1COoc
    gA4MgBIQhBCACQXhqIQIgBSAGhUJ/fEI6hyADgyEDDAELCwt3AQN/IwBBgAJrIgIkACACIAEQXiACQYABaiABEF4gAhAy
    IAJBgAFqIAIQDyAAIAJBgAFqEJcBIABBgAJqIgMgAkGAAWoQlwEgAEGABGoiBCACQYABahCXASADIAEQogEgBCACEKIBI
    ABBBTYCgAYgAkGAAmokAAt6AQF/IwBB4ANrIgEkACABQYABakHApcAAEF8gAUG4AWpB+KXAABBfIAEgAUGAAWogAUG4AW
    oQSSABQfACakGwpsAAEF8gAUGoA2pB6KbAABBfIAFB8AFqIAFB8AJqIAFBqANqEEkgACABIAFB8AFqED8gAUHgA2okAAt
    nACAAQQF2IAByIgBBAnYgAHIiAEEEdiAAciIAQQh2IAByIgBBEHYgAHIiACAAQQF2QdWq1aoFcWsiAEECdkGz5syZA3Eg
    AEGz5syZA3FqIgBBBHYgAGpBj568+ABxQYGChAhsQRh2C2cBAn8jAEGAAWsiASQAIAEgABCFASABQUBrQTgQchogAUEBN
    gJ4IAEgAEFAayICEHggARBBIAFBQGsgARClASABQUBrIAIQeCACIAEQpQEgAiAAEHggACABQUBrEKUBIAFBgAFqJAALaA
    IBfwJ+IAFBP3GtIQNBOiABa0E/ca0hBEEAIQEDQCABQTBGBEAgACAAKQMwIAOHNwMwBSAAIAFqIgIgAkEIaikDACAEhkL
    //////////wODIAIpAwAgA4eENwMAIAFBCGohAQwBCwsLbAEBfyMAQTBrIgMkACADIAE2AgQgAyAANgIAIANBHGpBAjYC
    ACADQSxqQQI2AgAgA0ICNwIMIANBlKjAADYCCCADQQI2AiQgAyADQSBqNgIYIAMgAzYCKCADIANBBGo2AiAgA0EIaiACE
    HAAC2wBAX8jAEEwayIDJAAgAyABNgIEIAMgADYCACADQRxqQQI2AgAgA0EsakECNgIAIANCAjcCDCADQbCqwAA2AgggA0
    ECNgIkIAMgA0EgajYCGCADIANBBGo2AiggAyADNgIgIANBCGogAhBwAAtlAQJ/IAAgACgCACICQQhqIgM2AgAgACACQQN
    2QTxxakEoaiICIAFB/wFxIAIoAgBBCHRyNgIAAkACQCADRQRAIABBADYCACAAIAAoAgRBAWo2AgQMAQsgA0H/A3ENAQsg
    ABARCwtnAQF/IwBBgAJrIgMkACAAECogACABEJABIABBgAFqIgEgAhCQASAAQYACahCwASAAEKgBIAMgABAmIANBgAFqI
    AEQXiADQYABahAyIANBgAFqIAMQe0UEQCAAEJgBCyADQYACaiQAC18BAn8jAEGAAWsiASQAIAAQqAEgASAAEIUBIAFBQG
    sgAEFAayICEIUBIAEQAyABQUBrEAMgASABQUBrEHggAUEAEDQgACABEEggARBBIAEQRCACIAEQSCABQYABaiQAC10BAn8
    jAEFAaiIBJAAgAUEIakGgp8AAEF8gAUEIaiAAKAI4QX9qEDkiAhAtIAAgAUEIahBjIABBASACQQFqQR9xdCICNgI4IAJB
    gICAEE4EQCAAEBILIAFBQGskAAtfAgF/AX4jAEHwAGsiASQAIAFBoKfAABBfIAApAwAhAiABQThqIAAQXyAAQQEQOyABQ
    ThqIAEQYSABQThqEEQgAUE4akEBEDsgACABQThqIAJCAoGnEE8gAUHwAGokAAt7AQJ/IABBKGohAgNAIAFBgAJGBEAgAE
    LnzKfQ1tDrs7t/NwIIIABCADcCACAAQSBqQquzj/yRo7Pw2wA3AgAgAEEYakL/pLmIxZHagpt/NwIAIABBEGpC8ua746O
    n/aelfzcCAAUgASACakEANgIAIAFBBGohAQwBCwsLaQICfwF+IAAgACkDACIDQv//////////A4M3AwBBCCEBA0AgA0I6
    hyEDIAFBMEYEQCAAIAApAzAgA3w3AzAFIAAgAWoiAiACKQMAIAN8IgNC//////////8DgzcDACABQQhqIQEMAQsLC2oCA
    n8BfiAAIAApAwAiA0L//////////wODNwMAQQghAQNAIANCOochAyABQegARgRAIAAgACkDaCADfDcDaAUgACABaiICIA
    IpAwAgA3wiA0L//////////wODNwMAIAFBCGohAQwBCwsLWQEBfyMAQYADayIEJAAgBCADEF4gBBBAIARBgAFqIAEQXiA
    EQYACaiACEF4gBEGAAWogBBAPIARBgAJqIAQQDyAAIARBgAFqIARBgAJqEJEBIARBgANqJAALWQECfyMAQUBqIgEkAAJA
    IAAQhAENACABQQEQigEgAEGAAWoiAiABEFkNACACQQAQNCAAIAIQSCAAEBIgAEFAayIAIAIQSCAAEBIgAiABEKUBCyABQ
    UBrJAALVwEBfyMAQbABayICJAAgATQCOCAANAI4fkKAgIAQWQRAIAAQEgsgAkEIaiAAIAEQCCACQfgAaiACQQhqEAUgAC
    ACQfgAahBrIABBAjYCOCACQbABaiQAC08BAn8jAEFAaiIDJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByIABB+ABqQQE2AgA
    gAyABEIsBIAAgAxClASADIAIQiwEgAxClASADQUBrJAALWQECfyMAQYABayIBJAACQCAAEIgBDQAgARBQIABBgAJqIgIg
    ARB7DQAgAhBAIAAgAhAPIAAQqwEgAEGAAWoiACACEA8gABCrASACIAEQkAELIAFBgAFqJAALSwEBfyMAQUBqIgEkACAAQ
    TgQciIAQQE2AjggAUEBEIoBIABBQGsgAUHAABBnGiAAQYABakE4EHIaIABBuAFqQQE2AgAgAUFAayQAC0sBAn8jAEHwAG
    siASQAIAAQd0UEQCABQaCnwAAQXyABQThqIAAQgwEgASABQThqEGIgARBEIAFBOGogARA1IQILIAFB8ABqJAAgAgtPAQF
    /IwBBgAFrIgIkACAAIAEQhQEgABADIAJByABqQdikwAAQXyACQQhqIAJByABqEIsBIAAgARBIIAAgAkEIahB4IAAQEiAC
    QYABaiQAC0kBAn8DQCABQThGRQRAIAAgAWoiAiACKQMAQgGGNwMAIAFBCGohAQwBCwsgACAAKAI4QQF0IgE2AjggAUGAg
    IAQTgRAIAAQEgsLQgIBfwJ+QQAgAmusIQQDQCADQThHBEAgACADaiICIAIpAwAiBSABIANqKQMAhSAEgyAFhTcDACADQQ
    hqIQMMAQsLC0YBAn8jAEFAaiIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByIABB+ABqQQE2AgAgAUEBEIoBIAAgARClARC
    yASABQUBrJAALTgEBfyMAQYAEayIBJAAgABAvIAEQLyABQYACahAvIABBgAJqIAFBgAIQZxogAEGABGogAUGAAmpBgAIQ
    ZxogAEEANgKABiABQYAEaiQAC0sBAX8jAEFAaiICJAACQCAAKAI4IAFsQYCAgBBOBEAgAiABEIoBIAAgAhBIDAELIAAgA
    RAoGiAAIAAoAjggAWw2AjgLIAJBQGskAAtKAAJ/IAFBgIDEAEcEQEEBIAAoAhggASAAQRxqKAIAKAIQEQMADQEaCyACRQ
    RAQQAPCyAAKAIYIAJBACAAQRxqKAIAKAIMEQUACwtCAQF/IwBBQGoiAiQAIAJBCGpBgIDAABBfIAEgAkEIahBrIAEQRCA
    AIAEQayAAQQMQKBogABBEIAAQKSACQUBrJAALSQECfyMAQcABayIBJAAgASAAEF4gAUGAAWogABCFASAAIABBQGsiAhCl
    ASAAEEEgAiABQYABahClASAAIAEQlQEgAUHAAWokAAtIAQF/IwBB4AFrIgEkACABQeihwAAQXyABQThqIAAgARAIIAFBq
    AFqIAFBOGoQBSAAIAFBqAFqEGsgAEECNgI4IAFB4AFqJAALPgEBfyABQTpuIQIgAUGVA00EQCAAIAJBA3RqKQMAQgEgAU
    H//wNxQTpwrYaDQgBVDwsgAkEHQdSdwAAQPAALQAIBfwF+IwBBgAFrIgEkACABQQhqIAAQhQEgAUEIahASIAFByABqIAF
    BCGoQgwEgASkDSCABQYABaiQAQgKBpws8AQF/IwBBgAFrIgIkACACIAAQhQEgAkFAayABEIUBIAIQEiACQUBrEBIgAiAC
    QUBrEDUgAkGAAWokAEULPAIBfwF+A38gAUE4RgR/IAJCf3xCgICAgICAgIAEg0I6iKcFIAAgAWopAwAgAoQhAiABQQhqI
    QEMAQsLC0cBAX8jAEEgayIDJAAgA0EUakEANgIAIANB9KrAADYCECADQgE3AgQgAyABNgIcIAMgADYCGCADIANBGGo2Ag
    AgAyACEHAACzkBAX8jAEFAaiICJAAgAiAAEIUBIAIQByABBEAgASACEKUBCyACEAMgAiAAEEggAhAsIAJBQGskAAs6AQF
    /IABBOBByIQADQCACQTBGRQRAIABBCBAtIAAgACkDACABIAJqMQAAfDcDACACQQFqIQIMAQsLCzQBAX8gAEE4EHIiAEEB
    NgI4IABBQGtBOBByIABB+ABqQQE2AgAgACABEKUBIAFBQGsQpQELMAEBfyAAQTgQciEAA0AgAkE4RwRAIAAgAmogASACa
    ikDADcDACACQQhqIQIMAQsLCz8BAX8jAEGAAmsiASQAIAAQUSABEG4gACABEJIBIABBgAJqEK0BIABBgARqEK0BIABBAT
    YCgAYgAUGAAmokAAswAQJ/A0AgAkE4RwRAIAAgAmoiAyADKQMAIAEgAmopAwB8NwMAIAJBCGohAgwBCwsLMAECfwNAIAJ
    BOEcEQCAAIAJqIgMgAykDACABIAJqKQMAfTcDACACQQhqIQIMAQsLCzABAn8DQCACQThHBEAgACACaiIDIAEgAmopAwAg
    AykDAH03AwAgAkEIaiECDAELCwsxAQJ/A0AgAkHwAEcEQCAAIAJqIgMgAykDACABIAJqKQMAfTcDACACQQhqIQIMAQsLC
    zEBAn8DQCACQfAARwRAIAAgAmoiAyADKQMAIAEgAmopAwB8NwMAIAJBCGohAgwBCwsLOQECfyMAQYABayIBJAAgASAAQY
    ABaiICEF4gAiAAEJABIAEQVSAAIAEQkAEgABCsASABQYABaiQACzMBAX8gAgRAIAAhAwNAIAMgAS0AADoAACABQQFqIQE
    gA0EBaiEDIAJBf2oiAg0ACwsgAAtIAQN/IwBBEGsiASQAIAAoAgwhAyAAKAIIIgJFBEBB9KrAAEErQaCrwAAQWwALIAEg
    AzYCCCABIAA2AgQgASACNgIAIAEQcQALMgEBfyAAQgE3AwBBCCEBA0AgAUE4RkUEQCAAIAFqQgA3AwAgAUEIaiEBDAELC
    yAAEFYLNwAgABBRIAAgARCSASAAQYACaiABQYACahCSASAAQYAEaiABQYAEahCSASAAIAEoAoAGNgKABgsoAQF/A0AgAk
    E4RwRAIAAgAmogASACaikDADcDACACQQhqIQIMAQsLCzMAIAAgARCSASAAQYACaiABQYACahCSASAAQYAEaiABQYAEahC
    SASAAIAEoAoAGNgKABgsoACAAIAEgAhB5IABBQGsgAUFAayACEHkgAEGAAWogAUGAAWogAhB5Cy4BAX8jAEGAAWsiASQA
    IAAQLyABEFAgACABEJABIABBgAFqEKkBIAFBgAFqJAALLQAgACABIAIQjwEgAEGAAWogAUGAAWogAhCPASAAQYACaiABQ
    YACaiACEI8BCzQBAX8jAEEQayICJAAgAiABNgIMIAIgADYCCCACQaSowAA2AgQgAkH0qsAANgIAIAIQaAALPgEBfyMAQR
    BrIgEkACABQQhqIABBCGooAgA2AgAgASAAKQIANwMAIAEoAgAiAEEUaigCABogACgCBBoQMwALKQEBfyABBEAgACECA0A
    gAkEAOgAAIAJBAWohAiABQX9qIgENAAsLIAALKwEBfyMAQcABayICJAAgAhBLIAIgARB/IAIQpgEgACACEAwgAkHAAWok
    AAsiAQF/A0AgAUE4RwRAIAAgAWpCADcDACABQQhqIQEMAQsLCycBAX8jAEFAaiICJAAgAkEIaiABEF0gACACQQhqEIsBI
    AJBQGskAAsrACAAEFEgACABEJIBIABBgAJqIAIQkgEgAEGABGogAxCSASAAQQU2AoAGCyMBAX8jAEFAaiIBJAAgASAAEI
    UBIAEQEiABEFogAUFAayQACykAIAAgARBhIAAgACgCOCABKAI4aiIBNgI4IAFBgICAEE4EQCAAEBILCyUAIAAgASACEE8
    gAEEAIAJrIAAoAjgiACABKAI4c3EgAHM2AjgLIwADQCACBEAgACABLQAAED4gAkF/aiECIAFBAWohAQwBCwsLIgACQCAA
    IAEQWUUNACAAQUBrIAFBQGsQWUUNAEEBDwtBAAskAAJAIABBfE0EQCAARQRAQQQhAAwCCyAAEAEiAA0BCwALIAALJwEBf
    yMAQYABayICJAAgAiABEF4gAhA6IAAgAhCVASACQYABaiQACycAIAAgARCQASAAQYABaiABQYABahCQASAAQYACaiABQY
    ACahCQAQslACAAIAEQpQEgAEFAayABQUBrEKUBIABBgAFqIAFBgAFqEKUBCyUBAX8jAEFAaiICJAAgAiABEIUBIAIQQSA
    AIAIQeCACQUBrJAALKAEBfyMAQYACayICJAAgAiABEI4BIAIQKyAAIAIQlgEgAkGAAmokAAsjAEGEAiACSQRAIAJBhAIg
    AxA9AAsgACACNgIEIAAgATYCAAsiAQF/IwBB8ABrIgIkACACIAEQMCAAIAIQBSACQfAAaiQACxwAAkAgABB3RQ0AIABBg
    AFqEHdFDQBBAQ8LQQALHwAgAEE4EHIiAEEBNgI4IAAgARBrIAAgASgCODYCOAseAAJAIAAQhwFFDQAgAEGAAWoQhwFFDQ
    BBAQ8LQQALGwACQCAAEHdFDQAgAEFAaxB3RQ0AQQEPC0EACx4AAkAgABCHAUUNACAAQYACahCHAUUNAEEBDwtBAAsaAQF
    /IAAQWCIBIABBQGsQWCABcyAAEHdxcwsaACAAQTgQciIAQQE2AjggACABEJ0BIAAQVgsZACAAQTgQciIAQQE2AjggACAB
    EGsgABBWCxcAIAAQRCAAKAIAQX8gAUEfcXRBf3NxCxoAIAAgARBfIAAgAhAkIAAgAhBjIAAgAhAkCxwAIAAQLyAAIAEQk
    AEgAEGAAWogAUGAAWoQkAELGAAgACABIAIQeSAAQUBrIAFBQGsgAhB5CxYAIAAgARClASAAQUBrIAFBQGsQpQELGAAgAB
    AvIAAgARCQASAAQYABaiACEJABCxgAIAAgARCQASAAQYABaiABQYABahCQAQsZACAAEK4BIABBgAJqELYBIABBgARqEK4
    BCxcAIAAQsgEgAEFAaxBpIABBgAFqELIBCxQAIAAgARB4IABBQGsgAUFAaxB4CxgAIAAgARCVASAAQYABaiABQYABahCV
    AQsYACAAEKYBIABBgAFqIgAQpgEgACABEA8LGQAgABCpASAAQYABahCwASAAQYACahCpAQsZACAAEKwBIABBgAJqEKwBI
    ABBgARqEKwBCxkAIAAQqgEgAEGAAmoQqgEgAEGABGoQqgELFgAgABAvIAAgARCQASAAQYABahCpAQsWACAAQYABaiIAEK
    gBIAAQOiAAEKgBCxQAIAAQRCAAIAApAwAgAax8NwMACxQAIAAQRCAAIAApAwAgAax9NwMACxEAIAAgARBSIABBQGsgARB
    SCxEAIAAgARBIIABBQGsgARBICxQAIAAgARCQASAAQYABaiACEJABCxIAIAAgARAPIABBgAFqIAEQDwsUACAAIAEQoAEg
    AEGAAWogARCgAQsRACAAKAIEBEAgACgCABAJCwsSACAAIAEQayAAIAEoAjg2AjgLDwAgAEFAayIAEEEgABBECw0AIAAQT
    iAAQUBrEE4LDQAgABBEIABBQGsQRAsPACAAELIBIABBQGsQsgELEAAgABCrASAAQYABahCrAQsNACAAEBIgAEFAaxASCx
    AAIAAQqAEgAEGAAWoQqAELEAAgABCpASAAQYABahCpAQsPACAAQYABahA6IAAQrAELEAAgABCnASAAQYABahCnAQsOACA
    AEGkgAEFAaxCyAQsQACAAIAI2AgQgACABNgIACw0AIAAQdCAAQQE2AjgLDAAgABBBIAAgARB4CwwAIAAgARBrIAAQVgsN
    ACAAEDogACABEJUBCwsAIAAQOiAAEKwBCwwAQunQotvMouq7RgsDAAELAwABCwv+PZoCAEGCgMAACwcBAAAAAQI0AEG4g
    MAAC9sBuF8jku11BwFjT+D5WE+pA2dPnKtLeD0Akew9ffXy9AMD1g8fDSwgAK1vjPCZwa4A8DtNkAEAAADzStxtEor3AI
    uwH1tTsFYDgvLFYx+X7AAysL/NHtseAkehVLifHyMCQHo6ogw4sQGz4sMPAAAAAHNyYy9ibHMxMjM4MS9wYWlyLnJzqAA
    QABQAAAAHAQAACQAAAKgAEAAUAAAADAEAAA0AAACoABAAFAAAABEBAAANAAAAAAAAAAEAAAD///8Dv/+W/78AaQM7VYAd
    moCAAefMIPV1pkwBp+1zAEGogsAACyz+//7///8BAosAgILYBPYB4Y1oiW++kwLOdqvfPagdAMZpulHOdt8Dy1nGFwBB4
    ILAAAuRAZABEAATAAAA0AEAABgAAACQARAAEwAAANQBAAARAAAAkAEQABMAAADWAQAAHAAAAHNyYy9ibHMxMjM4MS9lY3
    AucnMAkAEQABMAAAAZBQAADQAAAJABEAATAAAAGwUAAAkAAACQARAAEwAAABwFAAARAAAAkAEQABMAAAAfBQAAHAAAAAA
    AAAABAAEAAAABAjQAQaCEwAALuSCQARAAEwAAAGcEAAARAAAAkAEQABMAAABsBAAADQAAAJABEAATAAAAbgQAABUAAACQ
    ARAAEwAAAHAEAAAgAAAAHUxYLQgo9ADXXz44aOPbAInJGoj9roEBomOjmrkPTgGY6rCCSW3JAoBOWs9QOu4AimlEAQAAA
    ADgKxeO6UjMAXSpOluMVsgAolXvNe/8FADngsIBPcnDA8EWIDvuPnUAusRiAAwgWgDRCCkuAQAAALgh6L1iEMUA3/4Vlz
    tIpQGLCDH8A9S9AbsR/Cc0UtIDHfAS2hvXowEqPc423S/bAshidB8AAAAAKdKiiy66yAHqR06TLeDGAiSMtsYkvPEDAo/
    w3iCL+AGd1zE97u2BA4ilRy+cg4kDSMIIbgAAAAB7+wUWP99nAjJ7Fwrjx90CaW+GFDsANgMrVFv+4Zl3A8x9+g1bVtIB
    Aju2nPiBcwIH2iEDAQAAAJ4MOb5nECQDX97JALfLQgIx+rexS69LAYydZXIx6AACyy7dIo8TXQHUDYML8enzAuH4sWkBA
    AAAF+OXhGqYcQFbpdOtpXylAPrkHV2MkmwBFovSVX2eswF1O8QNmb5jAc0s5B7x42kCH8/TgAAAAACOyPDjGFbLAOdrHT
    0yPvIBmzNTJw/vYgALmsY2bZ2sAuVtNVN+EdEAIQ4duvj2agBw54F7AQAAAITtOaEl8tcBt7JLQTBKlADaqLKGnI8hAiN
    AhjM+PJkAhhWxv1LmigOwyY1aShP5A1Nl7dYAAAAAgyllb8bBEwFzRs+5ckvDAQgK+Wh+CbkCTntu5kll9wGxPNu1Sqf3
    AwZIdMD/xFwDUDIMYwEAAADZlYis6UwVARTxnQfMG4oChYnB+oJZtgK7IfzsX0loAZnbmVSOEeQDLK2Q2RB9ZgCjJpfpA
    AAAAGFomx1kiLMB8WQcxDiXuAEzNQgzG58oA8zGl/w2qpUB5PXXElTlBwN0goHTbRvzA2ZxjncBAAAAsNyerJ2fFwD4p1
    yCSo8PA1jJJY7GHlAC46GVD2alzAEkA84bmgrRATESRAc7nl0C2wVA1QAAAAC7g8uz8e40ALrVMMa8qTwCg7SGHg3HMwK
    X1V8Qqr1sAecXfByoRyECrC5iwcvqUAI+7ZRyAQAAALdJRnNiFqwCq1uLuXy1MABhhSxO22y1A4nJfwFciyICPjBrhRWY
    2QEHRAIu0MygA7HyBRoBAAAACt3saNGEYwELQBne0pLTATFZwTGPlzMBfdvdQN9bugO0gvaAZqWzAo9b2xG1SnoCqxP8l
    QAAAABB1qF5Oux2AxHckO6qpJkAOFCDmPNn2gBA0K3ZhMV1AI1/4Myjx68Bz4Kkl+BTaQNqzw6hAAAAAF5azL2b2fcBxL
    R4RCdSbgH6gMUimN8cAltmoKIpbwgDY39umQHPdABs/SyMLCpZA6nCekoBAAAAOkrobkl0JQA7G3jD49TsAKfO6e0qBnM
    AuDglhk69ZgJXD1chZ1ngAxiDz0OGTVoAz6osdwAAAAClBGOfovktAHDEowjxkjQAQPeCiUvyzgMOKTS1cjqnAzVXOenG
    BgUD30NOVe6ZOQGOXzXnAAAAAB6iMjVbOZ0DVAdezQfqpgC9qW0wO4NOAK017oqBhGYBx9//faDnQwNXx5sCKkWKACAWj
    joBAAAA2CzGjZPoDQMEcT27D0m1AZcE/dYovIoCMlNFlcVa/AAkCFtU60B8A/urDrK/uGIBGlglNAAAAAAZPrhcujnCAD
    +3PyWfJfQAas3qrBEL4ACZ8kczxmm9AUGJbx+Z8r8BivlNoJfI6AHlL5ayAAAAAP87K8huJ8gBeboJLBshqgI9cfWLxIg
    lAJsEMADCMygD6EFwNjblmAJEHC3SEGfVAt6lYSUBAAAAHBvSQPr5PAEmfg+Nb6A1AlUrxor8F4YAVnLqIm2NLgHv1QFv
    +tNLA4u5LIZrxj8DSNWojAAAAAAEtshpvla0AMEdB7C/n0ABZisb8FqpTwG3XuVoWRI+Ah0Yy7Uu30IDzkKpk/PAQwLp5
    GteAQAAAEsidVRxHmsC4e1rXtkmQQC6Rs6nltP1AKxmo5WhXwcCPWde/KPESAN9VqhAxDORA0WWElwAAAAAMwGY2/XT2Q
    IQmcoIRyvkA2zMWQbE0zICmU8AVjA1IAA7e3XcFeN7AisAv9ymskcDSjlaJAAAAAD4HpcL8ARMAYN8hGRkcBQCbPAzRnu
    ADgGcADvCmtCoALGnekQ/9QQAWEJVdObkBgDByoKxAAAAAI5NB9CkyAcCs4E10QZ9cwKdJEP2EfnnA6+5GAnDq+ICWTVS
    zO3S/gNQMEaut73NAwipRosBAAAAMsER0BpxEwA6v+6PM5fOAxsDYZ44FuQDYET/JL2yLQPLL82T+0MdA+NCf4NvNN8Ae
    eQTlwEAAAAwHHPK66qvA8qbrlN3FdwDs7lDTR7t5wFhGvjba0WeAgwqxCNKoa0Dea+OSG2vYQChp7vhAAAAAIel23tXDj
    cA2OiB4XGAlAGd5qsM8qHmAi16sAl3nlkAvTqPu6FNHgKIJyP6EpplA4sBxJ8AAAAAKftwGKNMXgFoTfq3P1SRAS9kQsg
    mbNoADvR/YPeO/wIFChd0xqYsAa9Jpvcbrs4AU418mAAAAADy1ulfhfhhAbJX0IORsB4CenTzNNbEEwDFSC0Thq8oA7hb
    5zxreScA9F2yLO8G6wO8ubBKAAAAAPClMzaxOrIBphygVrLJ2AMD4kRVrdPDAUHZ9d62vlID0Kd0oKbwuAFHeISI2tIYA
    KT8A2YBAAAA2/7o8uzatgEQKhBkAjf+Ae7CrVETIv0DDObhQjmP7wM2VRnEKRWiAvjTK9fEP/gD3j/AjAAAAADL9OWwd1
    w1Ail7h7GnrhYA5J3PUTLAPgKSJ3DkrTvkAqcq1FdndNgCRh0mXggHJgJuN4YfAAAAAPbhLcdA4t8A7kgBLIqFVAMmfdo
    AFLnkAxINi3OMYlkD4lIllEk7agAy4Si9mZulArqGxwwAAAAAlsZBLlrnlwD4L+qLZcRZAWxN03q2PjQCQT704DyVsAHp
    IxKDRvt2A7UNRHUEljsBEGqZNAEAAAAzuweXcUWYAq/w6M6mux4D0Dw9VFbJ9gJKrUiloSI5AhOtEfrcgEkBwkdnCbiT6
    AKBfNmQAAAAAI9LYx06RxUAEeAlTTxcvQDKBaLKVmPNAzvJTOHOiZcBD8RxwRl4DQJXCcmaD3C3AYEd+uAAAAAA9wbtJh
    Pc+gE0IDPFYe9FASDkgCSUJ98A0i0Hn6ScUwJbVr/yds1TAUP3otjOk8sCDkBgJgAAAADMRTNXOLGZAkewQu742AEAMGm
    42QCa7wJz9ZkIfCtmA0YzVJYUX7QAUUzY8PifHQMUlWutAAAAAJIQVuIptYQCpfqu3xsmWgJvURN56oyoAT4wSgs5vysC
    /5R/RwzFSAIHS2H9z0AHAnS2y6wAAAAAqGqPupy0+AAAgcHg06dwARqHXGpjbrMBZDmkmIbt5gDQbZwdkdIaACgEPFJvA
    akDniUvTQAAAABVP5G4i/RuAI3XbEr1qBcCc7xPfernkgEhTO0e9oSPAfcWMpCEStkDZYGgOoebwgHaXKVnAQAAAEpdU1
    WdPSMD2iCS5O69+AMshbQ5v8RQAxWvgmS9GpMDDPv5xEzX0QNT+YbGSBjbANOObIYBAAAA2S6BFVpB7gAYuXcAAmw9AJI
    rE1djIP0AzfpfP33oewE3pOVu/6a7An4374D6qY8Di/A+agEAAABcd2oSmRMaAU/ux2JpAKcCXx0FoADEWwJNd73jMzTq
    A/3sXkuC6awAzaHu8Mt2pgIIfABmAQAAAKy3+ap/R8YCgDhz6ndu4wCfRKb18LaHAbMXB2JDVRkDUgG3gjF4rAK6mexny
    7ZhAJdSno0AAAAAHQClESMUOQJ2e7v0A3fFAiBqkeyd/KABu1DB7qY9fAKc0cbcjSL4AkQyAyz50BcBlQcOvgAAAAAWVF
    9EmG3SAGrrpaCwPNkAJxf0anKeSAL2SDhM83ZvA8UV0dG07YkD70iDfOWUYwKHKH1rAQAAAPJnvz21OCUCR+Jbvo01XwF
    nyi7NedJdAtYwxPy5RlUBhcR4V7GObgGfq+rbiTaQAQYz31gAAAAAPaBJLiwQ9gJMjafU2IEJAYr3AT5FbzUAhJJyVhPH
    3ANPyIW4SMNDAFsvg4YHSOAAwnUtlgEAAADBYzawU5JHAUAbCIO9I9oAf6Dncr61MgIMu5svYOKVA20aYOnq0PoAUASGl
    CwmpwLDxBJhAQAAAHNyYy9ibHMxMjM4MS9iaWcucnMAoA4QABMAAADMAQAALQAAAKAOEAATAAAAzAEAADUAAACgDhAAEw
    AAABkCAAANAAAAoA4QABMAAAA4AwAAGAAAAKAOEAATAAAAOAMAACEAAACgDhAAEwAAAEIDAAAhAAAAoA4QABMAAABbAwA
    AFwAAAKAOEAATAAAAZAMAABcAAACgDhAAEwAAAHIDAAAwAAAAoA4QABMAAAB7AwAAMAAAAKAOEAATAAAApwMAABgAAACg
    DhAAEwAAALUDAAAYAAAAmC+KQpFEN3HP+8C1pdu16VvCVjnxEfFZpII/ktVeHKuYqgfYAVuDEr6FMSTDfQxVdF2+cv6x3
    oCnBtybdPGbwcFpm+SGR77vxp3BD8yhDCRvLOktqoR0StypsFzaiPl2UlE+mG3GMajIJwOwx39Zv/ML4MZHkafVUWPKBm
    cpKRSFCrcnOCEbLvxtLE0TDThTVHMKZbsKanYuycKBhSxykqHov6JLZhqocItLwqNRbMcZ6JLRJAaZ1oU1DvRwoGoQFsG
    kGQhsNx5Md0gntbywNLMMHDlKqthOT8qcW/NvLmjugo90b2OleBR4yIQIAseM+v++kOtsUKT3o/m+8nhxxkJMU19TSUdf
    QkxTMTIzODFHMV9YTUQ6U0hBLTI1Nl9TU1dVX1JPX05VTF8A0BAQABMAAAA/AAAALgAAANAQEAATAAAAPQAAABUAAADQE
    BAAEwAAAD0AAAANAAAAc3JjL2JsczEyMzgxL2Jscy5ycwAAAAAArve+1aE5BgLok91iZEwkAdIsbk61CS0C2+VwMbbEEQ
    GZYzb76G2KA7ycH+3PFk8AK2qmngEAAABhdHRlbXB0IHRvIGRpdmlkZSBieSB6ZXJvAAAAbxEQABIAAAB8AQAAFAAAAAA
    AAABhdHRlbXB0IHRvIGRpdmlkZSB3aXRoIG92ZXJmbG93c3JjL2JsczEyMzgxL2ZwLnJzAAAAbxEQABIAAAASAgAADQAA
    AG8REAASAAAAHgIAACYAAABvERAAEgAAAB4CAAAjAAAAbxEQABIAAAAkAgAAFwAAAG8REAASAAAAJAIAABQAAAAAAAAAq
    qr//////gHu//9UrP//AupBYg9rDyoBw5z9ShTOEwJLd2TXrEtDAu3pxpKm+V8Cox4RoAEAAABAEhAAFAAAABUBAAATAA
    AAQBIQABQAAAAeAQAAGAAAAEASEAAUAAAAJAEAABwAAABzcmMvYmxzMTIzODEvZWNwMi5ycwAAAAAEAEGQpcAAC7wGQBI
    QABQAAADmAgAACQAAAEASEAAUAAAA7gIAAA0AAABAEhAAFAAAAP4CAAAhAAAAuL0hwchWgAD1+24BqskAA7pwFz2uR7YA
    RNEK7ADpUwN65MZREMUtA0kBgkmkwiMALyuqJAAAAAB+KwRdBX2sAflVF+WERDwDNJME9ce9GwJp12rYgmRCA9BrWWVPJ
    4gA6DRrH9hnnAAFtgI+AQAAAAEouAiGVJMBeKIo6w5zsgIjyRINFpWmAQq1nU73MqoCm/2tGjUu2gJxczJjhFufAHdSXc
    4AAAAAvnlf8F8HqQJqaAc710nDAfOzmulytSoB0pm8jp0W+gEoPsuZi8IrAKw0qwwzzakDAkpsYAAAAACrqv/////+Ae7
    //1Ss//8C6kFiD2sPKgHDnP1KFM4TAkt3ZNesS0MC7enGkqb5XwKjHhGgAQAAAAgUEAALAAAAjwEAAA8AAAAIFBAACwAA
    AKcBAAATAAAACBQQAAsAAACqAQAADQAAAHNyYy9obWFjLnJzADQUEAAgAAAAVBQQABIAAAADAAAAAAAAAAEAAAAEAAAAa
    W5kZXggb3V0IG9mIGJvdW5kczogdGhlIGxlbiBpcyAgYnV0IHRoZSBpbmRleCBpcyAwMDAxMDIwMzA0MDUwNjA3MDgwOT
    EwMTExMjEzMTQxNTE2MTcxODE5MjAyMTIyMjMyNDI1MjYyNzI4MjkzMDMxMzIzMzM0MzUzNjM3MzgzOTQwNDE0MjQzNDQ
    0NTQ2NDc0ODQ5NTA1MTUyNTM1NDU1NTY1NzU4NTk2MDYxNjI2MzY0NjU2NjY3Njg2OTcwNzE3MjczNzQ3NTc2Nzc3ODc5
    ODA4MTgyODM4NDg1ODY4Nzg4ODk5MDkxOTI5Mzk0OTU5Njk3OTg5OQAAQBUQABAAAABQFRAAIgAAAHJhbmdlIGVuZCBpb
    mRleCAgb3V0IG9mIHJhbmdlIGZvciBzbGljZSBvZiBsZW5ndGggAABjYWxsZWQgYE9wdGlvbjo6dW53cmFwKClgIG9uIG
    EgYE5vbmVgIHZhbHVlALAVEAAcAAAA7gEAAB4AAABsaWJyYXJ5L3N0ZC9zcmMvcGFuaWNraW5nLnJzAEGIrMAACwEBAEH
    IrMAACwEBAEGIrcAACwEBAEHIrcAACwEBAEGIrsAACwEBAEHIrsAACwEBAEGIr8AACwEBAEHIr8AACwEBAEGIsMAACwEB
    AEHIsMAACwEBAEGIscAACwEBAEHIscAACwEBAEGIssAACwEBAEHIssAACwEBAEGIs8AACwEBAEHIs8AACwEBAEGItMAAC
    wEBAEHItMAACwEBAEGItcAACwEBAEHItcAACwEBAEGItsAACwEBAEHItsAACwEBAEGIt8AACwEBAEHIt8AACwEBAEGIuM
    AACwEBAEHIuMAACwEBAEGIucAACwEBAEHIucAACwEBAEGIusAACwEBAEHIusAACwEBAEGIu8AACwEBAEHIu8AACwEBAEG
    IvMAACwEBAEHIvMAACwEBAEGIvcAACwEBAEHIvcAACwEBAEGIvsAACwEBAEHIvsAACwEBAEGIv8AACwEBAEHIv8AACwEB
    AEGIwMAACwEBAEHIwMAACwEBAEGIwcAACwEBAEHIwcAACwEBAEGIwsAACwEBAEHIwsAACwEBAEGIw8AACwEBAEHIw8AAC
    wEBAEGIxMAACwEBAEHIxMAACwEBAEGIxcAACwEBAEHIxcAACwEBAEGIxsAACwEBAEHIxsAACwEBAEGIx8AACwEBAEHIx8
    AACwEBAEGIyMAACwEBAEHIyMAACwEBAEGIycAACwEBAEHIycAACwEBAEGIysAACwEBAEHIysAACwEBAEGIy8AACwEBAEH
    Iy8AACwEBAEGIzMAACwEBAEHIzMAACwEBAEGIzcAACwEBAEHIzcAACwEBAEGIzsAACwEBAEHIzsAACwEBAEGIz8AACwEB
    AEHIz8AACwEBAEGI0MAACwEBAEHI0MAACwEBAEGI0cAACwEBAEHI0cAACwEBAEGI0sAACwEBAEHI0sAACwEBAEGI08AAC
    wEBAEHI08AACwEBAEGI1MAACwEBAEHI1MAACwEBAEGI1cAACwEBAEHI1cAACwEBAEGI1sAACwEBAEHI1sAACwEBAEGI18
    AACwEBAEHI18AACwEBAEGI2MAACwEBAEHI2MAACwEBAEGI2cAACwEBAEHI2cAACwEBAEGI2sAACwEBAEHI2sAACwEBAEG
    I28AACwEBAEHI28AACwEBAEGI3MAACwEBAEHI3MAACwEBAEGI3cAACwEBAEHI3cAACwEBAEGI3sAACwEBAEHI3sAACwEB
    AEGI38AACwEBAEHI38AACwEBAEGI4MAACwEBAEHI4MAACwEBAEGI4cAACwEBAEHI4cAACwEBAEGI4sAACwEBAEHI4sAAC
    wEBAEGI48AACwEBAEHI48AACwEBAEGI5MAACwEBAEHI5MAACwEBAEGI5cAACwEBAEHI5cAACwEBAEGI5sAACwEBAEHI5s
    AACwEBAEGI58AACwEBAEHI58AACwEBAEGI6MAACwEBAEHI6MAACwEBAEGI6cAACwEBAEHI6cAACwEBAEGI6sAACwEBAEH
    I6sAACwEBAEGI68AACwEBAEHI68AACwEBAEGI7MAACwEBAEHI7MAACwEBAEGI7cAACwEBAEHI7cAACwEBAEGI7sAACwEB
    AEHI7sAACwEBAEGI78AACwEBAEHI78AACwEBAEGI8MAACwEBAEHI8MAACwEBAEGI8cAACwEBAEHI8cAACwEBAEGI8sAAC
    wEBAEHI8sAACwEBAEGI88AACwEBAEHI88AACwEBAEGI9MAACwEBAEHI9MAACwEBAEGI9cAACwEBAEHI9cAACwEBAEGI9s
    AACwEBAEHI9sAACwEBAEGI98AACwEBAEHI98AACwEBAEGI+MAACwEBAEHI+MAACwEBAEGI+cAACwEBAEHI+cAACwEBAEG
    I+sAACwEBAEHI+sAACwEBAEGI+8AACwEBAEHI+8AACwEBAEGI/MAACwEBAEHI/MAACwEBAEGI/cAACwEBAEHI/cAACwEB
    AEGI/sAACwEBAEHI/sAACwEBAEGI/8AACwEBAEHI/8AACwEBAEGIgMEACwEBAEHIgMEACwEBAEGIgcEACwEBAEHIgcEAC
    wEBAEGIgsEACwEBAEHIgsEACwEBAEGIg8EACwEBAEHIg8EACwEBAEGIhMEACwEBAEHIhMEACwEBAEGIhcEACwEBAEHIhc
    EACwEBAEGIhsEACwEBAEHIhsEACwEBAEGIh8EACwEBAEHIh8EACwEBAEGIiMEACwEBAEHIiMEACwEBAEGIicEACwEBAEH
    IicEACwEBAEGIisEACwEBAEHIisEACwEBAEGIi8EACwEBAEHIi8EACwEBAEGIjMEACwEBAEHIjMEACwEBAEGIjcEACwEB
    AEHIjcEACwEBAEGIjsEACwEBAEHIjsEACwEBAEGIj8EACwEBAEHIj8EACwEBAEGIkMEACwEBAEHIkMEACwEBAEGIkcEAC
    wEBAEHIkcEACwEBAEGIksEACwEBAEHIksEACwEBAEGIk8EACwEBAEHIk8EACwEBAEGIlMEACwEBAEHIlMEACwEBAEGIlc
    EACwEBAEHIlcEACwEBAEGIlsEACwEBAEHIlsEACwEBAEGIl8EACwEBAEHIl8EACwEBAEGImMEACwEBAEHImMEACwEBAEG
    ImcEACwEBAEHImcEACwEBAEGImsEACwEBAEHImsEACwEBAEGIm8EACwEBAEHIm8EACwEBAEGInMEACwEBAEHInMEACwEB
    AEGIncEACwEBAEHIncEACwEBAEGInsEACwEBAEHInsEACwEBAEGIn8EACwEBAEHIn8EACwEBAEGIoMEACwEBAEHIoMEAC
    wEBAEGIocEACwEBAEHIocEACwEBAEGIosEACwEBAEHIosEACwEBAEGIo8EACwEBAEHIo8EACwEBAEGIpMEACwEBAEHIpM
    EACwEBAEGIpcEACwEBAEHIpcEACwEBAEGIpsEACwEBAEHIpsEACwEBAEGIp8EACwEBAEHIp8EACwEBAEGIqMEACwEBAEH
    IqMEACwEBAEGIqcEACwEBAEHIqcEACwEBAEGIqsEACwEBAEHIqsEACwEBAEGIq8EACwEBAEHIq8EACwEBAEGIrMEACwEB
    AEHIrMEACwEBAEGIrcEACwEBAEHIrcEACwEBAEGIrsEACwEBAEHIrsEACwEBAEGIr8EACwEBAEHIr8EACwEBAEGIsMEAC
    wEBAEHIsMEACwEBAEGIscEACwEBAEHIscEACwEBAEGIssEACwEBAEHIssEACwEBAEGIs8EACwEBAEHIs8EACwEBAEGItM
    EACwEBAEHItMEACwEBAEGItcEACwEBAEHItcEACwEBAHsJcHJvZHVjZXJzAghsYW5ndWFnZQEEUnVzdAAMcHJvY2Vzc2V
    kLWJ5AwVydXN0Yx0xLjQ5LjAgKGUxODg0YThlMyAyMDIwLTEyLTI5KQZ3YWxydXMGMC4xOC4wDHdhc20tYmluZGdlbhIw
    LjIuNzAgKGI2MzU1YzI3MCk=
`.replace(/[^0-9a-zA-Z/+]/g,""),Zs=dn.decode(vs);function yn(){return chunk_NNJFBVJ3_ie.bls_init()}var Mt=null;function Os(){return(Mt===null||Mt.buffer!==chunk_NNJFBVJ3_ie.memory.buffer)&&(Mt=new Uint8Array(chunk_NNJFBVJ3_ie.memory.buffer)),Mt}function mr(t,A){let e=A(t.length*1);return Os().set(t,e/1),[e,t.length]}function mn(t,A,e){let[r,i]=mr(t,chunk_NNJFBVJ3_ie.__wbindgen_malloc),[B,s]=mr(A,chunk_NNJFBVJ3_ie.__wbindgen_malloc),[l,u]=mr(e,chunk_NNJFBVJ3_ie.__wbindgen_malloc);return chunk_NNJFBVJ3_ie.bls_verify(r,i,B,s,l,u)}async function Ks(t,A){if(typeof Response=="function"&&t instanceof Response){let e=await t.arrayBuffer();return await WebAssembly.instantiate(e,A)}else{let e=await WebAssembly.instantiate(t,A);return e instanceof WebAssembly.Instance?{instance:e,module:t}:e}}async function kn(){let t={},{instance:A,module:e}=await Ks(Zs,t);return chunk_NNJFBVJ3_ie=A.exports,kn.__wbindgen_wasm_module=e,chunk_NNJFBVJ3_ie}var qn=kn;var kr;async function chunk_NNJFBVJ3_Fn(t,A,e){if(!kr){if(await qn(),yn()!==0)throw new Error("Cannot initialize BLS");kr=(r,i,B)=>mn(i,B,r)===0}return kr(t,A,e)}var rt=class extends _A{constructor(A){super(`Invalid certificate: ${A}`)}};function xn(t,A){if(t.byteLength!==A.byteLength)return!1;let e=new Uint8Array(t),r=new Uint8Array(A);for(let i=0;i<e.length;i++)if(e[i]!==r[i])return!1;return!0}var Ee=class{constructor(A,e,r){this._rootKey=e,this._canisterId=r,this.cert=le(new Uint8Array(A))}static async create(A){let e=new Ee(A.certificate,A.rootKey,A.canisterId);return await e.verify(),e}lookup(A){return Sn(A,this.cert.tree)}async verify(){let A=await Ht(this.cert.tree),e=await this._checkDelegationAndGetKey(this.cert.delegation),r=this.cert.signature,i=Vs(e),B=bA(tt("ic-state-root"),A),s=!1;try{s=await chunk_NNJFBVJ3_Fn(new Uint8Array(i),new Uint8Array(r),new Uint8Array(B))}catch{s=!1}if(!s)throw new rt("Signature verification failed")}async _checkDelegationAndGetKey(A){if(!A)return this._rootKey;let e=await Ee.create({certificate:A.certificate,rootKey:this._rootKey,canisterId:this._canisterId});if(this._canisterId.compareTo(Y.managementCanister())!=="eq"){let i=e.lookup(["subnet",A.subnet_id,"canister_ranges"]);if(!i)throw new rt(`Could not find canister ranges for subnet 0x${xA(A.subnet_id)}`);if(!le(i).map(u=>[Y.fromUint8Array(u[0]),Y.fromUint8Array(u[1])]).some(u=>u[0].ltEq(this._canisterId)&&u[1].gtEq(this._canisterId)))throw new rt(`Canister ${this._canisterId} not in range of delegations for subnet 0x${xA(A.subnet_id)}`)}let r=e.lookup(["subnet",A.subnet_id,"public_key"]);if(!r)throw new Error(`Could not find subnet key for subnet 0x${xA(A.subnet_id)}`);return r}},et=ue("308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100"),js=96;function Vs(t){let A=et.byteLength+js;if(t.byteLength!==A)throw new TypeError(`BLS DER-encoded public key must be ${A} bytes long`);let e=t.slice(0,et.byteLength);if(!xn(e,et))throw new TypeError(`BLS DER-encoded public key is invalid. Expect the following prefix: ${et}, but get ${e}`);return t.slice(et.byteLength)}async function Ht(t){switch(t[0]){case 0:return YA(tt("ic-hashtree-empty"));case 4:return t[1];case 3:return YA(bA(tt("ic-hashtree-leaf"),t[1]));case 2:return YA(bA(tt("ic-hashtree-labeled"),t[1],await Ht(t[2])));case 1:return YA(bA(tt("ic-hashtree-fork"),await Ht(t[1]),await Ht(t[2])));default:throw new Error("unreachable")}}function tt(t){let A=new Uint8Array([t.length]),e=new TextEncoder().encode(t);return bA(A,e)}function Sn(t,A){if(t.length===0)switch(A[0]){case 3:return new Uint8Array(A[1]).buffer;default:return}let e=typeof t[0]=="string"?new TextEncoder().encode(t[0]):t[0],r=Ps(e,qr(A));if(r)return Sn(t.slice(1),r)}function qr(t){switch(t[0]){case 0:return[];case 1:return qr(t[1]).concat(qr(t[2]));default:return[t]}}function Ps(t,A){if(A.length!==0){for(let e of A)if(e[0]===2){let r=e[1];if(xn(t,r))return e[2]}}}var it={};(0,chunk_ONAVPXOT.b)(it,{backoff:()=>Un,chain:()=>Mn,conditionalDelay:()=>Nn,defaultStrategy:()=>Fr,maxAttempts:()=>Xs,once:()=>Dn,throttle:()=>zs,timeout:()=>bn});var Ws=5*60*1e3;function Fr(){return Mn(Nn(Dn(),1e3),Un(1e3,1.2),bn(Ws))}function Dn(){let t=!0;return async()=>t?(t=!1,!0):!1}function Nn(t,A){return async(e,r,i)=>{if(await t(e,r,i))return new Promise(B=>setTimeout(B,A))}}function Xs(t){let A=t;return async(e,r,i)=>{if(--A<=0)throw new Error(`Failed to retrieve a reply for request after ${t} attempts:
  Request ID: ${xA(r)}
  Request status: ${i}
`)}}function zs(t){return()=>new Promise(A=>setTimeout(A,t))}function bn(t){let A=Date.now()+t;return async(e,r,i)=>{if(Date.now()>A)throw new Error(`Request timed out after ${t} msec:
  Request ID: ${xA(r)}
  Request status: ${i}
`)}}function Un(t,A){let e=t;return()=>new Promise(r=>setTimeout(()=>{e*=A,r()},e))}function Mn(...t){return async(A,e,r)=>{for(let i of t)await i(A,e,r)}}async function Yt(t,A,e,r){let i=[new TextEncoder().encode("request_status"),e],B=await t.readState(A,{paths:[i]});if(t.rootKey==null)throw new Error("Agent root key not initialized before polling");let s=await Ee.create({certificate:B.certificate,rootKey:t.rootKey,canisterId:A}),l=s.lookup([...i,new TextEncoder().encode("status")]),u;switch(typeof l>"u"?u=XA.Unknown:u=new TextDecoder().decode(l),u){case XA.Replied:return s.lookup([...i,"reply"]);case XA.Received:case XA.Unknown:case XA.Processing:return await r(A,e,u),Yt(t,A,e,r);case XA.Rejected:{let y=new Uint8Array(s.lookup([...i,"reject_code"]))[0],b=new TextDecoder().decode(s.lookup([...i,"reject_message"]));throw new Error(`Call was rejected:
  Request ID: ${xA(e)}
  Reject code: ${y}
  Reject text: ${b}
`)}case XA.Done:throw new Error(`Call was marked as done but we never saw the reply:
  Request ID: ${xA(e)}
`)}throw new Error("unreachable")}var Rt=class extends _A{constructor(A,e,r,i){super(["Call failed:",`  Canister: ${A.toText()}`,`  Method: ${e} (${r})`,...Object.getOwnPropertyNames(i).map(B=>`  "${B}": ${JSON.stringify(i[B])}`)].join(`
`)),this.canisterId=A,this.methodName=e,this.type=r,this.props=i}},xr=class extends Rt{constructor(A,e,r){var i;super(A,e,"query",{Status:r.status,Code:(i=at[r.reject_code])!==null&&i!==void 0?i:`Unknown Code "${r.reject_code}"`,Message:r.reject_message}),this.result=r}},Sr=class extends Rt{constructor(A,e,r,i){super(A,e,"update",{"Request ID":xA(r),"HTTP status code":i.status.toString(),"HTTP status text":i.statusText}),this.requestId=r,this.response=i}},Dr;(function(t){t.Install="install",t.Reinstall="reinstall",t.Upgrade="upgrade"})(Dr||(Dr={}));var RA=Symbol.for("ic-agent-metadata"),zA=class{constructor(A){this[RA]=Object.freeze(A)}static agentOf(A){return A[RA].config.agent}static interfaceOf(A){return A[RA].service}static canisterIdOf(A){return Y.from(A[RA].config.canisterId)}static async install(A,e){let r=A.mode===void 0?Dr.Install:A.mode,i=A.arg?[...new Uint8Array(A.arg)]:[],B=[...new Uint8Array(A.module)],s=typeof e.canisterId=="string"?Y.fromText(e.canisterId):e.canisterId;await dr(e).install_code({mode:{[r]:null},arg:i,wasm_module:B,canister_id:s})}static async createCanister(A){let{canister_id:e}=await dr(A||{}).provisional_create_canister_with_cycles({amount:[],settings:[]});return e}static async createAndInstallCanister(A,e,r){let i=await this.createCanister(r);return await this.install(Object.assign({},e),Object.assign(Object.assign({},r),{canisterId:i})),this.createActor(A,Object.assign(Object.assign({},r),{canisterId:i}))}static createActorClass(A){let e=A({IDL:chunk_NNJFBVJ3_ae});class r extends zA{constructor(B){let s=typeof B.canisterId=="string"?Y.fromText(B.canisterId):B.canisterId;super({config:Object.assign(Object.assign(Object.assign({},_n),B),{canisterId:s}),service:e});for(let[l,u]of e._fields)this[l]=$s(this,l,u)}}return r}static createActor(A,e){return new(this.createActorClass(A))(e)}};function Yn(t,A){let e=chunk_NNJFBVJ3_ae.decode(t,Rn.Buffer.from(A));switch(e.length){case 0:return;case 1:return e[0];default:return e}}var _n={pollingStrategyFactory:it.defaultStrategy};function $s(t,A,e){let r;e.annotations.includes("query")?r=async(B,...s)=>{var l,u;B=Object.assign(Object.assign({},B),(u=(l=t[RA].config).queryTransform)===null||u===void 0?void 0:u.call(l,A,s,Object.assign(Object.assign({},t[RA].config),B)));let y=B.agent||t[RA].config.agent||Gr(),b=Y.from(B.canisterId||t[RA].config.canisterId),D=chunk_NNJFBVJ3_ae.encode(e.argTypes,s),_=await y.query(b,{methodName:A,arg:D});switch(_.status){case"rejected":throw new xr(b,A,_);case"replied":return Yn(e.retTypes,_.reply.arg)}}:r=async(B,...s)=>{var l,u;B=Object.assign(Object.assign({},B),(u=(l=t[RA].config).callTransform)===null||u===void 0?void 0:u.call(l,A,s,Object.assign(Object.assign({},t[RA].config),B)));let y=B.agent||t[RA].config.agent||Gr(),{canisterId:b,effectiveCanisterId:D,pollingStrategyFactory:_}=Object.assign(Object.assign(Object.assign({},_n),t[RA].config),B),F=Y.from(b),H=D!==void 0?Y.from(D):F,P=chunk_NNJFBVJ3_ae.encode(e.argTypes,s),{requestId:BA,response:R}=await y.call(F,{methodName:A,arg:P,effectiveCanisterId:H});if(!R.ok)throw new Sr(F,A,BA,R);let sA=_(),uA=await Yt(y,H,BA,sA);if(uA!==void 0)return Yn(e.retTypes,uA);if(e.retTypes.length===0)return;throw new Error(`Call was returned undefined, but type [${e.retTypes.join(",")}].`)};let i=(...B)=>r({},...B);return i.withOptions=B=>(...s)=>r(B,...s),i}var Jn=()=>new Je({host:"https://ic0.app",identity:new Ye});var _g=({options:{canisterId:t,serviceOverride:A,certifiedServiceOverride:e,agent:r},idlFactory:i,certifiedIdlFactory:B})=>{let s=r??Jn(),l=A??zA.createActor(i,{agent:s,canisterId:t}),u=e??zA.createActor(B,{agent:s,canisterId:t});return{service:l,certifiedService:u,agent:s}};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
//# sourceMappingURL=chunk-NNJFBVJ3.js.map

;// CONCATENATED MODULE: ./node_modules/@dfinity/nns/dist/esm/chunk-CKIW7YKS.js
var d=({IDL:e})=>{let t=e.Record({id:e.Nat64}),r=e.Variant({Ok:e.Vec(t),Err:e.Text}),n=e.Variant({Ok:e.Null,Err:e.Text}),o=e.Record({error:e.Opt(e.Text),timestamp_seconds:e.Nat64,neuron_id:e.Opt(t)}),a=e.Record({authenticated_principal_id:e.Opt(e.Principal),successfully_transferred_neurons:e.Vec(o),is_whitelisted_for_forwarding:e.Bool,has_donated:e.Bool,failed_transferred_neurons:e.Vec(o),neuron_ids:e.Vec(t),has_claimed:e.Bool,has_forwarded:e.Bool,icpts:e.Nat32}),i=e.Variant({Ok:a,Err:e.Text});return e.Service({balance:e.Func([e.Text],[e.Nat32],[]),claim_neurons:e.Func([e.Text],[r],[]),donate_account:e.Func([e.Text],[n],[]),forward_whitelisted_unclaimed_accounts:e.Func([e.Null],[n],[]),get_account:e.Func([e.Text],[i],[]),get_build_metadata:e.Func([],[e.Text],[]),len:e.Func([],[e.Nat16],[]),total:e.Func([],[e.Nat32],[])})};var l=({IDL:e})=>{let t=e.Record({id:e.Nat64}),r=e.Variant({Ok:e.Vec(t),Err:e.Text}),n=e.Variant({Ok:e.Null,Err:e.Text}),o=e.Record({error:e.Opt(e.Text),timestamp_seconds:e.Nat64,neuron_id:e.Opt(t)}),a=e.Record({authenticated_principal_id:e.Opt(e.Principal),successfully_transferred_neurons:e.Vec(o),is_whitelisted_for_forwarding:e.Bool,has_donated:e.Bool,failed_transferred_neurons:e.Vec(o),neuron_ids:e.Vec(t),has_claimed:e.Bool,has_forwarded:e.Bool,icpts:e.Nat32}),i=e.Variant({Ok:a,Err:e.Text});return e.Service({balance:e.Func([e.Text],[e.Nat32],["query"]),claim_neurons:e.Func([e.Text],[r],[]),donate_account:e.Func([e.Text],[n],[]),forward_whitelisted_unclaimed_accounts:e.Func([e.Null],[n],[]),get_account:e.Func([e.Text],[i],["query"]),get_build_metadata:e.Func([],[e.Text],["query"]),len:e.Func([],[e.Nat16],["query"]),total:e.Func([],[e.Nat32],["query"])})};var c=class{constructor(t){this.service=t}static create(t={}){let{service:r}=u({options:{...t,canisterId:t.canisterId??s},idlFactory:l,certifiedIdlFactory:d});return new c(r)}claimNeurons=async({hexPubKey:t})=>{let r=await this.service.claim_neurons(t);if("Ok"in r)return r.Ok.map(n=>n.id);throw new Error(r.Err)}};
//# sourceMappingURL=chunk-CKIW7YKS.js.map

// EXTERNAL MODULE: ./node_modules/@dfinity/nns/dist/esm/chunk-IPUXUCZB.js
var chunk_IPUXUCZB = __webpack_require__(2490);
;// CONCATENATED MODULE: ./node_modules/@dfinity/nns/dist/esm/chunk-TLWRX3CX.js
var M=(0,chunk_ONAVPXOT.a)(I=>{"use strict";var L=(0,chunk_MGC7CRB4.b)(),E=(0,chunk_MGC7CRB4.c)(),Q=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;I.Buffer=n;I.SlowBuffer=v0;I.INSPECT_MAX_BYTES=50;var R=2147483647;I.kMaxLength=R;n.TYPED_ARRAY_SUPPORT=Z0();!n.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function Z0(){try{let r=new Uint8Array(1),x={foo:function(){return 42}};return Object.setPrototypeOf(x,Uint8Array.prototype),Object.setPrototypeOf(r,x),r.foo()===42}catch{return!1}}Object.defineProperty(n.prototype,"parent",{enumerable:!0,get:function(){if(!!n.isBuffer(this))return this.buffer}});Object.defineProperty(n.prototype,"offset",{enumerable:!0,get:function(){if(!!n.isBuffer(this))return this.byteOffset}});function y(r){if(r>R)throw new RangeError('The value "'+r+'" is invalid for option "size"');let x=new Uint8Array(r);return Object.setPrototypeOf(x,n.prototype),x}function n(r,x,e){if(typeof r=="number"){if(typeof x=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return P(r)}return r0(r,x,e)}n.poolSize=8192;function r0(r,x,e){if(typeof r=="string")return J0(r,x);if(ArrayBuffer.isView(r))return K0(r);if(r==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof r);if(s(r,ArrayBuffer)||r&&s(r.buffer,ArrayBuffer)||typeof SharedArrayBuffer<"u"&&(s(r,SharedArrayBuffer)||r&&s(r.buffer,SharedArrayBuffer)))return D(r,x,e);if(typeof r=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');let t=r.valueOf&&r.valueOf();if(t!=null&&t!==r)return n.from(t,x,e);let c=Q0(r);if(c)return c;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof r[Symbol.toPrimitive]=="function")return n.from(r[Symbol.toPrimitive]("string"),x,e);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof r)}n.from=function(r,x,e){return r0(r,x,e)};Object.setPrototypeOf(n.prototype,Uint8Array.prototype);Object.setPrototypeOf(n,Uint8Array);function t0(r){if(typeof r!="number")throw new TypeError('"size" argument must be of type number');if(r<0)throw new RangeError('The value "'+r+'" is invalid for option "size"')}function z0(r,x,e){return t0(r),r<=0?y(r):x!==void 0?typeof e=="string"?y(r).fill(x,e):y(r).fill(x):y(r)}n.alloc=function(r,x,e){return z0(r,x,e)};function P(r){return t0(r),y(r<0?0:N(r)|0)}n.allocUnsafe=function(r){return P(r)};n.allocUnsafeSlow=function(r){return P(r)};function J0(r,x){if((typeof x!="string"||x==="")&&(x="utf8"),!n.isEncoding(x))throw new TypeError("Unknown encoding: "+x);let e=c0(r,x)|0,t=y(e),c=t.write(r,x);return c!==e&&(t=t.slice(0,c)),t}function _(r){let x=r.length<0?0:N(r.length)|0,e=y(x);for(let t=0;t<x;t+=1)e[t]=r[t]&255;return e}function K0(r){if(s(r,Uint8Array)){let x=new Uint8Array(r);return D(x.buffer,x.byteOffset,x.byteLength)}return _(r)}function D(r,x,e){if(x<0||r.byteLength<x)throw new RangeError('"offset" is outside of buffer bounds');if(r.byteLength<x+(e||0))throw new RangeError('"length" is outside of buffer bounds');let t;return x===void 0&&e===void 0?t=new Uint8Array(r):e===void 0?t=new Uint8Array(r,x):t=new Uint8Array(r,x,e),Object.setPrototypeOf(t,n.prototype),t}function Q0(r){if(n.isBuffer(r)){let x=N(r.length)|0,e=y(x);return e.length===0||r.copy(e,0,0,x),e}if(r.length!==void 0)return typeof r.length!="number"||O(r.length)?y(0):_(r);if(r.type==="Buffer"&&Array.isArray(r.data))return _(r.data)}function N(r){if(r>=R)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+R.toString(16)+" bytes");return r|0}function v0(r){return+r!=r&&(r=0),n.alloc(+r)}n.isBuffer=function(x){return x!=null&&x._isBuffer===!0&&x!==n.prototype};n.compare=function(x,e){if(s(x,Uint8Array)&&(x=n.from(x,x.offset,x.byteLength)),s(e,Uint8Array)&&(e=n.from(e,e.offset,e.byteLength)),!n.isBuffer(x)||!n.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(x===e)return 0;let t=x.length,c=e.length;for(let i=0,f=Math.min(t,c);i<f;++i)if(x[i]!==e[i]){t=x[i],c=e[i];break}return t<c?-1:c<t?1:0};n.isEncoding=function(x){switch(String(x).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}};n.concat=function(x,e){if(!Array.isArray(x))throw new TypeError('"list" argument must be an Array of Buffers');if(x.length===0)return n.alloc(0);let t;if(e===void 0)for(e=0,t=0;t<x.length;++t)e+=x[t].length;let c=n.allocUnsafe(e),i=0;for(t=0;t<x.length;++t){let f=x[t];if(s(f,Uint8Array))i+f.length>c.length?(n.isBuffer(f)||(f=n.from(f)),f.copy(c,i)):Uint8Array.prototype.set.call(c,f,i);else if(n.isBuffer(f))f.copy(c,i);else throw new TypeError('"list" argument must be an Array of Buffers');i+=f.length}return c};function c0(r,x){if(n.isBuffer(r))return r.length;if(ArrayBuffer.isView(r)||s(r,ArrayBuffer))return r.byteLength;if(typeof r!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof r);let e=r.length,t=arguments.length>2&&arguments[2]===!0;if(!t&&e===0)return 0;let c=!1;for(;;)switch(x){case"ascii":case"latin1":case"binary":return e;case"utf8":case"utf-8":return k(r).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return e*2;case"hex":return e>>>1;case"base64":return p0(r).length;default:if(c)return t?-1:k(r).length;x=(""+x).toLowerCase(),c=!0}}n.byteLength=c0;function xx(r,x,e){let t=!1;if((x===void 0||x<0)&&(x=0),x>this.length||((e===void 0||e>this.length)&&(e=this.length),e<=0)||(e>>>=0,x>>>=0,e<=x))return"";for(r||(r="utf8");;)switch(r){case"hex":return ox(this,x,e);case"utf8":case"utf-8":return n0(this,x,e);case"ascii":return dx(this,x,e);case"latin1":case"binary":return ax(this,x,e);case"base64":return nx(this,x,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return bx(this,x,e);default:if(t)throw new TypeError("Unknown encoding: "+r);r=(r+"").toLowerCase(),t=!0}}n.prototype._isBuffer=!0;function w(r,x,e){let t=r[x];r[x]=r[e],r[e]=t}n.prototype.swap16=function(){let x=this.length;if(x%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let e=0;e<x;e+=2)w(this,e,e+1);return this};n.prototype.swap32=function(){let x=this.length;if(x%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let e=0;e<x;e+=4)w(this,e,e+3),w(this,e+1,e+2);return this};n.prototype.swap64=function(){let x=this.length;if(x%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let e=0;e<x;e+=8)w(this,e,e+7),w(this,e+1,e+6),w(this,e+2,e+5),w(this,e+3,e+4);return this};n.prototype.toString=function(){let x=this.length;return x===0?"":arguments.length===0?n0(this,0,x):xx.apply(this,arguments)};n.prototype.toLocaleString=n.prototype.toString;n.prototype.equals=function(x){if(!n.isBuffer(x))throw new TypeError("Argument must be a Buffer");return this===x?!0:n.compare(this,x)===0};n.prototype.inspect=function(){let x="",e=I.INSPECT_MAX_BYTES;return x=this.toString("hex",0,e).replace(/(.{2})/g,"$1 ").trim(),this.length>e&&(x+=" ... "),"<Buffer "+x+">"};Q&&(n.prototype[Q]=n.prototype.inspect);n.prototype.compare=function(x,e,t,c,i){if(s(x,Uint8Array)&&(x=n.from(x,x.offset,x.byteLength)),!n.isBuffer(x))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof x);if(e===void 0&&(e=0),t===void 0&&(t=x?x.length:0),c===void 0&&(c=0),i===void 0&&(i=this.length),e<0||t>x.length||c<0||i>this.length)throw new RangeError("out of range index");if(c>=i&&e>=t)return 0;if(c>=i)return-1;if(e>=t)return 1;if(e>>>=0,t>>>=0,c>>>=0,i>>>=0,this===x)return 0;let f=i-c,d=t-e,u=Math.min(f,d),o=this.slice(c,i),p=x.slice(e,t);for(let a=0;a<u;++a)if(o[a]!==p[a]){f=o[a],d=p[a];break}return f<d?-1:d<f?1:0};function i0(r,x,e,t,c){if(r.length===0)return-1;if(typeof e=="string"?(t=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),e=+e,O(e)&&(e=c?0:r.length-1),e<0&&(e=r.length+e),e>=r.length){if(c)return-1;e=r.length-1}else if(e<0)if(c)e=0;else return-1;if(typeof x=="string"&&(x=n.from(x,t)),n.isBuffer(x))return x.length===0?-1:v(r,x,e,t,c);if(typeof x=="number")return x=x&255,typeof Uint8Array.prototype.indexOf=="function"?c?Uint8Array.prototype.indexOf.call(r,x,e):Uint8Array.prototype.lastIndexOf.call(r,x,e):v(r,[x],e,t,c);throw new TypeError("val must be string, number or Buffer")}function v(r,x,e,t,c){let i=1,f=r.length,d=x.length;if(t!==void 0&&(t=String(t).toLowerCase(),t==="ucs2"||t==="ucs-2"||t==="utf16le"||t==="utf-16le")){if(r.length<2||x.length<2)return-1;i=2,f/=2,d/=2,e/=2}function u(p,a){return i===1?p[a]:p.readUInt16BE(a*i)}let o;if(c){let p=-1;for(o=e;o<f;o++)if(u(r,o)===u(x,p===-1?0:o-p)){if(p===-1&&(p=o),o-p+1===d)return p*i}else p!==-1&&(o-=o-p),p=-1}else for(e+d>f&&(e=f-d),o=e;o>=0;o--){let p=!0;for(let a=0;a<d;a++)if(u(r,o+a)!==u(x,a)){p=!1;break}if(p)return o}return-1}n.prototype.includes=function(x,e,t){return this.indexOf(x,e,t)!==-1};n.prototype.indexOf=function(x,e,t){return i0(this,x,e,t,!0)};n.prototype.lastIndexOf=function(x,e,t){return i0(this,x,e,t,!1)};function ex(r,x,e,t){e=Number(e)||0;let c=r.length-e;t?(t=Number(t),t>c&&(t=c)):t=c;let i=x.length;t>i/2&&(t=i/2);let f;for(f=0;f<t;++f){let d=parseInt(x.substr(f*2,2),16);if(O(d))return f;r[e+f]=d}return f}function rx(r,x,e,t){return C(k(x,r.length-e),r,e,t)}function tx(r,x,e,t){return C(lx(x),r,e,t)}function cx(r,x,e,t){return C(p0(x),r,e,t)}function ix(r,x,e,t){return C(sx(x,r.length-e),r,e,t)}n.prototype.write=function(x,e,t,c){if(e===void 0)c="utf8",t=this.length,e=0;else if(t===void 0&&typeof e=="string")c=e,t=this.length,e=0;else if(isFinite(e))e=e>>>0,isFinite(t)?(t=t>>>0,c===void 0&&(c="utf8")):(c=t,t=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");let i=this.length-e;if((t===void 0||t>i)&&(t=i),x.length>0&&(t<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");c||(c="utf8");let f=!1;for(;;)switch(c){case"hex":return ex(this,x,e,t);case"utf8":case"utf-8":return rx(this,x,e,t);case"ascii":case"latin1":case"binary":return tx(this,x,e,t);case"base64":return cx(this,x,e,t);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ix(this,x,e,t);default:if(f)throw new TypeError("Unknown encoding: "+c);c=(""+c).toLowerCase(),f=!0}};n.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function nx(r,x,e){return x===0&&e===r.length?L.fromByteArray(r):L.fromByteArray(r.slice(x,e))}function n0(r,x,e){e=Math.min(r.length,e);let t=[],c=x;for(;c<e;){let i=r[c],f=null,d=i>239?4:i>223?3:i>191?2:1;if(c+d<=e){let u,o,p,a;switch(d){case 1:i<128&&(f=i);break;case 2:u=r[c+1],(u&192)===128&&(a=(i&31)<<6|u&63,a>127&&(f=a));break;case 3:u=r[c+1],o=r[c+2],(u&192)===128&&(o&192)===128&&(a=(i&15)<<12|(u&63)<<6|o&63,a>2047&&(a<55296||a>57343)&&(f=a));break;case 4:u=r[c+1],o=r[c+2],p=r[c+3],(u&192)===128&&(o&192)===128&&(p&192)===128&&(a=(i&15)<<18|(u&63)<<12|(o&63)<<6|p&63,a>65535&&a<1114112&&(f=a))}}f===null?(f=65533,d=1):f>65535&&(f-=65536,t.push(f>>>10&1023|55296),f=56320|f&1023),t.push(f),c+=d}return fx(t)}var x0=4096;function fx(r){let x=r.length;if(x<=x0)return String.fromCharCode.apply(String,r);let e="",t=0;for(;t<x;)e+=String.fromCharCode.apply(String,r.slice(t,t+=x0));return e}function dx(r,x,e){let t="";e=Math.min(r.length,e);for(let c=x;c<e;++c)t+=String.fromCharCode(r[c]&127);return t}function ax(r,x,e){let t="";e=Math.min(r.length,e);for(let c=x;c<e;++c)t+=String.fromCharCode(r[c]);return t}function ox(r,x,e){let t=r.length;(!x||x<0)&&(x=0),(!e||e<0||e>t)&&(e=t);let c="";for(let i=x;i<e;++i)c+=yx[r[i]];return c}function bx(r,x,e){let t=r.slice(x,e),c="";for(let i=0;i<t.length-1;i+=2)c+=String.fromCharCode(t[i]+t[i+1]*256);return c}n.prototype.slice=function(x,e){let t=this.length;x=~~x,e=e===void 0?t:~~e,x<0?(x+=t,x<0&&(x=0)):x>t&&(x=t),e<0?(e+=t,e<0&&(e=0)):e>t&&(e=t),e<x&&(e=x);let c=this.subarray(x,e);return Object.setPrototypeOf(c,n.prototype),c};function h(r,x,e){if(r%1!==0||r<0)throw new RangeError("offset is not uint");if(r+x>e)throw new RangeError("Trying to access beyond buffer length")}n.prototype.readUintLE=n.prototype.readUIntLE=function(x,e,t){x=x>>>0,e=e>>>0,t||h(x,e,this.length);let c=this[x],i=1,f=0;for(;++f<e&&(i*=256);)c+=this[x+f]*i;return c};n.prototype.readUintBE=n.prototype.readUIntBE=function(x,e,t){x=x>>>0,e=e>>>0,t||h(x,e,this.length);let c=this[x+--e],i=1;for(;e>0&&(i*=256);)c+=this[x+--e]*i;return c};n.prototype.readUint8=n.prototype.readUInt8=function(x,e){return x=x>>>0,e||h(x,1,this.length),this[x]};n.prototype.readUint16LE=n.prototype.readUInt16LE=function(x,e){return x=x>>>0,e||h(x,2,this.length),this[x]|this[x+1]<<8};n.prototype.readUint16BE=n.prototype.readUInt16BE=function(x,e){return x=x>>>0,e||h(x,2,this.length),this[x]<<8|this[x+1]};n.prototype.readUint32LE=n.prototype.readUInt32LE=function(x,e){return x=x>>>0,e||h(x,4,this.length),(this[x]|this[x+1]<<8|this[x+2]<<16)+this[x+3]*16777216};n.prototype.readUint32BE=n.prototype.readUInt32BE=function(x,e){return x=x>>>0,e||h(x,4,this.length),this[x]*16777216+(this[x+1]<<16|this[x+2]<<8|this[x+3])};n.prototype.readBigUInt64LE=m(function(x){x=x>>>0,g(x,"offset");let e=this[x],t=this[x+7];(e===void 0||t===void 0)&&U(x,this.length-8);let c=e+this[++x]*2**8+this[++x]*2**16+this[++x]*2**24,i=this[++x]+this[++x]*2**8+this[++x]*2**16+t*2**24;return BigInt(c)+(BigInt(i)<<BigInt(32))});n.prototype.readBigUInt64BE=m(function(x){x=x>>>0,g(x,"offset");let e=this[x],t=this[x+7];(e===void 0||t===void 0)&&U(x,this.length-8);let c=e*2**24+this[++x]*2**16+this[++x]*2**8+this[++x],i=this[++x]*2**24+this[++x]*2**16+this[++x]*2**8+t;return(BigInt(c)<<BigInt(32))+BigInt(i)});n.prototype.readIntLE=function(x,e,t){x=x>>>0,e=e>>>0,t||h(x,e,this.length);let c=this[x],i=1,f=0;for(;++f<e&&(i*=256);)c+=this[x+f]*i;return i*=128,c>=i&&(c-=Math.pow(2,8*e)),c};n.prototype.readIntBE=function(x,e,t){x=x>>>0,e=e>>>0,t||h(x,e,this.length);let c=e,i=1,f=this[x+--c];for(;c>0&&(i*=256);)f+=this[x+--c]*i;return i*=128,f>=i&&(f-=Math.pow(2,8*e)),f};n.prototype.readInt8=function(x,e){return x=x>>>0,e||h(x,1,this.length),this[x]&128?(255-this[x]+1)*-1:this[x]};n.prototype.readInt16LE=function(x,e){x=x>>>0,e||h(x,2,this.length);let t=this[x]|this[x+1]<<8;return t&32768?t|4294901760:t};n.prototype.readInt16BE=function(x,e){x=x>>>0,e||h(x,2,this.length);let t=this[x+1]|this[x]<<8;return t&32768?t|4294901760:t};n.prototype.readInt32LE=function(x,e){return x=x>>>0,e||h(x,4,this.length),this[x]|this[x+1]<<8|this[x+2]<<16|this[x+3]<<24};n.prototype.readInt32BE=function(x,e){return x=x>>>0,e||h(x,4,this.length),this[x]<<24|this[x+1]<<16|this[x+2]<<8|this[x+3]};n.prototype.readBigInt64LE=m(function(x){x=x>>>0,g(x,"offset");let e=this[x],t=this[x+7];(e===void 0||t===void 0)&&U(x,this.length-8);let c=this[x+4]+this[x+5]*2**8+this[x+6]*2**16+(t<<24);return(BigInt(c)<<BigInt(32))+BigInt(e+this[++x]*2**8+this[++x]*2**16+this[++x]*2**24)});n.prototype.readBigInt64BE=m(function(x){x=x>>>0,g(x,"offset");let e=this[x],t=this[x+7];(e===void 0||t===void 0)&&U(x,this.length-8);let c=(e<<24)+this[++x]*2**16+this[++x]*2**8+this[++x];return(BigInt(c)<<BigInt(32))+BigInt(this[++x]*2**24+this[++x]*2**16+this[++x]*2**8+t)});n.prototype.readFloatLE=function(x,e){return x=x>>>0,e||h(x,4,this.length),E.read(this,x,!0,23,4)};n.prototype.readFloatBE=function(x,e){return x=x>>>0,e||h(x,4,this.length),E.read(this,x,!1,23,4)};n.prototype.readDoubleLE=function(x,e){return x=x>>>0,e||h(x,8,this.length),E.read(this,x,!0,52,8)};n.prototype.readDoubleBE=function(x,e){return x=x>>>0,e||h(x,8,this.length),E.read(this,x,!1,52,8)};function l(r,x,e,t,c,i){if(!n.isBuffer(r))throw new TypeError('"buffer" argument must be a Buffer instance');if(x>c||x<i)throw new RangeError('"value" argument is out of bounds');if(e+t>r.length)throw new RangeError("Index out of range")}n.prototype.writeUintLE=n.prototype.writeUIntLE=function(x,e,t,c){if(x=+x,e=e>>>0,t=t>>>0,!c){let d=Math.pow(2,8*t)-1;l(this,x,e,t,d,0)}let i=1,f=0;for(this[e]=x&255;++f<t&&(i*=256);)this[e+f]=x/i&255;return e+t};n.prototype.writeUintBE=n.prototype.writeUIntBE=function(x,e,t,c){if(x=+x,e=e>>>0,t=t>>>0,!c){let d=Math.pow(2,8*t)-1;l(this,x,e,t,d,0)}let i=t-1,f=1;for(this[e+i]=x&255;--i>=0&&(f*=256);)this[e+i]=x/f&255;return e+t};n.prototype.writeUint8=n.prototype.writeUInt8=function(x,e,t){return x=+x,e=e>>>0,t||l(this,x,e,1,255,0),this[e]=x&255,e+1};n.prototype.writeUint16LE=n.prototype.writeUInt16LE=function(x,e,t){return x=+x,e=e>>>0,t||l(this,x,e,2,65535,0),this[e]=x&255,this[e+1]=x>>>8,e+2};n.prototype.writeUint16BE=n.prototype.writeUInt16BE=function(x,e,t){return x=+x,e=e>>>0,t||l(this,x,e,2,65535,0),this[e]=x>>>8,this[e+1]=x&255,e+2};n.prototype.writeUint32LE=n.prototype.writeUInt32LE=function(x,e,t){return x=+x,e=e>>>0,t||l(this,x,e,4,4294967295,0),this[e+3]=x>>>24,this[e+2]=x>>>16,this[e+1]=x>>>8,this[e]=x&255,e+4};n.prototype.writeUint32BE=n.prototype.writeUInt32BE=function(x,e,t){return x=+x,e=e>>>0,t||l(this,x,e,4,4294967295,0),this[e]=x>>>24,this[e+1]=x>>>16,this[e+2]=x>>>8,this[e+3]=x&255,e+4};function f0(r,x,e,t,c){u0(x,t,c,r,e,7);let i=Number(x&BigInt(4294967295));r[e++]=i,i=i>>8,r[e++]=i,i=i>>8,r[e++]=i,i=i>>8,r[e++]=i;let f=Number(x>>BigInt(32)&BigInt(4294967295));return r[e++]=f,f=f>>8,r[e++]=f,f=f>>8,r[e++]=f,f=f>>8,r[e++]=f,e}function d0(r,x,e,t,c){u0(x,t,c,r,e,7);let i=Number(x&BigInt(4294967295));r[e+7]=i,i=i>>8,r[e+6]=i,i=i>>8,r[e+5]=i,i=i>>8,r[e+4]=i;let f=Number(x>>BigInt(32)&BigInt(4294967295));return r[e+3]=f,f=f>>8,r[e+2]=f,f=f>>8,r[e+1]=f,f=f>>8,r[e]=f,e+8}n.prototype.writeBigUInt64LE=m(function(x,e=0){return f0(this,x,e,BigInt(0),BigInt("0xffffffffffffffff"))});n.prototype.writeBigUInt64BE=m(function(x,e=0){return d0(this,x,e,BigInt(0),BigInt("0xffffffffffffffff"))});n.prototype.writeIntLE=function(x,e,t,c){if(x=+x,e=e>>>0,!c){let u=Math.pow(2,8*t-1);l(this,x,e,t,u-1,-u)}let i=0,f=1,d=0;for(this[e]=x&255;++i<t&&(f*=256);)x<0&&d===0&&this[e+i-1]!==0&&(d=1),this[e+i]=(x/f>>0)-d&255;return e+t};n.prototype.writeIntBE=function(x,e,t,c){if(x=+x,e=e>>>0,!c){let u=Math.pow(2,8*t-1);l(this,x,e,t,u-1,-u)}let i=t-1,f=1,d=0;for(this[e+i]=x&255;--i>=0&&(f*=256);)x<0&&d===0&&this[e+i+1]!==0&&(d=1),this[e+i]=(x/f>>0)-d&255;return e+t};n.prototype.writeInt8=function(x,e,t){return x=+x,e=e>>>0,t||l(this,x,e,1,127,-128),x<0&&(x=255+x+1),this[e]=x&255,e+1};n.prototype.writeInt16LE=function(x,e,t){return x=+x,e=e>>>0,t||l(this,x,e,2,32767,-32768),this[e]=x&255,this[e+1]=x>>>8,e+2};n.prototype.writeInt16BE=function(x,e,t){return x=+x,e=e>>>0,t||l(this,x,e,2,32767,-32768),this[e]=x>>>8,this[e+1]=x&255,e+2};n.prototype.writeInt32LE=function(x,e,t){return x=+x,e=e>>>0,t||l(this,x,e,4,2147483647,-2147483648),this[e]=x&255,this[e+1]=x>>>8,this[e+2]=x>>>16,this[e+3]=x>>>24,e+4};n.prototype.writeInt32BE=function(x,e,t){return x=+x,e=e>>>0,t||l(this,x,e,4,2147483647,-2147483648),x<0&&(x=4294967295+x+1),this[e]=x>>>24,this[e+1]=x>>>16,this[e+2]=x>>>8,this[e+3]=x&255,e+4};n.prototype.writeBigInt64LE=m(function(x,e=0){return f0(this,x,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});n.prototype.writeBigInt64BE=m(function(x,e=0){return d0(this,x,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function a0(r,x,e,t,c,i){if(e+t>r.length)throw new RangeError("Index out of range");if(e<0)throw new RangeError("Index out of range")}function o0(r,x,e,t,c){return x=+x,e=e>>>0,c||a0(r,x,e,4,34028234663852886e22,-34028234663852886e22),E.write(r,x,e,t,23,4),e+4}n.prototype.writeFloatLE=function(x,e,t){return o0(this,x,e,!0,t)};n.prototype.writeFloatBE=function(x,e,t){return o0(this,x,e,!1,t)};function b0(r,x,e,t,c){return x=+x,e=e>>>0,c||a0(r,x,e,8,17976931348623157e292,-17976931348623157e292),E.write(r,x,e,t,52,8),e+8}n.prototype.writeDoubleLE=function(x,e,t){return b0(this,x,e,!0,t)};n.prototype.writeDoubleBE=function(x,e,t){return b0(this,x,e,!1,t)};n.prototype.copy=function(x,e,t,c){if(!n.isBuffer(x))throw new TypeError("argument should be a Buffer");if(t||(t=0),!c&&c!==0&&(c=this.length),e>=x.length&&(e=x.length),e||(e=0),c>0&&c<t&&(c=t),c===t||x.length===0||this.length===0)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(t<0||t>=this.length)throw new RangeError("Index out of range");if(c<0)throw new RangeError("sourceEnd out of bounds");c>this.length&&(c=this.length),x.length-e<c-t&&(c=x.length-e+t);let i=c-t;return this===x&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(e,t,c):Uint8Array.prototype.set.call(x,this.subarray(t,c),e),i};n.prototype.fill=function(x,e,t,c){if(typeof x=="string"){if(typeof e=="string"?(c=e,e=0,t=this.length):typeof t=="string"&&(c=t,t=this.length),c!==void 0&&typeof c!="string")throw new TypeError("encoding must be a string");if(typeof c=="string"&&!n.isEncoding(c))throw new TypeError("Unknown encoding: "+c);if(x.length===1){let f=x.charCodeAt(0);(c==="utf8"&&f<128||c==="latin1")&&(x=f)}}else typeof x=="number"?x=x&255:typeof x=="boolean"&&(x=Number(x));if(e<0||this.length<e||this.length<t)throw new RangeError("Out of range index");if(t<=e)return this;e=e>>>0,t=t===void 0?this.length:t>>>0,x||(x=0);let i;if(typeof x=="number")for(i=e;i<t;++i)this[i]=x;else{let f=n.isBuffer(x)?x:n.from(x,c),d=f.length;if(d===0)throw new TypeError('The value "'+x+'" is invalid for argument "value"');for(i=0;i<t-e;++i)this[i+e]=f[i%d]}return this};var B={};function $(r,x,e){B[r]=class extends e{constructor(){super(),Object.defineProperty(this,"message",{value:x.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${r}]`,this.stack,delete this.name}get code(){return r}set code(c){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:c,writable:!0})}toString(){return`${this.name} [${r}]: ${this.message}`}}}$("ERR_BUFFER_OUT_OF_BOUNDS",function(r){return r?`${r} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError);$("ERR_INVALID_ARG_TYPE",function(r,x){return`The "${r}" argument must be of type number. Received type ${typeof x}`},TypeError);$("ERR_OUT_OF_RANGE",function(r,x,e){let t=`The value of "${r}" is out of range.`,c=e;return Number.isInteger(e)&&Math.abs(e)>2**32?c=e0(String(e)):typeof e=="bigint"&&(c=String(e),(e>BigInt(2)**BigInt(32)||e<-(BigInt(2)**BigInt(32)))&&(c=e0(c)),c+="n"),t+=` It must be ${x}. Received ${c}`,t},RangeError);function e0(r){let x="",e=r.length,t=r[0]==="-"?1:0;for(;e>=t+4;e-=3)x=`_${r.slice(e-3,e)}${x}`;return`${r.slice(0,e)}${x}`}function ux(r,x,e){g(x,"offset"),(r[x]===void 0||r[x+e]===void 0)&&U(x,r.length-(e+1))}function u0(r,x,e,t,c,i){if(r>e||r<x){let f=typeof x=="bigint"?"n":"",d;throw i>3?x===0||x===BigInt(0)?d=`>= 0${f} and < 2${f} ** ${(i+1)*8}${f}`:d=`>= -(2${f} ** ${(i+1)*8-1}${f}) and < 2 ** ${(i+1)*8-1}${f}`:d=`>= ${x}${f} and <= ${e}${f}`,new B.ERR_OUT_OF_RANGE("value",d,r)}ux(t,c,i)}function g(r,x){if(typeof r!="number")throw new B.ERR_INVALID_ARG_TYPE(x,"number",r)}function U(r,x,e){throw Math.floor(r)!==r?(g(r,e),new B.ERR_OUT_OF_RANGE(e||"offset","an integer",r)):x<0?new B.ERR_BUFFER_OUT_OF_BOUNDS:new B.ERR_OUT_OF_RANGE(e||"offset",`>= ${e?1:0} and <= ${x}`,r)}var px=/[^+/0-9A-Za-z-_]/g;function hx(r){if(r=r.split("=")[0],r=r.trim().replace(px,""),r.length<2)return"";for(;r.length%4!==0;)r=r+"=";return r}function k(r,x){x=x||1/0;let e,t=r.length,c=null,i=[];for(let f=0;f<t;++f){if(e=r.charCodeAt(f),e>55295&&e<57344){if(!c){if(e>56319){(x-=3)>-1&&i.push(239,191,189);continue}else if(f+1===t){(x-=3)>-1&&i.push(239,191,189);continue}c=e;continue}if(e<56320){(x-=3)>-1&&i.push(239,191,189),c=e;continue}e=(c-55296<<10|e-56320)+65536}else c&&(x-=3)>-1&&i.push(239,191,189);if(c=null,e<128){if((x-=1)<0)break;i.push(e)}else if(e<2048){if((x-=2)<0)break;i.push(e>>6|192,e&63|128)}else if(e<65536){if((x-=3)<0)break;i.push(e>>12|224,e>>6&63|128,e&63|128)}else if(e<1114112){if((x-=4)<0)break;i.push(e>>18|240,e>>12&63|128,e>>6&63|128,e&63|128)}else throw new Error("Invalid code point")}return i}function lx(r){let x=[];for(let e=0;e<r.length;++e)x.push(r.charCodeAt(e)&255);return x}function sx(r,x){let e,t,c,i=[];for(let f=0;f<r.length&&!((x-=2)<0);++f)e=r.charCodeAt(f),t=e>>8,c=e%256,i.push(c),i.push(t);return i}function p0(r){return L.toByteArray(hx(r))}function C(r,x,e,t){let c;for(c=0;c<t&&!(c+e>=x.length||c>=r.length);++c)x[c+e]=r[c];return c}function s(r,x){return r instanceof x||r!=null&&r.constructor!=null&&r.constructor.name!=null&&r.constructor.name===x.name}function O(r){return r!==r}var yx=function(){let r="0123456789abcdef",x=new Array(256);for(let e=0;e<16;++e){let t=e*16;for(let c=0;c<16;++c)x[t+c]=r[e]+r[c]}return x}();function m(r){return typeof BigInt>"u"?mx:r}function mx(){throw new Error("BigInt not supported")}});var j0=(0,chunk_ONAVPXOT.c)((0,chunk_MGC7CRB4.a)()),Y0=(0,chunk_ONAVPXOT.c)((0,chunk_IPUXUCZB.c)());var J=(0,chunk_ONAVPXOT.c)(M());var wx=(r,x=0)=>{let e=~~x,t=0;for(let c=0;c<r.length;c++)t+=r[c];return e+=t%256,e%256},h0=wx;var l0=(0,chunk_ONAVPXOT.c)(M(),1),Bx=(r,x)=>l0.Buffer.from(r,x),G=Bx;function b(r,x){let e=(t,c)=>x(G(t),c)>>>0;return e.signed=(t,c)=>x(G(t),c),e.unsigned=e,e.model=r,e}var s0=b("crc1",h0);var j=[0,7,14,9,28,27,18,21,56,63,54,49,36,35,42,45,112,119,126,121,108,107,98,101,72,79,70,65,84,83,90,93,224,231,238,233,252,251,242,245,216,223,214,209,196,195,202,205,144,151,158,153,140,139,130,133,168,175,166,161,180,179,186,189,199,192,201,206,219,220,213,210,255,248,241,246,227,228,237,234,183,176,185,190,171,172,165,162,143,136,129,134,147,148,157,154,39,32,41,46,59,60,53,50,31,24,17,22,3,4,13,10,87,80,89,94,75,76,69,66,111,104,97,102,115,116,125,122,137,142,135,128,149,146,155,156,177,182,191,184,173,170,163,164,249,254,247,240,229,226,235,236,193,198,207,200,221,218,211,212,105,110,103,96,117,114,123,124,81,86,95,88,77,74,67,68,25,30,23,16,5,2,11,12,33,38,47,40,61,58,51,52,78,73,64,71,82,85,92,91,118,113,120,127,106,109,100,99,62,57,48,55,34,37,44,43,6,1,8,15,26,29,20,19,174,169,160,167,178,181,188,187,150,145,152,159,138,141,132,131,222,217,208,215,194,197,204,203,230,225,232,239,250,253,244,243];typeof Int32Array<"u"&&(j=new Int32Array(j));var Ex=(r,x=0)=>{let e=~~x;for(let t=0;t<r.length;t++)e=j[(e^r[t])&255]&255;return e},y0=Ex;var m0=b("crc-8",y0);var chunk_TLWRX3CX_Y=[0,94,188,226,97,63,221,131,194,156,126,32,163,253,31,65,157,195,33,127,252,162,64,30,95,1,227,189,62,96,130,220,35,125,159,193,66,28,254,160,225,191,93,3,128,222,60,98,190,224,2,92,223,129,99,61,124,34,192,158,29,67,161,255,70,24,250,164,39,121,155,197,132,218,56,102,229,187,89,7,219,133,103,57,186,228,6,88,25,71,165,251,120,38,196,154,101,59,217,135,4,90,184,230,167,249,27,69,198,152,122,36,248,166,68,26,153,199,37,123,58,100,134,216,91,5,231,185,140,210,48,110,237,179,81,15,78,16,242,172,47,113,147,205,17,79,173,243,112,46,204,146,211,141,111,49,178,236,14,80,175,241,19,77,206,144,114,44,109,51,209,143,12,82,176,238,50,108,142,208,83,13,239,177,240,174,76,18,145,207,45,115,202,148,118,40,171,245,23,73,8,86,180,234,105,55,213,139,87,9,235,181,54,104,138,212,149,203,41,119,244,170,72,22,233,183,85,11,136,214,52,106,43,117,151,201,74,20,246,168,116,42,200,150,21,75,169,247,182,232,10,84,215,137,107,53];typeof Int32Array<"u"&&(chunk_TLWRX3CX_Y=new Int32Array(chunk_TLWRX3CX_Y));var gx=(r,x=0)=>{let e=~~x;for(let t=0;t<r.length;t++)e=chunk_TLWRX3CX_Y[(e^r[t])&255]&255;return e},w0=gx;var B0=b("dallas-1-wire",w0);var q=[0,49345,49537,320,49921,960,640,49729,50689,1728,1920,51009,1280,50625,50305,1088,52225,3264,3456,52545,3840,53185,52865,3648,2560,51905,52097,2880,51457,2496,2176,51265,55297,6336,6528,55617,6912,56257,55937,6720,7680,57025,57217,8e3,56577,7616,7296,56385,5120,54465,54657,5440,55041,6080,5760,54849,53761,4800,4992,54081,4352,53697,53377,4160,61441,12480,12672,61761,13056,62401,62081,12864,13824,63169,63361,14144,62721,13760,13440,62529,15360,64705,64897,15680,65281,16320,16e3,65089,64001,15040,15232,64321,14592,63937,63617,14400,10240,59585,59777,10560,60161,11200,10880,59969,60929,11968,12160,61249,11520,60865,60545,11328,58369,9408,9600,58689,9984,59329,59009,9792,8704,58049,58241,9024,57601,8640,8320,57409,40961,24768,24960,41281,25344,41921,41601,25152,26112,42689,42881,26432,42241,26048,25728,42049,27648,44225,44417,27968,44801,28608,28288,44609,43521,27328,27520,43841,26880,43457,43137,26688,30720,47297,47489,31040,47873,31680,31360,47681,48641,32448,32640,48961,32e3,48577,48257,31808,46081,29888,30080,46401,30464,47041,46721,30272,29184,45761,45953,29504,45313,29120,28800,45121,20480,37057,37249,20800,37633,21440,21120,37441,38401,22208,22400,38721,21760,38337,38017,21568,39937,23744,23936,40257,24320,40897,40577,24128,23040,39617,39809,23360,39169,22976,22656,38977,34817,18624,18816,35137,19200,35777,35457,19008,19968,36545,36737,20288,36097,19904,19584,35905,17408,33985,34177,17728,34561,18368,18048,34369,33281,17088,17280,33601,16640,33217,32897,16448];typeof Int32Array<"u"&&(q=new Int32Array(q));var Ix=(r,x=0)=>{let e=~~x;for(let t=0;t<r.length;t++)e=(q[(e^r[t])&255]^e>>8)&65535;return e},E0=Ix;var g0=b("crc-16",E0);var H=[0,4129,8258,12387,16516,20645,24774,28903,33032,37161,41290,45419,49548,53677,57806,61935,4657,528,12915,8786,21173,17044,29431,25302,37689,33560,45947,41818,54205,50076,62463,58334,9314,13379,1056,5121,25830,29895,17572,21637,42346,46411,34088,38153,58862,62927,50604,54669,13907,9842,5649,1584,30423,26358,22165,18100,46939,42874,38681,34616,63455,59390,55197,51132,18628,22757,26758,30887,2112,6241,10242,14371,51660,55789,59790,63919,35144,39273,43274,47403,23285,19156,31415,27286,6769,2640,14899,10770,56317,52188,64447,60318,39801,35672,47931,43802,27814,31879,19684,23749,11298,15363,3168,7233,60846,64911,52716,56781,44330,48395,36200,40265,32407,28342,24277,20212,15891,11826,7761,3696,65439,61374,57309,53244,48923,44858,40793,36728,37256,33193,45514,41451,53516,49453,61774,57711,4224,161,12482,8419,20484,16421,28742,24679,33721,37784,41979,46042,49981,54044,58239,62302,689,4752,8947,13010,16949,21012,25207,29270,46570,42443,38312,34185,62830,58703,54572,50445,13538,9411,5280,1153,29798,25671,21540,17413,42971,47098,34713,38840,59231,63358,50973,55100,9939,14066,1681,5808,26199,30326,17941,22068,55628,51565,63758,59695,39368,35305,47498,43435,22596,18533,30726,26663,6336,2273,14466,10403,52093,56156,60223,64286,35833,39896,43963,48026,19061,23124,27191,31254,2801,6864,10931,14994,64814,60687,56684,52557,48554,44427,40424,36297,31782,27655,23652,19525,15522,11395,7392,3265,61215,65342,53085,57212,44955,49082,36825,40952,28183,32310,20053,24180,11923,16050,3793,7920];typeof Int32Array<"u"&&(H=new Int32Array(H));var Ax=(r,x)=>{let e=typeof x<"u"?~~x:65535;for(let t=0;t<r.length;t++)e=(H[(e>>8^r[t])&255]^e<<8)&65535;return e},I0=Ax;var A0=b("ccitt",I0);var chunk_TLWRX3CX_W=[0,49345,49537,320,49921,960,640,49729,50689,1728,1920,51009,1280,50625,50305,1088,52225,3264,3456,52545,3840,53185,52865,3648,2560,51905,52097,2880,51457,2496,2176,51265,55297,6336,6528,55617,6912,56257,55937,6720,7680,57025,57217,8e3,56577,7616,7296,56385,5120,54465,54657,5440,55041,6080,5760,54849,53761,4800,4992,54081,4352,53697,53377,4160,61441,12480,12672,61761,13056,62401,62081,12864,13824,63169,63361,14144,62721,13760,13440,62529,15360,64705,64897,15680,65281,16320,16e3,65089,64001,15040,15232,64321,14592,63937,63617,14400,10240,59585,59777,10560,60161,11200,10880,59969,60929,11968,12160,61249,11520,60865,60545,11328,58369,9408,9600,58689,9984,59329,59009,9792,8704,58049,58241,9024,57601,8640,8320,57409,40961,24768,24960,41281,25344,41921,41601,25152,26112,42689,42881,26432,42241,26048,25728,42049,27648,44225,44417,27968,44801,28608,28288,44609,43521,27328,27520,43841,26880,43457,43137,26688,30720,47297,47489,31040,47873,31680,31360,47681,48641,32448,32640,48961,32e3,48577,48257,31808,46081,29888,30080,46401,30464,47041,46721,30272,29184,45761,45953,29504,45313,29120,28800,45121,20480,37057,37249,20800,37633,21440,21120,37441,38401,22208,22400,38721,21760,38337,38017,21568,39937,23744,23936,40257,24320,40897,40577,24128,23040,39617,39809,23360,39169,22976,22656,38977,34817,18624,18816,35137,19200,35777,35457,19008,19968,36545,36737,20288,36097,19904,19584,35905,17408,33985,34177,17728,34561,18368,18048,34369,33281,17088,17280,33601,16640,33217,32897,16448];typeof Int32Array<"u"&&(chunk_TLWRX3CX_W=new Int32Array(chunk_TLWRX3CX_W));var Ux=(r,x)=>{let e=typeof x<"u"?~~x:65535;for(let t=0;t<r.length;t++)e=(chunk_TLWRX3CX_W[(e^r[t])&255]^e>>8)&65535;return e},U0=Ux;var F0=b("crc-16-modbus",U0);var Fx=(r,x)=>{let e=typeof x<"u"?~~x:0;for(let t=0;t<r.length;t++){let c=e>>>8&255;c^=r[t]&255,c^=c>>>4,e=e<<8&65535,e^=c,c=c<<5&65535,e^=c,c=c<<7&65535,e^=c}return e},T0=Fx;var R0=b("xmodem",T0);var chunk_TLWRX3CX_V=[0,4489,8978,12955,17956,22445,25910,29887,35912,40385,44890,48851,51820,56293,59774,63735,4225,264,13203,8730,22181,18220,30135,25662,40137,36160,49115,44626,56045,52068,63999,59510,8450,12427,528,5017,26406,30383,17460,21949,44362,48323,36440,40913,60270,64231,51324,55797,12675,8202,4753,792,30631,26158,21685,17724,48587,44098,40665,36688,64495,60006,55549,51572,16900,21389,24854,28831,1056,5545,10034,14011,52812,57285,60766,64727,34920,39393,43898,47859,21125,17164,29079,24606,5281,1320,14259,9786,57037,53060,64991,60502,39145,35168,48123,43634,25350,29327,16404,20893,9506,13483,1584,6073,61262,65223,52316,56789,43370,47331,35448,39921,29575,25102,20629,16668,13731,9258,5809,1848,65487,60998,56541,52564,47595,43106,39673,35696,33800,38273,42778,46739,49708,54181,57662,61623,2112,6601,11090,15067,20068,24557,28022,31999,38025,34048,47003,42514,53933,49956,61887,57398,6337,2376,15315,10842,24293,20332,32247,27774,42250,46211,34328,38801,58158,62119,49212,53685,10562,14539,2640,7129,28518,32495,19572,24061,46475,41986,38553,34576,62383,57894,53437,49460,14787,10314,6865,2904,32743,28270,23797,19836,50700,55173,58654,62615,32808,37281,41786,45747,19012,23501,26966,30943,3168,7657,12146,16123,54925,50948,62879,58390,37033,33056,46011,41522,23237,19276,31191,26718,7393,3432,16371,11898,59150,63111,50204,54677,41258,45219,33336,37809,27462,31439,18516,23005,11618,15595,3696,8185,63375,58886,54429,50452,45483,40994,37561,33584,31687,27214,22741,18780,15843,11370,7921,3960];typeof Int32Array<"u"&&(chunk_TLWRX3CX_V=new Int32Array(chunk_TLWRX3CX_V));var Tx=(r,x)=>{let e=typeof x<"u"?~~x:0;for(let t=0;t<r.length;t++)e=(chunk_TLWRX3CX_V[(e^r[t])&255]^e>>8)&65535;return e},C0=Tx;var S0=b("kermit",C0);var X=[0,8801531,9098509,825846,9692897,1419802,1651692,10452759,10584377,2608578,2839604,11344079,3303384,11807523,12104405,4128302,12930697,4391538,5217156,13227903,5679208,13690003,14450021,5910942,6606768,14844747,15604413,6837830,16197969,7431594,8256604,16494759,840169,9084178,8783076,18463,10434312,1670131,1434117,9678590,11358416,2825259,2590173,10602790,4109873,12122826,11821884,3289031,13213536,5231515,4409965,12912278,5929345,14431610,13675660,5693559,6823513,15618722,14863188,6588335,16513208,8238147,7417269,16212302,1680338,10481449,9664223,1391140,9061683,788936,36926,8838341,12067563,4091408,3340262,11844381,2868234,11372785,10555655,2579964,14478683,5939616,5650518,13661357,5180346,13190977,12967607,4428364,8219746,16457881,16234863,7468436,15633027,6866552,6578062,14816117,1405499,9649856,10463030,1698765,8819930,55329,803287,9047340,11858690,3325945,4072975,12086004,2561507,10574104,11387118,2853909,13647026,5664841,5958079,14460228,4446803,12949160,13176670,5194661,7454091,16249200,16476294,8201341,14834538,6559633,6852199,15647388,3360676,11864927,12161705,4185682,10527045,2551230,2782280,11286707,9619101,1346150,1577872,10379115,73852,8875143,9172337,899466,16124205,7357910,8182816,16421083,6680524,14918455,15678145,6911546,5736468,13747439,14507289,5968354,12873461,4334094,5159928,13170435,4167245,12180150,11879232,3346363,11301036,2767959,2532769,10545498,10360692,1596303,1360505,9604738,913813,9157998,8856728,92259,16439492,8164415,7343561,16138546,6897189,15692510,14936872,6662099,5986813,14488838,13733104,5750795,13156124,5174247,4352529,12855018,2810998,11315341,10498427,2522496,12124823,4148844,3397530,11901793,9135439,862644,110658,8912057,1606574,10407765,9590435,1317464,15706879,6940164,6651890,14889737,8145950,16384229,16161043,7394792,5123014,13133629,12910283,4370992,14535975,5997020,5707818,13718737,2504095,10516836,11329682,2796649,11916158,3383173,4130419,12143240,8893606,129117,876971,9121104,1331783,9576124,10389322,1625009,14908182,6633453,6925851,15721184,7380471,16175372,16402682,8127489,4389423,12891860,13119266,5137369,13704398,5722165,6015427,14517560];typeof Int32Array<"u"&&(X=new Int32Array(X));var Rx=(r,x)=>{let e=typeof x<"u"?~~x:11994318;for(let t=0;t<r.length;t++)e=(X[(e>>16^r[t])&255]^e<<8)&16777215;return e},L0=Rx;var _0=b("crc-24",L0);var Z=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];typeof Int32Array<"u"&&(Z=new Int32Array(Z));var Cx=(r,x)=>{let e=x===0?0:~~x^-1;for(let t=0;t<r.length;t++)e=Z[(e^r[t])&255]^e>>>8;return e^-1},D0=Cx;var k0=b("crc-32",D0);var z=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];typeof Int32Array<"u"&&(z=new Int32Array(z));var Sx=(r,x=-1)=>{let e=x===0?0:~~x;for(let t=0;t<r.length;t++)e=z[(e^r[t])&255]^e>>>8;return e},P0=Sx;var N0=b("jam",P0);var $0={crc1:s0,crc8:m0,crc81wire:B0,crc16:g0,crc16ccitt:A0,crc16modbus:F0,crc16xmodem:R0,crc16kermit:S0,crc24:_0,crc32:k0,crcjam:N0};var Me=r=>{let x=new DataView(r.buffer,r.byteOffset,r.byteLength);if(typeof x.getBigUint64=="function")return x.getBigUint64(0);{let e=BigInt(x.getUint32(0)),t=BigInt(x.getUint32(4));return(e<<BigInt(32))+t}},Ge=r=>{let x=new Uint8Array(r);return Array.from(x)},chunk_TLWRX3CX_je=r=>new Uint8Array(r);var O0=r=>Array.from(r).map(x=>x.charCodeAt(0)),M0=r=>r.reduce((x,e)=>x+e.toString(16).padStart(2,"0"),""),G0=r=>{let x=new ArrayBuffer(4);return new DataView(x).setUint32(0,$0.crc32(J.Buffer.from(r)),!1),J.Buffer.from(x)};var F=class{constructor(x){this.bytes=x}static fromHex(x){return new F(Uint8Array.from(Buffer.from(x,"hex")))}static fromPrincipal({principal:x,subAccount:e=S.ZERO}){let t=O0(`
account-id`),c=j0.sha224.create();c.update([...t,...x.toUint8Array(),...e.toUint8Array()]);let i=new Uint8Array(c.array()),f=G0(i),d=new Uint8Array([...f,...i]);return new F(d)}toProto(){let x=new Y0.AccountIdentifier;return x.setHash(this.bytes),x}toHex(){return M0(this.bytes)}toUint8Array(){return this.bytes}toNumbers(){return Array.from(this.bytes)}},A=class{constructor(x){this.bytes=x}static fromBytes(x){return x.length!=32?Error("Subaccount length must be 32-bytes"):new A(x)}static fromPrincipal(x){let e=new Uint8Array(32).fill(0),t=x.toUint8Array();e[0]=t.length;for(let c=0;c<t.length;c++)e[1+c]=t[c];return new A(e)}static fromID(x){if(x<0||x>255)throw"Subaccount ID must be >= 0 and <= 255";let e=new Uint8Array(32).fill(0);return e[31]=x,new A(e)}toUint8Array(){return this.bytes}},S=A;(0,chunk_ONAVPXOT.d)(S,"ZERO",A.fromID(0));
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
//# sourceMappingURL=chunk-TLWRX3CX.js.map

;// CONCATENATED MODULE: ./node_modules/@dfinity/nns/dist/esm/chunk-FZGMZSQZ.js
var chunk_FZGMZSQZ_l=async({agent:s,canisterId:t,methodName:r,arg:a})=>{let e=await s.call(t,{methodName:r,arg:a,effectiveCanisterId:t});if(!e.response.ok)throw new Error(["Call failed:",`  Method: ${r}`,`  Canister ID: ${t}`,`  Request ID: ${e.requestId}`,`  HTTP status code: ${e.response.status}`,`  HTTP status text: ${e.response.statusText}`].join(`
`));let o=await Hn.pollForResponse(s,t,e.requestId,Hn.defaultStrategy());return new Uint8Array(o)},p=async({agent:s,canisterId:t,methodName:r,arg:a})=>{let e=await s.query(t,{methodName:r,arg:a});if(e.status=="rejected")throw new Error(["Call failed:",`  Method: ${r}`,`  Canister ID: ${t}`,`  HTTP status code: ${e.reject_code}`,`  HTTP status text: ${e.reject_message}`].join(`
`));return new Uint8Array(e.reply.arg)};
//# sourceMappingURL=chunk-FZGMZSQZ.js.map

;// CONCATENATED MODULE: ./node_modules/@dfinity/nns/dist/esm/chunk-RHCXRQFK.js
var _=(0,chunk_ONAVPXOT.c)((0,chunk_IPUXUCZB.c)());var chunk_RHCXRQFK_p=BigInt(1095062083),E=BigInt(1347768404),T=BigInt(1e4),chunk_RHCXRQFK_c=BigInt(1e8);var o=(r=>(r[r.FRACTIONAL_MORE_THAN_8_DECIMALS=0]="FRACTIONAL_MORE_THAN_8_DECIMALS",r[r.INVALID_FORMAT=1]="INVALID_FORMAT",r))(o||{});var i=class{constructor(t){this.e8s=t}static fromE8s(t){return new i(t)}static fromString(t){t=t.trim().replace(/[,']/g,"");let r=t.match(/\d*(\.\d*)?/);if(!r||r[0]!==t)return 1;let[s,e]=t.split("."),n=BigInt(0);if(s)try{n+=BigInt(s)*chunk_RHCXRQFK_c}catch{return 1}if(e){if(e.length>8)return 0;try{n+=BigInt(e.padEnd(8,"0"))}catch{return 1}}return new i(n)}toE8s(){return this.e8s}toProto(){let t=new _.ICPTs;return t.setE8s(this.e8s.toString()),t}};
//# sourceMappingURL=chunk-RHCXRQFK.js.map

;// CONCATENATED MODULE: ./node_modules/@dfinity/nns/dist/esm/chunk-H6I2Z4SN.js
var Wn=(0,chunk_ONAVPXOT.a)((vn,kn)=>{var ce=ke(),R=ce.Buffer;function An(e,n){for(var o in e)n[o]=e[o]}R.from&&R.alloc&&R.allocUnsafe&&R.allocUnsafeSlow?kn.exports=ce:(An(ce,vn),vn.Buffer=A);function A(e,n,o){return R(e,n,o)}An(R,A);A.from=function(e,n,o){if(typeof e=="number")throw new TypeError("Argument must not be a number");return R(e,n,o)};A.alloc=function(e,n,o){if(typeof e!="number")throw new TypeError("Argument must be a number");var r=R(e);return n!==void 0?typeof o=="string"?r.fill(n,o):r.fill(n):r.fill(0),r};A.allocUnsafe=function(e){if(typeof e!="number")throw new TypeError("Argument must be a number");return R(e)};A.allocUnsafeSlow=function(e){if(typeof e!="number")throw new TypeError("Argument must be a number");return ce.SlowBuffer(e)}});var chunk_H6I2Z4SN_xn=(0,chunk_ONAVPXOT.a)((Rr,Nn)=>{"use strict";var fn=65536,qo=4294967295;function Jo(){throw new Error(`Secure random number generation is not supported by this browser.
Use Chrome, Firefox or Internet Explorer 11`)}var $o=Wn().Buffer,pe=window.crypto||window.msCrypto;pe&&pe.getRandomValues?Nn.exports=Yo:Nn.exports=Jo;function Yo(e,n){if(e>qo)throw new RangeError("requested too many random bytes");var o=$o.allocUnsafe(e);if(e>0)if(e>fn)for(var r=0;r<e;r+=fn)pe.getRandomValues(o.slice(r,r+fn));else pe.getRandomValues(o);return typeof n=="function"?process.nextTick(function(){n(null,o)}):o}});var chunk_H6I2Z4SN_ue=(0,chunk_ONAVPXOT.a)(jn=>{"use strict";var t=(0,chunk_IPUXUCZB.a)(),s=t,p=function(){return this?this:typeof window<"u"?window:typeof p<"u"?p:typeof self<"u"?self:Function("return this")()}.call(null),c=(0,chunk_IPUXUCZB.b)();s.object.extend(proto,c);var k=(0,chunk_IPUXUCZB.c)();s.object.extend(proto,k);s.exportSymbol("proto.ic_nns_governance.pb.v1.BallotInfo",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.GovernanceError",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.GovernanceError.ErrorType",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ListNeurons",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ListNeuronsResponse",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.CommandCase",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.Configure",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.OperationCase",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.Follow",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.Merge",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.NeuronIdOrSubaccountCase",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuronResponse",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuronResponse.CommandCase",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.Neuron",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.Neuron.DissolveStateCase",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.Neuron.Followees",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.NeuronInfo",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.NeuronStakeTransfer",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.Topic",null,p);s.exportSymbol("proto.ic_nns_governance.pb.v1.Vote",null,p);proto.ic_nns_governance.pb.v1.ManageNeuron=function(e){t.Message.initialize(this,e,0,-1,null,proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron");proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay");proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving");proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving");proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey");proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey");proto.ic_nns_governance.pb.v1.ManageNeuron.Configure=function(e){t.Message.initialize(this,e,0,-1,null,proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.Configure,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron.Configure");proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn");proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse");proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount");proto.ic_nns_governance.pb.v1.ManageNeuron.Follow=function(e){t.Message.initialize(this,e,0,-1,proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.repeatedFields_,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.Follow,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron.Follow");proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote");proto.ic_nns_governance.pb.v1.ManageNeuron.Merge=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.Merge,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron.Merge");proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity");proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.displayName="proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund");proto.ic_nns_governance.pb.v1.ManageNeuronResponse=function(e){t.Message.initialize(this,e,0,-1,null,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.displayName="proto.ic_nns_governance.pb.v1.ManageNeuronResponse");proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.displayName="proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse");proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.displayName="proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse");proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.displayName="proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse");proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.displayName="proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse");proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.displayName="proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse");proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.displayName="proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse");proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.displayName="proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse");proto.ic_nns_governance.pb.v1.GovernanceError=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.GovernanceError,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.GovernanceError.displayName="proto.ic_nns_governance.pb.v1.GovernanceError");proto.ic_nns_governance.pb.v1.ListNeurons=function(e){t.Message.initialize(this,e,0,-1,proto.ic_nns_governance.pb.v1.ListNeurons.repeatedFields_,null)};s.inherits(proto.ic_nns_governance.pb.v1.ListNeurons,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ListNeurons.displayName="proto.ic_nns_governance.pb.v1.ListNeurons");proto.ic_nns_governance.pb.v1.ListNeuronsResponse=function(e){t.Message.initialize(this,e,0,-1,proto.ic_nns_governance.pb.v1.ListNeuronsResponse.repeatedFields_,null)};s.inherits(proto.ic_nns_governance.pb.v1.ListNeuronsResponse,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ListNeuronsResponse.displayName="proto.ic_nns_governance.pb.v1.ListNeuronsResponse");proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.displayName="proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry");proto.ic_nns_governance.pb.v1.BallotInfo=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.BallotInfo,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.BallotInfo.displayName="proto.ic_nns_governance.pb.v1.BallotInfo");proto.ic_nns_governance.pb.v1.NeuronInfo=function(e){t.Message.initialize(this,e,0,-1,proto.ic_nns_governance.pb.v1.NeuronInfo.repeatedFields_,null)};s.inherits(proto.ic_nns_governance.pb.v1.NeuronInfo,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.NeuronInfo.displayName="proto.ic_nns_governance.pb.v1.NeuronInfo");proto.ic_nns_governance.pb.v1.Neuron=function(e){t.Message.initialize(this,e,0,-1,proto.ic_nns_governance.pb.v1.Neuron.repeatedFields_,proto.ic_nns_governance.pb.v1.Neuron.oneofGroups_)};s.inherits(proto.ic_nns_governance.pb.v1.Neuron,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.Neuron.displayName="proto.ic_nns_governance.pb.v1.Neuron");proto.ic_nns_governance.pb.v1.Neuron.Followees=function(e){t.Message.initialize(this,e,0,-1,proto.ic_nns_governance.pb.v1.Neuron.Followees.repeatedFields_,null)};s.inherits(proto.ic_nns_governance.pb.v1.Neuron.Followees,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.Neuron.Followees.displayName="proto.ic_nns_governance.pb.v1.Neuron.Followees");proto.ic_nns_governance.pb.v1.NeuronStakeTransfer=function(e){t.Message.initialize(this,e,0,-1,null,null)};s.inherits(proto.ic_nns_governance.pb.v1.NeuronStakeTransfer,t.Message);s.DEBUG&&!COMPILED&&(proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.displayName="proto.ic_nns_governance.pb.v1.NeuronStakeTransfer");proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_=[[11,12],[2,3,4,5,7,13,14]];proto.ic_nns_governance.pb.v1.ManageNeuron.NeuronIdOrSubaccountCase={NEURON_ID_OR_SUBACCOUNT_NOT_SET:0,SUBACCOUNT:11,NEURON_ID:12};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getNeuronIdOrSubaccountCase=function(){return t.Message.computeOneofCase(this,proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[0])};proto.ic_nns_governance.pb.v1.ManageNeuron.CommandCase={COMMAND_NOT_SET:0,CONFIGURE:2,DISBURSE:3,SPAWN:4,FOLLOW:5,REGISTER_VOTE:7,MERGE_MATURITY:13,MERGE:14};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getCommandCase=function(){return t.Message.computeOneofCase(this,proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1])};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.toObject=function(e,n){var o,r={id:(o=n.getId())&&c.NeuronId.toObject(e,o),subaccount:n.getSubaccount_asB64(),neuronId:(o=n.getNeuronId())&&c.NeuronId.toObject(e,o),configure:(o=n.getConfigure())&&proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.toObject(e,o),disburse:(o=n.getDisburse())&&proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.toObject(e,o),spawn:(o=n.getSpawn())&&proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.toObject(e,o),follow:(o=n.getFollow())&&proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.toObject(e,o),registerVote:(o=n.getRegisterVote())&&proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.toObject(e,o),mergeMaturity:(o=n.getMergeMaturity())&&proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.toObject(e,o),merge:(o=n.getMerge())&&proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.toObject(e,o)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron;return proto.ic_nns_governance.pb.v1.ManageNeuron.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=new c.NeuronId;n.readMessage(r,c.NeuronId.deserializeBinaryFromReader),e.setId(r);break;case 11:var r=n.readBytes();e.setSubaccount(r);break;case 12:var r=new c.NeuronId;n.readMessage(r,c.NeuronId.deserializeBinaryFromReader),e.setNeuronId(r);break;case 2:var r=new proto.ic_nns_governance.pb.v1.ManageNeuron.Configure;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.deserializeBinaryFromReader),e.setConfigure(r);break;case 3:var r=new proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.deserializeBinaryFromReader),e.setDisburse(r);break;case 4:var r=new proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.deserializeBinaryFromReader),e.setSpawn(r);break;case 5:var r=new proto.ic_nns_governance.pb.v1.ManageNeuron.Follow;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.deserializeBinaryFromReader),e.setFollow(r);break;case 7:var r=new proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.deserializeBinaryFromReader),e.setRegisterVote(r);break;case 13:var r=new proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.deserializeBinaryFromReader),e.setMergeMaturity(r);break;case 14:var r=new proto.ic_nns_governance.pb.v1.ManageNeuron.Merge;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.deserializeBinaryFromReader),e.setMerge(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getId(),o!=null&&n.writeMessage(1,o,c.NeuronId.serializeBinaryToWriter),o=t.Message.getField(e,11),o!=null&&n.writeBytes(11,o),o=e.getNeuronId(),o!=null&&n.writeMessage(12,o,c.NeuronId.serializeBinaryToWriter),o=e.getConfigure(),o!=null&&n.writeMessage(2,o,proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.serializeBinaryToWriter),o=e.getDisburse(),o!=null&&n.writeMessage(3,o,proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.serializeBinaryToWriter),o=e.getSpawn(),o!=null&&n.writeMessage(4,o,proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.serializeBinaryToWriter),o=e.getFollow(),o!=null&&n.writeMessage(5,o,proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.serializeBinaryToWriter),o=e.getRegisterVote(),o!=null&&n.writeMessage(7,o,proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.serializeBinaryToWriter),o=e.getMergeMaturity(),o!=null&&n.writeMessage(13,o,proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.serializeBinaryToWriter),o=e.getMerge(),o!=null&&n.writeMessage(14,o,proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.serializeBinaryToWriter)};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.toObject=function(e,n){var o,r={additionalDissolveDelaySeconds:t.Message.getFieldWithDefault(n,1,0)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay;return proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=n.readUint32();e.setAdditionalDissolveDelaySeconds(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getAdditionalDissolveDelaySeconds(),o!==0&&n.writeUint32(1,o)};proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.prototype.getAdditionalDissolveDelaySeconds=function(){return t.Message.getFieldWithDefault(this,1,0)};proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.prototype.setAdditionalDissolveDelaySeconds=function(e){return t.Message.setProto3IntField(this,1,e)};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.toObject=function(e,n){var o,r={};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving;return proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.serializeBinaryToWriter=function(e,n){var o=void 0};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.toObject=function(e,n){var o,r={};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving;return proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.serializeBinaryToWriter=function(e,n){var o=void 0};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.toObject=function(e,n){var o,r={newHotKey:(o=n.getNewHotKey())&&c.PrincipalId.toObject(e,o)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey;return proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=new c.PrincipalId;n.readMessage(r,c.PrincipalId.deserializeBinaryFromReader),e.setNewHotKey(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getNewHotKey(),o!=null&&n.writeMessage(1,o,c.PrincipalId.serializeBinaryToWriter)};proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.prototype.getNewHotKey=function(){return t.Message.getWrapperField(this,c.PrincipalId,1)};proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.prototype.setNewHotKey=function(e){return t.Message.setWrapperField(this,1,e)};proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.prototype.clearNewHotKey=function(){return this.setNewHotKey(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.prototype.hasNewHotKey=function(){return t.Message.getField(this,1)!=null};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.toObject=function(e,n){var o,r={hotKeyToRemove:(o=n.getHotKeyToRemove())&&c.PrincipalId.toObject(e,o)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey;return proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=new c.PrincipalId;n.readMessage(r,c.PrincipalId.deserializeBinaryFromReader),e.setHotKeyToRemove(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getHotKeyToRemove(),o!=null&&n.writeMessage(1,o,c.PrincipalId.serializeBinaryToWriter)};proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.prototype.getHotKeyToRemove=function(){return t.Message.getWrapperField(this,c.PrincipalId,1)};proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.prototype.setHotKeyToRemove=function(e){return t.Message.setWrapperField(this,1,e)};proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.prototype.clearHotKeyToRemove=function(){return this.setHotKeyToRemove(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.prototype.hasHotKeyToRemove=function(){return t.Message.getField(this,1)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_=[[1,2,3,4,5,7]];proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.OperationCase={OPERATION_NOT_SET:0,INCREASE_DISSOLVE_DELAY:1,START_DISSOLVING:2,STOP_DISSOLVING:3,ADD_HOT_KEY:4,REMOVE_HOT_KEY:5,JOIN_COMMUNITY_FUND:7};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.getOperationCase=function(){return t.Message.computeOneofCase(this,proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_[0])};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.toObject=function(e,n){var o,r={increaseDissolveDelay:(o=n.getIncreaseDissolveDelay())&&proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.toObject(e,o),startDissolving:(o=n.getStartDissolving())&&proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.toObject(e,o),stopDissolving:(o=n.getStopDissolving())&&proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.toObject(e,o),addHotKey:(o=n.getAddHotKey())&&proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.toObject(e,o),removeHotKey:(o=n.getRemoveHotKey())&&proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.toObject(e,o),joinCommunityFund:(o=n.getJoinCommunityFund())&&proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.toObject(e,o)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron.Configure;return proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=new proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.deserializeBinaryFromReader),e.setIncreaseDissolveDelay(r);break;case 2:var r=new proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.deserializeBinaryFromReader),e.setStartDissolving(r);break;case 3:var r=new proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.deserializeBinaryFromReader),e.setStopDissolving(r);break;case 4:var r=new proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.deserializeBinaryFromReader),e.setAddHotKey(r);break;case 5:var r=new proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.deserializeBinaryFromReader),e.setRemoveHotKey(r);break;case 7:var r=new proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.deserializeBinaryFromReader),e.setJoinCommunityFund(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getIncreaseDissolveDelay(),o!=null&&n.writeMessage(1,o,proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.serializeBinaryToWriter),o=e.getStartDissolving(),o!=null&&n.writeMessage(2,o,proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.serializeBinaryToWriter),o=e.getStopDissolving(),o!=null&&n.writeMessage(3,o,proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.serializeBinaryToWriter),o=e.getAddHotKey(),o!=null&&n.writeMessage(4,o,proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.serializeBinaryToWriter),o=e.getRemoveHotKey(),o!=null&&n.writeMessage(5,o,proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.serializeBinaryToWriter),o=e.getJoinCommunityFund(),o!=null&&n.writeMessage(7,o,proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.serializeBinaryToWriter)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.getIncreaseDissolveDelay=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay,1)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.setIncreaseDissolveDelay=function(e){return t.Message.setOneofWrapperField(this,1,proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.clearIncreaseDissolveDelay=function(){return this.setIncreaseDissolveDelay(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.hasIncreaseDissolveDelay=function(){return t.Message.getField(this,1)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.getStartDissolving=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving,2)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.setStartDissolving=function(e){return t.Message.setOneofWrapperField(this,2,proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.clearStartDissolving=function(){return this.setStartDissolving(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.hasStartDissolving=function(){return t.Message.getField(this,2)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.getStopDissolving=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving,3)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.setStopDissolving=function(e){return t.Message.setOneofWrapperField(this,3,proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.clearStopDissolving=function(){return this.setStopDissolving(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.hasStopDissolving=function(){return t.Message.getField(this,3)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.getAddHotKey=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey,4)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.setAddHotKey=function(e){return t.Message.setOneofWrapperField(this,4,proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.clearAddHotKey=function(){return this.setAddHotKey(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.hasAddHotKey=function(){return t.Message.getField(this,4)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.getRemoveHotKey=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey,5)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.setRemoveHotKey=function(e){return t.Message.setOneofWrapperField(this,5,proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.clearRemoveHotKey=function(){return this.setRemoveHotKey(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.hasRemoveHotKey=function(){return t.Message.getField(this,5)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.getJoinCommunityFund=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund,7)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.setJoinCommunityFund=function(e){return t.Message.setOneofWrapperField(this,7,proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.clearJoinCommunityFund=function(){return this.setJoinCommunityFund(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.hasJoinCommunityFund=function(){return t.Message.getField(this,7)!=null};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.toObject=function(e,n){var o,r={newController:(o=n.getNewController())&&c.PrincipalId.toObject(e,o),nonce:t.Message.getFieldWithDefault(n,2,0),percentageToSpawn:t.Message.getFieldWithDefault(n,3,0)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn;return proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=new c.PrincipalId;n.readMessage(r,c.PrincipalId.deserializeBinaryFromReader),e.setNewController(r);break;case 2:var r=n.readUint64();e.setNonce(r);break;case 3:var r=n.readUint32();e.setPercentageToSpawn(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getNewController(),o!=null&&n.writeMessage(1,o,c.PrincipalId.serializeBinaryToWriter),o=t.Message.getField(e,2),o!=null&&n.writeUint64(2,o),o=t.Message.getField(e,3),o!=null&&n.writeUint32(3,o)};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.getNewController=function(){return t.Message.getWrapperField(this,c.PrincipalId,1)};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.setNewController=function(e){return t.Message.setWrapperField(this,1,e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.clearNewController=function(){return this.setNewController(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.hasNewController=function(){return t.Message.getField(this,1)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.getNonce=function(){return t.Message.getFieldWithDefault(this,2,0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.setNonce=function(e){return t.Message.setField(this,2,e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.clearNonce=function(){return t.Message.setField(this,2,void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.hasNonce=function(){return t.Message.getField(this,2)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.getPercentageToSpawn=function(){return t.Message.getFieldWithDefault(this,3,0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.setPercentageToSpawn=function(e){return t.Message.setField(this,3,e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.clearPercentageToSpawn=function(){return t.Message.setField(this,3,void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.hasPercentageToSpawn=function(){return t.Message.getField(this,3)!=null};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.toObject=function(e,n){var o,r={amount:(o=n.getAmount())&&proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.toObject(e,o),toAccount:(o=n.getToAccount())&&k.AccountIdentifier.toObject(e,o)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse;return proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=new proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.deserializeBinaryFromReader),e.setAmount(r);break;case 2:var r=new k.AccountIdentifier;n.readMessage(r,k.AccountIdentifier.deserializeBinaryFromReader),e.setToAccount(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getAmount(),o!=null&&n.writeMessage(1,o,proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.serializeBinaryToWriter),o=e.getToAccount(),o!=null&&n.writeMessage(2,o,k.AccountIdentifier.serializeBinaryToWriter)};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.toObject=function(e,n){var o,r={e8s:t.Message.getFieldWithDefault(n,1,"0")};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount;return proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=n.readUint64String();e.setE8s(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getE8s(),parseInt(o,10)!==0&&n.writeUint64String(1,o)};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.prototype.getE8s=function(){return t.Message.getFieldWithDefault(this,1,"0")};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.prototype.setE8s=function(e){return t.Message.setProto3StringIntField(this,1,e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.getAmount=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount,1)};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.setAmount=function(e){return t.Message.setWrapperField(this,1,e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.clearAmount=function(){return this.setAmount(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.hasAmount=function(){return t.Message.getField(this,1)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.getToAccount=function(){return t.Message.getWrapperField(this,k.AccountIdentifier,2)};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.setToAccount=function(e){return t.Message.setWrapperField(this,2,e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.clearToAccount=function(){return this.setToAccount(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.hasToAccount=function(){return t.Message.getField(this,2)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.repeatedFields_=[2];t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.toObject=function(e,n){var o,r={topic:t.Message.getFieldWithDefault(n,1,0),followeesList:t.Message.toObjectList(n.getFolloweesList(),c.NeuronId.toObject,e)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron.Follow;return proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=n.readEnum();e.setTopic(r);break;case 2:var r=new c.NeuronId;n.readMessage(r,c.NeuronId.deserializeBinaryFromReader),e.addFollowees(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getTopic(),o!==0&&n.writeEnum(1,o),o=e.getFolloweesList(),o.length>0&&n.writeRepeatedMessage(2,o,c.NeuronId.serializeBinaryToWriter)};proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.getTopic=function(){return t.Message.getFieldWithDefault(this,1,0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.setTopic=function(e){return t.Message.setProto3EnumField(this,1,e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.getFolloweesList=function(){return t.Message.getRepeatedWrapperField(this,c.NeuronId,2)};proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.setFolloweesList=function(e){return t.Message.setRepeatedWrapperField(this,2,e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.addFollowees=function(e,n){return t.Message.addToRepeatedWrapperField(this,2,e,proto.ic_base_types.pb.v1.NeuronId,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.clearFolloweesList=function(){return this.setFolloweesList([])};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.toObject=function(e,n){var o,r={proposal:(o=n.getProposal())&&c.ProposalId.toObject(e,o),vote:t.Message.getFieldWithDefault(n,2,0)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote;return proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=new c.ProposalId;n.readMessage(r,c.ProposalId.deserializeBinaryFromReader),e.setProposal(r);break;case 2:var r=n.readEnum();e.setVote(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getProposal(),o!=null&&n.writeMessage(1,o,c.ProposalId.serializeBinaryToWriter),o=e.getVote(),o!==0&&n.writeEnum(2,o)};proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.getProposal=function(){return t.Message.getWrapperField(this,c.ProposalId,1)};proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.setProposal=function(e){return t.Message.setWrapperField(this,1,e)};proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.clearProposal=function(){return this.setProposal(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.hasProposal=function(){return t.Message.getField(this,1)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.getVote=function(){return t.Message.getFieldWithDefault(this,2,0)};proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.setVote=function(e){return t.Message.setProto3EnumField(this,2,e)};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.toObject=function(e,n){var o,r={sourceNeuronId:(o=n.getSourceNeuronId())&&c.NeuronId.toObject(e,o)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron.Merge;return proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=new c.NeuronId;n.readMessage(r,c.NeuronId.deserializeBinaryFromReader),e.setSourceNeuronId(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getSourceNeuronId(),o!=null&&n.writeMessage(1,o,c.NeuronId.serializeBinaryToWriter)};proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.prototype.getSourceNeuronId=function(){return t.Message.getWrapperField(this,c.NeuronId,1)};proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.prototype.setSourceNeuronId=function(e){return t.Message.setWrapperField(this,1,e)};proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.prototype.clearSourceNeuronId=function(){return this.setSourceNeuronId(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.prototype.hasSourceNeuronId=function(){return t.Message.getField(this,1)!=null};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.toObject=function(e,n){var o,r={percentageToMerge:t.Message.getFieldWithDefault(n,1,0)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity;return proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=n.readUint32();e.setPercentageToMerge(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getPercentageToMerge(),o!==0&&n.writeUint32(1,o)};proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.prototype.getPercentageToMerge=function(){return t.Message.getFieldWithDefault(this,1,0)};proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.prototype.setPercentageToMerge=function(e){return t.Message.setProto3IntField(this,1,e)};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.toObject=function(e,n){var o,r={};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund;return proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.serializeBinaryToWriter=function(e,n){var o=void 0};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getId=function(){return t.Message.getWrapperField(this,c.NeuronId,1)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setId=function(e){return t.Message.setWrapperField(this,1,e)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearId=function(){return this.setId(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasId=function(){return t.Message.getField(this,1)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getSubaccount=function(){return t.Message.getFieldWithDefault(this,11,"")};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getSubaccount_asB64=function(){return t.Message.bytesAsB64(this.getSubaccount())};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getSubaccount_asU8=function(){return t.Message.bytesAsU8(this.getSubaccount())};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setSubaccount=function(e){return t.Message.setOneofField(this,11,proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearSubaccount=function(){return t.Message.setOneofField(this,11,proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[0],void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasSubaccount=function(){return t.Message.getField(this,11)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getNeuronId=function(){return t.Message.getWrapperField(this,c.NeuronId,12)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setNeuronId=function(e){return t.Message.setOneofWrapperField(this,12,proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearNeuronId=function(){return this.setNeuronId(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasNeuronId=function(){return t.Message.getField(this,12)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getConfigure=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuron.Configure,2)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setConfigure=function(e){return t.Message.setOneofWrapperField(this,2,proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearConfigure=function(){return this.setConfigure(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasConfigure=function(){return t.Message.getField(this,2)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getDisburse=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse,3)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setDisburse=function(e){return t.Message.setOneofWrapperField(this,3,proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearDisburse=function(){return this.setDisburse(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasDisburse=function(){return t.Message.getField(this,3)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getSpawn=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn,4)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setSpawn=function(e){return t.Message.setOneofWrapperField(this,4,proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearSpawn=function(){return this.setSpawn(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasSpawn=function(){return t.Message.getField(this,4)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getFollow=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuron.Follow,5)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setFollow=function(e){return t.Message.setOneofWrapperField(this,5,proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearFollow=function(){return this.setFollow(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasFollow=function(){return t.Message.getField(this,5)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getRegisterVote=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote,7)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setRegisterVote=function(e){return t.Message.setOneofWrapperField(this,7,proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearRegisterVote=function(){return this.setRegisterVote(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasRegisterVote=function(){return t.Message.getField(this,7)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getMergeMaturity=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity,13)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setMergeMaturity=function(e){return t.Message.setOneofWrapperField(this,13,proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearMergeMaturity=function(){return this.setMergeMaturity(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasMergeMaturity=function(){return t.Message.getField(this,13)!=null};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getMerge=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuron.Merge,14)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setMerge=function(e){return t.Message.setOneofWrapperField(this,14,proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1],e)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearMerge=function(){return this.setMerge(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasMerge=function(){return t.Message.getField(this,14)!=null};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_=[[1,2,3,4,5,7,11,12]];proto.ic_nns_governance.pb.v1.ManageNeuronResponse.CommandCase={COMMAND_NOT_SET:0,ERROR:1,CONFIGURE:2,DISBURSE:3,SPAWN:4,FOLLOW:5,REGISTER_VOTE:7,MERGE_MATURITY:11,MERGE:12};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getCommandCase=function(){return t.Message.computeOneofCase(this,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0])};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuronResponse.toObject=function(e,n){var o,r={error:(o=n.getError())&&proto.ic_nns_governance.pb.v1.GovernanceError.toObject(e,o),configure:(o=n.getConfigure())&&proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.toObject(e,o),disburse:(o=n.getDisburse())&&proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.toObject(e,o),spawn:(o=n.getSpawn())&&proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.toObject(e,o),follow:(o=n.getFollow())&&proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.toObject(e,o),registerVote:(o=n.getRegisterVote())&&proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.toObject(e,o),mergeMaturity:(o=n.getMergeMaturity())&&proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.toObject(e,o),merge:(o=n.getMerge())&&proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.toObject(e,o)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuronResponse.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=new proto.ic_nns_governance.pb.v1.GovernanceError;n.readMessage(r,proto.ic_nns_governance.pb.v1.GovernanceError.deserializeBinaryFromReader),e.setError(r);break;case 2:var r=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.deserializeBinaryFromReader),e.setConfigure(r);break;case 3:var r=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.deserializeBinaryFromReader),e.setDisburse(r);break;case 4:var r=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.deserializeBinaryFromReader),e.setSpawn(r);break;case 5:var r=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.deserializeBinaryFromReader),e.setFollow(r);break;case 7:var r=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.deserializeBinaryFromReader),e.setRegisterVote(r);break;case 11:var r=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.deserializeBinaryFromReader),e.setMergeMaturity(r);break;case 12:var r=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse;n.readMessage(r,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.deserializeBinaryFromReader),e.setMerge(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getError(),o!=null&&n.writeMessage(1,o,proto.ic_nns_governance.pb.v1.GovernanceError.serializeBinaryToWriter),o=e.getConfigure(),o!=null&&n.writeMessage(2,o,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.serializeBinaryToWriter),o=e.getDisburse(),o!=null&&n.writeMessage(3,o,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.serializeBinaryToWriter),o=e.getSpawn(),o!=null&&n.writeMessage(4,o,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.serializeBinaryToWriter),o=e.getFollow(),o!=null&&n.writeMessage(5,o,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.serializeBinaryToWriter),o=e.getRegisterVote(),o!=null&&n.writeMessage(7,o,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.serializeBinaryToWriter),o=e.getMergeMaturity(),o!=null&&n.writeMessage(11,o,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.serializeBinaryToWriter),o=e.getMerge(),o!=null&&n.writeMessage(12,o,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.serializeBinaryToWriter)};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.toObject=function(e,n){var o,r={};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.serializeBinaryToWriter=function(e,n){var o=void 0};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.toObject=function(e,n){var o,r={transferBlockHeight:t.Message.getFieldWithDefault(n,1,"0")};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=n.readUint64String();e.setTransferBlockHeight(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getTransferBlockHeight(),parseInt(o,10)!==0&&n.writeUint64String(1,o)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.prototype.getTransferBlockHeight=function(){return t.Message.getFieldWithDefault(this,1,"0")};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.prototype.setTransferBlockHeight=function(e){return t.Message.setProto3StringIntField(this,1,e)};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.toObject=function(e,n){var o,r={createdNeuronId:(o=n.getCreatedNeuronId())&&c.NeuronId.toObject(e,o)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=new c.NeuronId;n.readMessage(r,c.NeuronId.deserializeBinaryFromReader),e.setCreatedNeuronId(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getCreatedNeuronId(),o!=null&&n.writeMessage(1,o,c.NeuronId.serializeBinaryToWriter)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.prototype.getCreatedNeuronId=function(){return t.Message.getWrapperField(this,c.NeuronId,1)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.prototype.setCreatedNeuronId=function(e){return t.Message.setWrapperField(this,1,e)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.prototype.clearCreatedNeuronId=function(){return this.setCreatedNeuronId(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.prototype.hasCreatedNeuronId=function(){return t.Message.getField(this,1)!=null};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.toObject=function(e,n){var o,r={mergedMaturityE8s:t.Message.getFieldWithDefault(n,1,"0"),newStakeE8s:t.Message.getFieldWithDefault(n,2,"0")};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=n.readUint64String();e.setMergedMaturityE8s(r);break;case 2:var r=n.readUint64String();e.setNewStakeE8s(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getMergedMaturityE8s(),parseInt(o,10)!==0&&n.writeUint64String(1,o),o=e.getNewStakeE8s(),parseInt(o,10)!==0&&n.writeUint64String(2,o)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.prototype.getMergedMaturityE8s=function(){return t.Message.getFieldWithDefault(this,1,"0")};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.prototype.setMergedMaturityE8s=function(e){return t.Message.setProto3StringIntField(this,1,e)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.prototype.getNewStakeE8s=function(){return t.Message.getFieldWithDefault(this,2,"0")};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.prototype.setNewStakeE8s=function(e){return t.Message.setProto3StringIntField(this,2,e)};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.toObject=function(e,n){var o,r={};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.serializeBinaryToWriter=function(e,n){var o=void 0};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.toObject=function(e,n){var o,r={};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.serializeBinaryToWriter=function(e,n){var o=void 0};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.toObject(e,this)},proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.toObject=function(e,n){var o,r={};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.serializeBinaryToWriter=function(e,n){var o=void 0};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getError=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.GovernanceError,1)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setError=function(e){return t.Message.setOneofWrapperField(this,1,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearError=function(){return this.setError(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasError=function(){return t.Message.getField(this,1)!=null};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getConfigure=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse,2)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setConfigure=function(e){return t.Message.setOneofWrapperField(this,2,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearConfigure=function(){return this.setConfigure(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasConfigure=function(){return t.Message.getField(this,2)!=null};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getDisburse=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse,3)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setDisburse=function(e){return t.Message.setOneofWrapperField(this,3,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearDisburse=function(){return this.setDisburse(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasDisburse=function(){return t.Message.getField(this,3)!=null};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getSpawn=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse,4)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setSpawn=function(e){return t.Message.setOneofWrapperField(this,4,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearSpawn=function(){return this.setSpawn(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasSpawn=function(){return t.Message.getField(this,4)!=null};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getFollow=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse,5)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setFollow=function(e){return t.Message.setOneofWrapperField(this,5,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearFollow=function(){return this.setFollow(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasFollow=function(){return t.Message.getField(this,5)!=null};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getRegisterVote=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse,7)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setRegisterVote=function(e){return t.Message.setOneofWrapperField(this,7,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearRegisterVote=function(){return this.setRegisterVote(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasRegisterVote=function(){return t.Message.getField(this,7)!=null};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getMergeMaturity=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse,11)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setMergeMaturity=function(e){return t.Message.setOneofWrapperField(this,11,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearMergeMaturity=function(){return this.setMergeMaturity(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasMergeMaturity=function(){return t.Message.getField(this,11)!=null};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getMerge=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse,12)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setMerge=function(e){return t.Message.setOneofWrapperField(this,12,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearMerge=function(){return this.setMerge(void 0)};proto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasMerge=function(){return t.Message.getField(this,12)!=null};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.GovernanceError.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.GovernanceError.toObject(e,this)},proto.ic_nns_governance.pb.v1.GovernanceError.toObject=function(e,n){var o,r={errorType:t.Message.getFieldWithDefault(n,1,0),errorMessage:t.Message.getFieldWithDefault(n,2,"")};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.GovernanceError.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.GovernanceError;return proto.ic_nns_governance.pb.v1.GovernanceError.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.GovernanceError.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=n.readEnum();e.setErrorType(r);break;case 2:var r=n.readString();e.setErrorMessage(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.GovernanceError.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.GovernanceError.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.GovernanceError.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getErrorType(),o!==0&&n.writeEnum(1,o),o=e.getErrorMessage(),o.length>0&&n.writeString(2,o)};proto.ic_nns_governance.pb.v1.GovernanceError.ErrorType={ERROR_TYPE_UNSPECIFIED:0,ERROR_TYPE_OK:1,ERROR_TYPE_UNAVAILABLE:2,ERROR_TYPE_NOT_AUTHORIZED:3,ERROR_TYPE_NOT_FOUND:4,ERROR_TYPE_INVALID_COMMAND:5,ERROR_TYPE_REQUIRES_NOT_DISSOLVING:6,ERROR_TYPE_REQUIRES_DISSOLVING:7,ERROR_TYPE_REQUIRES_DISSOLVED:8,ERROR_TYPE_HOT_KEY:9,ERROR_TYPE_RESOURCE_EXHAUSTED:10,ERROR_TYPE_PRECONDITION_FAILED:11,ERROR_TYPE_EXTERNAL:12,ERROR_TYPE_LEDGER_UPDATE_ONGOING:13,ERROR_TYPE_INSUFFICIENT_FUNDS:14,ERROR_TYPE_INVALID_PRINCIPAL:15,ERROR_TYPE_INVALID_PROPOSAL:16,ERROR_TYPE_ALREADY_JOINED_COMMUNITY_FUND:17};proto.ic_nns_governance.pb.v1.GovernanceError.prototype.getErrorType=function(){return t.Message.getFieldWithDefault(this,1,0)};proto.ic_nns_governance.pb.v1.GovernanceError.prototype.setErrorType=function(e){return t.Message.setProto3EnumField(this,1,e)};proto.ic_nns_governance.pb.v1.GovernanceError.prototype.getErrorMessage=function(){return t.Message.getFieldWithDefault(this,2,"")};proto.ic_nns_governance.pb.v1.GovernanceError.prototype.setErrorMessage=function(e){return t.Message.setProto3StringField(this,2,e)};proto.ic_nns_governance.pb.v1.ListNeurons.repeatedFields_=[1];t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ListNeurons.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ListNeurons.toObject(e,this)},proto.ic_nns_governance.pb.v1.ListNeurons.toObject=function(e,n){var o,r={neuronIdsList:(o=t.Message.getRepeatedField(n,1))==null?void 0:o,includeNeuronsReadableByCaller:t.Message.getBooleanFieldWithDefault(n,2,!1)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ListNeurons.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ListNeurons;return proto.ic_nns_governance.pb.v1.ListNeurons.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ListNeurons.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:for(var r=n.isDelimited()?n.readPackedFixed64String():[n.readFixed64String()],a=0;a<r.length;a++)e.addNeuronIds(r[a]);break;case 2:var i=n.readBool();e.setIncludeNeuronsReadableByCaller(i);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ListNeurons.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ListNeurons.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ListNeurons.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getNeuronIdsList(),o.length>0&&n.writePackedFixed64String(1,o),o=e.getIncludeNeuronsReadableByCaller(),o&&n.writeBool(2,o)};proto.ic_nns_governance.pb.v1.ListNeurons.prototype.getNeuronIdsList=function(){return t.Message.getRepeatedField(this,1)};proto.ic_nns_governance.pb.v1.ListNeurons.prototype.setNeuronIdsList=function(e){return t.Message.setField(this,1,e||[])};proto.ic_nns_governance.pb.v1.ListNeurons.prototype.addNeuronIds=function(e,n){return t.Message.addToRepeatedField(this,1,e,n)};proto.ic_nns_governance.pb.v1.ListNeurons.prototype.clearNeuronIdsList=function(){return this.setNeuronIdsList([])};proto.ic_nns_governance.pb.v1.ListNeurons.prototype.getIncludeNeuronsReadableByCaller=function(){return t.Message.getBooleanFieldWithDefault(this,2,!1)};proto.ic_nns_governance.pb.v1.ListNeurons.prototype.setIncludeNeuronsReadableByCaller=function(e){return t.Message.setProto3BooleanField(this,2,e)};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.repeatedFields_=[1,2];t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ListNeuronsResponse.toObject(e,this)},proto.ic_nns_governance.pb.v1.ListNeuronsResponse.toObject=function(e,n){var o,r={neuronIdsList:t.Message.toObjectList(n.getNeuronIdsList(),proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.toObject,e),fullNeuronsList:t.Message.toObjectList(n.getFullNeuronsList(),proto.ic_nns_governance.pb.v1.Neuron.toObject,e)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ListNeuronsResponse.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ListNeuronsResponse;return proto.ic_nns_governance.pb.v1.ListNeuronsResponse.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=new proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry;n.readMessage(r,proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.deserializeBinaryFromReader),e.addNeuronIds(r);break;case 2:var r=new proto.ic_nns_governance.pb.v1.Neuron;n.readMessage(r,proto.ic_nns_governance.pb.v1.Neuron.deserializeBinaryFromReader),e.addFullNeurons(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ListNeuronsResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getNeuronIdsList(),o.length>0&&n.writeRepeatedMessage(1,o,proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.serializeBinaryToWriter),o=e.getFullNeuronsList(),o.length>0&&n.writeRepeatedMessage(2,o,proto.ic_nns_governance.pb.v1.Neuron.serializeBinaryToWriter)};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.toObject(e,this)},proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.toObject=function(e,n){var o,r={key:t.Message.getFieldWithDefault(n,1,"0"),value:(o=n.getValue())&&proto.ic_nns_governance.pb.v1.NeuronInfo.toObject(e,o)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry;return proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=n.readFixed64String();e.setKey(r);break;case 2:var r=new proto.ic_nns_governance.pb.v1.NeuronInfo;n.readMessage(r,proto.ic_nns_governance.pb.v1.NeuronInfo.deserializeBinaryFromReader),e.setValue(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getKey(),parseInt(o,10)!==0&&n.writeFixed64String(1,o),o=e.getValue(),o!=null&&n.writeMessage(2,o,proto.ic_nns_governance.pb.v1.NeuronInfo.serializeBinaryToWriter)};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.getKey=function(){return t.Message.getFieldWithDefault(this,1,"0")};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.setKey=function(e){return t.Message.setProto3StringIntField(this,1,e)};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.getValue=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.NeuronInfo,2)};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.setValue=function(e){return t.Message.setWrapperField(this,2,e)};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.clearValue=function(){return this.setValue(void 0)};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.hasValue=function(){return t.Message.getField(this,2)!=null};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.getNeuronIdsList=function(){return t.Message.getRepeatedWrapperField(this,proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry,1)};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.setNeuronIdsList=function(e){return t.Message.setRepeatedWrapperField(this,1,e)};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.addNeuronIds=function(e,n){return t.Message.addToRepeatedWrapperField(this,1,e,proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry,n)};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.clearNeuronIdsList=function(){return this.setNeuronIdsList([])};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.getFullNeuronsList=function(){return t.Message.getRepeatedWrapperField(this,proto.ic_nns_governance.pb.v1.Neuron,2)};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.setFullNeuronsList=function(e){return t.Message.setRepeatedWrapperField(this,2,e)};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.addFullNeurons=function(e,n){return t.Message.addToRepeatedWrapperField(this,2,e,proto.ic_nns_governance.pb.v1.Neuron,n)};proto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.clearFullNeuronsList=function(){return this.setFullNeuronsList([])};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.BallotInfo.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.BallotInfo.toObject(e,this)},proto.ic_nns_governance.pb.v1.BallotInfo.toObject=function(e,n){var o,r={proposalId:(o=n.getProposalId())&&c.ProposalId.toObject(e,o),vote:t.Message.getFieldWithDefault(n,2,0)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.BallotInfo.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.BallotInfo;return proto.ic_nns_governance.pb.v1.BallotInfo.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.BallotInfo.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=new c.ProposalId;n.readMessage(r,c.ProposalId.deserializeBinaryFromReader),e.setProposalId(r);break;case 2:var r=n.readEnum();e.setVote(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.BallotInfo.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.BallotInfo.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.BallotInfo.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getProposalId(),o!=null&&n.writeMessage(1,o,c.ProposalId.serializeBinaryToWriter),o=e.getVote(),o!==0&&n.writeEnum(2,o)};proto.ic_nns_governance.pb.v1.BallotInfo.prototype.getProposalId=function(){return t.Message.getWrapperField(this,c.ProposalId,1)};proto.ic_nns_governance.pb.v1.BallotInfo.prototype.setProposalId=function(e){return t.Message.setWrapperField(this,1,e)};proto.ic_nns_governance.pb.v1.BallotInfo.prototype.clearProposalId=function(){return this.setProposalId(void 0)};proto.ic_nns_governance.pb.v1.BallotInfo.prototype.hasProposalId=function(){return t.Message.getField(this,1)!=null};proto.ic_nns_governance.pb.v1.BallotInfo.prototype.getVote=function(){return t.Message.getFieldWithDefault(this,2,0)};proto.ic_nns_governance.pb.v1.BallotInfo.prototype.setVote=function(e){return t.Message.setProto3EnumField(this,2,e)};proto.ic_nns_governance.pb.v1.NeuronInfo.repeatedFields_=[5];t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.NeuronInfo.toObject(e,this)},proto.ic_nns_governance.pb.v1.NeuronInfo.toObject=function(e,n){var o,r={retrievedAtTimestampSeconds:t.Message.getFieldWithDefault(n,1,"0"),ageSeconds:t.Message.getFieldWithDefault(n,3,"0"),dissolveDelaySeconds:t.Message.getFieldWithDefault(n,4,"0"),recentBallotsList:t.Message.toObjectList(n.getRecentBallotsList(),proto.ic_nns_governance.pb.v1.BallotInfo.toObject,e),votingPower:t.Message.getFieldWithDefault(n,6,"0"),createdTimestampSeconds:t.Message.getFieldWithDefault(n,7,"0")};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.NeuronInfo.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.NeuronInfo;return proto.ic_nns_governance.pb.v1.NeuronInfo.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.NeuronInfo.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=n.readUint64String();e.setRetrievedAtTimestampSeconds(r);break;case 3:var r=n.readUint64String();e.setAgeSeconds(r);break;case 4:var r=n.readUint64String();e.setDissolveDelaySeconds(r);break;case 5:var r=new proto.ic_nns_governance.pb.v1.BallotInfo;n.readMessage(r,proto.ic_nns_governance.pb.v1.BallotInfo.deserializeBinaryFromReader),e.addRecentBallots(r);break;case 6:var r=n.readUint64String();e.setVotingPower(r);break;case 7:var r=n.readUint64String();e.setCreatedTimestampSeconds(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.NeuronInfo.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.NeuronInfo.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getRetrievedAtTimestampSeconds(),parseInt(o,10)!==0&&n.writeUint64String(1,o),o=e.getAgeSeconds(),parseInt(o,10)!==0&&n.writeUint64String(3,o),o=e.getDissolveDelaySeconds(),parseInt(o,10)!==0&&n.writeUint64String(4,o),o=e.getRecentBallotsList(),o.length>0&&n.writeRepeatedMessage(5,o,proto.ic_nns_governance.pb.v1.BallotInfo.serializeBinaryToWriter),o=e.getVotingPower(),parseInt(o,10)!==0&&n.writeUint64String(6,o),o=e.getCreatedTimestampSeconds(),parseInt(o,10)!==0&&n.writeUint64String(7,o)};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.getRetrievedAtTimestampSeconds=function(){return t.Message.getFieldWithDefault(this,1,"0")};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.setRetrievedAtTimestampSeconds=function(e){return t.Message.setProto3StringIntField(this,1,e)};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.getAgeSeconds=function(){return t.Message.getFieldWithDefault(this,3,"0")};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.setAgeSeconds=function(e){return t.Message.setProto3StringIntField(this,3,e)};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.getDissolveDelaySeconds=function(){return t.Message.getFieldWithDefault(this,4,"0")};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.setDissolveDelaySeconds=function(e){return t.Message.setProto3StringIntField(this,4,e)};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.getRecentBallotsList=function(){return t.Message.getRepeatedWrapperField(this,proto.ic_nns_governance.pb.v1.BallotInfo,5)};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.setRecentBallotsList=function(e){return t.Message.setRepeatedWrapperField(this,5,e)};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.addRecentBallots=function(e,n){return t.Message.addToRepeatedWrapperField(this,5,e,proto.ic_nns_governance.pb.v1.BallotInfo,n)};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.clearRecentBallotsList=function(){return this.setRecentBallotsList([])};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.getVotingPower=function(){return t.Message.getFieldWithDefault(this,6,"0")};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.setVotingPower=function(e){return t.Message.setProto3StringIntField(this,6,e)};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.getCreatedTimestampSeconds=function(){return t.Message.getFieldWithDefault(this,7,"0")};proto.ic_nns_governance.pb.v1.NeuronInfo.prototype.setCreatedTimestampSeconds=function(e){return t.Message.setProto3StringIntField(this,7,e)};proto.ic_nns_governance.pb.v1.Neuron.repeatedFields_=[4,12];proto.ic_nns_governance.pb.v1.Neuron.oneofGroups_=[[9,10]];proto.ic_nns_governance.pb.v1.Neuron.DissolveStateCase={DISSOLVE_STATE_NOT_SET:0,WHEN_DISSOLVED_TIMESTAMP_SECONDS:9,DISSOLVE_DELAY_SECONDS:10};proto.ic_nns_governance.pb.v1.Neuron.prototype.getDissolveStateCase=function(){return t.Message.computeOneofCase(this,proto.ic_nns_governance.pb.v1.Neuron.oneofGroups_[0])};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.Neuron.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.Neuron.toObject(e,this)},proto.ic_nns_governance.pb.v1.Neuron.toObject=function(e,n){var o,r={id:(o=n.getId())&&c.NeuronId.toObject(e,o),account:n.getAccount_asB64(),controller:(o=n.getController())&&c.PrincipalId.toObject(e,o),hotKeysList:t.Message.toObjectList(n.getHotKeysList(),c.PrincipalId.toObject,e),cachedNeuronStakeE8s:t.Message.getFieldWithDefault(n,5,"0"),neuronFeesE8s:t.Message.getFieldWithDefault(n,6,"0"),createdTimestampSeconds:t.Message.getFieldWithDefault(n,7,"0"),agingSinceTimestampSeconds:t.Message.getFieldWithDefault(n,8,"0"),spawnAtTimestampSeconds:t.Message.getFieldWithDefault(n,19,"0"),whenDissolvedTimestampSeconds:t.Message.getFieldWithDefault(n,9,"0"),dissolveDelaySeconds:t.Message.getFieldWithDefault(n,10,"0"),followeesMap:(o=n.getFolloweesMap())?o.toObject(e,proto.ic_nns_governance.pb.v1.Neuron.Followees.toObject):[],recentBallotsList:t.Message.toObjectList(n.getRecentBallotsList(),proto.ic_nns_governance.pb.v1.BallotInfo.toObject,e),kycVerified:t.Message.getBooleanFieldWithDefault(n,13,!1),transfer:(o=n.getTransfer())&&proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.toObject(e,o),maturityE8sEquivalent:t.Message.getFieldWithDefault(n,15,"0"),notForProfit:t.Message.getBooleanFieldWithDefault(n,16,!1)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.Neuron.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.Neuron;return proto.ic_nns_governance.pb.v1.Neuron.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.Neuron.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=new c.NeuronId;n.readMessage(r,c.NeuronId.deserializeBinaryFromReader),e.setId(r);break;case 2:var r=n.readBytes();e.setAccount(r);break;case 3:var r=new c.PrincipalId;n.readMessage(r,c.PrincipalId.deserializeBinaryFromReader),e.setController(r);break;case 4:var r=new c.PrincipalId;n.readMessage(r,c.PrincipalId.deserializeBinaryFromReader),e.addHotKeys(r);break;case 5:var r=n.readUint64String();e.setCachedNeuronStakeE8s(r);break;case 6:var r=n.readUint64String();e.setNeuronFeesE8s(r);break;case 7:var r=n.readUint64String();e.setCreatedTimestampSeconds(r);break;case 8:var r=n.readUint64String();e.setAgingSinceTimestampSeconds(r);break;case 19:var r=n.readUint64String();e.setSpawnAtTimestampSeconds(r);break;case 9:var r=n.readUint64String();e.setWhenDissolvedTimestampSeconds(r);break;case 10:var r=n.readUint64String();e.setDissolveDelaySeconds(r);break;case 11:var r=e.getFolloweesMap();n.readMessage(r,function(a,i){t.Map.deserializeBinary(a,i,t.BinaryReader.prototype.readInt32,t.BinaryReader.prototype.readMessage,proto.ic_nns_governance.pb.v1.Neuron.Followees.deserializeBinaryFromReader,0,new proto.ic_nns_governance.pb.v1.Neuron.Followees)});break;case 12:var r=new proto.ic_nns_governance.pb.v1.BallotInfo;n.readMessage(r,proto.ic_nns_governance.pb.v1.BallotInfo.deserializeBinaryFromReader),e.addRecentBallots(r);break;case 13:var r=n.readBool();e.setKycVerified(r);break;case 14:var r=new proto.ic_nns_governance.pb.v1.NeuronStakeTransfer;n.readMessage(r,proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.deserializeBinaryFromReader),e.setTransfer(r);break;case 15:var r=n.readUint64String();e.setMaturityE8sEquivalent(r);break;case 16:var r=n.readBool();e.setNotForProfit(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.Neuron.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.Neuron.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.Neuron.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getId(),o!=null&&n.writeMessage(1,o,c.NeuronId.serializeBinaryToWriter),o=e.getAccount_asU8(),o.length>0&&n.writeBytes(2,o),o=e.getController(),o!=null&&n.writeMessage(3,o,c.PrincipalId.serializeBinaryToWriter),o=e.getHotKeysList(),o.length>0&&n.writeRepeatedMessage(4,o,c.PrincipalId.serializeBinaryToWriter),o=e.getCachedNeuronStakeE8s(),parseInt(o,10)!==0&&n.writeUint64String(5,o),o=e.getNeuronFeesE8s(),parseInt(o,10)!==0&&n.writeUint64String(6,o),o=e.getCreatedTimestampSeconds(),parseInt(o,10)!==0&&n.writeUint64String(7,o),o=e.getAgingSinceTimestampSeconds(),parseInt(o,10)!==0&&n.writeUint64String(8,o),o=t.Message.getField(e,19),o!=null&&n.writeUint64String(19,o),o=t.Message.getField(e,9),o!=null&&n.writeUint64String(9,o),o=t.Message.getField(e,10),o!=null&&n.writeUint64String(10,o),o=e.getFolloweesMap(!0),o&&o.getLength()>0&&o.serializeBinary(11,n,t.BinaryWriter.prototype.writeInt32,t.BinaryWriter.prototype.writeMessage,proto.ic_nns_governance.pb.v1.Neuron.Followees.serializeBinaryToWriter),o=e.getRecentBallotsList(),o.length>0&&n.writeRepeatedMessage(12,o,proto.ic_nns_governance.pb.v1.BallotInfo.serializeBinaryToWriter),o=e.getKycVerified(),o&&n.writeBool(13,o),o=e.getTransfer(),o!=null&&n.writeMessage(14,o,proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.serializeBinaryToWriter),o=e.getMaturityE8sEquivalent(),parseInt(o,10)!==0&&n.writeUint64String(15,o),o=e.getNotForProfit(),o&&n.writeBool(16,o)};proto.ic_nns_governance.pb.v1.Neuron.Followees.repeatedFields_=[1];t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.Neuron.Followees.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.Neuron.Followees.toObject(e,this)},proto.ic_nns_governance.pb.v1.Neuron.Followees.toObject=function(e,n){var o,r={followeesList:t.Message.toObjectList(n.getFolloweesList(),c.NeuronId.toObject,e)};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.Neuron.Followees.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.Neuron.Followees;return proto.ic_nns_governance.pb.v1.Neuron.Followees.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.Neuron.Followees.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=new c.NeuronId;n.readMessage(r,c.NeuronId.deserializeBinaryFromReader),e.addFollowees(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.Neuron.Followees.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.Neuron.Followees.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.Neuron.Followees.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getFolloweesList(),o.length>0&&n.writeRepeatedMessage(1,o,c.NeuronId.serializeBinaryToWriter)};proto.ic_nns_governance.pb.v1.Neuron.Followees.prototype.getFolloweesList=function(){return t.Message.getRepeatedWrapperField(this,c.NeuronId,1)};proto.ic_nns_governance.pb.v1.Neuron.Followees.prototype.setFolloweesList=function(e){return t.Message.setRepeatedWrapperField(this,1,e)};proto.ic_nns_governance.pb.v1.Neuron.Followees.prototype.addFollowees=function(e,n){return t.Message.addToRepeatedWrapperField(this,1,e,proto.ic_base_types.pb.v1.NeuronId,n)};proto.ic_nns_governance.pb.v1.Neuron.Followees.prototype.clearFolloweesList=function(){return this.setFolloweesList([])};proto.ic_nns_governance.pb.v1.Neuron.prototype.getId=function(){return t.Message.getWrapperField(this,c.NeuronId,1)};proto.ic_nns_governance.pb.v1.Neuron.prototype.setId=function(e){return t.Message.setWrapperField(this,1,e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.clearId=function(){return this.setId(void 0)};proto.ic_nns_governance.pb.v1.Neuron.prototype.hasId=function(){return t.Message.getField(this,1)!=null};proto.ic_nns_governance.pb.v1.Neuron.prototype.getAccount=function(){return t.Message.getFieldWithDefault(this,2,"")};proto.ic_nns_governance.pb.v1.Neuron.prototype.getAccount_asB64=function(){return t.Message.bytesAsB64(this.getAccount())};proto.ic_nns_governance.pb.v1.Neuron.prototype.getAccount_asU8=function(){return t.Message.bytesAsU8(this.getAccount())};proto.ic_nns_governance.pb.v1.Neuron.prototype.setAccount=function(e){return t.Message.setProto3BytesField(this,2,e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.getController=function(){return t.Message.getWrapperField(this,c.PrincipalId,3)};proto.ic_nns_governance.pb.v1.Neuron.prototype.setController=function(e){return t.Message.setWrapperField(this,3,e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.clearController=function(){return this.setController(void 0)};proto.ic_nns_governance.pb.v1.Neuron.prototype.hasController=function(){return t.Message.getField(this,3)!=null};proto.ic_nns_governance.pb.v1.Neuron.prototype.getHotKeysList=function(){return t.Message.getRepeatedWrapperField(this,c.PrincipalId,4)};proto.ic_nns_governance.pb.v1.Neuron.prototype.setHotKeysList=function(e){return t.Message.setRepeatedWrapperField(this,4,e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.addHotKeys=function(e,n){return t.Message.addToRepeatedWrapperField(this,4,e,proto.ic_base_types.pb.v1.PrincipalId,n)};proto.ic_nns_governance.pb.v1.Neuron.prototype.clearHotKeysList=function(){return this.setHotKeysList([])};proto.ic_nns_governance.pb.v1.Neuron.prototype.getCachedNeuronStakeE8s=function(){return t.Message.getFieldWithDefault(this,5,"0")};proto.ic_nns_governance.pb.v1.Neuron.prototype.setCachedNeuronStakeE8s=function(e){return t.Message.setProto3StringIntField(this,5,e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.getNeuronFeesE8s=function(){return t.Message.getFieldWithDefault(this,6,"0")};proto.ic_nns_governance.pb.v1.Neuron.prototype.setNeuronFeesE8s=function(e){return t.Message.setProto3StringIntField(this,6,e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.getCreatedTimestampSeconds=function(){return t.Message.getFieldWithDefault(this,7,"0")};proto.ic_nns_governance.pb.v1.Neuron.prototype.setCreatedTimestampSeconds=function(e){return t.Message.setProto3StringIntField(this,7,e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.getAgingSinceTimestampSeconds=function(){return t.Message.getFieldWithDefault(this,8,"0")};proto.ic_nns_governance.pb.v1.Neuron.prototype.setAgingSinceTimestampSeconds=function(e){return t.Message.setProto3StringIntField(this,8,e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.getSpawnAtTimestampSeconds=function(){return t.Message.getFieldWithDefault(this,19,"0")};proto.ic_nns_governance.pb.v1.Neuron.prototype.setSpawnAtTimestampSeconds=function(e){return t.Message.setField(this,19,e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.clearSpawnAtTimestampSeconds=function(){return t.Message.setField(this,19,void 0)};proto.ic_nns_governance.pb.v1.Neuron.prototype.hasSpawnAtTimestampSeconds=function(){return t.Message.getField(this,19)!=null};proto.ic_nns_governance.pb.v1.Neuron.prototype.getWhenDissolvedTimestampSeconds=function(){return t.Message.getFieldWithDefault(this,9,"0")};proto.ic_nns_governance.pb.v1.Neuron.prototype.setWhenDissolvedTimestampSeconds=function(e){return t.Message.setOneofField(this,9,proto.ic_nns_governance.pb.v1.Neuron.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.clearWhenDissolvedTimestampSeconds=function(){return t.Message.setOneofField(this,9,proto.ic_nns_governance.pb.v1.Neuron.oneofGroups_[0],void 0)};proto.ic_nns_governance.pb.v1.Neuron.prototype.hasWhenDissolvedTimestampSeconds=function(){return t.Message.getField(this,9)!=null};proto.ic_nns_governance.pb.v1.Neuron.prototype.getDissolveDelaySeconds=function(){return t.Message.getFieldWithDefault(this,10,"0")};proto.ic_nns_governance.pb.v1.Neuron.prototype.setDissolveDelaySeconds=function(e){return t.Message.setOneofField(this,10,proto.ic_nns_governance.pb.v1.Neuron.oneofGroups_[0],e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.clearDissolveDelaySeconds=function(){return t.Message.setOneofField(this,10,proto.ic_nns_governance.pb.v1.Neuron.oneofGroups_[0],void 0)};proto.ic_nns_governance.pb.v1.Neuron.prototype.hasDissolveDelaySeconds=function(){return t.Message.getField(this,10)!=null};proto.ic_nns_governance.pb.v1.Neuron.prototype.getFolloweesMap=function(e){return t.Message.getMapField(this,11,e,proto.ic_nns_governance.pb.v1.Neuron.Followees)};proto.ic_nns_governance.pb.v1.Neuron.prototype.clearFolloweesMap=function(){return this.getFolloweesMap().clear(),this};proto.ic_nns_governance.pb.v1.Neuron.prototype.getRecentBallotsList=function(){return t.Message.getRepeatedWrapperField(this,proto.ic_nns_governance.pb.v1.BallotInfo,12)};proto.ic_nns_governance.pb.v1.Neuron.prototype.setRecentBallotsList=function(e){return t.Message.setRepeatedWrapperField(this,12,e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.addRecentBallots=function(e,n){return t.Message.addToRepeatedWrapperField(this,12,e,proto.ic_nns_governance.pb.v1.BallotInfo,n)};proto.ic_nns_governance.pb.v1.Neuron.prototype.clearRecentBallotsList=function(){return this.setRecentBallotsList([])};proto.ic_nns_governance.pb.v1.Neuron.prototype.getKycVerified=function(){return t.Message.getBooleanFieldWithDefault(this,13,!1)};proto.ic_nns_governance.pb.v1.Neuron.prototype.setKycVerified=function(e){return t.Message.setProto3BooleanField(this,13,e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.getTransfer=function(){return t.Message.getWrapperField(this,proto.ic_nns_governance.pb.v1.NeuronStakeTransfer,14)};proto.ic_nns_governance.pb.v1.Neuron.prototype.setTransfer=function(e){return t.Message.setWrapperField(this,14,e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.clearTransfer=function(){return this.setTransfer(void 0)};proto.ic_nns_governance.pb.v1.Neuron.prototype.hasTransfer=function(){return t.Message.getField(this,14)!=null};proto.ic_nns_governance.pb.v1.Neuron.prototype.getMaturityE8sEquivalent=function(){return t.Message.getFieldWithDefault(this,15,"0")};proto.ic_nns_governance.pb.v1.Neuron.prototype.setMaturityE8sEquivalent=function(e){return t.Message.setProto3StringIntField(this,15,e)};proto.ic_nns_governance.pb.v1.Neuron.prototype.getNotForProfit=function(){return t.Message.getBooleanFieldWithDefault(this,16,!1)};proto.ic_nns_governance.pb.v1.Neuron.prototype.setNotForProfit=function(e){return t.Message.setProto3BooleanField(this,16,e)};t.Message.GENERATE_TO_OBJECT&&(proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.toObject=function(e){return proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.toObject(e,this)},proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.toObject=function(e,n){var o,r={transferTimestamp:t.Message.getFieldWithDefault(n,1,"0"),from:(o=n.getFrom())&&c.PrincipalId.toObject(e,o),fromSubaccount:n.getFromSubaccount_asB64(),toSubaccount:n.getToSubaccount_asB64(),neuronStakeE8s:t.Message.getFieldWithDefault(n,5,"0"),blockHeight:t.Message.getFieldWithDefault(n,6,"0"),memo:t.Message.getFieldWithDefault(n,7,"0")};return e&&(r.$jspbMessageInstance=n),r});proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.deserializeBinary=function(e){var n=new t.BinaryReader(e),o=new proto.ic_nns_governance.pb.v1.NeuronStakeTransfer;return proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.deserializeBinaryFromReader(o,n)};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.deserializeBinaryFromReader=function(e,n){for(;n.nextField()&&!n.isEndGroup();){var o=n.getFieldNumber();switch(o){case 1:var r=n.readUint64String();e.setTransferTimestamp(r);break;case 2:var r=new c.PrincipalId;n.readMessage(r,c.PrincipalId.deserializeBinaryFromReader),e.setFrom(r);break;case 3:var r=n.readBytes();e.setFromSubaccount(r);break;case 4:var r=n.readBytes();e.setToSubaccount(r);break;case 5:var r=n.readUint64String();e.setNeuronStakeE8s(r);break;case 6:var r=n.readUint64String();e.setBlockHeight(r);break;case 7:var r=n.readUint64String();e.setMemo(r);break;default:n.skipField();break}}return e};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.serializeBinary=function(){var e=new t.BinaryWriter;return proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.serializeBinaryToWriter(this,e),e.getResultBuffer()};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.serializeBinaryToWriter=function(e,n){var o=void 0;o=e.getTransferTimestamp(),parseInt(o,10)!==0&&n.writeUint64String(1,o),o=e.getFrom(),o!=null&&n.writeMessage(2,o,c.PrincipalId.serializeBinaryToWriter),o=e.getFromSubaccount_asU8(),o.length>0&&n.writeBytes(3,o),o=e.getToSubaccount_asU8(),o.length>0&&n.writeBytes(4,o),o=e.getNeuronStakeE8s(),parseInt(o,10)!==0&&n.writeUint64String(5,o),o=e.getBlockHeight(),parseInt(o,10)!==0&&n.writeUint64String(6,o),o=e.getMemo(),parseInt(o,10)!==0&&n.writeUint64String(7,o)};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getTransferTimestamp=function(){return t.Message.getFieldWithDefault(this,1,"0")};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.setTransferTimestamp=function(e){return t.Message.setProto3StringIntField(this,1,e)};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getFrom=function(){return t.Message.getWrapperField(this,c.PrincipalId,2)};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.setFrom=function(e){return t.Message.setWrapperField(this,2,e)};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.clearFrom=function(){return this.setFrom(void 0)};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.hasFrom=function(){return t.Message.getField(this,2)!=null};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getFromSubaccount=function(){return t.Message.getFieldWithDefault(this,3,"")};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getFromSubaccount_asB64=function(){return t.Message.bytesAsB64(this.getFromSubaccount())};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getFromSubaccount_asU8=function(){return t.Message.bytesAsU8(this.getFromSubaccount())};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.setFromSubaccount=function(e){return t.Message.setProto3BytesField(this,3,e)};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getToSubaccount=function(){return t.Message.getFieldWithDefault(this,4,"")};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getToSubaccount_asB64=function(){return t.Message.bytesAsB64(this.getToSubaccount())};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getToSubaccount_asU8=function(){return t.Message.bytesAsU8(this.getToSubaccount())};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.setToSubaccount=function(e){return t.Message.setProto3BytesField(this,4,e)};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getNeuronStakeE8s=function(){return t.Message.getFieldWithDefault(this,5,"0")};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.setNeuronStakeE8s=function(e){return t.Message.setProto3StringIntField(this,5,e)};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getBlockHeight=function(){return t.Message.getFieldWithDefault(this,6,"0")};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.setBlockHeight=function(e){return t.Message.setProto3StringIntField(this,6,e)};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getMemo=function(){return t.Message.getFieldWithDefault(this,7,"0")};proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.setMemo=function(e){return t.Message.setProto3StringIntField(this,7,e)};proto.ic_nns_governance.pb.v1.Vote={VOTE_UNSPECIFIED:0,VOTE_YES:1,VOTE_NO:2};proto.ic_nns_governance.pb.v1.Topic={TOPIC_UNSPECIFIED:0,TOPIC_NEURON_MANAGEMENT:1,TOPIC_EXCHANGE_RATE:2,TOPIC_NETWORK_ECONOMICS:3,TOPIC_GOVERNANCE:4,TOPIC_NODE_ADMIN:5,TOPIC_PARTICIPANT_MANAGEMENT:6,TOPIC_SUBNET_MANAGEMENT:7,TOPIC_NETWORK_CANISTER_MANAGEMENT:8,TOPIC_KYC:9,TOPIC_NODE_PROVIDER_REWARDS:10,TOPIC_SNS_DECENTRALIZATION_SALE:11};s.object.extend(jn,proto.ic_nns_governance.pb.v1)});var zo=(0,chunk_ONAVPXOT.c)((0,chunk_MGC7CRB4.a)()),jo=(0,chunk_ONAVPXOT.c)(chunk_H6I2Z4SN_xn());var Vn=({IDL:e})=>{let n=e.Rec(),o=e.Record({id:e.Nat64}),r=e.Record({followees:e.Vec(o)}),a=e.Record({hash:e.Vec(e.Nat8)}),i=e.Record({id:e.Opt(e.Principal),reward_account:e.Opt(a)}),u=e.Record({dissolve_delay_seconds:e.Nat64}),y=e.Record({to_account:e.Opt(a)}),x=e.Variant({RewardToNeuron:u,RewardToAccount:y}),b=e.Record({node_provider:e.Opt(i),reward_mode:e.Opt(x),amount_e8s:e.Nat64}),V=e.Record({timestamp:e.Nat64,rewards:e.Vec(b)}),Me=e.Record({not_dissolving_neurons_e8s_buckets:e.Vec(e.Tuple(e.Nat64,e.Float64)),garbage_collectable_neurons_count:e.Nat64,neurons_with_invalid_stake_count:e.Nat64,not_dissolving_neurons_count_buckets:e.Vec(e.Tuple(e.Nat64,e.Nat64)),total_supply_icp:e.Nat64,neurons_with_less_than_6_months_dissolve_delay_count:e.Nat64,dissolved_neurons_count:e.Nat64,total_staked_e8s:e.Nat64,not_dissolving_neurons_count:e.Nat64,dissolved_neurons_e8s:e.Nat64,neurons_with_less_than_6_months_dissolve_delay_e8s:e.Nat64,dissolving_neurons_count_buckets:e.Vec(e.Tuple(e.Nat64,e.Nat64)),dissolving_neurons_count:e.Nat64,dissolving_neurons_e8s_buckets:e.Vec(e.Tuple(e.Nat64,e.Float64)),community_fund_total_staked_e8s:e.Nat64,timestamp_seconds:e.Nat64}),l=e.Record({neuron_minimum_stake_e8s:e.Nat64,max_proposals_to_keep_per_topic:e.Nat32,neuron_management_fee_per_proposal_e8s:e.Nat64,reject_cost_e8s:e.Nat64,transaction_fee_e8s:e.Nat64,neuron_spawn_dissolve_delay_seconds:e.Nat64,minimum_icp_xdr_rate:e.Nat64,maximum_node_provider_rewards_e8s:e.Nat64}),Re=e.Record({day_after_genesis:e.Nat64,actual_timestamp_seconds:e.Nat64,distributed_e8s_equivalent:e.Nat64,settled_proposals:e.Vec(o)}),z=e.Record({to_subaccount:e.Vec(e.Nat8),neuron_stake_e8s:e.Nat64,from:e.Opt(e.Principal),memo:e.Nat64,from_subaccount:e.Vec(e.Nat8),transfer_timestamp:e.Nat64,block_height:e.Nat64}),_=e.Record({error_message:e.Text,error_type:e.Int32}),j=e.Record({vote:e.Int32,voting_power:e.Nat64}),K=e.Record({no:e.Nat64,yes:e.Nat64,total:e.Nat64,timestamp_seconds:e.Nat64}),S=e.Record({name:e.Text,description:e.Opt(e.Text)}),G=e.Record({id:e.Opt(o),known_neuron_data:e.Opt(S)}),we=e.Record({percentage_to_spawn:e.Opt(e.Nat32),new_controller:e.Opt(e.Principal),nonce:e.Opt(e.Nat64)}),H=e.Record({amount_e8s:e.Nat64}),he=e.Record({topic:e.Int32,followees:e.Vec(o)}),U=e.Record({controller:e.Opt(e.Principal),memo:e.Nat64}),Se=e.Variant({NeuronIdOrSubaccount:e.Record({}),MemoAndController:U,Memo:e.Nat64}),q=e.Record({by:e.Opt(Se)}),Fe=e.Record({hot_key_to_remove:e.Opt(e.Principal)}),Oe=e.Record({new_hot_key:e.Opt(e.Principal)}),Te=e.Record({additional_dissolve_delay_seconds:e.Nat32}),Be=e.Record({dissolve_timestamp_seconds:e.Nat64}),Ee=e.Variant({RemoveHotKey:Fe,AddHotKey:Oe,StopDissolving:e.Record({}),StartDissolving:e.Record({}),IncreaseDissolveDelay:Te,JoinCommunityFund:e.Record({}),LeaveCommunityFund:e.Record({}),SetDissolveTimestamp:Be}),J=e.Record({operation:e.Opt(Ee)}),Pe=e.Record({vote:e.Int32,proposal:e.Opt(o)}),$=e.Record({source_neuron_id:e.Opt(o)}),Y=e.Record({dissolve_delay_seconds:e.Nat64,kyc_verified:e.Bool,amount_e8s:e.Nat64,new_controller:e.Opt(e.Principal),nonce:e.Nat64}),X=e.Record({percentage_to_merge:e.Nat32}),Ce=e.Record({e8s:e.Nat64}),Q=e.Record({to_account:e.Opt(a),amount:e.Opt(Ce)}),Ae=e.Variant({Spawn:we,Split:H,Follow:he,ClaimOrRefresh:q,Configure:J,RegisterVote:Pe,Merge:$,DisburseToNeuron:Y,MakeProposal:n,MergeMaturity:X,Disburse:Q}),F=e.Variant({Subaccount:e.Vec(e.Nat8),NeuronId:o}),Z=e.Record({id:e.Opt(o),command:e.Opt(Ae),neuron_id_or_subaccount:e.Opt(F)}),ke=e.Record({nns_function:e.Int32,payload:e.Vec(e.Nat8)}),We=e.Record({start_timestamp_seconds:e.Nat64,end_timestamp_seconds:e.Nat64}),xe=e.Record({open_time_window:e.Opt(We)}),Ve=e.Record({request:e.Opt(xe),swap_canister_id:e.Opt(e.Principal)}),ze=e.Record({default_followees:e.Vec(e.Tuple(e.Int32,r))}),I=e.Record({use_registry_derived_rewards:e.Opt(e.Bool),rewards:e.Vec(b)}),je=e.Record({principals:e.Vec(e.Principal)}),Ke=e.Variant({ToRemove:i,ToAdd:i}),Ge=e.Record({change:e.Opt(Ke)}),He=e.Record({motion_text:e.Text}),Ue=e.Variant({RegisterKnownNeuron:G,ManageNeuron:Z,ExecuteNnsFunction:ke,RewardNodeProvider:b,SetSnsTokenSwapOpenTimeWindow:Ve,SetDefaultFollowees:ze,RewardNodeProviders:I,ManageNetworkEconomics:l,ApproveGenesisKyc:je,AddOrRemoveNodeProvider:Ge,Motion:He});n.fill(e.Record({url:e.Text,title:e.Opt(e.Text),action:e.Opt(Ue),summary:e.Text}));let qe=e.Record({current_deadline_timestamp_seconds:e.Nat64}),Je=e.Record({id:e.Opt(o),failure_reason:e.Opt(_),ballots:e.Vec(e.Tuple(e.Nat64,j)),proposal_timestamp_seconds:e.Nat64,reward_event_round:e.Nat64,failed_timestamp_seconds:e.Nat64,reject_cost_e8s:e.Nat64,latest_tally:e.Opt(K),decided_timestamp_seconds:e.Nat64,proposal:e.Opt(n),proposer:e.Opt(o),wait_for_quiet_state:e.Opt(qe),executed_timestamp_seconds:e.Nat64}),$e=e.Variant({Spawn:o,Split:H,Configure:J,Merge:$,DisburseToNeuron:Y,ClaimOrRefreshNeuron:q,MergeMaturity:X,Disburse:Q}),Ye=e.Record({command:e.Opt($e),timestamp:e.Nat64}),D=e.Record({vote:e.Int32,proposal_id:e.Opt(o)}),Xe=e.Variant({DissolveDelaySeconds:e.Nat64,WhenDissolvedTimestampSeconds:e.Nat64}),O=e.Record({id:e.Opt(o),controller:e.Opt(e.Principal),recent_ballots:e.Vec(D),kyc_verified:e.Bool,not_for_profit:e.Bool,maturity_e8s_equivalent:e.Nat64,cached_neuron_stake_e8s:e.Nat64,created_timestamp_seconds:e.Nat64,aging_since_timestamp_seconds:e.Nat64,hot_keys:e.Vec(e.Principal),account:e.Vec(e.Nat8),joined_community_fund_timestamp_seconds:e.Opt(e.Nat64),dissolve_state:e.Opt(Xe),followees:e.Vec(e.Tuple(e.Int32,r)),neuron_fees_e8s:e.Nat64,transfer:e.Opt(z),known_neuron_data:e.Opt(S),spawn_at_timestamp_seconds:e.Opt(e.Nat64)}),Ko=e.Record({default_followees:e.Vec(e.Tuple(e.Int32,r)),most_recent_monthly_node_provider_rewards:e.Opt(V),wait_for_quiet_threshold_seconds:e.Nat64,metrics:e.Opt(Me),cached_daily_maturity_modulation:e.Opt(e.Float64),node_providers:e.Vec(i),economics:e.Opt(l),spawning_neurons:e.Opt(e.Bool),latest_reward_event:e.Opt(Re),to_claim_transfers:e.Vec(z),short_voting_period_seconds:e.Nat64,proposals:e.Vec(e.Tuple(e.Nat64,Je)),in_flight_commands:e.Vec(e.Tuple(e.Nat64,Ye)),neurons:e.Vec(e.Tuple(e.Nat64,O)),last_updated_maturity_modulation_cache:e.Opt(e.Nat64),genesis_timestamp_seconds:e.Nat64}),T=e.Variant({Ok:e.Null,Err:_}),Qe=e.Variant({Error:_,NeuronId:o}),Ze=e.Record({result:e.Opt(Qe)}),L=e.Variant({Ok:O,Err:_}),Ie=e.Variant({Ok:I,Err:_}),ee=e.Record({dissolve_delay_seconds:e.Nat64,recent_ballots:e.Vec(D),created_timestamp_seconds:e.Nat64,state:e.Int32,stake_e8s:e.Nat64,joined_community_fund_timestamp_seconds:e.Opt(e.Nat64),retrieved_at_timestamp_seconds:e.Nat64,known_neuron_data:e.Opt(S),voting_power:e.Nat64,age_seconds:e.Nat64}),ne=e.Variant({Ok:ee,Err:_}),De=e.Variant({Ok:i,Err:_}),B=e.Record({id:e.Opt(o),status:e.Int32,topic:e.Int32,failure_reason:e.Opt(_),ballots:e.Vec(e.Tuple(e.Nat64,j)),proposal_timestamp_seconds:e.Nat64,reward_event_round:e.Nat64,deadline_timestamp_seconds:e.Opt(e.Nat64),failed_timestamp_seconds:e.Nat64,reject_cost_e8s:e.Nat64,latest_tally:e.Opt(K),reward_status:e.Int32,decided_timestamp_seconds:e.Nat64,proposal:e.Opt(n),proposer:e.Opt(o),executed_timestamp_seconds:e.Nat64}),Le=e.Record({known_neurons:e.Vec(G)}),en=e.Record({neuron_ids:e.Vec(e.Nat64),include_neurons_readable_by_caller:e.Bool}),nn=e.Record({neuron_infos:e.Vec(e.Tuple(e.Nat64,ee)),full_neurons:e.Vec(O)}),on=e.Record({node_providers:e.Vec(i)}),rn=e.Record({include_reward_status:e.Vec(e.Int32),before_proposal:e.Opt(o),limit:e.Nat32,exclude_topic:e.Vec(e.Int32),include_status:e.Vec(e.Int32)}),tn=e.Record({proposal_info:e.Vec(B)}),E=e.Record({created_neuron_id:e.Opt(o)}),sn=e.Record({refreshed_neuron_id:e.Opt(o)}),an=e.Record({proposal_id:e.Opt(o)}),cn=e.Record({merged_maturity_e8s:e.Nat64,new_stake_e8s:e.Nat64}),pn=e.Record({transfer_block_height:e.Nat64}),un=e.Variant({Error:_,Spawn:E,Split:E,Follow:e.Record({}),ClaimOrRefresh:sn,Configure:e.Record({}),RegisterVote:e.Record({}),Merge:e.Record({}),DisburseToNeuron:E,MakeProposal:an,MergeMaturity:cn,Disburse:pn}),ln=e.Record({command:e.Opt(un)}),dn=e.Record({reward_account:e.Opt(a)});return e.Service({claim_gtc_neurons:e.Func([e.Principal,e.Vec(o)],[T],[]),claim_or_refresh_neuron_from_account:e.Func([U],[Ze],[]),get_build_metadata:e.Func([],[e.Text],[]),get_full_neuron:e.Func([e.Nat64],[L],[]),get_full_neuron_by_id_or_subaccount:e.Func([F],[L],[]),get_monthly_node_provider_rewards:e.Func([],[Ie],[]),get_most_recent_monthly_node_provider_rewards:e.Func([],[e.Opt(V)],[]),get_network_economics_parameters:e.Func([],[l],[]),get_neuron_ids:e.Func([],[e.Vec(e.Nat64)],[]),get_neuron_info:e.Func([e.Nat64],[ne],[]),get_neuron_info_by_id_or_subaccount:e.Func([F],[ne],[]),get_node_provider_by_caller:e.Func([e.Null],[De],[]),get_pending_proposals:e.Func([],[e.Vec(B)],[]),get_proposal_info:e.Func([e.Nat64],[e.Opt(B)],[]),list_known_neurons:e.Func([],[Le],[]),list_neurons:e.Func([en],[nn],[]),list_node_providers:e.Func([],[on],[]),list_proposals:e.Func([rn],[tn],[]),manage_neuron:e.Func([Z],[ln],[]),transfer_gtc_neuron:e.Func([o,o],[T],[]),update_node_provider:e.Func([dn],[T],[])})};var zn=({IDL:e})=>{let n=e.Rec(),o=e.Record({id:e.Nat64}),r=e.Record({followees:e.Vec(o)}),a=e.Record({hash:e.Vec(e.Nat8)}),i=e.Record({id:e.Opt(e.Principal),reward_account:e.Opt(a)}),u=e.Record({dissolve_delay_seconds:e.Nat64}),y=e.Record({to_account:e.Opt(a)}),x=e.Variant({RewardToNeuron:u,RewardToAccount:y}),b=e.Record({node_provider:e.Opt(i),reward_mode:e.Opt(x),amount_e8s:e.Nat64}),V=e.Record({timestamp:e.Nat64,rewards:e.Vec(b)}),Me=e.Record({not_dissolving_neurons_e8s_buckets:e.Vec(e.Tuple(e.Nat64,e.Float64)),garbage_collectable_neurons_count:e.Nat64,neurons_with_invalid_stake_count:e.Nat64,not_dissolving_neurons_count_buckets:e.Vec(e.Tuple(e.Nat64,e.Nat64)),total_supply_icp:e.Nat64,neurons_with_less_than_6_months_dissolve_delay_count:e.Nat64,dissolved_neurons_count:e.Nat64,total_staked_e8s:e.Nat64,not_dissolving_neurons_count:e.Nat64,dissolved_neurons_e8s:e.Nat64,neurons_with_less_than_6_months_dissolve_delay_e8s:e.Nat64,dissolving_neurons_count_buckets:e.Vec(e.Tuple(e.Nat64,e.Nat64)),dissolving_neurons_count:e.Nat64,dissolving_neurons_e8s_buckets:e.Vec(e.Tuple(e.Nat64,e.Float64)),community_fund_total_staked_e8s:e.Nat64,timestamp_seconds:e.Nat64}),l=e.Record({neuron_minimum_stake_e8s:e.Nat64,max_proposals_to_keep_per_topic:e.Nat32,neuron_management_fee_per_proposal_e8s:e.Nat64,reject_cost_e8s:e.Nat64,transaction_fee_e8s:e.Nat64,neuron_spawn_dissolve_delay_seconds:e.Nat64,minimum_icp_xdr_rate:e.Nat64,maximum_node_provider_rewards_e8s:e.Nat64}),Re=e.Record({day_after_genesis:e.Nat64,actual_timestamp_seconds:e.Nat64,distributed_e8s_equivalent:e.Nat64,settled_proposals:e.Vec(o)}),z=e.Record({to_subaccount:e.Vec(e.Nat8),neuron_stake_e8s:e.Nat64,from:e.Opt(e.Principal),memo:e.Nat64,from_subaccount:e.Vec(e.Nat8),transfer_timestamp:e.Nat64,block_height:e.Nat64}),_=e.Record({error_message:e.Text,error_type:e.Int32}),j=e.Record({vote:e.Int32,voting_power:e.Nat64}),K=e.Record({no:e.Nat64,yes:e.Nat64,total:e.Nat64,timestamp_seconds:e.Nat64}),S=e.Record({name:e.Text,description:e.Opt(e.Text)}),G=e.Record({id:e.Opt(o),known_neuron_data:e.Opt(S)}),we=e.Record({percentage_to_spawn:e.Opt(e.Nat32),new_controller:e.Opt(e.Principal),nonce:e.Opt(e.Nat64)}),H=e.Record({amount_e8s:e.Nat64}),he=e.Record({topic:e.Int32,followees:e.Vec(o)}),U=e.Record({controller:e.Opt(e.Principal),memo:e.Nat64}),Se=e.Variant({NeuronIdOrSubaccount:e.Record({}),MemoAndController:U,Memo:e.Nat64}),q=e.Record({by:e.Opt(Se)}),Fe=e.Record({hot_key_to_remove:e.Opt(e.Principal)}),Oe=e.Record({new_hot_key:e.Opt(e.Principal)}),Te=e.Record({additional_dissolve_delay_seconds:e.Nat32}),Be=e.Record({dissolve_timestamp_seconds:e.Nat64}),Ee=e.Variant({RemoveHotKey:Fe,AddHotKey:Oe,StopDissolving:e.Record({}),StartDissolving:e.Record({}),IncreaseDissolveDelay:Te,JoinCommunityFund:e.Record({}),LeaveCommunityFund:e.Record({}),SetDissolveTimestamp:Be}),J=e.Record({operation:e.Opt(Ee)}),Pe=e.Record({vote:e.Int32,proposal:e.Opt(o)}),$=e.Record({source_neuron_id:e.Opt(o)}),Y=e.Record({dissolve_delay_seconds:e.Nat64,kyc_verified:e.Bool,amount_e8s:e.Nat64,new_controller:e.Opt(e.Principal),nonce:e.Nat64}),X=e.Record({percentage_to_merge:e.Nat32}),Ce=e.Record({e8s:e.Nat64}),Q=e.Record({to_account:e.Opt(a),amount:e.Opt(Ce)}),Ae=e.Variant({Spawn:we,Split:H,Follow:he,ClaimOrRefresh:q,Configure:J,RegisterVote:Pe,Merge:$,DisburseToNeuron:Y,MakeProposal:n,MergeMaturity:X,Disburse:Q}),F=e.Variant({Subaccount:e.Vec(e.Nat8),NeuronId:o}),Z=e.Record({id:e.Opt(o),command:e.Opt(Ae),neuron_id_or_subaccount:e.Opt(F)}),ke=e.Record({nns_function:e.Int32,payload:e.Vec(e.Nat8)}),We=e.Record({start_timestamp_seconds:e.Nat64,end_timestamp_seconds:e.Nat64}),xe=e.Record({open_time_window:e.Opt(We)}),Ve=e.Record({request:e.Opt(xe),swap_canister_id:e.Opt(e.Principal)}),ze=e.Record({default_followees:e.Vec(e.Tuple(e.Int32,r))}),I=e.Record({use_registry_derived_rewards:e.Opt(e.Bool),rewards:e.Vec(b)}),je=e.Record({principals:e.Vec(e.Principal)}),Ke=e.Variant({ToRemove:i,ToAdd:i}),Ge=e.Record({change:e.Opt(Ke)}),He=e.Record({motion_text:e.Text}),Ue=e.Variant({RegisterKnownNeuron:G,ManageNeuron:Z,ExecuteNnsFunction:ke,RewardNodeProvider:b,SetSnsTokenSwapOpenTimeWindow:Ve,SetDefaultFollowees:ze,RewardNodeProviders:I,ManageNetworkEconomics:l,ApproveGenesisKyc:je,AddOrRemoveNodeProvider:Ge,Motion:He});n.fill(e.Record({url:e.Text,title:e.Opt(e.Text),action:e.Opt(Ue),summary:e.Text}));let qe=e.Record({current_deadline_timestamp_seconds:e.Nat64}),Je=e.Record({id:e.Opt(o),failure_reason:e.Opt(_),ballots:e.Vec(e.Tuple(e.Nat64,j)),proposal_timestamp_seconds:e.Nat64,reward_event_round:e.Nat64,failed_timestamp_seconds:e.Nat64,reject_cost_e8s:e.Nat64,latest_tally:e.Opt(K),decided_timestamp_seconds:e.Nat64,proposal:e.Opt(n),proposer:e.Opt(o),wait_for_quiet_state:e.Opt(qe),executed_timestamp_seconds:e.Nat64}),$e=e.Variant({Spawn:o,Split:H,Configure:J,Merge:$,DisburseToNeuron:Y,ClaimOrRefreshNeuron:q,MergeMaturity:X,Disburse:Q}),Ye=e.Record({command:e.Opt($e),timestamp:e.Nat64}),D=e.Record({vote:e.Int32,proposal_id:e.Opt(o)}),Xe=e.Variant({DissolveDelaySeconds:e.Nat64,WhenDissolvedTimestampSeconds:e.Nat64}),O=e.Record({id:e.Opt(o),controller:e.Opt(e.Principal),recent_ballots:e.Vec(D),kyc_verified:e.Bool,not_for_profit:e.Bool,maturity_e8s_equivalent:e.Nat64,cached_neuron_stake_e8s:e.Nat64,created_timestamp_seconds:e.Nat64,aging_since_timestamp_seconds:e.Nat64,hot_keys:e.Vec(e.Principal),account:e.Vec(e.Nat8),joined_community_fund_timestamp_seconds:e.Opt(e.Nat64),dissolve_state:e.Opt(Xe),followees:e.Vec(e.Tuple(e.Int32,r)),neuron_fees_e8s:e.Nat64,transfer:e.Opt(z),known_neuron_data:e.Opt(S),spawn_at_timestamp_seconds:e.Opt(e.Nat64)}),Ko=e.Record({default_followees:e.Vec(e.Tuple(e.Int32,r)),most_recent_monthly_node_provider_rewards:e.Opt(V),wait_for_quiet_threshold_seconds:e.Nat64,metrics:e.Opt(Me),cached_daily_maturity_modulation:e.Opt(e.Float64),node_providers:e.Vec(i),economics:e.Opt(l),spawning_neurons:e.Opt(e.Bool),latest_reward_event:e.Opt(Re),to_claim_transfers:e.Vec(z),short_voting_period_seconds:e.Nat64,proposals:e.Vec(e.Tuple(e.Nat64,Je)),in_flight_commands:e.Vec(e.Tuple(e.Nat64,Ye)),neurons:e.Vec(e.Tuple(e.Nat64,O)),last_updated_maturity_modulation_cache:e.Opt(e.Nat64),genesis_timestamp_seconds:e.Nat64}),T=e.Variant({Ok:e.Null,Err:_}),Qe=e.Variant({Error:_,NeuronId:o}),Ze=e.Record({result:e.Opt(Qe)}),L=e.Variant({Ok:O,Err:_}),Ie=e.Variant({Ok:I,Err:_}),ee=e.Record({dissolve_delay_seconds:e.Nat64,recent_ballots:e.Vec(D),created_timestamp_seconds:e.Nat64,state:e.Int32,stake_e8s:e.Nat64,joined_community_fund_timestamp_seconds:e.Opt(e.Nat64),retrieved_at_timestamp_seconds:e.Nat64,known_neuron_data:e.Opt(S),voting_power:e.Nat64,age_seconds:e.Nat64}),ne=e.Variant({Ok:ee,Err:_}),De=e.Variant({Ok:i,Err:_}),B=e.Record({id:e.Opt(o),status:e.Int32,topic:e.Int32,failure_reason:e.Opt(_),ballots:e.Vec(e.Tuple(e.Nat64,j)),proposal_timestamp_seconds:e.Nat64,reward_event_round:e.Nat64,deadline_timestamp_seconds:e.Opt(e.Nat64),failed_timestamp_seconds:e.Nat64,reject_cost_e8s:e.Nat64,latest_tally:e.Opt(K),reward_status:e.Int32,decided_timestamp_seconds:e.Nat64,proposal:e.Opt(n),proposer:e.Opt(o),executed_timestamp_seconds:e.Nat64}),Le=e.Record({known_neurons:e.Vec(G)}),en=e.Record({neuron_ids:e.Vec(e.Nat64),include_neurons_readable_by_caller:e.Bool}),nn=e.Record({neuron_infos:e.Vec(e.Tuple(e.Nat64,ee)),full_neurons:e.Vec(O)}),on=e.Record({node_providers:e.Vec(i)}),rn=e.Record({include_reward_status:e.Vec(e.Int32),before_proposal:e.Opt(o),limit:e.Nat32,exclude_topic:e.Vec(e.Int32),include_status:e.Vec(e.Int32)}),tn=e.Record({proposal_info:e.Vec(B)}),E=e.Record({created_neuron_id:e.Opt(o)}),sn=e.Record({refreshed_neuron_id:e.Opt(o)}),an=e.Record({proposal_id:e.Opt(o)}),cn=e.Record({merged_maturity_e8s:e.Nat64,new_stake_e8s:e.Nat64}),pn=e.Record({transfer_block_height:e.Nat64}),un=e.Variant({Error:_,Spawn:E,Split:E,Follow:e.Record({}),ClaimOrRefresh:sn,Configure:e.Record({}),RegisterVote:e.Record({}),Merge:e.Record({}),DisburseToNeuron:E,MakeProposal:an,MergeMaturity:cn,Disburse:pn}),ln=e.Record({command:e.Opt(un)}),dn=e.Record({reward_account:e.Opt(a)});return e.Service({claim_gtc_neurons:e.Func([e.Principal,e.Vec(o)],[T],[]),claim_or_refresh_neuron_from_account:e.Func([U],[Ze],[]),get_build_metadata:e.Func([],[e.Text],["query"]),get_full_neuron:e.Func([e.Nat64],[L],["query"]),get_full_neuron_by_id_or_subaccount:e.Func([F],[L],["query"]),get_monthly_node_provider_rewards:e.Func([],[Ie],[]),get_most_recent_monthly_node_provider_rewards:e.Func([],[e.Opt(V)],["query"]),get_network_economics_parameters:e.Func([],[l],["query"]),get_neuron_ids:e.Func([],[e.Vec(e.Nat64)],["query"]),get_neuron_info:e.Func([e.Nat64],[ne],["query"]),get_neuron_info_by_id_or_subaccount:e.Func([F],[ne],["query"]),get_node_provider_by_caller:e.Func([e.Null],[De],["query"]),get_pending_proposals:e.Func([],[e.Vec(B)],["query"]),get_proposal_info:e.Func([e.Nat64],[e.Opt(B)],["query"]),list_known_neurons:e.Func([],[Le],["query"]),list_neurons:e.Func([en],[nn],["query"]),list_node_providers:e.Func([],[on],["query"]),list_proposals:e.Func([rn],[tn],["query"]),manage_neuron:e.Func([Z],[ln],[]),transfer_gtc_neuron:e.Func([o,o],[T],[]),update_node_provider:e.Func([dn],[T],[])})};var chunk_H6I2Z4SN_W=(0,chunk_ONAVPXOT.c)(chunk_H6I2Z4SN_ue());var chunk_H6I2Z4SN_le=class extends Error{},chunk_H6I2Z4SN_de=class extends (/* unused pure expression or super */ null && (chunk_H6I2Z4SN_le)){},chunk_H6I2Z4SN_e=class extends (/* unused pure expression or super */ null && (chunk_H6I2Z4SN_le)){constructor(o){super();this.minimumAmount=o}},w=class extends Error{},m=class extends Error{constructor(o){super();this.detail=o}},ge=class extends Error{},chunk_H6I2Z4SN_oe=class extends Error{},g=class extends Error{constructor(n){super("Unsupported value: "+n)}},ve=class extends Error{};var chunk_H6I2Z4SN_bn=(0,chunk_ONAVPXOT.c)(M()),Kn=(0,chunk_ONAVPXOT.c)((0,chunk_MGC7CRB4.a)());var chunk_H6I2Z4SN_Gn=e=>Uint8Array.from(chunk_H6I2Z4SN_bn.Buffer.from(e,"hex")).subarray(4),chunk_H6I2Z4SN_Hn=e=>chunk_H6I2Z4SN_bn.Buffer.from(e).toString("hex"),chunk_H6I2Z4SN_Un=(e,n)=>{let o=re(`
account-id`),r=Kn.sha224.create();r.update([...o,...e.toUint8Array(),...n??Array(32).fill(0)]);let a=new Uint8Array(r.array()),i=te(a),u=new Uint8Array([...i,...a]);return Tn(u)};var chunk_H6I2Z4SN_Jn=e=>({id:e}),chunk_H6I2Z4SN_mn=e=>({id:e}),Xo=e=>({followees:e.map(chunk_H6I2Z4SN_mn)}),Qo=e=>{if("NeuronId"in e)return{NeuronId:{id:e.NeuronId}};if("Subaccount"in e)return{Subaccount:e.Subaccount};throw new g(e)},$n=e=>{if("ExecuteNnsFunction"in e){let n=e.ExecuteNnsFunction;if(n.payloadBytes===void 0)throw new Error("payloadBytes not found");return{ExecuteNnsFunction:{nns_function:n.nnsFunctionId,payload:gn(n.payloadBytes)}}}if("ManageNeuron"in e){let n=e.ManageNeuron;return{ManageNeuron:chunk_H6I2Z4SN_er(n)}}if("ApproveGenesisKyc"in e)return{ApproveGenesisKyc:{principals:e.ApproveGenesisKyc.principals.map(f.fromText)}};if("ManageNetworkEconomics"in e){let n=e.ManageNetworkEconomics;return{ManageNetworkEconomics:{neuron_minimum_stake_e8s:n.neuronMinimumStake,max_proposals_to_keep_per_topic:n.maxProposalsToKeepPerTopic,neuron_management_fee_per_proposal_e8s:n.neuronManagementFeePerProposal,reject_cost_e8s:n.rejectCost,transaction_fee_e8s:n.transactionFee,neuron_spawn_dissolve_delay_seconds:n.neuronSpawnDissolveDelaySeconds,minimum_icp_xdr_rate:n.minimumIcpXdrRate,maximum_node_provider_rewards_e8s:n.maximumNodeProviderRewards}}}if("RewardNodeProvider"in e){let n=e.RewardNodeProvider;return{RewardNodeProvider:{node_provider:n.nodeProvider?[chunk_H6I2Z4SN_fe(n.nodeProvider)]:[],amount_e8s:n.amountE8s,reward_mode:n.rewardMode!=null?[chunk_H6I2Z4SN_qn(n.rewardMode)]:[]}}}if("RewardNodeProviders"in e){let n=e.RewardNodeProviders;return{RewardNodeProviders:{use_registry_derived_rewards:n.useRegistryDerivedRewards===void 0?[]:[n.useRegistryDerivedRewards],rewards:n.rewards.map(o=>({node_provider:o.nodeProvider?[chunk_H6I2Z4SN_fe(o.nodeProvider)]:[],amount_e8s:o.amountE8s,reward_mode:o.rewardMode!=null?[chunk_H6I2Z4SN_qn(o.rewardMode)]:[]}))}}}if("AddOrRemoveNodeProvider"in e){let n=e.AddOrRemoveNodeProvider;return{AddOrRemoveNodeProvider:{change:n.change?[Do(n.change)]:[]}}}if("Motion"in e)return{Motion:{motion_text:e.Motion.motionText}};if("SetDefaultFollowees"in e)return{SetDefaultFollowees:{default_followees:e.SetDefaultFollowees.defaultFollowees.map(o=>[o.topic,Xo(o.followees)])}};if("RegisterKnownNeuron"in e){let n=e.RegisterKnownNeuron;return{RegisterKnownNeuron:{id:[{id:n.id}],known_neuron_data:[{name:n.name,description:n.description!==void 0?[n.description]:[]}]}}}if("SetSnsTokenSwapOpenTimeWindow"in e){let{request:n,swapCanisterId:o}=e.SetSnsTokenSwapOpenTimeWindow;return{SetSnsTokenSwapOpenTimeWindow:{request:n===void 0?[]:[{open_time_window:n.openTimeWindow===void 0?[]:[{start_timestamp_seconds:n.openTimeWindow.startTimestampSeconds,end_timestamp_seconds:n.openTimeWindow.endTimestampSeconds}]}],swap_canister_id:o===void 0?[]:[f.fromText(o)]}}}throw new g(e)},Zo=e=>{if("Split"in e)return{Split:{amount_e8s:e.Split.amount}};if("Follow"in e){let n=e.Follow;return{Follow:{topic:n.topic,followees:n.followees.map(chunk_H6I2Z4SN_mn)}}}if("ClaimOrRefresh"in e){let n=e.ClaimOrRefresh;return{ClaimOrRefresh:{by:n.by?[Lo(n.by)]:[]}}}if("Configure"in e){let n=e.Configure;return{Configure:{operation:n.operation?[Io(n.operation)]:[]}}}if("RegisterVote"in e){let n=e.RegisterVote;return{RegisterVote:{vote:n.vote,proposal:n.proposal?[chunk_H6I2Z4SN_Jn(n.proposal)]:[]}}}if("DisburseToNeuron"in e){let n=e.DisburseToNeuron;return{DisburseToNeuron:{dissolve_delay_seconds:n.dissolveDelaySeconds,kyc_verified:n.kycVerified,amount_e8s:n.amount,new_controller:n.newController?[f.fromText(n.newController)]:[],nonce:n.nonce}}}if("MergeMaturity"in e)return{MergeMaturity:{percentage_to_merge:e.MergeMaturity.percentageToMerge}};if("MakeProposal"in e){let n=e.MakeProposal;return{MakeProposal:{url:n.url,title:[],action:n.action?[$n(n.action)]:[],summary:n.summary}}}if("Disburse"in e){let n=e.Disburse;return{Disburse:{to_account:n.toAccountId?[Ne(n.toAccountId)]:[],amount:n.amount?[chunk_H6I2Z4SN_Yn(n.amount)]:[]}}}if("Spawn"in e){let n=e.Spawn;return{Spawn:{percentage_to_spawn:n.percentageToSpawn===void 0?[]:[n.percentageToSpawn],new_controller:n.newController?[f.fromText(n.newController)]:[],nonce:[]}}}if("Merge"in e){let n=e.Merge;return{Merge:{source_neuron_id:n.sourceNeuronId?[{id:n.sourceNeuronId}]:[]}}}throw new g(e)},Io=e=>{if("RemoveHotKey"in e){let n=e.RemoveHotKey;return{RemoveHotKey:{hot_key_to_remove:n.hotKeyToRemove!=null?[f.fromText(n.hotKeyToRemove)]:[]}}}if("AddHotKey"in e){let n=e.AddHotKey;return{AddHotKey:{new_hot_key:n.newHotKey?[f.fromText(n.newHotKey)]:[]}}}if("StopDissolving"in e)return{StopDissolving:{}};if("StartDissolving"in e)return{StartDissolving:{}};if("IncreaseDissolveDelay"in e)return{IncreaseDissolveDelay:{additional_dissolve_delay_seconds:e.IncreaseDissolveDelay.additionalDissolveDelaySeconds}};if("JoinCommunityFund"in e||"LeaveCommunityFund"in e)return e;if("SetDissolveTimestamp"in e)return{SetDissolveTimestamp:{dissolve_timestamp_seconds:e.SetDissolveTimestamp.dissolveTimestampSeconds}};throw new g(e)},Do=e=>{if("ToRemove"in e)return{ToRemove:chunk_H6I2Z4SN_fe(e.ToRemove)};if("ToAdd"in e)return{ToAdd:chunk_H6I2Z4SN_fe(e.ToAdd)};throw new g(e)},chunk_H6I2Z4SN_fe=e=>({id:e.id!=null?[f.fromText(e.id)]:[],reward_account:e.rewardAccount!=null?[Ne(e.rewardAccount)]:[]}),chunk_H6I2Z4SN_Yn=e=>({e8s:e}),Ne=e=>{let n=chunk_H6I2Z4SN_Gn(e);return{hash:gn(n)}},chunk_H6I2Z4SN_qn=e=>{if("RewardToNeuron"in e)return{RewardToNeuron:{dissolve_delay_seconds:e.RewardToNeuron.dissolveDelaySeconds}};if("RewardToAccount"in e)return{RewardToAccount:{to_account:e.RewardToAccount.toAccount!=null?[Ne(e.RewardToAccount.toAccount)]:[]}};throw new g(e)},Lo=e=>{if("NeuronIdOrSubaccount"in e)return{NeuronIdOrSubaccount:{}};if("Memo"in e)return{Memo:e.Memo};if("MemoAndController"in e)return{MemoAndController:{memo:e.MemoAndController.memo,controller:e.MemoAndController.controller?[e.MemoAndController.controller]:[]}};throw new g(e)},Xn=e=>({neuron_ids:e??[],include_neurons_readable_by_caller:!e}),chunk_H6I2Z4SN_er=({id:e,command:n,neuronIdOrSubaccount:o})=>({id:e?[chunk_H6I2Z4SN_mn(e)]:[],command:n?[Zo(n)]:[],neuron_id_or_subaccount:o?[Qo(o)]:[]});var Qn=({includeRewardStatus:e,beforeProposal:n,excludeTopic:o,includeStatus:r,limit:a})=>({include_reward_status:e,before_proposal:n?[chunk_H6I2Z4SN_Jn(n)]:[],limit:a,exclude_topic:o,include_status:r}),Zn=e=>({id:[],command:[{ClaimOrRefresh:{by:[{NeuronIdOrSubaccount:{}}]}}],neuron_id_or_subaccount:[{NeuronId:{id:e.neuronId}}]}),In=({memo:e,controller:n})=>{let o={ClaimOrRefresh:{by:[{MemoAndController:{controller:n==null?[]:[n],memo:e}}]}};return{id:[],command:[o],neuron_id_or_subaccount:[]}},chunk_H6I2Z4SN_Dn=({neuronId:e,amount:n})=>({id:[],command:[{Split:{amount_e8s:n}}],neuron_id_or_subaccount:[{NeuronId:{id:e}}]});var Ln=({neuronId:e,vote:n,proposalId:o})=>P({neuronId:e,command:{RegisterVote:{vote:n,proposal:[{id:o}]}}}),eo=e=>{let n={MakeProposal:{url:e.url,title:e.title!=null?[e.title]:[],summary:e.summary,action:[$n(e.action)]}};return{id:[],command:[n],neuron_id_or_subaccount:[{NeuronId:{id:e.neuronId}}]}},no=({neuronId:e,topic:n,followees:o})=>P({neuronId:e,command:{Follow:{topic:n,followees:o.map(r=>({id:r}))}}}),oo=({neuronId:e,toAccountId:n,amount:o})=>P({neuronId:e,command:{Disburse:{to_account:n!==void 0?[Ne(n)]:[],amount:o!==void 0?[chunk_H6I2Z4SN_Yn(o)]:[]}}}),ro=({neuronId:e,percentageToMerge:n})=>P({neuronId:e,command:{MergeMaturity:{percentage_to_merge:n}}}),to=({neuronId:e,percentageToSpawn:n,newController:o,nonce:r})=>P({neuronId:e,command:{Spawn:{percentage_to_spawn:n===void 0?[]:[n],new_controller:o===void 0?[]:[o],nonce:r===void 0?[]:[r]}}}),so=({neuronId:e,principal:n})=>C({neuronId:e,operation:{AddHotKey:{new_hot_key:[n]}}}),ao=({neuronId:e,principal:n})=>C({neuronId:e,operation:{RemoveHotKey:{hot_key_to_remove:[n]}}}),io=({neuronId:e,additionalDissolveDelaySeconds:n})=>C({neuronId:e,operation:{IncreaseDissolveDelay:{additional_dissolve_delay_seconds:n}}}),co=e=>C({neuronId:e,operation:{JoinCommunityFund:{}}}),chunk_H6I2Z4SN_po=e=>C({neuronId:e,operation:{LeaveCommunityFund:{}}}),uo=({sourceNeuronId:e,targetNeuronId:n})=>P({neuronId:n,command:{Merge:{source_neuron_id:[{id:e}]}}}),chunk_H6I2Z4SN_lo=e=>C({neuronId:e,operation:{StartDissolving:{}}}),_o=e=>C({neuronId:e,operation:{StopDissolving:{}}}),P=({neuronId:e,command:n})=>({id:[{id:e}],command:[n],neuron_id_or_subaccount:[]}),C=({neuronId:e,operation:n})=>P({neuronId:e,command:{Configure:{operation:[n]}}});var v=(0,chunk_ONAVPXOT.c)((0,chunk_IPUXUCZB.b)()),chunk_H6I2Z4SN_d=(0,chunk_ONAVPXOT.c)(chunk_H6I2Z4SN_ue()),go=(0,chunk_ONAVPXOT.c)((0,chunk_IPUXUCZB.c)()),vo=e=>{let n=new v.PrincipalId;n.setSerializedId(f.fromText(e.principal).toUint8Array());let o=new chunk_H6I2Z4SN_d.ManageNeuron.AddHotKey;o.setNewHotKey(n);let r=new chunk_H6I2Z4SN_d.ManageNeuron.Configure;r.setAddHotKey(o);let a=new chunk_H6I2Z4SN_d.ManageNeuron;a.setConfigure(r);let i=new v.NeuronId;return i.setId(e.neuronId.toString()),a.setNeuronId(i),a},chunk_H6I2Z4SN_fo=e=>{let n=new v.PrincipalId;n.setSerializedId(f.fromText(e.principal).toUint8Array());let o=new chunk_H6I2Z4SN_d.ManageNeuron.RemoveHotKey;o.setHotKeyToRemove(n);let r=new chunk_H6I2Z4SN_d.ManageNeuron.Configure;r.setRemoveHotKey(o);let a=new chunk_H6I2Z4SN_d.ManageNeuron;a.setConfigure(r);let i=new v.NeuronId;return i.setId(e.neuronId.toString()),a.setNeuronId(i),a},No=({neuronId:e,additionalDissolveDelaySeconds:n})=>{let o=new chunk_H6I2Z4SN_d.ManageNeuron.IncreaseDissolveDelay;o.setAdditionalDissolveDelaySeconds(n);let r=new chunk_H6I2Z4SN_d.ManageNeuron.Configure;r.setIncreaseDissolveDelay(o);let a=new chunk_H6I2Z4SN_d.ManageNeuron;a.setConfigure(r);let i=new v.NeuronId;return i.setId(e.toString()),a.setNeuronId(i),a},bo=e=>{let n=new chunk_H6I2Z4SN_d.ManageNeuron.Configure;n.setStartDissolving(new chunk_H6I2Z4SN_d.ManageNeuron.StartDissolving);let o=new chunk_H6I2Z4SN_d.ManageNeuron;o.setConfigure(n);let r=new v.NeuronId;return r.setId(e.toString()),o.setNeuronId(r),o},mo=e=>{let n=new chunk_H6I2Z4SN_d.ManageNeuron.Configure;n.setStopDissolving(new chunk_H6I2Z4SN_d.ManageNeuron.StopDissolving);let o=new chunk_H6I2Z4SN_d.ManageNeuron;o.setConfigure(n);let r=new v.NeuronId;return r.setId(e.toString()),o.setNeuronId(r),o},yo=e=>{let n=new chunk_H6I2Z4SN_d.ManageNeuron.Disburse;if(e.toAccountId){let a=new go.AccountIdentifier;a.setHash(Uint8Array.from(Buffer.from(e.toAccountId,"hex"))),n.setToAccount(a)}if(e.amount!=null){let a=new chunk_H6I2Z4SN_d.ManageNeuron.Disburse.Amount;a.setE8s(e.amount.toString()),n.setAmount(a)}let o=new chunk_H6I2Z4SN_d.ManageNeuron;o.setDisburse(n);let r=new v.NeuronId;return r.setId(e.neuronId.toString()),o.setNeuronId(r),o},Mo=e=>{let n=new chunk_H6I2Z4SN_d.ManageNeuron.MergeMaturity;n.setPercentageToMerge(e.percentageToMerge);let o=new chunk_H6I2Z4SN_d.ManageNeuron,r=new v.NeuronId;return r.setId(e.neuronId.toString()),o.setNeuronId(r),o.setMergeMaturity(n),o},Ro=e=>{let n=new chunk_H6I2Z4SN_d.ManageNeuron.Spawn;if(e.newController){let a=new v.PrincipalId;a.setSerializedId(f.fromText(e.newController).toUint8Array().slice(4)),n.setNewController(a)}e.percentageToSpawn!==void 0&&n.setPercentageToSpawn(e.percentageToSpawn);let o=new chunk_H6I2Z4SN_d.ManageNeuron;o.setSpawn(n);let r=new v.NeuronId;return r.setId(e.neuronId.toString()),o.setNeuronId(r),o},chunk_H6I2Z4SN_wo=e=>{let n=new chunk_H6I2Z4SN_d.ManageNeuron.Merge,o=new v.NeuronId;o.setId(e.sourceNeuronId.toString()),n.setSourceNeuronId(o);let r=new chunk_H6I2Z4SN_d.ManageNeuron,a=new v.NeuronId;return a.setId(e.targetNeuronId.toString()),r.setNeuronId(a),r.setMerge(n),r};var ho=(i=>(i[i.UNSPECIFIED=0]="UNSPECIFIED",i[i.LOCKED=1]="LOCKED",i[i.DISSOLVING=2]="DISSOLVING",i[i.DISSOLVED=3]="DISSOLVED",i[i.SPAWNING=4]="SPAWNING",i))(ho||{}),chunk_H6I2Z4SN_nr=(i=>(i[i.PROPOSAL_REWARD_STATUS_UNKNOWN=0]="PROPOSAL_REWARD_STATUS_UNKNOWN",i[i.PROPOSAL_REWARD_STATUS_ACCEPT_VOTES=1]="PROPOSAL_REWARD_STATUS_ACCEPT_VOTES",i[i.PROPOSAL_REWARD_STATUS_READY_TO_SETTLE=2]="PROPOSAL_REWARD_STATUS_READY_TO_SETTLE",i[i.PROPOSAL_REWARD_STATUS_SETTLED=3]="PROPOSAL_REWARD_STATUS_SETTLED",i[i.PROPOSAL_REWARD_STATUS_INELIGIBLE=4]="PROPOSAL_REWARD_STATUS_INELIGIBLE",i))(chunk_H6I2Z4SN_nr||{}),or=(u=>(u[u.PROPOSAL_STATUS_UNKNOWN=0]="PROPOSAL_STATUS_UNKNOWN",u[u.PROPOSAL_STATUS_OPEN=1]="PROPOSAL_STATUS_OPEN",u[u.PROPOSAL_STATUS_REJECTED=2]="PROPOSAL_STATUS_REJECTED",u[u.PROPOSAL_STATUS_ACCEPTED=3]="PROPOSAL_STATUS_ACCEPTED",u[u.PROPOSAL_STATUS_EXECUTED=4]="PROPOSAL_STATUS_EXECUTED",u[u.PROPOSAL_STATUS_FAILED=5]="PROPOSAL_STATUS_FAILED",u))(or||{}),rr=(r=>(r[r.UNSPECIFIED=0]="UNSPECIFIED",r[r.YES=1]="YES",r[r.NO=2]="NO",r))(rr||{}),tr=(l=>(l[l.Unspecified=0]="Unspecified",l[l.ManageNeuron=1]="ManageNeuron",l[l.ExchangeRate=2]="ExchangeRate",l[l.NetworkEconomics=3]="NetworkEconomics",l[l.Governance=4]="Governance",l[l.NodeAdmin=5]="NodeAdmin",l[l.ParticipantManagement=6]="ParticipantManagement",l[l.SubnetManagement=7]="SubnetManagement",l[l.NetworkCanisterManagement=8]="NetworkCanisterManagement",l[l.Kyc=9]="Kyc",l[l.NodeProviderRewards=10]="NodeProviderRewards",l[l.SnsDecentralizationSale=11]="SnsDecentralizationSale",l))(tr||{});var So=e=>e?.[0];var sr=({neuronId:e,neuronInfo:n,rawNeuron:o,canisterId:r})=>{let a=o?ar({neuron:o,canisterId:r}):void 0;return{neuronId:e,dissolveDelaySeconds:n.dissolve_delay_seconds,recentBallots:n.recent_ballots.map(To),createdTimestampSeconds:n.created_timestamp_seconds,state:n.state,joinedCommunityFundTimestampSeconds:n.joined_community_fund_timestamp_seconds.length?n.joined_community_fund_timestamp_seconds[0]:void 0,retrievedAtTimestampSeconds:n.retrieved_at_timestamp_seconds,votingPower:n.voting_power,ageSeconds:n.age_seconds,fullNeuron:a}},ar=({neuron:e,canisterId:n})=>({id:e.id.length?h(e.id[0]):void 0,controller:e.controller.length?e.controller[0].toString():void 0,recentBallots:e.recent_ballots.map(To),kycVerified:e.kyc_verified,notForProfit:e.not_for_profit,cachedNeuronStake:e.cached_neuron_stake_e8s,createdTimestampSeconds:e.created_timestamp_seconds,maturityE8sEquivalent:e.maturity_e8s_equivalent,agingSinceTimestampSeconds:e.aging_since_timestamp_seconds,neuronFees:e.neuron_fees_e8s,hotKeys:e.hot_keys.map(o=>o.toString()),accountIdentifier:chunk_H6I2Z4SN_Un(n,On(e.account)),joinedCommunityFundTimestampSeconds:e.joined_community_fund_timestamp_seconds.length?e.joined_community_fund_timestamp_seconds[0]:void 0,dissolveState:e.dissolve_state.length?chunk_H6I2Z4SN_ir(e.dissolve_state[0]):void 0,spawnAtTimesSeconds:e.spawn_at_timestamp_seconds[0],followees:e.followees.map(([o,r])=>Bo({topic:o,followees:r}))}),To=({vote:e,proposal_id:n})=>({vote:e,proposalId:n.length?h(n[0]):void 0}),chunk_H6I2Z4SN_ir=e=>"DissolveDelaySeconds"in e?{DissolveDelaySeconds:e.DissolveDelaySeconds}:{WhenDissolvedTimestampSeconds:e.WhenDissolvedTimestampSeconds},Bo=({topic:e,followees:n})=>({topic:e,followees:n.followees.map(h)}),h=({id:e})=>e,chunk_H6I2Z4SN_cr=e=>{if("NeuronId"in e)return{NeuronId:e.NeuronId.id};if("Subaccount"in e)return{Subaccount:e.Subaccount};throw new g(e)},chunk_H6I2Z4SN_pr=({neuronId:e,ballot:n})=>{let{vote:o,voting_power:r}=n;return{neuronId:e,vote:o,votingPower:r}},chunk_H6I2Z4SN_ur=({title:e,url:n,action:o,summary:r})=>({title:e.length?e[0]:void 0,url:n,action:o.length?Eo(o[0]):void 0,summary:r}),Eo=e=>{if("ExecuteNnsFunction"in e)return{ExecuteNnsFunction:{nnsFunctionId:e.ExecuteNnsFunction.nns_function}};if("ManageNeuron"in e){let n=e.ManageNeuron;return{ManageNeuron:{id:n.id.length?h(n.id[0]):void 0,command:n.command.length?chunk_H6I2Z4SN_dr(n.command[0]):void 0,neuronIdOrSubaccount:n.neuron_id_or_subaccount.length?chunk_H6I2Z4SN_cr(n.neuron_id_or_subaccount[0]):void 0}}}if("ApproveGenesisKyc"in e)return{ApproveGenesisKyc:{principals:e.ApproveGenesisKyc.principals.map(o=>o.toString())}};if("ManageNetworkEconomics"in e){let n=e.ManageNetworkEconomics;return{ManageNetworkEconomics:{neuronMinimumStake:n.neuron_minimum_stake_e8s,maxProposalsToKeepPerTopic:n.max_proposals_to_keep_per_topic,neuronManagementFeePerProposal:n.neuron_management_fee_per_proposal_e8s,rejectCost:n.reject_cost_e8s,transactionFee:n.transaction_fee_e8s,neuronSpawnDissolveDelaySeconds:n.neuron_spawn_dissolve_delay_seconds,minimumIcpXdrRate:n.minimum_icp_xdr_rate,maximumNodeProviderRewards:n.maximum_node_provider_rewards_e8s}}}if("RewardNodeProvider"in e){let n=e.RewardNodeProvider;return{RewardNodeProvider:{nodeProvider:n.node_provider.length?be(n.node_provider[0]):void 0,amountE8s:n.amount_e8s,rewardMode:n.reward_mode.length?Fo(n.reward_mode[0]):void 0}}}if("RewardNodeProviders"in e){let n=e.RewardNodeProviders;return{RewardNodeProviders:{useRegistryDerivedRewards:n.use_registry_derived_rewards.length?n.use_registry_derived_rewards[0]:void 0,rewards:n.rewards.map(o=>({nodeProvider:o.node_provider.length?be(o.node_provider[0]):void 0,amountE8s:o.amount_e8s,rewardMode:o.reward_mode.length?Fo(o.reward_mode[0]):void 0}))}}}if("AddOrRemoveNodeProvider"in e){let n=e.AddOrRemoveNodeProvider;return{AddOrRemoveNodeProvider:{change:n.change.length?chunk_H6I2Z4SN_gr(n.change[0]):void 0}}}if("Motion"in e)return{Motion:{motionText:e.Motion.motion_text}};if("SetDefaultFollowees"in e)return{SetDefaultFollowees:{defaultFollowees:e.SetDefaultFollowees.default_followees.map(([o,r])=>Bo({topic:o,followees:r}))}};if("RegisterKnownNeuron"in e){let n=e.RegisterKnownNeuron;return{RegisterKnownNeuron:Nr(n)}}if("SetSnsTokenSwapOpenTimeWindow"in e){let n=e.SetSnsTokenSwapOpenTimeWindow,o=n.request?.length?{openTimeWindow:n.request[0].open_time_window.length?{startTimestampSeconds:n.request[0].open_time_window[0].start_timestamp_seconds,endTimestampSeconds:n.request[0].open_time_window[0].end_timestamp_seconds}:void 0}:void 0,r=n?.swap_canister_id.length?n.swap_canister_id[0].toString():void 0;return{SetSnsTokenSwapOpenTimeWindow:{request:o,swapCanisterId:r}}}throw new g(e)},chunk_H6I2Z4SN_lr=e=>({no:e.no,yes:e.yes,total:e.total,timestampSeconds:e.timestamp_seconds}),chunk_H6I2Z4SN_dr=e=>{if("Spawn"in e){let n=e.Spawn;return{Spawn:{newController:n.new_controller.length?n.new_controller[0].toString():void 0,percentageToSpawn:n.percentage_to_spawn.length?n.percentage_to_spawn[0]:0}}}if("Split"in e)return{Split:{amount:e.Split.amount_e8s}};if("Follow"in e){let n=e.Follow;return{Follow:{topic:n.topic,followees:n.followees.map(h)}}}if("ClaimOrRefresh"in e){let n=e.ClaimOrRefresh;return{ClaimOrRefresh:{by:n.by.length?chunk_H6I2Z4SN_fr(n.by[0]):void 0}}}if("Configure"in e){let n=e.Configure;return{Configure:{operation:n.operation.length?chunk_H6I2Z4SN_r(n.operation[0]):void 0}}}if("RegisterVote"in e){let n=e.RegisterVote;return{RegisterVote:{vote:n.vote,proposal:n.proposal.length?h(n.proposal[0]):void 0}}}if("DisburseToNeuron"in e){let n=e.DisburseToNeuron;return{DisburseToNeuron:{dissolveDelaySeconds:n.dissolve_delay_seconds,kycVerified:n.kyc_verified,amount:n.amount_e8s,newController:n.new_controller.length?n.new_controller[0].toString():void 0,nonce:n.nonce}}}if("MergeMaturity"in e)return{MergeMaturity:{percentageToMerge:e.MergeMaturity.percentage_to_merge}};if("MakeProposal"in e){let n=e.MakeProposal;return{MakeProposal:{title:n.title.length?n.title[0]:void 0,url:n.url,action:n.action.length?Eo(n.action[0]):void 0,summary:n.summary}}}if("Disburse"in e){let n=e.Disburse;return{Disburse:{toAccountId:n.to_account.length?chunk_H6I2Z4SN_yn(n.to_account[0]):void 0,amount:n.amount.length?vr(n.amount[0]):void 0}}}if("Merge"in e){let n=e.Merge;return{Merge:{sourceNeuronId:n.source_neuron_id.length?n.source_neuron_id[0].id:void 0}}}throw new g(e)},chunk_H6I2Z4SN_r=e=>{if("RemoveHotKey"in e){let n=e.RemoveHotKey;return{RemoveHotKey:{hotKeyToRemove:n.hot_key_to_remove.length?n.hot_key_to_remove[0].toString():void 0}}}if("AddHotKey"in e){let n=e.AddHotKey;return{AddHotKey:{newHotKey:n.new_hot_key.length?n.new_hot_key[0].toString():void 0}}}if("StopDissolving"in e)return{StopDissolving:{}};if("StartDissolving"in e)return{StartDissolving:{}};if("IncreaseDissolveDelay"in e)return{IncreaseDissolveDelay:{additionalDissolveDelaySeconds:e.IncreaseDissolveDelay.additional_dissolve_delay_seconds}};if("JoinCommunityFund"in e||"LeaveCommunityFund"in e)return e;if("SetDissolveTimestamp"in e)return{SetDissolveTimestamp:{dissolveTimestampSeconds:e.SetDissolveTimestamp.dissolve_timestamp_seconds}};throw new g(e)},chunk_H6I2Z4SN_gr=e=>{if("ToRemove"in e)return{ToRemove:be(e.ToRemove)};if("ToAdd"in e)return{ToAdd:be(e.ToAdd)};throw new g(e)},be=e=>({id:e.id.length?e.id[0].toString():void 0,rewardAccount:e.reward_account.length?chunk_H6I2Z4SN_yn(e.reward_account[0]):void 0}),vr=e=>e.e8s,chunk_H6I2Z4SN_yn=e=>chunk_H6I2Z4SN_Hn(new Uint8Array(e.hash)),Fo=e=>{if("RewardToNeuron"in e)return{RewardToNeuron:{dissolveDelaySeconds:e.RewardToNeuron.dissolve_delay_seconds}};if("RewardToAccount"in e)return{RewardToAccount:{toAccount:e.RewardToAccount.to_account!=null&&e.RewardToAccount.to_account.length?chunk_H6I2Z4SN_yn(e.RewardToAccount.to_account[0]):void 0}};throw new g(e)},chunk_H6I2Z4SN_fr=e=>{if("NeuronIdOrSubaccount"in e)return{NeuronIdOrSubaccount:{}};if("Memo"in e)return{Memo:e.Memo};if("MemoAndController"in e)return{MemoAndController:{memo:e.MemoAndController.memo,controller:e.MemoAndController.controller.length?e.MemoAndController.controller[0]:void 0}};throw new g(e)},chunk_H6I2Z4SN_Mn=e=>({id:e.id.length?h(e.id[0]):void 0,ballots:e.ballots.map(n=>chunk_H6I2Z4SN_pr({neuronId:n[0],ballot:n[1]})),rejectCost:e.reject_cost_e8s,proposalTimestampSeconds:e.proposal_timestamp_seconds,rewardEventRound:e.reward_event_round,failedTimestampSeconds:e.failed_timestamp_seconds,deadlineTimestampSeconds:So(e.deadline_timestamp_seconds),decidedTimestampSeconds:e.decided_timestamp_seconds,proposal:e.proposal.length?chunk_H6I2Z4SN_ur(e.proposal[0]):void 0,proposer:e.proposer.length?h(e.proposer[0]):void 0,latestTally:e.latest_tally.length?chunk_H6I2Z4SN_lr(e.latest_tally[0]):void 0,executedTimestampSeconds:e.executed_timestamp_seconds,topic:e.topic,status:e.status,rewardStatus:e.reward_status}),Po=({response:{neuron_infos:e,full_neurons:n},canisterId:o})=>e.map(([r,a])=>sr({neuronId:r,neuronInfo:a,rawNeuron:n.find(i=>i.id.length&&i.id[0].id===r),canisterId:o})),chunk_H6I2Z4SN_Co=({proposal_info:e})=>({proposals:e.map(chunk_H6I2Z4SN_Mn)}),Nr=({id:e,known_neuron_data:n})=>({id:e[0]?.id??BigInt(0),name:n[0]?.name??"",description:n[0]?.description[0]??""}),Ao=e=>{let n=e.getProposalId();return{vote:e.getVote(),proposalId:n!==void 0?BigInt(n.getId()):void 0}},br=e=>e?.hasWhenDissolvedTimestampSeconds()?2:e?.hasDissolveDelaySeconds()?e.getDissolveDelaySeconds()==="0"?3:1:0,chunk_H6I2Z4SN_mr=e=>e.toArray().map(([n,o])=>({topic:Number(n),followees:o.getFolloweesList?.().map(r=>BigInt(r.getId()))??[]})),Oo=e=>f.fromUint8Array(e.getSerializedId_asU8()).toText(),yr=({neuron:e,canisterId:n})=>{let o=ae.fromBytes(e.getAccount_asU8());return se.fromPrincipal({principal:n,subAccount:o})},chunk_H6I2Z4SN_Mr=({pbNeuron:e,pbNeuronInfo:n,canisterId:o})=>{let r=e.getId(),a=e.getController(),i=a===void 0?a:Oo(a),u;return e.hasWhenDissolvedTimestampSeconds()?u={WhenDissolvedTimestampSeconds:BigInt(e.getWhenDissolvedTimestampSeconds())}:e.hasDissolveDelaySeconds()&&(u={DissolveDelaySeconds:BigInt(e.getDissolveDelaySeconds())}),{id:r===void 0?void 0:BigInt(r.getId()),controller:i,recentBallots:n.getRecentBallotsList().map(Ao),kycVerified:e.getKycVerified(),notForProfit:e.getNotForProfit(),cachedNeuronStake:BigInt(e.getCachedNeuronStakeE8s()),createdTimestampSeconds:BigInt(e.getCreatedTimestampSeconds()),maturityE8sEquivalent:BigInt(e.getMaturityE8sEquivalent()),agingSinceTimestampSeconds:BigInt(e.getAgingSinceTimestampSeconds()),spawnAtTimesSeconds:e.hasSpawnAtTimestampSeconds()?BigInt(e.getSpawnAtTimestampSeconds()):void 0,neuronFees:BigInt(e.getNeuronFeesE8s()),hotKeys:e.getHotKeysList().map(Oo),accountIdentifier:yr({neuron:e,canisterId:o}).toHex(),joinedCommunityFundTimestampSeconds:void 0,dissolveState:u,followees:chunk_H6I2Z4SN_mr(e.getFolloweesMap())}},ko=({pbNeurons:e,canisterId:n})=>o=>{let r=e.find(i=>i.getId()?.getId()===o.getKey()),a=o.getValue();if(a===void 0)throw new Error(`NeuronInfo not present for neuron ${o.getKey()}`);return{neuronId:BigInt(o.getKey()),dissolveDelaySeconds:BigInt(a.getDissolveDelaySeconds()),recentBallots:a.getRecentBallotsList().map(Ao),createdTimestampSeconds:BigInt(a.getCreatedTimestampSeconds()),state:br(r),joinedCommunityFundTimestampSeconds:void 0,retrievedAtTimestampSeconds:BigInt(a.getRetrievedAtTimestampSeconds()),votingPower:BigInt(a.getVotingPower()),ageSeconds:BigInt(a.getAgeSeconds()),fullNeuron:r===void 0?void 0:chunk_H6I2Z4SN_Mr({pbNeuron:r,pbNeuronInfo:a,canisterId:n})}};var Wo=(0,chunk_ONAVPXOT.c)(chunk_H6I2Z4SN_ue());var xo=e=>{let o=Wo.ManageNeuronResponse.deserializeBinary(e).getError();if(o)throw new m({error_message:o.getErrorMessage(),error_type:o.getErrorType()})};var me=e=>{let{command:n}=e,o=n[0];if(!o)throw new m({error_message:"Error updating neuron",error_type:0});if("Error"in o)throw new m(o.Error);return o},N=async({request:e,service:n})=>{let o=await n.manage_neuron(e);me(o)};var Vo=e=>{if(e.length!=64)throw new chunk_H6I2Z4SN_oe(`Invalid account identifier ${e}. The account identifier must be 64 chars in length.`);let n=Buffer.from(e,"hex"),o=n.slice(0,4),r=Buffer.from(te(n.slice(4)));if(!r.equals(o))throw new chunk_H6I2Z4SN_oe(`Account identifier ${e} has an invalid checksum. Are you sure the account identifier is correct?

Expected checksum: ${r.toString("hex")}
Found checksum: ${o.toString("hex")}`)};var chunk_H6I2Z4SN_Rn=e=>{if(e<0||e>100)throw new ge(`${e} is not a valid percentage number.`)};var ye=class{constructor(n,o,r,a,i=!1){this.canisterId=n;this.service=o;this.certifiedService=r;this.agent=a;this.hardwareWallet=i;this.canisterId=n,this.service=o,this.certifiedService=r,this.agent=a,this.hardwareWallet=i}static create(n={}){let o=n.canisterId??Bn,{service:r,certifiedService:a,agent:i}=En({options:{...n,canisterId:o},idlFactory:zn,certifiedIdlFactory:Vn});return new ye(o,r,a,i,n.hardwareWallet)}listNeurons=async({certified:n=!0,neuronIds:o})=>{if(this.hardwareWallet&&!n)throw new ve;if(this.hardwareWallet)return this.listNeuronsHardwareWallet();let r=Xn(o),a=await this.getGovernanceService(n).list_neurons(r);return Po({response:a,canisterId:this.canisterId})};listKnownNeurons=async(n=!0)=>(await this.getGovernanceService(n).list_known_neurons()).known_neurons.map(r=>({id:r.id[0]?.id??BigInt(0),name:r.known_neuron_data[0]?.name??"",description:r.known_neuron_data[0]?.description[0]}));listProposals=async({request:n,certified:o=!0})=>{let r=Qn(n),a=await this.getGovernanceService(o).list_proposals(r);return chunk_H6I2Z4SN_Co(a)};stakeNeuron=async({stake:n,principal:o,fromSubAccount:r,ledgerCanister:a})=>{if(n.toE8s()<Pn)throw new chunk_H6I2Z4SN_e(Cn.fromString("1"));let i=new Uint8Array((0,jo.default)(8)),u=Fn(i),y=this.buildNeuronStakeSubAccount(i,o),x=se.fromPrincipal({principal:this.canisterId,subAccount:y});await a.transfer({memo:u,amount:n,fromSubAccount:r,to:x});let b=await this.claimOrRefreshNeuronFromAccount({controller:o,memo:u});if(b===void 0)throw new chunk_H6I2Z4SN_de;return b};increaseDissolveDelay=async({neuronId:n,additionalDissolveDelaySeconds:o})=>{if(this.hardwareWallet)return this.increaseDissolveDelayHardwareWallet({neuronId:n,additionalDissolveDelaySeconds:o});let r=io({neuronId:n,additionalDissolveDelaySeconds:o});return N({request:r,service:this.certifiedService})};startDissolving=async n=>{if(this.hardwareWallet)return this.startDissolvingHardwareWallet(n);let o=chunk_H6I2Z4SN_lo(n);return N({request:o,service:this.certifiedService})};stopDissolving=async n=>{if(this.hardwareWallet)return this.stopDissolvingHardwareWallet(n);let o=_o(n);return N({request:o,service:this.certifiedService})};joinCommunityFund=async n=>{let o=co(n);return N({request:o,service:this.certifiedService})};leaveCommunityFund=async n=>{let o=chunk_H6I2Z4SN_po(n);return N({request:o,service:this.certifiedService})};mergeNeurons=async n=>{if(this.hardwareWallet)return this.mergeNeuronsHardwareWallet(n);let o=uo(n);return N({request:o,service:this.certifiedService})};splitNeuron=async({neuronId:n,amount:o})=>{let r=chunk_H6I2Z4SN_Dn({neuronId:n,amount:o.toE8s()}),a=await this.certifiedService.manage_neuron(r),i=me(a);if("Split"in i){let u=i.Split.created_neuron_id[0];if(u===void 0)throw new m({error_message:"Unexpected error splitting neuron. No neuronId in Split response.",error_type:0});return u.id}throw new w(`Unrecognized Split error in ${JSON.stringify(a)}`)};getProposal=async({proposalId:n,certified:o=!0})=>{let[r]=await this.getGovernanceService(o).get_proposal_info(n);return r?chunk_H6I2Z4SN_Mn(r):void 0};makeProposal=async n=>{let o=eo(n);return N({request:o,service:this.certifiedService})};registerVote=async({neuronId:n,vote:o,proposalId:r})=>{let a=Ln({neuronId:n,vote:o,proposalId:r});return N({request:a,service:this.certifiedService})};setFollowees=async n=>{let o=no(n);return N({request:o,service:this.certifiedService})};disburse=async({neuronId:n,toAccountId:o,amount:r})=>{if(o!==void 0&&Vo(o),this.hardwareWallet)return this.disburseHardwareWallet({neuronId:n,toAccountId:o,amount:r});let a=oo({neuronId:n,toAccountId:o,amount:r});return N({request:a,service:this.certifiedService})};mergeMaturity=async({neuronId:n,percentageToMerge:o})=>{if(chunk_H6I2Z4SN_Rn(o),this.hardwareWallet)return this.mergeMaturityHardwareWallet({neuronId:n,percentageToMerge:o});let r=ro({neuronId:n,percentageToMerge:o});return N({request:r,service:this.certifiedService})};spawnNeuron=async({neuronId:n,percentageToSpawn:o,newController:r,nonce:a})=>{if(o!==void 0&&chunk_H6I2Z4SN_Rn(o),this.hardwareWallet)return this.spawnHardwareWallet({neuronId:n,percentageToSpawn:o,newController:r?.toText()});let i=to({neuronId:n,percentageToSpawn:o,newController:r,nonce:a}),u=await this.certifiedService.manage_neuron(i),y=me(u);if("Spawn"in y&&y.Spawn.created_neuron_id[0]!==void 0)return y.Spawn.created_neuron_id[0].id;throw new w(`Unrecognized Spawn error in ${JSON.stringify(u)}`)};addHotkey=async({neuronId:n,principal:o})=>{if(this.hardwareWallet)return this.addHotkeyHardwareWallet({neuronId:n,principal:o});let r=so({neuronId:n,principal:o});return N({request:r,service:this.certifiedService})};removeHotkey=async({neuronId:n,principal:o})=>{if(this.hardwareWallet)return this.removeHotkeyHardwareWallet({neuronId:n,principal:o});let r=ao({neuronId:n,principal:o});return N({request:r,service:this.certifiedService})};claimOrRefreshNeuronFromAccount=async({memo:n,controller:o})=>{let r=In({memo:n,controller:o}),a=await this.certifiedService.manage_neuron(r),{command:i}=a;if(i.length&&"ClaimOrRefresh"in i[0])return i[0].ClaimOrRefresh.refreshed_neuron_id[0]?.id;throw new w(`Unrecognized ClaimOrRefresh error in ${JSON.stringify(a)}`)};claimOrRefreshNeuron=async n=>{let o=Zn(n),r=await this.service.manage_neuron(o),{command:a}=r;if(a.length&&"ClaimOrRefresh"in a[0])return a[0].ClaimOrRefresh.refreshed_neuron_id[0]?.id;throw new w(`Unrecognized ClaimOrRefresh error in ${JSON.stringify(r)}`)};buildNeuronStakeSubAccount=(n,o)=>{let r=re("neuron-stake"),a=zo.sha256.create();return a.update([12,...r,...o.toUint8Array(),...n]),ae.fromBytes(new Uint8Array(a.array()))};getGovernanceService(n){return n?this.certifiedService:this.service}getNeuron=async({certified:n=!0,neuronId:o})=>{let[r]=await this.listNeurons({certified:n,neuronIds:[o]});return r};listNeuronsHardwareWallet=async()=>{let n=new chunk_H6I2Z4SN_W.ListNeurons;n.setIncludeNeuronsReadableByCaller(!0);let o=await ie({agent:this.agent,canisterId:this.canisterId,methodName:"list_neurons_pb",arg:n.serializeBinary()}),r=chunk_H6I2Z4SN_W.ListNeuronsResponse.deserializeBinary(o),a=r.getFullNeuronsList();return r.getNeuronIdsList().map(ko({pbNeurons:a,canisterId:this.canisterId}))};manageNeuronUpdateCall=async n=>{let o=await ie({agent:this.agent,canisterId:this.canisterId,methodName:"manage_neuron_pb",arg:n.serializeBinary()});xo(o)};addHotkeyHardwareWallet=async({neuronId:n,principal:o})=>{let r=vo({neuronId:n,principal:o.toText()});await this.manageNeuronUpdateCall(r)};removeHotkeyHardwareWallet=async({neuronId:n,principal:o})=>{let r=chunk_H6I2Z4SN_fo({neuronId:n,principal:o.toText()});await this.manageNeuronUpdateCall(r)};increaseDissolveDelayHardwareWallet=async({neuronId:n,additionalDissolveDelaySeconds:o})=>{let r=No({neuronId:n,additionalDissolveDelaySeconds:o});await this.manageNeuronUpdateCall(r)};startDissolvingHardwareWallet=async n=>{let o=bo(n);await this.manageNeuronUpdateCall(o)};stopDissolvingHardwareWallet=async n=>{let o=mo(n);await this.manageNeuronUpdateCall(o)};disburseHardwareWallet=async n=>{let o=yo(n);await this.manageNeuronUpdateCall(o)};mergeMaturityHardwareWallet=async n=>{let o=Mo(n);await this.manageNeuronUpdateCall(o)};spawnHardwareWallet=async n=>{let o=Ro(n),r=await ie({agent:this.agent,canisterId:this.canisterId,methodName:"manage_neuron_pb",arg:o.serializeBinary()}),a=chunk_H6I2Z4SN_W.ManageNeuronResponse.deserializeBinary(r),i=a.getError();if(i)throw new m({error_message:i.getErrorMessage(),error_type:i.getErrorType()});let u=a.getSpawn()?.getCreatedNeuronId();if(u!==void 0)return BigInt(u.getId());throw new w(`Unrecognized Spawn error in ${JSON.stringify(a)}`)};mergeNeuronsHardwareWallet=async n=>{let o=chunk_H6I2Z4SN_wo(n);await this.manageNeuronUpdateCall(o)}};
//# sourceMappingURL=chunk-H6I2Z4SN.js.map

;// CONCATENATED MODULE: ./node_modules/@dfinity/nns/dist/esm/chunk-JUIC5FZJ.js
var chunk_JUIC5FZJ_G=({IDL:e})=>{let t=e.Nat64,r=e.Record({start:t,length:e.Nat64}),n=e.Nat64,c=e.Vec(e.Nat8),o=e.Record({e8s:e.Nat64}),a=e.Variant({Burn:e.Record({from:c,amount:o}),Mint:e.Record({to:c,amount:o}),Transfer:e.Record({to:c,fee:o,from:c,amount:o})}),i=e.Record({timestamp_nanos:e.Nat64}),l=e.Record({memo:n,operation:e.Opt(a),created_at_time:i}),d=e.Record({transaction:l,timestamp:i,parent_hash:e.Opt(e.Vec(e.Nat8))}),f=e.Record({blocks:e.Vec(d)}),x=e.Variant({BadFirstBlockIndex:e.Record({requested_index:t,first_valid_index:t}),Other:e.Record({error_message:e.Text,error_code:e.Nat64})}),R=e.Variant({Ok:f,Err:x}),w=e.Func([r],[R],[]),F=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(d),chain_length:e.Nat64,first_block_index:t,archived_blocks:e.Vec(e.Record({callback:w,start:t,length:e.Nat64}))}),v=e.Record({account:c}),N=e.Record({canister_id:e.Principal}),A=e.Record({archives:e.Vec(N)}),k=e.Vec(e.Nat8),B=e.Record({to:c,fee:o,memo:n,from_subaccount:e.Opt(k),created_at_time:e.Opt(i),amount:o}),S=e.Variant({TxTooOld:e.Record({allowed_window_nanos:e.Nat64}),BadFee:e.Record({expected_fee:o}),TxDuplicate:e.Record({duplicate_of:t}),TxCreatedInFuture:e.Null,InsufficientFunds:e.Record({balance:o})}),O=e.Variant({Ok:t,Err:S}),q=e.Record({}),P=e.Record({transfer_fee:o});return e.Service({_blocks:e.Func([r],[F],[]),account_balance:e.Func([v],[o],[]),archives:e.Func([],[A],[]),decimals:e.Func([],[e.Record({decimals:e.Nat32})],[]),name:e.Func([],[e.Record({name:e.Text})],[]),symbol:e.Func([],[e.Record({symbol:e.Text})],[]),transfer:e.Func([B],[O],[]),transfer_fee:e.Func([q],[P],[])})};var U=({IDL:e})=>{let t=e.Vec(e.Nat8),r=e.Record({account:t}),n=e.Record({e8s:e.Nat64}),c=e.Record({canister_id:e.Principal}),o=e.Record({archives:e.Vec(c)}),a=e.Nat64,i=e.Record({start:a,length:e.Nat64}),l=e.Nat64,d=e.Variant({Burn:e.Record({from:t,amount:n}),Mint:e.Record({to:t,amount:n}),Transfer:e.Record({to:t,fee:n,from:t,amount:n})}),f=e.Record({timestamp_nanos:e.Nat64}),x=e.Record({memo:l,operation:e.Opt(d),created_at_time:f}),R=e.Record({transaction:x,timestamp:f,parent_hash:e.Opt(e.Vec(e.Nat8))}),w=e.Record({blocks:e.Vec(R)}),F=e.Variant({BadFirstBlockIndex:e.Record({requested_index:a,first_valid_index:a}),Other:e.Record({error_message:e.Text,error_code:e.Nat64})}),v=e.Variant({Ok:w,Err:F}),N=e.Func([i],[v],["query"]),A=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(R),chain_length:e.Nat64,first_block_index:a,archived_blocks:e.Vec(e.Record({callback:N,start:a,length:e.Nat64}))}),k=e.Vec(e.Nat8),B=e.Record({to:t,fee:n,memo:l,from_subaccount:e.Opt(k),created_at_time:e.Opt(f),amount:n}),S=e.Variant({TxTooOld:e.Record({allowed_window_nanos:e.Nat64}),BadFee:e.Record({expected_fee:n}),TxDuplicate:e.Record({duplicate_of:a}),TxCreatedInFuture:e.Null,InsufficientFunds:e.Record({balance:n})}),O=e.Variant({Ok:a,Err:S}),q=e.Record({}),P=e.Record({transfer_fee:n});return e.Service({account_balance:e.Func([r],[n],["query"]),archives:e.Func([],[o],["query"]),decimals:e.Func([],[e.Record({decimals:e.Nat32})],["query"]),name:e.Func([],[e.Record({name:e.Text})],["query"]),query_blocks:e.Func([i],[A],["query"]),symbol:e.Func([],[e.Record({symbol:e.Text})],["query"]),transfer:e.Func([B],[O],[]),transfer_fee:e.Func([q],[P],["query"])})};var chunk_JUIC5FZJ_s=(0,chunk_ONAVPXOT.c)((0,chunk_IPUXUCZB.c)());var chunk_JUIC5FZJ_h=(0,chunk_ONAVPXOT.c)((0,chunk_IPUXUCZB.c)());var chunk_JUIC5FZJ_J=e=>{let t=new Uint8Array(e).buffer,r=new chunk_JUIC5FZJ_h.Subaccount;return r.setSubAccount(new Uint8Array(t)),r},$=e=>{let t=new chunk_JUIC5FZJ_h.ICPTs;return t.setE8s(e.toString(10)),t},chunk_JUIC5FZJ_j=e=>({e8s:e}),K=({to:e,amount:t,memo:r,fee:n,fromSubAccount:c})=>({to:e.toNumbers(),fee:chunk_JUIC5FZJ_j(n??T),amount:chunk_JUIC5FZJ_j(t.toE8s()),memo:r??BigInt(0),created_at_time:[],from_subaccount:c===void 0?[]:[c]});var chunk_JUIC5FZJ_u=class extends Error{},chunk_JUIC5FZJ_V=class extends chunk_JUIC5FZJ_u{},y=class extends chunk_JUIC5FZJ_u{constructor(r){super();this.balance=r}},chunk_JUIC5FZJ_=class extends chunk_JUIC5FZJ_u{constructor(r){super();this.allowed_window_secs=r}},chunk_JUIC5FZJ_b=class extends chunk_JUIC5FZJ_u{},chunk_JUIC5FZJ_g=class extends chunk_JUIC5FZJ_u{constructor(r){super();this.duplicateOf=r}},chunk_JUIC5FZJ_C=class extends chunk_JUIC5FZJ_u{constructor(r){super();this.expectedFee=r}},chunk_JUIC5FZJ_X=e=>{if("TxDuplicate"in e)return new chunk_JUIC5FZJ_g(e.TxDuplicate.duplicate_of);if("InsufficientFunds"in e){let t=i.fromE8s(e.InsufficientFunds.balance.e8s);return new y(t)}return"TxCreatedInFuture"in e?new chunk_JUIC5FZJ_b:"TxTooOld"in e?new chunk_JUIC5FZJ_(Number(e.TxTooOld.allowed_window_nanos)):"BadFee"in e?new chunk_JUIC5FZJ_C(e.BadFee.expected_fee.e8s):new chunk_JUIC5FZJ_u(`Unknown error type ${JSON.stringify(e)}`)},chunk_JUIC5FZJ_Y=e=>{let{message:t}=e;if(t.includes("Reject code: 5")){if(t.match(/Sending from (.*) is not allowed/))return new chunk_JUIC5FZJ_V;{let r=t.match(/transaction.*duplicate.* in block (\d+)/);if(r&&r.length>1)return new chunk_JUIC5FZJ_g(BigInt(r[1]))}{let r=t.match(/debit account.*, current balance: (\d*(\.\d*)?)/);if(r&&r.length>1){let n=i.fromString(r[1]);if(n instanceof i)return new y(n)}}if(t.includes("is in future"))return new chunk_JUIC5FZJ_b;{let r=t.match(/older than (\d+)/);if(r&&r.length>1)return new chunk_JUIC5FZJ_(Number.parseInt(r[1]))}}throw e};var chunk_JUIC5FZJ_T=class{constructor(t,r,n,c,o,a,i=!1){this.agent=t;this.canisterId=r;this.service=n;this.certifiedService=c;this.updateFetcher=o;this.queryFetcher=a;this.hardwareWallet=i}static create(t={}){let r=t.canisterId??lo,{service:n,certifiedService:c,agent:o}=_g({options:{...t,canisterId:r},idlFactory:U,certifiedIdlFactory:chunk_JUIC5FZJ_G});return new chunk_JUIC5FZJ_T(o,r,n,c,t.updateCallOverride??chunk_FZGMZSQZ_l,t.queryCallOverride??p,t.hardwareWallet)}accountBalance=async({accountIdentifier:t,certified:r=!0})=>{if(this.hardwareWallet)return this.accountBalanceHardwareWallet({accountIdentifier:t,certified:r});let c=await(r?this.certifiedService:this.service).account_balance({account:t.toNumbers()});return i.fromE8s(c.e8s)};transactionFee=async()=>{let{transfer_fee:{e8s:t}}=await this.service.transfer_fee({});return t};transfer=async t=>{if(this.hardwareWallet)return this.transferHardwareWallet(t);t.fee===void 0&&(t.fee=this.hardwareWallet?T:await this.transactionFee());let r=K(t),n=await this.certifiedService.transfer(r);if("Err"in n)throw chunk_JUIC5FZJ_X(n.Err);return n.Ok};accountBalanceHardwareWallet=async({accountIdentifier:t,certified:r=!0})=>{let n=r?this.updateFetcher:this.queryFetcher,c=new chunk_JUIC5FZJ_s.AccountBalanceRequest;c.setAccount(t.toProto());let o=await n({agent:this.agent,canisterId:this.canisterId,methodName:"account_balance_pb",arg:c.serializeBinary()});return i.fromE8s(BigInt(chunk_JUIC5FZJ_s.ICPTs.deserializeBinary(new Uint8Array(o)).getE8s()))};transferHardwareWallet=async({to:t,amount:r,memo:n,fee:c,fromSubAccount:o})=>{let a=new chunk_JUIC5FZJ_s.SendRequest;a.setTo(t.toProto());let i=new chunk_JUIC5FZJ_s.Payment;i.setReceiverGets(r.toProto()),a.setPayment(i),a.setMaxFee($(c??T));let l=new chunk_JUIC5FZJ_s.Memo;l.setMemo((n??BigInt(0)).toString()),a.setMemo(l),o!==void 0&&a.setFromSubaccount(chunk_JUIC5FZJ_J(o));try{let d=await this.updateFetcher({agent:this.agent,canisterId:this.canisterId,methodName:"send_pb",arg:a.serializeBinary()});return BigInt(chunk_JUIC5FZJ_s.BlockHeight.deserializeBinary(d).getHeight())}catch(d){throw d instanceof Error?chunk_JUIC5FZJ_Y(d):d}}};
//# sourceMappingURL=chunk-JUIC5FZJ.js.map

;// CONCATENATED MODULE: ./node_modules/@dfinity/nns/dist/esm/chunk-NN3MUNHF.js
var chunk_NN3MUNHF_F=({IDL:e})=>{let s=e.Record({sns_subnet_ids:e.Vec(e.Principal)}),t=e.Record({wasm:e.Vec(e.Nat8),canister_type:e.Int32}),n=e.Record({hash:e.Vec(e.Nat8),wasm:e.Opt(t)}),o=e.Record({message:e.Text}),c=e.Variant({Error:o,Hash:e.Vec(e.Nat8)}),p=e.Record({result:e.Opt(c)}),_=e.Record({total_e8s:e.Nat64}),r=e.Record({controller:e.Opt(e.Principal),stake_e8s:e.Nat64}),d=e.Record({developer_neurons:e.Vec(r)}),l=e.Record({airdrop_neurons:e.Vec(r)}),u=e.Record({total_e8s:e.Nat64,initial_swap_amount_e8s:e.Nat64}),m=e.Record({treasury_distribution:e.Opt(_),developer_distribution:e.Opt(d),airdrop_distribution:e.Opt(l),swap_distribution:e.Opt(u)}),R=e.Variant({FractionalDeveloperVotingPower:m}),O=e.Record({min_participant_icp_e8s:e.Opt(e.Nat64),fallback_controller_principal_ids:e.Vec(e.Text),token_symbol:e.Opt(e.Text),max_icp_e8s:e.Opt(e.Nat64),neuron_minimum_stake_e8s:e.Opt(e.Nat64),min_participants:e.Opt(e.Nat32),transaction_fee_e8s:e.Opt(e.Nat64),initial_token_distribution:e.Opt(R),token_name:e.Opt(e.Text),max_participant_icp_e8s:e.Opt(e.Nat64),proposal_reject_cost_e8s:e.Opt(e.Nat64),min_icp_e8s:e.Opt(e.Nat64)}),N=e.Record({sns_init_payload:e.Opt(O)}),S=e.Record({root:e.Opt(e.Principal),swap:e.Opt(e.Principal),ledger:e.Opt(e.Principal),governance:e.Opt(e.Principal)}),y=e.Record({subnet_id:e.Opt(e.Principal),error:e.Opt(o),canisters:e.Opt(S)}),i=e.Record({root_wasm_hash:e.Vec(e.Nat8),swap_wasm_hash:e.Vec(e.Nat8),ledger_wasm_hash:e.Vec(e.Nat8),governance_wasm_hash:e.Vec(e.Nat8)}),V=e.Record({current_version:e.Opt(i)}),w=e.Record({next_version:e.Opt(i)}),v=e.Record({hash:e.Vec(e.Nat8)}),b=e.Record({wasm:e.Opt(t)}),P=e.Record({root_canister_id:e.Opt(e.Principal)}),h=e.Record({instances:e.Vec(P)});return e.Service({add_wasm:e.Func([n],[p],[]),deploy_new_sns:e.Func([N],[y],[]),get_next_sns_version:e.Func([V],[w],[]),get_wasm:e.Func([v],[b],[]),list_deployed_snses:e.Func([e.Record({})],[h],[])})};var chunk_NN3MUNHF_g=({IDL:e})=>{let s=e.Record({sns_subnet_ids:e.Vec(e.Principal)}),t=e.Record({wasm:e.Vec(e.Nat8),canister_type:e.Int32}),n=e.Record({hash:e.Vec(e.Nat8),wasm:e.Opt(t)}),o=e.Record({message:e.Text}),c=e.Variant({Error:o,Hash:e.Vec(e.Nat8)}),p=e.Record({result:e.Opt(c)}),_=e.Record({total_e8s:e.Nat64}),r=e.Record({controller:e.Opt(e.Principal),stake_e8s:e.Nat64}),d=e.Record({developer_neurons:e.Vec(r)}),l=e.Record({airdrop_neurons:e.Vec(r)}),u=e.Record({total_e8s:e.Nat64,initial_swap_amount_e8s:e.Nat64}),m=e.Record({treasury_distribution:e.Opt(_),developer_distribution:e.Opt(d),airdrop_distribution:e.Opt(l),swap_distribution:e.Opt(u)}),R=e.Variant({FractionalDeveloperVotingPower:m}),O=e.Record({min_participant_icp_e8s:e.Opt(e.Nat64),fallback_controller_principal_ids:e.Vec(e.Text),token_symbol:e.Opt(e.Text),max_icp_e8s:e.Opt(e.Nat64),neuron_minimum_stake_e8s:e.Opt(e.Nat64),min_participants:e.Opt(e.Nat32),transaction_fee_e8s:e.Opt(e.Nat64),initial_token_distribution:e.Opt(R),token_name:e.Opt(e.Text),max_participant_icp_e8s:e.Opt(e.Nat64),proposal_reject_cost_e8s:e.Opt(e.Nat64),min_icp_e8s:e.Opt(e.Nat64)}),N=e.Record({sns_init_payload:e.Opt(O)}),S=e.Record({root:e.Opt(e.Principal),swap:e.Opt(e.Principal),ledger:e.Opt(e.Principal),governance:e.Opt(e.Principal)}),y=e.Record({subnet_id:e.Opt(e.Principal),error:e.Opt(o),canisters:e.Opt(S)}),i=e.Record({root_wasm_hash:e.Vec(e.Nat8),swap_wasm_hash:e.Vec(e.Nat8),ledger_wasm_hash:e.Vec(e.Nat8),governance_wasm_hash:e.Vec(e.Nat8)}),V=e.Record({current_version:e.Opt(i)}),w=e.Record({next_version:e.Opt(i)}),v=e.Record({hash:e.Vec(e.Nat8)}),b=e.Record({wasm:e.Opt(t)}),P=e.Record({root_canister_id:e.Opt(e.Principal)}),h=e.Record({instances:e.Vec(P)});return e.Service({add_wasm:e.Func([n],[p],[]),deploy_new_sns:e.Func([N],[y],[]),get_next_sns_version:e.Func([V],[w],["query"]),get_wasm:e.Func([v],[b],["query"]),list_deployed_snses:e.Func([e.Record({})],[h],["query"])})};var a=class{constructor(s,t){this.service=s;this.certifiedService=t}static create(s={}){let{service:t,certifiedService:n}=W({options:{...s,canisterId:s.canisterId??x},idlFactory:chunk_NN3MUNHF_g,certifiedIdlFactory:chunk_NN3MUNHF_F});return new a(t,n)}listSnses=async({certified:s=!0})=>{let t=s?this.certifiedService:this.service,{instances:n}=await t.list_deployed_snses({});return n}};
//# sourceMappingURL=chunk-NN3MUNHF.js.map

;// CONCATENATED MODULE: ./node_modules/@dfinity/nns/dist/esm/index.js
var esm_f=({recentBallots:e,proposalId:o})=>o?e.find(({proposalId:n})=>n===o)?.vote:void 0,esm_N=({neurons:e,proposal:o})=>{let{ballots:r,proposalTimestampSeconds:n}=o;return e.filter(({createdTimestampSeconds:t,neuronId:s})=>{let p=t>n,l=r.find(({neuronId:a})=>a===s)===void 0;return p||l})},esm_M=({neurons:e,proposal:o})=>{let{id:r}=o;return e.filter(({recentBallots:n,neuronId:t})=>esm_f({recentBallots:n,proposalId:r})===void 0&&esm_N({neurons:e,proposal:o}).find(({neuronId:s})=>s===t)===void 0)},Q=({neurons:e,proposal:o})=>{let{id:r}=o;return e.filter(({recentBallots:n})=>esm_f({recentBallots:n,proposalId:r})!==void 0)};
//# sourceMappingURL=index.js.map

;// CONCATENATED MODULE: ./src/stoic/stoic.js






const stoic_plug_buttons = document.createElement("div");
stoic_plug_buttons.innerHTML = stoic;
document.body.appendChild(stoic_plug_buttons);

const stoic_ghost_canister = "xzcnc-myaaa-aaaak-abk7a-cai";

const stoic_connect_button = document.getElementById("connect_button_stoic");
stoic_connect_button.addEventListener("click", () => connect_stoic());

const stoic_get_principal_button = document.getElementById(
  "get_principal_button_stoic"
);
stoic_get_principal_button.addEventListener("click", () => stoic_get_principal());

const stoic_get_balance_button = document.getElementById("get_balance_button_stoic");
stoic_get_balance_button.addEventListener("click", () => stoic_get_balance());

const stoic_get_nft_button = document.getElementById("get_nft_button_stoic");
stoic_get_nft_button.addEventListener("click", () => stoic_get_nft());

async function connect_stoic() {
  try {
    // identity is set on the window object
    window.identity = await StoicIdentity.connect();
    console.log(window.identity);
  } catch (error) {
    console.log(error);
  }
}

function stoic_get_principal() {
  console.log(window.identity.getPrincipal().toString());
}

async function stoic_get_balance() {
  const ledger = chunk_JUIC5FZJ_T.create();
  const principal = window.identity.getPrincipal();
  const accountIdentifier = F.fromPrincipal({ principal });
  const balance = await ledger.accountBalance({ accountIdentifier });
  console.log(balance);
}

async function stoic_get_nft() {
  try {
    // ERC721 standard
    const actor = esm_actor_Actor.createActor(ghost_canister_factory, {
      agent: new http_HttpAgent({
        host: "https://mainnet.ic0.app/",
        identity: window.identity,
      }),
      canisterId: stoic_ghost_canister,
    });

    const principal = window.identity.getPrincipal();
    const accountIdentifier = F.fromPrincipal({ principal });
    const result = await actor.tokens_ext(accountIdentifier.toHex());
    console.log(result);
    // if ("ok" in result) {
    //   console.log(result.ok[0][0]);
    // }
  } catch (error) {
    console.log(error);
  }
}

;// CONCATENATED MODULE: ./src/index.js



})();

/******/ })()
;